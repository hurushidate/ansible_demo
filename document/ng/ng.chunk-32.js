(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{1050:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(30),__webpack_require__(26),__webpack_require__(1051),__webpack_require__(1052),__webpack_require__(1053),__webpack_require__(1054),__webpack_require__(1055),__webpack_require__(1056),__webpack_require__(1057),__webpack_require__(1058),__webpack_require__(1059),__webpack_require__(1060),__webpack_require__(1061),__webpack_require__(1062),__webpack_require__(1063),__webpack_require__(1064),__webpack_require__(1070),__webpack_require__(61),__webpack_require__(479),__webpack_require__(1071)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fLog,inject,IPConflict,DiskLogging,FileSystemCheck,NewerFirmware,FortiAnalyzerSerial,FortiAnalyzerConnection,FortiCare,FortinetSubscriptions,FortiSandboxConnection,VmLicense,FortiClientExhausted,UnauthorizedCsfDevices,HaSyncStatus,CsfObjectSyncStatus,LldpDetectedFortigates,NotificationItem){function NotificationSummary(){this.severityLevel=NotificationItem.prototype.SEVERITY_LEVEL,this.severityIndex=NotificationItem.prototype.SEVERITY_LEVELS_INDEXES[this.severityLevel],this.count=0,this.messagesSummary=[],this.severityCount={},Object.values(NotificationItem.prototype.SEVERITY_LEVELS).forEach(value=>{this.severityCount[value]=0})}function Notification(injector){injector.injectMarked(this),this.failCount=0,this.highestSeverityLevel=null,this.failedNotificationItems=[],this._firstRun=!0,this._notificationItems=[],this._updateTimeout=null,this._createNotificationItems()}return NotificationSummary.prototype.addItem=function(notificationItem){const severityIndex=notificationItem.SEVERITY_LEVEL_INDEX,severityLevel=notificationItem.SEVERITY_LEVEL;let count=notificationItem.getResultCount();if(count>0){const summaryContent={severityLevel:severityLevel,message:notificationItem.getMessagesSummary()};this.messagesSummary.push(summaryContent),this.severityCount[severityLevel]+=count,severityIndex>=this.severityIndex&&(this.severityLevel=severityLevel,this.severityIndex=severityIndex,this.count=this.severityCount[this.severityLevel])}},Notification.prototype.start=inject.mark(function($timeout){return function(){this.stopped=!1;var update=()=>{this._run().finally(()=>{this.stopped||(this._updateTimeout=$timeout(update,3e4))})};update()}}),Notification.prototype.restart=function(){this.stop(),this.start()},Notification.prototype.restartIfActive=function(notificationID){var set=new Set;Array.isArray(notificationID)?notificationID.forEach(function(id){set.add(id)}):set.add(notificationID),this.failedNotificationItems.some(function(item){return set.has(item.ID)})&&(fLog('Notification item "'+notificationID+'" is active. Restarting notifications'),this.restart())},Notification.prototype.restartIfAnyActive=function(){this.failedNotificationItems.length&&(fLog("Restarting notifications"),this.restart())},Notification.prototype.stop=inject.mark(function($timeout){return function(){$timeout.cancel(this._updateTimeout),this.stopped=!0}}),Notification.prototype.getNavbarNotificationSummary=function(navbarEntry){const summary=new NotificationSummary;let summarizeNotificationItems=_navbarEntry=>{_navbarEntry.suppressed||(Array.isArray(_navbarEntry.items)&&_navbarEntry.items.forEach(summarizeNotificationItems),_navbarEntry.path&&this._notificationItems.forEach(item=>{item.link.indexOf(_navbarEntry.path)>=0&&summary.addItem(item)}))};return summarizeNotificationItems(navbarEntry),summary},Notification.prototype.getNotificationSummary=function(notificationIds){const summary=new NotificationSummary;return this._notificationItems.forEach(item=>{notificationIds.includes(item.ID)&&summary.addItem(item)}),summary},Notification.prototype._notificationItemError=function(item,message){var name=item.constructor.name;fLog.error('"'+name+'" failed during execution: '+message),item.setResult(item.RESULT.EXECUTION_ERROR)},Notification.prototype._run=inject.mark(function($q,notificationRequests,csfTopology){return async function(){await csfTopology.buildIfNecessary();const failed=[],promises=[];let highestSeverityLevel=null,highestSeverityLevelIndex=-1;const severityCount={};Object.values(NotificationItem.prototype.SEVERITY_LEVELS).forEach(value=>{severityCount[value]=0}),this._firstRun||csfTopology.getFgts(!0).forEach(fortigate=>{notificationRequests._resetCacheForFortigate(fortigate)}),this._firstRun=!1,this._notificationItems.forEach(item=>{var promise,VALID_RESULTS=[item.RESULT.PASSED,item.RESULT.FAILED];try{promise=item.run().then(()=>{const result=item.getResult();if(VALID_RESULTS.indexOf(result)>=0){let severity,severityIndex;result===item.RESULT.FAILED&&(severity=item.SEVERITY_LEVEL,severityIndex=item.SEVERITY_LEVELS_INDEXES[severity],severityCount[severity]++,severityIndex>highestSeverityLevelIndex&&(highestSeverityLevel=severity,highestSeverityLevelIndex=severityIndex),failed.push(item)),item.markCompleted()}else this._notificationItemError(item,"invalid result set.")},error=>{this._notificationItemError(item,error)}),promises.push(promise)}catch(error){this._notificationItemError(item,error)}}),await $q.all(promises),this.failedNotificationItems=failed,this.failCount=severityCount[highestSeverityLevel],this.highestSeverityLevel=highestSeverityLevel}}),Notification.prototype._createNotificationItems=inject.mark(function($injector,state){return function(){var notificationItems=[];state.adminHasReadPermission(state.ACCESS_GROUP.NETWORK_CFG)&&notificationItems.push(IPConflict),state.admin.global_admin&&(state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_MNT)&&notificationItems.push(NewerFirmware),state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM)&&(state.ha_mode&&notificationItems.push(HaSyncStatus),state.adminHasReadPermission(state.ACCESS_GROUP.FABRIC)&&state.csf_enabled&&state.csfObjectSyncEnabled()&&state.isRootFortiGate()&&notificationItems.push(CsfObjectSyncStatus)),state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_CFG)&&(notificationItems=notificationItems.concat([FortinetSubscriptions,FortiSandboxConnection,FortiClientExhausted,DiskLogging,FileSystemCheck,FortiCare]),state.vm_license_status&&notificationItems.push(VmLicense),state.adminHasReadPermission(state.ACCESS_GROUP.LOG_CONFIG)&&(notificationItems.push(FortiAnalyzerSerial),state.adminHasReadPermission(state.ACCESS_GROUP.LOG_DATA_ACCESS)&&notificationItems.push(FortiAnalyzerConnection)))),state.adminHasReadPermission(state.ACCESS_GROUP.FABRIC)&&(notificationItems.push(UnauthorizedCsfDevices),notificationItems.push(LldpDetectedFortigates)),notificationItems.forEach(function(itemClass){this._notificationItems.push($injector.instantiate(itemClass))}.bind(this))}}),ngModule.service("notification",Notification),Notification}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1051:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(42),__webpack_require__(27),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fLocation,notify,NotificationItem,inject){var INTERFACE_LIST_URI="/ng/system/interface/";function IPConflict($injector){$injector.invoke(NotificationItem,this),this.link=INTERFACE_LIST_URI}return IPConflict.prototype=Object.create(NotificationItem.prototype),IPConflict.prototype.constructor=IPConflict,IPConflict.prototype.ID="ipConflict",IPConflict.prototype.type=IPConflict.prototype.TYPES.MULTIPLE,IPConflict.prototype.SEVERITY_LEVEL=IPConflict.prototype.SEVERITY_LEVELS.CRITICAL,IPConflict.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.baseNotifications().then(function(results){var conflicts=results.wan_lan_ip_conflict,passed=!0;conflicts.length&&(conflicts.forEach(function(conflict){var dhcpInterface=conflict.dhcp.intf,otherInterface=conflict.other.intf,message=lang("wan_lan_ip_conflict",[otherInterface,dhcpInterface]).toString();this.addMessage(message)}.bind(this)),passed=!1),this.conflicts=conflicts,this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:this.conflicts.length)}.bind(this))}}),IPConflict.prototype.onClick=inject.mark(function($location,lang,structure){return function(index){var search,conflict=this.conflicts[index],firstIntf=conflict.dhcp.intf,secondIntf=conflict.other.intf;fLocation.notify_after_change(lang("wan_lan_ip_conflict_review").toString(),notify.LEVEL.WARNING),search={locate:JSON.stringify([{name:firstIntf},{name:secondIntf}])},$location.url(structure.ngURI(this.link)).search(search)}}),IPConflict}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1052:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject){function DiskLogging($injector){$injector.invoke(NotificationItem,this)}return DiskLogging.prototype=Object.create(NotificationItem.prototype),DiskLogging.prototype.constructor=DiskLogging,DiskLogging.prototype.ID="diskLogging",DiskLogging.prototype.SEVERITY_LEVEL=DiskLogging.prototype.SEVERITY_LEVELS.MEDIUM,DiskLogging.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.baseNotifications().then(function(results){var loggingDisabled=results.disk_logging_disabled;loggingDisabled&&this.setMessage(lang("disable_detail").toString()),this.setResult(loggingDisabled?this.RESULT.FAILED:this.RESULT.PASSED)}.bind(this))}}),DiskLogging.prototype.onClick=inject.mark(function(registration){return function(){registration.openFortiCloud()}}),DiskLogging.prototype.canClick=inject.mark(function(state){return function(){return state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),DiskLogging}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1053:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(27),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(notify,NotificationItem,inject){function FileSystemCheck($injector){$injector.invoke(NotificationItem,this),this.link="/prompt/file_system_check"}return FileSystemCheck.prototype=Object.create(NotificationItem.prototype),FileSystemCheck.prototype.constructor=FileSystemCheck,FileSystemCheck.prototype.ID="fileSystemCheck",FileSystemCheck.prototype.SEVERITY_LEVEL=FileSystemCheck.prototype.SEVERITY_LEVELS.HIGH,FileSystemCheck.prototype.run=inject.mark(function($q,state,lang){return function(){var passed=!state.need_fs_check||!state.admin.global_admin||!state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM);return passed||this.setMessage(lang("Power disruption. Check file system consistency.").toString()),this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:1),$q.resolve()}}),FileSystemCheck.prototype.onClick=inject.mark(function($location){return function(){$location.path(this.link).search({viewOnly:1})}}),FileSystemCheck.prototype.canClick=inject.mark(function(state){return function(){return state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),FileSystemCheck}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1054:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(79),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fFirmware,NotificationItem,inject){function NewerFirmware($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/firmware"}return NewerFirmware.prototype=Object.create(NotificationItem.prototype),NewerFirmware.prototype.constructor=NewerFirmware,NewerFirmware.prototype.ID="newerFirmware",NewerFirmware.prototype.SEVERITY_LEVEL=NewerFirmware.prototype.SEVERITY_LEVELS.LOW,NewerFirmware.prototype.run=inject.mark(function(lang,$http,state){return function(){if(state.featureEnabled("gui-firmware-upgrade-warning"))return $http.get("/api/v2/monitor/system/firmware").then(response=>{const firmware=response.data.results,newerAvailable=0!==firmware.available.length&&fFirmware.isFirmwareUpdate(firmware.current,firmware.available[0]),newerVersion=newerAvailable?firmware.available[0]:"";if(newerAvailable){const label=[newerVersion.major,newerVersion.minor,newerVersion.patch].join(".");this.setMessage(lang("A new firmware version is available: {BUILD}",[label]).toString())}this.setResult(newerAvailable?this.RESULT.FAILED:this.RESULT.PASSED),this.setResultCount(newerAvailable?1:0)});this.setResult(this.RESULT.PASSED)}}),NewerFirmware.prototype.onClick=inject.mark(function($location,structure){return function(){$location.path(structure.ngURI(this.link))}}),NewerFirmware.prototype.canClick=inject.mark(function(state){return function(){return state.admin.global_admin}}),NewerFirmware}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1055:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(61)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((inject,NotificationItem)=>{function FortiAnalyzerCertificate($injector){$injector.invoke(NotificationItem,this),this.link="/ng/fabric-connector/edit/fortianalyzer"}return FortiAnalyzerCertificate.prototype=Object.create(NotificationItem.prototype),FortiAnalyzerCertificate.prototype.constructor=FortiAnalyzerCertificate,FortiAnalyzerCertificate.prototype.ID="fortianalyzerCertificate",FortiAnalyzerCertificate.prototype.SEVERITY_LEVEL=FortiAnalyzerCertificate.prototype.SEVERITY_LEVELS.HIGH,FortiAnalyzerCertificate.prototype.run=inject.mark((notificationRequests,lang)=>(function(){return Promise.all([notificationRequests.fortianalyzerStatus(),notificationRequests.fortianalyzerCmdb()]).then(([status,cmdb])=>{const failed=status.is_enabled&&"allow"===status.connection&&"enable"===cmdb["certificate-verification"]&&!cmdb.serial.find(sn=>sn.name===status.serial);failed&&(status.serial?this.setMessage(lang("FortiAnalyzer certificate is not verified.")):this.setMessage(lang("FortiAnalyzer certificate is not compatible."))),this.setResult(failed?this.RESULT.FAILED:this.RESULT.PASSED),this.setResultCount(failed?1:0)})})),FortiAnalyzerCertificate.prototype.onClick=inject.mark(($location,state,structure)=>(function(){const search={};state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)})),FortiAnalyzerCertificate}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1056:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject){function FortiAnalyzerConnection($injector){$injector.invoke(NotificationItem,this),this.link="/ng/fabric-connector/edit/fortianalyzer"}return FortiAnalyzerConnection.prototype=Object.create(NotificationItem.prototype),FortiAnalyzerConnection.prototype.constructor=FortiAnalyzerConnection,FortiAnalyzerConnection.prototype.ID="fortiAnalyzerConnection",FortiAnalyzerConnection.prototype.SEVERITY_LEVEL=FortiAnalyzerConnection.prototype.SEVERITY_LEVELS.CRITICAL,FortiAnalyzerConnection.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.fortianalyzerStatus().then(function(results){var failed=results.is_enabled&&"allow"!==results.connection;failed&&this.setMessage(lang("fortianalyzer_no_connection").toString()),this.setResult(failed?this.RESULT.FAILED:this.RESULT.PASSED),this.setResultCount(failed?1:0)}.bind(this))}}),FortiAnalyzerConnection.prototype.onClick=inject.mark(function($location,state,structure){return function(){var search={};state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)}}),FortiAnalyzerConnection}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1057:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BUILD,NotificationItem,inject){var STATUSES=BUILD.SYMBOLS;function FortiCare($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/fortiguard"}return FortiCare.prototype=Object.create(NotificationItem.prototype),FortiCare.prototype.constructor=FortiCare,FortiCare.prototype.ID="fortiCare",FortiCare.prototype.SEVERITY_LEVEL=FortiCare.prototype.SEVERITY_LEVELS.HIGH,FortiCare.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.license().then(function(licenses){var langKey,passed=!0,registered=!0;licenses&&(licenses.forticare.status===STATUSES.LICENSE_STATUS_NOT_REGISTERED?(passed=!1,registered=!1,langKey="FortiCare is not registered.",this.SEVERITY_LEVEL=this.SEVERITY_LEVELS.CRITICAL,this.setResultCount(1)):licenses.forticare.support&&Object.keys(licenses.forticare.support).every(function(key){var supportStatus=licenses.forticare.support[key].status;return supportStatus===STATUSES.LICENSE_STATUS_EXPIRED?(passed=!1,langKey="Some FortiCare support coverage services have expired.",this.SEVERITY_LEVEL=this.SEVERITY_LEVELS.CRITICAL,this.setResultCount(1),!1):supportStatus===STATUSES.LICENSE_STATUS_EXPIRES_SOON?(passed=!1,langKey="Some FortiCare support coverage services expire soon.",this.setResultCount(1),!1):(this.setResultCount(0),!0)}.bind(this))),passed||this.setMessage(lang(langKey).toString()),this.registered=registered,this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED)}.bind(this))}}),FortiCare.prototype.onClick=inject.mark(function($location,registration,state,structure){return function(){var search={};this.registered?(state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)):registration.openFortiCare()}}),FortiCare.prototype.canClick=inject.mark(function(state){return function(){return state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),FortiCare}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1058:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BUILD,NotificationItem,inject){var SYMBOLS=BUILD.SYMBOLS,CHECK_TYPES=[SYMBOLS.LICENSE_STATUS_TYPE_FDS_OBJECT,SYMBOLS.LICENSE_STATUS_TYPE_FORTIGUARD_SERVICE,SYMBOLS.LICENSE_STATUS_TYPE_CLOUD_SERVICE,SYMBOLS.LICENSE_STATUS_TYPE_PRODUCT_INTEGRATION];function FortinetSubscriptions($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/fortiguard"}return FortinetSubscriptions.prototype=Object.create(NotificationItem.prototype),FortinetSubscriptions.prototype.constructor=FortinetSubscriptions,FortinetSubscriptions.prototype.ID="fortinetSubscriptions",FortinetSubscriptions.prototype.SEVERITY_LEVEL=FortinetSubscriptions.prototype.SEVERITY_LEVELS.HIGH,FortinetSubscriptions.prototype.run=inject.mark(function($filter,notificationRequests,state,lang){var dateFilter=$filter("fDate");return function(){return notificationRequests.license().then(function(licenses){var closestExpiresTime,message,passed=!0,oneExpiresSoon=!1,oneIsExpired=!1,now=Date.now()/1e3;Object.keys(licenses).forEach(function(key){var license=licenses[key];CHECK_TYPES.indexOf(license.type)>=0&&(license.status===SYMBOLS.LICENSE_STATUS_EXPIRES_SOON?(oneExpiresSoon=!0,(!closestExpiresTime||license.expires<closestExpiresTime)&&(closestExpiresTime=license.expires)):license.status===SYMBOLS.LICENSE_STATUS_EXPIRED&&license.expires+2592e3>=now&&(oneIsExpired=!0))}),oneIsExpired?(passed=!1,message=lang("Some Fortinet service subscriptions have expired.").toString(),this.SEVERITY_LEVEL=this.SEVERITY_LEVELS.CRITICAL):oneExpiresSoon&&(passed=!1,message=lang("Some Fortinet service subscriptions expire soon ({0}).",[dateFilter(1e3*closestExpiresTime)]).toString()),passed||this.setMessage(message),this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:1)}.bind(this))}}),FortinetSubscriptions.prototype.onClick=inject.mark(function($location,state,structure){return function(){var search={};state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)}}),FortinetSubscriptions}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1059:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject){function FortiSandboxConnection($injector){$injector.invoke(NotificationItem,this),this.link="/ng/fabric-connector/edit/fortisandbox"}return FortiSandboxConnection.prototype=Object.create(NotificationItem.prototype),FortiSandboxConnection.prototype.constructor=FortiSandboxConnection,FortiSandboxConnection.prototype.ID="fortiSandboxConnection",FortiSandboxConnection.prototype.SEVERITY_LEVEL=FortiSandboxConnection.prototype.SEVERITY_LEVELS.MEDIUM,FortiSandboxConnection.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.sandboxStatus().then(function(results){var failed=results.configured&&"appliance"===results.type&&!results.connected;failed&&this.setMessage(lang("fortisandbox_appliance_no_connection").toString()),this.setResult(failed?this.RESULT.FAILED:this.RESULT.PASSED),this.setResultCount(failed?1:0)}.bind(this))}}),FortiSandboxConnection.prototype.onClick=inject.mark(function($location,state,structure){return function(){var search={};state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)}}),FortiSandboxConnection}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1060:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BUILD,NotificationItem,inject){function VmLicense($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/vm/license"}return VmLicense.prototype=Object.create(NotificationItem.prototype),VmLicense.prototype.constructor=VmLicense,VmLicense.prototype.ID="VmLicense",VmLicense.prototype.SEVERITY_LEVEL=VmLicense.prototype.SEVERITY_LEVELS.HIGH,VmLicense.prototype.run=inject.mark(function($filter,notificationRequests,lang){var dateFilter=$filter("fDate");return function(){return notificationRequests.license().then(function(licenses){var date,passed=!0,vm=licenses.vm;vm.expires&&(date=dateFilter(1e3*vm.expires)),vm.status===BUILD.SYMBOLS.LICENSE_STATUS_VM_EVAL?(passed=!1,this.setMessage(lang("VM evaluation license expires soon ({0}).",[date]))):vm.status===BUILD.SYMBOLS.LICENSE_STATUS_VM_EXPIRES_SOON?(passed=!1,this.setMessage(lang("VM license expires soon ({0}).",[date]))):vm.status===BUILD.SYMBOLS.LICENSE_STATUS_VM_VALIDATION_OVERDUE&&(passed=!1,this.setMessage(lang("VM license validation by FortiGuard is overdue."))),this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:1)}.bind(this))}}),VmLicense.prototype.onClick=inject.mark(function($location,structure){return function(){$location.path(structure.ngURI(this.link))}}),VmLicense.prototype.canClick=inject.mark(function(state){return function(){return state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),VmLicense}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1061:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0),__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BUILD,NotificationItem,inject){var SYMBOLS=BUILD.SYMBOLS;function FortiClientExhausted($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/fortiguard"}return FortiClientExhausted.prototype=Object.create(NotificationItem.prototype),FortiClientExhausted.prototype.constructor=FortiClientExhausted,FortiClientExhausted.prototype.ID="forticlientExhausted",FortiClientExhausted.prototype.SEVERITY_LEVEL=FortiClientExhausted.prototype.SEVERITY_LEVELS.HIGH,FortiClientExhausted.prototype.run=inject.mark(function(notificationRequests,state,lang){return function(){return notificationRequests.license().then(function(licenses){var message,EXHAUSTED_STATUSES=[SYMBOLS.LICENSE_STATUS_FREE_LICENSE_EXHAUSTED,SYMBOLS.LICENSE_STATUS_LICENSED_EXHAUSTED],passed=!0,forticlient=licenses.forticlient;forticlient&&EXHAUSTED_STATUSES.indexOf(forticlient.status)>=0&&state.featureEnabledInAnyVDOM("gui-endpoint-control")&&(passed=!1,message=lang("FortiClient endpoint allowance has been exhausted.").toString()),passed||this.setMessage(message),this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:1)}.bind(this))}}),FortiClientExhausted.prototype.onClick=inject.mark(function($location,state,structure){return function(){var search={};state.vdom_mode&&(search.vdom=""),$location.path(structure.ngURI(this.link)).search(search)}}),FortiClientExhausted}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1062:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject){const sourceIDLangMapSingle={csfPendingDevices:"1 Device",csfFortiAPs:"1 FortiAP",csfFortiSwitches:"1 FortiSwitch"},sourceIDLangMapPlural={csfPendingDevices:"{COUNT} Devices",csfFortiAPs:"{COUNT} FortiAPs",csfFortiSwitches:"{COUNT} FortiSwitches"},sourceIDIconMap={csfPendingDevices:"ftnt-fabric-device security-fabric-node discovered",csfFortiAPs:"ftnt-fortiap-marketing security-fabric-node discovered",csfFortiSwitches:"ftnt-standard-fortiswitch security-fabric-node discovered"};function UnauthorizedCsfDevices($injector){$injector.invoke(NotificationItem,this),this.link="/ng/fabric-connector",this.unauthorizedDevices=[],this._deviceTypeOrder=new Set,this._SOURCE_ID_ON_CLICK_MAP={csfFortiAPs:this._onClickFortiApFortiSwitch,csfFortiSwitches:this._onClickFortiApFortiSwitch},this._SOURCE_ID_CAN_CLICK_MAP={csfFortiAPs:this._canClickFortiApFortiSwitch,csfFortiSwitches:this._canClickFortiApFortiSwitch}}return UnauthorizedCsfDevices.prototype=Object.create(NotificationItem.prototype),UnauthorizedCsfDevices.prototype.constructor=UnauthorizedCsfDevices,UnauthorizedCsfDevices.prototype.ID="unauthorizedCsfDevices",UnauthorizedCsfDevices.prototype.type=UnauthorizedCsfDevices.prototype.TYPES.SUBMENU,UnauthorizedCsfDevices.prototype.SEVERITY_LEVEL=UnauthorizedCsfDevices.prototype.SEVERITY_LEVELS.CRITICAL,UnauthorizedCsfDevices.prototype.run=inject.mark(function(lang,csfTopology){return function(){const csfDevices=this;return csfTopology.buildIfNecessary().then(()=>{const devices=Object.keys(csfTopology.spanningTreeMap).map(function(serial){return csfTopology.spanningTreeMap[serial].node}).filter(function(device){return device.requiresAuthorizationDecision()}),devTypeCount={};if(this.unauthorizedDevices=devices,this._deviceTypeOrder=new Set,devices.length){const mainMsg=1===devices.length?lang("1 device requires authorization."):lang("{COUNT} devices require authorization.",[devices.length]);csfDevices.setMessage(mainMsg),devices.forEach(device=>{const sourceID=device.sourceID;devTypeCount[sourceID]=(devTypeCount[sourceID]||0)+1,this._deviceTypeOrder.has(sourceID)||this._deviceTypeOrder.add(sourceID)});for(const devType of this._deviceTypeOrder){const count=devTypeCount[devType],single=1===count,devLabel=(single?sourceIDLangMapSingle:sourceIDLangMapPlural)[devType],typeMsg=single?lang(devLabel):lang(devLabel,[count]);csfDevices.addMessage(typeMsg,sourceIDIconMap[devType])}csfDevices.setResult(csfDevices.RESULT.FAILED),csfDevices.setResultCount(devices.length)}else csfDevices.setResult(csfDevices.RESULT.PASSED),csfDevices.setResultCount(0)})}}),UnauthorizedCsfDevices.prototype.onClick=inject.mark(function($location,structure){return(...args)=>{const[index=Array.from(this._deviceTypeOrder).findIndex((entry,idx)=>this.canClick(idx))]=args,sourceID=Array.from(this._deviceTypeOrder)[index],customFn=this._SOURCE_ID_ON_CLICK_MAP[sourceID];return sourceID&&customFn?customFn(...args):$location.path(structure.ngURI(this.link))}}),UnauthorizedCsfDevices.prototype._onClickFortiApFortiSwitch=inject.mark(function($rootScope,slide,loader,lang){return index=>{const scope=$rootScope.$new();return loader.initModules([__webpack_require__(462)]).then(()=>{const devTypes=[];scope.serials=this.unauthorizedDevices.filter(device=>void 0===index||(devTypes.includes(device.sourceID)||devTypes.push(device.sourceID),index===devTypes.indexOf(device.sourceID))).map(device=>device.serial),slide.open("fAuthorizeFswFapWizard",{template:'<f-authorize-fsw-fap-wizard serials="serials"></f-authorize-fsw-fap-wizard>',parentScope:scope,options:{fullHeight:!0,title:lang("Authorize Devices")}}).finally(()=>{scope.$destroy()})})}}),UnauthorizedCsfDevices.prototype.canClick=inject.mark(function(state){return(...args)=>{const[index=Array.from(this._deviceTypeOrder).findIndex((entry,idx)=>this.canClick(idx))]=args,sourceID=Array.from(this._deviceTypeOrder)[index],customFn=this._SOURCE_ID_CAN_CLICK_MAP[sourceID];return sourceID&&customFn?customFn(...args):index>=0&&state.adminHasWritePermission(state.ACCESS_GROUP.FABRIC)}}),UnauthorizedCsfDevices.prototype._canClickFortiApFortiSwitch=inject.mark(function(state){return()=>state.adminHasWritePermission(state.ACCESS_GROUP.WIFI)}),UnauthorizedCsfDevices}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1063:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject){function HaSyncStatus($injector){$injector.invoke(NotificationItem,this),this.link="/ng/system/ha/monitor"}return HaSyncStatus.prototype=Object.create(NotificationItem.prototype),HaSyncStatus.prototype.constructor=HaSyncStatus,HaSyncStatus.prototype.ID="HaSyncStatus",HaSyncStatus.prototype.SEVERITY_LEVEL=HaSyncStatus.prototype.SEVERITY_LEVELS.MEDIUM,HaSyncStatus.prototype.run=inject.mark(function(notificationRequests,lang){return function(){return notificationRequests.haSyncStatus().then(result=>{result||this.setMessage(lang("HA is out of sync.").toString()),this.setResult(result?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(result?0:1)})}}),HaSyncStatus.prototype.onClick=inject.mark(function($location,structure){return function(){$location.path(structure.ngURI(this.link))}}),HaSyncStatus}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1064:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject,fwebLog){function CsfObjectSyncStatus($injector){$injector.invoke(NotificationItem,this),this.link="/ng/security-fabric"}return CsfObjectSyncStatus.prototype=Object.create(NotificationItem.prototype),CsfObjectSyncStatus.prototype.constructor=CsfObjectSyncStatus,CsfObjectSyncStatus.prototype.type=CsfObjectSyncStatus.prototype.TYPES.MULTIPLE,CsfObjectSyncStatus.prototype.run=inject.mark(function(lang,state){return async function(){const res=await state.buildOutofSyncTables();this.fortigates=res.fortigates,this.tables=res.tables;const passed=!this.fortigates.length;passed||this.addMessage(lang("Firewall objects are not synchronized with all FortiGates in the Fabric.")),this.setResult(passed?this.RESULT.PASSED:this.RESULT.FAILED),this.setResultCount(passed?0:1)}}),CsfObjectSyncStatus.prototype.onClick=inject.mark(function(slide,$rootScope,lang,loader){return async function(){loader.initModules([__webpack_require__(95)]);const scope=$rootScope.$new();scope.title=lang("Firewall Object Synchronization"),scope.fortigates=this.fortigates,scope.tables=this.tables;const slideParams={template:'<f-sync-fabric-wizard\n                        form-type="formType"\n                        fortigates="fortigates"\n                        tables="tables">\n                    </f-sync-fabric-wizard>',parentScope:scope,options:{title:lang(scope.title),closeOnEscape:!0,fullHeight:!0,width:700}};try{await slide.open("sync-fabric-tables",slideParams)}catch(err){fwebLog.error(err)}finally{scope.$destroy()}}}),CsfObjectSyncStatus.prototype.ID="CsfObjectSyncStatus",CsfObjectSyncStatus.prototype.SEVERITY_LEVEL=CsfObjectSyncStatus.prototype.SEVERITY_LEVELS.MEDIUM,CsfObjectSyncStatus}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1070:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(61),__webpack_require__(26),__webpack_require__(463)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(NotificationItem,inject,csfModels){function LldpDetectedFortigates($injector){$injector.invoke(NotificationItem,this),this.link="/ng/fabric-connector"}return LldpDetectedFortigates.prototype=Object.create(NotificationItem.prototype),LldpDetectedFortigates.prototype.constructor=LldpDetectedFortigates,LldpDetectedFortigates.prototype.ID="lldpDetectedFortigates",LldpDetectedFortigates.prototype.SEVERITY_LEVEL=LldpDetectedFortigates.prototype.SEVERITY_LEVELS.CRITICAL,LldpDetectedFortigates.prototype.run=inject.mark(function(lang,CMDB,notificationRequests){return function(){const controller=this;CMDB.model(csfModels);const csf=new CMDB("system","csf").fetch();return csf.$promise.then(function(){let result=controller.RESULT.PASSED,resultCount=0;if(csf&&!csf.$status())return notificationRequests.lldpNeighbors().then(function(fortigates){if(fortigates&&fortigates.length){const systemDefaultGateway=csf.$systemDefaultGateway,fortigateIPs=fortigates.reduce((ipList,fortigate)=>{const fortigateIpList=fortigate.addresses&&fortigate.addresses.map(item=>item.address);return[...ipList,...fortigateIpList]},[]),canConnectToUpstream=systemDefaultGateway&&fortigateIPs.includes(systemDefaultGateway);if(canConnectToUpstream){controller.upstreamIP=systemDefaultGateway;const mainMsg=lang("You can connect to a Security Fabric via an upstream FortiGate at {IP}.",[systemDefaultGateway]);controller.setMessage(mainMsg.toString()),result=controller.RESULT.FAILED,resultCount=1}}controller.setResult(result),controller.setResultCount(resultCount)});controller.setResult(result),controller.setResultCount(resultCount)})}}),LldpDetectedFortigates.prototype.onClick=inject.mark(function($location){return function(){$location.path("/fabric-connector").search("connect-upstream",this.hasOwnProperty("upstreamIP"))}}),LldpDetectedFortigates.prototype.canClick=inject.mark(function(state){return function(){return state.adminHasWritePermission(state.ACCESS_GROUP.FABRIC)}}),LldpDetectedFortigates}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1075:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){const WARNING_LIMITS={POLICY:5e3};ngModule.component("fHeaderSearch",{controller:class extends inject.Collectable{constructor(){super(),this.setupWatches(),this.setupSources()}setupWatches($INJECTABLE$,$scope,state,vdomState){return()=>{const reset=()=>{this.setupSources(),this.searchInstance.reset()};$scope.$on(state.UPDATE_EVENT,reset.bind(this)),$scope.$on(vdomState.VDOM_CHANGE_EVENT,reset.bind(this))}}setupSources($INJECTABLE$,NavigationSource,FirewallObjectSource,CSFDeviceSource,DashboardWidgetSource,csfTopology,state){return()=>{const searchableSelectSources=[{source:"firewall.address",category:"Firewall Addresses",meta:()=>({tables:["firewall.address"],scope:"vdom"})},{source:"firewall.address6",category:"Firewall Addresses",meta:()=>({tables:["firewall.address6"],features:["gui-ipv6"],scope:"vdom"})},{source:"firewall.addrgrp",category:"Firewall Addresses",meta:()=>({tables:["firewall.addrgrp"],scope:"vdom"})},{source:"firewall.addrgrp6",category:"Firewall Addresses",meta:()=>({tables:["firewall.addrgrp6"],features:["gui-ipv6"],scope:"vdom"})},{source:"firewall.policy",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.policy"],scope:"vdom"})},{source:"firewall.security-policy",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.security-policy"],additionalRequirements:()=>state.isNgfwPolicyMode(),scope:"vdom"})},{source:"firewall.policy64",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.policy64"],features:["gui-nat46-64"],scope:"vdom"})},{source:"firewall.policy46",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.policy46"],features:["gui-nat46-64"],scope:"vdom"})},{source:"firewall.proxy-policy",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.proxy-policy"],features:["gui-explicit-proxy"],scope:"vdom"})},{source:"firewall.multicast-policy",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.multicast-policy"],features:["gui-multicast-policy"],scope:"vdom"})},{source:"firewall.DoS-policy",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.DoS-policy"],features:["gui-dos-policy"],scope:"vdom"})},{source:"firewall.DoS-policy6",category:"Firewall Policies",warningThreshold:WARNING_LIMITS.POLICY,meta:()=>({tables:["firewall.DoS-policy6"],features:["gui-dos-policy","gui-ipv6"],scope:"vdom"})},{source:"firewallInterfaces",category:"System Interfaces",meta:()=>({tables:["system.interface","system.sdwan.zone","system.zone"],filteredEntries:["any"]})}];this.sources=[...searchableSelectSources.map(e=>new FirewallObjectSource({source:e.source,category:e.category,warningThreshold:e.warningThreshold,defaultEnabled:!0,meta:e.meta})),new NavigationSource({id:"navigation",name:"Navigation",category:"Navigation Entries",defaultEnabled:!0,tooltips:!1}),new DashboardWidgetSource({id:"widget",name:"Widgets",category:"Dashboard Widget",defaultEnabled:!0}),new CSFDeviceSource({source:"csfFortiGates",category:"Fabric Devices",defaultEnabled:!0,meta:()=>({size:async()=>(await csfTopology.buildIfNecessary(),csfTopology.fortigates.length),scope:"vdom"})}),new CSFDeviceSource({source:"csfFortiNACs",category:"Fabric Devices",defaultEnabled:!0,meta:()=>({size:async()=>(await csfTopology.buildIfNecessary(),csfTopology.fortinacs.length),scope:"vdom"})}),new CSFDeviceSource({source:"csfFortiSwitches",category:"Fabric Devices",defaultEnabled:!0,meta:()=>({size:async()=>{await csfTopology.buildIfNecessary(),csfTopology.fortigates.reduce((acc,value)=>acc+value.fortiswitches.length,0)},scope:"vdom"})}),new CSFDeviceSource({source:"csfFortiAPs",category:"Fabric Devices",defaultEnabled:!0,meta:()=>({size:async()=>{await csfTopology.buildIfNecessary(),csfTopology.fortigates.reduce((acc,value)=>acc+value.fortiaps.length,0)},scope:"vdom"})}),new CSFDeviceSource({source:"devices",category:"Endpoint Devices",defaultEnabled:!0,meta:()=>({scope:"vdom"})})]}}},templateUrl:__webpack_require__(1076)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1076:function(module,exports){var path="/migadmin/ng/search/components/f-header-search.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-global-search sources="$ctrl.sources" instance="$ctrl.searchInstance">\n</f-global-search>')}]),module.exports=path},1077:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("CSFDeviceSource",function($location,state,$rootScope,FOSSelectSearchSource){return class extends FOSSelectSearchSource{isAvailable(){return state.adminHasReadPermission(state.ACCESS_GROUP.FABRIC)&&super.isAvailable()}dataFilter(entry){return"all"!==entry.q_origin_key}entryClick(scroller,row){const entry=row.entry;$rootScope.$apply(()=>{$location.path("/security-fabric/topology/physical").search({q:entry.serial||entry.q_origin_key})})}size(){const meta=this.getMetaData();return"function"==typeof meta.size?meta.size():0}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1078:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftntShared,dom){const SearchSource=ftntShared.GlobalSearch.SearchSource;ngModule.factory("DashboardWidgetSource",function($location,lang,$rootScope,$http,dashboardConfig,state,dashboardCommon){const defaultFormatter=entry=>{const widgetType=lang(`dashboard_widget_type::${entry.type}`).toString();return`${entry.dashboard.name} - ${widgetType}`},DASHBOARD_CONFIG=dashboardConfig.getWidgetConfig(),defaultTooltipFormatter=entry=>dashboardConfig.createTooltipTable({type:{value:lang(`dashboard_widget_type::${entry.type}`).toString()},dashboard:{value:entry.dashboard.name}});return class extends SearchSource{entryTooltipFormatter(row){const config=DASHBOARD_CONFIG[row.entry.type];return(config&&config.tooltipFormatter||defaultTooltipFormatter)(row.entry)}entryFormatter(row){const config=DASHBOARD_CONFIG[row.entry.type],formatter=config&&config.formatter||defaultFormatter;return dom.elem("div",{},{children:[dom.elem("f-icon",{className:dashboardConfig.WIDGET_CATEGORY_ICONS[config.category]}),dom.elem("span",{textContent:formatter(row.entry)})]})}entryClick(scroller,row){const entry=row.entry;$rootScope.$apply(()=>{$location.path(`/system/dashboard/${entry.dashboard.id}`).search({vdom:entry.dashboard.vdom})})}search(row,searchValue){const config=DASHBOARD_CONFIG[row.entry.type];return(config&&config.formatter||defaultFormatter)(row.entry).toLowerCase().includes(searchValue.toLowerCase())}async data(){const response=await $http.get(dashboardCommon.DASHBOARD_CMDB_URI),entries=[],isVdomDisabled=state.isVdomModeDisabled();return response.data.results.filter(dashboard=>!isVdomDisabled||"root"===dashboard.vdom).forEach(dashboard=>{dashboard.widget.forEach(widget=>{widget.dashboard={name:dashboard.name,id:dashboard.id,vdom:dashboard.vdom},entries.push(widget)})}),entries}async size(){if(!this._metaPromise){const uri=`${dashboardCommon.DASHBOARD_CMDB_URI}?action=meta`;this._metaPromise=$http.get(uri)}return(await this._metaPromise).data.results.size}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1079:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(46),__webpack_require__(36)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fStructure,fSelect){ngModule.factory("FirewallObjectSource",function($http,state,$location,$rootScope,FOSSelectSearchSource){class FirewallObjectSource extends FOSSelectSearchSource{get sourceID(){return"vdom"!==this.scope&&state.isGlobalVDOM()&&fSelect.doesGlobalSourceExist(this.id)?fSelect.makeGlobalSourceID(this.id):this.id}isAvailable(){const meta=this.getMetaData(),tables=meta.tables,features=meta.features,additionalRequirements=meta.additionalRequirements;let hasPermission=!0,featuresEnabled=!0,hasAdditionalRequirements=!0;return Array.isArray(tables)&&(hasPermission=tables.every(table=>{const[path,name]=table.split(".");return state.adminHasReadPermissionForTable(path,name)})),Array.isArray(features)&&(featuresEnabled=features.every(feature=>state.featureEnabled(feature))),"function"==typeof additionalRequirements&&(hasAdditionalRequirements=additionalRequirements()),hasPermission&&featuresEnabled&&hasAdditionalRequirements&&super.isAvailable(meta)}entryClick(scroller,row){const entry=row.entry,path=entry.q_path,name=entry.q_name,url=fStructure.ngURI(state.getListUrl(path,name));$rootScope.$apply(()=>{$location.path(url).search({showInList:JSON.stringify({q_origin_key:entry.q_origin_key,datasource:`${entry.q_path}.${entry.q_name}`})})})}dataFilter(entry){const filteredEntries=this.getMetaData().filteredEntries;return!filteredEntries||!filteredEntries.includes(entry.q_origin_key)}async size(){FirewallObjectSource.tableSizes||(FirewallObjectSource.tableSizes=$http.get("/api/v2/cmdb?action=meta"));let sizes=(await FirewallObjectSource.tableSizes).data.results,size=0;const tables=this.getMetaData().tables;if(Array.isArray(tables))tables.forEach(table=>{sizes[table]&&(size+=sizes[table].size||0)});else{const data=this.getCachedData();size=data&&data.length||0}return size}}return FirewallObjectSource})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1080:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftntShared){const SelectSearchSource=ftntShared.GlobalSearch.SelectSearchSource;ngModule.factory("FOSSelectSearchSource",function(state){return class extends SelectSearchSource{isAvailable(meta){meta=meta||this.getMetaData();const isGlobal=state.isGlobalVDOM();let correctVDOMScope=!0;const scopesMatch=!meta.scope||"vdom"===meta.scope&&!isGlobal||"global"===meta.scope&&isGlobal;return state.isVdomModeDisabled()||scopesMatch||(correctVDOMScope=!1),correctVDOMScope}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1081:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftntShared,fwebDom){const SearchSource=ftntShared.GlobalSearch.SearchSource;ngModule.factory("NavigationSource",function(navbar,$location,structure,lang,$rootScope){const formatLabel=entry=>{const parent=entry.outermostParent,name=entry.label;return`${lang(parent).toString()} - ${name}`};return class extends SearchSource{entryFormatter(row){return fwebDom.elem("div",{},{children:[fwebDom.elem("f-icon",{className:"fa-flag-o"}),fwebDom.elem("span",{textContent:formatLabel(row.entry)})]})}entryTooltipFormatter(){return null}onEntryRender(row){row.highlighted||row.keywordMatch||!row.searchMatch||row.highlight(formatLabel(row.entry))}entryClick(scroller,row){$rootScope.$apply(()=>{$location.path(structure.ngURI(row.entry.path))})}async data(){return(await navbar.getNavEntries()).filter(entry=>!entry.suppressed)}search(row,searchValue){const label=formatLabel(row.entry).toLowerCase();return searchValue.split(" ").every(part=>label.includes(part.toLowerCase()))}async size(){return(await navbar.getNavEntries()).length}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1082:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject){function AdminTimeoutPrompt(injector,$scope){injector.injectMarked(this,{$scope:$scope}),this.secondsRemaining=null,this._destroyed=!1}AdminTimeoutPrompt.prototype.$onInit=inject.mark(function($window){return function(){const calculateRemaining=()=>{const now=Date.now(),remaining=(this.expiresOn-now)/1e3;remaining<=0?this.destroySession():(this.secondsRemaining=Math.max(0,Math.round(remaining)),this._destroyed||$window.setTimeout(calculateRemaining,500))};calculateRemaining()}}),AdminTimeoutPrompt.prototype.$onDestroy=function(){this._destroyed=!0},AdminTimeoutPrompt.prototype.extendSession=inject.mark(function(slide){return function(){return slide.get("admin-timeout-prompt").slide.done()}}),module.component("fAdminTimeoutPrompt",{bindings:{expiresOn:"<",destroySession:"="},controller:AdminTimeoutPrompt,templateUrl:__webpack_require__(480)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1083:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.component("fError",{controller:class{constructor($routeParams){this.errorMessage=$routeParams.error||"error"}},templateUrl:__webpack_require__(1084)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1084:function(module,exports){var path="/migadmin/ng/structure/components/f-error.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog dialog-title="::\'error\' | lang" footer-type="::\'return\'">\n    <div class="error-message">\n        <f-icon class="fa-error"></f-icon>\n        <div class="message-content">\n            {{::$ctrl.errorMessage | lang}}\n        </div>\n    </div>\n</f-dialog>\n')}]),module.exports=path},1085:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fDebuggerCaptureNotice",{controller:class extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,fortigateDebugger){return()=>{this.debugger=fortigateDebugger}}},templateUrl:__webpack_require__(1086)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1086:function(module,exports){var path="/migadmin/ng/structure/components/f-debugger-capture-notice.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt unbounded masking" ng-if="$ctrl.debugger.capturing &&\n        $ctrl.debugger.capturePhase === $ctrl.debugger.CAPTURE_PHASE.INITIATING">\n    <div class="content">\n        <h1>\n            {{::\'Initiating Debug Capture\' | lang}}\n        </h1>\n\n        <div class="message">\n            <f-icon class="fa-loading icon-xl"></f-icon>\n            <div class="message-content">\n                {{::\'debug_capture_init_message\' | lang}}\n            </div>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},1087:function(module,exports,__webpack_require__){"use strict";__webpack_require__(29).component("fHeader",{templateUrl:__webpack_require__(1088),bindings:{haSync:"<",currentVdom:"<"},controller:function(state,structure,usbDisk){Object.assign(this,{state:state,structure:structure,usbDisk:usbDisk})}})},1088:function(module,exports){var path="/migadmin/ng/structure/components/f-header.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<header ng-class="{error: $ctrl.state.platform_errors.length}">\n    <div class="fortinet-grid-icon">\n        <f-icon class="ftnt-fortinet-grid icon-xxl"></f-icon>\n    </div>\n    <div class="platform">\n        <div class="model">{{::$ctrl.state.model_name}} {{::$ctrl.state.model_number}}</div>\n        <f-header-csf-tree></f-header-csf-tree>\n    </div>\n\n    <div class="expand">\n        <button type="button" class="bare" ng-click="$ctrl.structure.showNavigation = !$ctrl.structure.showNavigation"\n            f-tip-target>\n            <f-icon class="ftnt-hamburger"></f-icon>\n            <span f-tip display-options="::delayedTooltip">{{::\'Show menu\' | lang}}</span>\n        </button>\n    </div>\n\n    <div class="expandable" ng-class="{expanded: $ctrl.structure.showNavigation}" ng-controller="AppControls"\n        f-with="$ctrl.state.readOnlyAdmin() as readOnlyAdmin;\n                $ctrl.usbDisk.data.auto_install_conf || $ctrl.usbDisk.data.auto_install_image as usbDiskAutoInstall">\n\n        <div ng-if="::$ctrl.state.vdom_mode && !$ctrl.state.isMultiVDOMAdmin()" class="info-item">\n            <span class="transparent-bottom-border">{{::\'VDOM\' | lang}}:&nbsp;</span>\n            <f-omniselect-entry entry="::currentVdom"></f-omniselect-entry>\n        </div>\n\n        <div class="info-item" ng-if="$ctrl.state.admin.global_admin && state.ha_mode">\n            <span class="transparent-bottom-border">{{::\'HA\' | lang}}:&nbsp;</span>\n            <span class="tooltip-hint" f-tip-target>\n                <f-icon ng-if="!$ctrl.structure.isHASynchronized"\n                    class="fa-warning">\n                </f-icon>\n                <span ng-if="$ctrl.state.is_ha_master"> {{::\'ha_master\' | lang}}</span>\n                <span ng-if="!$ctrl.state.is_ha_master"> {{::\'ha_slave\' | lang}}</span>\n                <div f-tip>\n                    <span ng-if="$ctrl.structure.isHASynchronized">\n                        {{:: \'Synchronized\' | lang}}\n                    </span>\n                    <span ng-if="!$ctrl.structure.isHASynchronized">\n                        {{:: \'Not Synchronized\' | lang}}\n                    </span>\n                </div>\n            </span>\n        </div>\n\n        <f-header-release-info class="header-button-component small-hide">\n        </f-header-release-info>\n\n        <f-header-search class="header-button-component"></f-header-search>\n\n        <f-header-central-management class="header-button-component small-hide">\n        </f-header-central-management>\n\n        <button type="button" class="bare small-hide" ng-if="$ctrl.usbDisk.isVisible()"\n            f-pop-up-menu-toggle="$parent.usbPopUpMenu"\n            ng-class="{\'shake-once\': $ctrl.usbDisk.copyDoneNotified}" f-tip-target>\n            <f-icon ng-show="usbDiskAutoInstall" class="ftnt-usb-warn-o"></f-icon>\n            <f-icon ng-show="!usbDiskAutoInstall" class="ftnt-usb-o"></f-icon>\n            <span f-tip display-options="::delayedTooltip">{{::\'USB Disk\' | lang}}</span>\n        </button>\n        <div f-pop-up-menu="$parent.usbPopUpMenu" ng-if="$ctrl.usbDisk.isVisible()">\n            <f-usb-disk></f-usb-disk>\n        </div>\n\n        <button type="button" class="bare" f-tip-target ng-click="cliConsole()">\n            <f-icon class="fa-terminal"></f-icon>\n            <span f-tip display-options="::delayedTooltip">{{::\'cli_console\' | lang}}</span>\n        </button>\n\n        <button type="button" class="bare" f-tip-target ng-click="openFullscreen()">\n            <f-icon class="ftnt-full-screen"></f-icon>\n            <span f-tip display-options="::delayedTooltip">{{::\'full-screen-mode\' | lang}}</span>\n        </button>\n\n        <button type="button" class="bare" f-pop-up-menu-toggle="helpPopUpMenu" f-tip-target>\n            <f-icon class="ftnt-help-o"></f-icon>\n            <span class="count-overlay severity-low" ng-show="help.videos.length">\n                {{help.videos.length}}\n            </span>\n            <span f-tip display-options="::delayedTooltip">{{::\'help\' | lang}}</span>\n        </button>\n        <div f-pop-up-menu="helpPopUpMenu" >\n            <div f-menu-item-button click="openHelp()">\n                <f-icon class="fa-book"></f-icon>\n                <span>{{::\'Online Help\' | lang}}</span>\n            </div>\n            <div f-menu-item-button click="openVideo()">\n                <f-icon class="fa-video-camera"></f-icon>\n                <span>{{::\'Video Tutorials\' | lang}}</span>\n            </div>\n\n            <div class="separator" ng-show="help.videos.length"></div>\n            <div f-menu-item-button ng-repeat="video in help.videos" click="openVideo(video)">\n                <f-icon class="fa-play-circle-o help-video-icon"></f-icon>\n                {{video.itemTitle}}\n            </div>\n\n            <div class="separator" ng-show="help.headerHelpLinks.length"></div>\n            <div f-menu-item-button ng-repeat="link in help.headerHelpLinks" click="openLink(link.url)">\n                <f-icon class="{{:: link.icon }}"></f-icon>\n                {{link.itemTitle}}\n            </div>\n        </div>\n\n        <button type="button" class="bare" f-pop-up-menu-toggle="notificationPopUpMenu" f-tip-target>\n            <f-icon class="fa-notification"></f-icon>\n            <span class="count-overlay severity-{{notification.highestSeverityLevel}}"\n                ng-show="notification.failCount">{{notification.failCount}}</span>\n            <span f-tip display-options="::delayedTooltip">{{::\'Notifications\' | lang}}</span>\n        </button>\n        <div class="notification-pop-up" f-pop-up-menu="notificationPopUpMenu">\n            <div class="info-text info-text-centered" ng-hide="notification.failCount">\n                {{::\'No notifications at this time\' | lang}}\n            </div>\n            <div ng-repeat="item in notification.failedNotificationItems | orderBy:[\'SEVERITY_LEVEL_INDEX\', \'ID\']:true">\n                <div ng-if="item.type === item.TYPES.MULTIPLE">\n                    <div f-menu-item-button ng-repeat = "_ in ::item._messages track by $index"\n                        click="item.onClick($index)" enabled="item.canClick($index)">\n                        <f-icon class="fa-severity-{{::item.SEVERITY_LEVEL}}"></f-icon>\n                        <span>{{::item.getMessage($index)}}</span>\n                    </div>\n                </div>\n                <div ng-if="item.type === item.TYPES.SUBMENU">\n                    <div f-menu-item-button click="item.onClick()" enabled="item.canClick()">\n                        <f-icon class="fa-severity-{{::item.SEVERITY_LEVEL}}"> </f-icon>\n                        <span>{{item.getMessage()}}</span>\n                    </div>\n                    <div f-menu-item-button ng-repeat = "_ in item._messages track by $index"\n                        click="item.onClick($index)" enabled="item.canClick($index)" extra-class="subitem">\n                        <f-icon class="{{item.getIcon($index)}}"></f-icon>\n                        <span>{{item.getMessage($index)}}</span>\n                    </div>\n                </div>\n                <div ng-if="item.type === item.TYPES.SINGLE">\n                    <div f-menu-item-button click="item.onClick()" enabled="item.canClick()">\n                        <f-icon class="fa-severity-{{::item.SEVERITY_LEVEL}}"> </f-icon>\n                        <span>{{::item.getMessage()}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <button type="button" class="bare" f-pop-up-menu-toggle="adminPopUpMenu"\n            ng-disabled="fortigateDebugger.capturing">\n            <span ng-if="!$ctrl.state.admin.sso_sp_admin" class="admin-avatar"></span>\n            <span ng-if="$ctrl.state.admin.sso_sp_admin" class="sso-admin-avatar"></span>\n            <span class="small-hide">{{$ctrl.state.admin.login_name}}</div>\n        </button>\n        <div f-pop-up-menu="adminPopUpMenu">\n            <f-header-admin-menu></f-header-admin-menu>\n        </div>\n    </div>\n\n    <div class="error-message-container">\n        <div ng-repeat="msg in $ctrl.state.platform_errors" class="error-message">\n            <f-icon class="fa-exclamation-triangle"></f-icon>\n            {{msg | lang}}\n        </div>\n    </div>\n</header>')}]),module.exports=path},1089:function(module,exports,__webpack_require__){"use strict";__webpack_require__(29).component("fGuestHeader",{templateUrl:__webpack_require__(1090),controller:function(state,structure){Object.assign(this,{state:state,structure:structure})}})},1090:function(module,exports){var path="/migadmin/ng/structure/components/f-guest-header.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<header ng-class="{error: $ctrl.state.platform_errors.length}">\n    <div class="platform">\n        <div>{{ \'guest_user_management\' | lang }}</div>\n    </div>\n\n    <div class="expand">\n        <button type="button" class="bare" ng-click="$ctrl.structure.toggleResponsiveMenu()"\n            title="{{\'Show menu\' | lang}}">\n            <f-icon class="ftnt-hamburger icon-lg"></f-icon>\n        </button>\n    </div>\n\n    <div class="expandable" ng-class="{expanded: $ctrl.structure.responsiveMenu}" ng-controller="AppControls">\n        <button type="button" class="bare" ng-click="openHelp()" title="{{\'help\' | lang}}">\n            <f-icon class="ftnt-help-o icon-lg"></f-icon>\n        </button>\n\n        <button type="button" class="bare" f-pop-up-menu-toggle="adminPopUpMenu">\n            <span class="admin-avatar"></span>\n            <span class="small-hide">{{$ctrl.state.admin.login_name}}</span>\n        </button>\n        <div f-pop-up-menu="adminPopUpMenu">\n            <f-header-admin-menu></f-header-admin-menu>\n        </div>\n    </div>\n\n    <div class="error-message-container">\n        <div ng-repeat="msg in $ctrl.state.platform_errors" class="error-message">\n            <f-icon class="fa-exclamation-triangle"></f-icon>\n            {{msg | lang}}\n        </div>\n    </div>\n</header>')}]),module.exports=path},1091:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,BUILD){function HeaderAdminMenu(injector){injector.injectMarked(this)}HeaderAdminMenu.prototype.$onInit=inject.mark(function(state){return function(){this.state=state,this.powerControlsVisible=state.admin.global_admin&&state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG),this.configurationControlsVisible=state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_ADMIN)&&state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_MNT),this.configurationRestoreVisible=state.admin.super_admin||!state.admin.global_admin&&state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_ADMIN)&&state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_MNT),this.configurationRevisionsVisible=BUILD.PLATFORM.HAVE_LOCAL_REV_CONTROL&&(!state.vdom_mode||state.admin.global_admin),this.configurationScriptsVisible=state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_CFG)&&(!state.vdom_mode||state.admin.global_admin)}}),HeaderAdminMenu.prototype.powerDevice=inject.mark(function(lang,slide){return function(type){var title=lang("reboot"===type?"Reboot":"Shutdown").toString(),component="<f-system-power type=\"::'"+type+"'\"></f-system-power>";slide.open("powerPrompt"+type,{template:component,options:{title:title,fullHeight:!0}})}}),HeaderAdminMenu.prototype.backupConfiguration=inject.mark(function($location){return function(){$location.url("/system/config/backup")}}),HeaderAdminMenu.prototype.scriptConfiguration=inject.mark(function($location){return function(){$location.url("/system/config/scripts")}}),HeaderAdminMenu.prototype.restoreConfiguration=inject.mark(function($location){return function(){$location.url("/system/config/restore")}}),HeaderAdminMenu.prototype.configurationRevisions=inject.mark(function($location){return function(){$location.url("/system/config/revisions")}}),HeaderAdminMenu.prototype.changePassword=inject.mark(function(passwordService){return function(){passwordService.openPasswordDialog()}}),HeaderAdminMenu.prototype.logout=inject.mark(function($window){return function(){this.state.admin.sso_sp_admin?$window.location.href="/saml/logout":$window.location.href="/logout"}}),ngModule.component("fHeaderAdminMenu",{controller:HeaderAdminMenu,templateUrl:__webpack_require__(481)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1092:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(42)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,fLocation){function HeaderCentralManagement(injector,state,$scope){injector.injectMarked(this,{$scope:$scope}),this.init(),$scope.$watch(function(){return state.getCurrentVDOMScope(state.VDOM_SCOPE.VDOM)+state.getOperatingVDOM()+state.fortimanager_backup_mode},function(newVal,oldVal){oldVal&&newVal!==oldVal&&this.init()}.bind(this))}HeaderCentralManagement.prototype.init=inject.mark(function(state){return function(){this.readOnlyAdmin=state.readOnlyAdmin(),this.fortimanagerIP=state.fortimanager,this.isCentrallyManaged=state.centrally_managed,this.isBackupMode=state.fortimanager_backup_mode,this.canChangeLogin=state.admin.global_admin&&state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG)&&state.centrally_managed,this.hasFirewallRead=state.adminHasReadPermission(state.ACCESS_GROUP.FIREWALL),this.numConflicting=0,this.numNew=0,this.numOutOfSync=0,this.availableFortiManagerObjects=0,this.cancelPolling(),state.getCurrentVDOMScope(state.VDOM_SCOPE.VDOM)!==state.VDOM_SCOPE.GLOBAL&&this.isBackupMode&&this.hasFirewallRead&&this.setupPolling()}}),HeaderCentralManagement.prototype.cancelPolling=inject.mark(function($timeout){return function(){this.pollPromise&&$timeout.cancel(this.pollPromise)}}),HeaderCentralManagement.prototype.getData=inject.mark(function($http,state){return function(){if(state.getCurrentVDOMScope(state.VDOM_SCOPE.VDOM)!==state.VDOM_SCOPE.GLOBAL)return $http.get("/api/v2/monitor/system/fortimanager/backup-summary").then(function(response){var data=response.data;data&&(this.numConflicting=data["conflict object"]||0,this.numNew=data["missing object"]||0,this.numOutOfSync=data["local object"]||0,this.availableFortiManagerObjects=this.numConflicting+this.numNew+this.numOutOfSync)}.bind(this))}}),HeaderCentralManagement.prototype.setupPolling=inject.mark(function($scope,$http,$timeout){return function(){var poll=function(){this.cancelPolling(),this.pollPromise=$timeout(function(){this.getData().finally(function(){poll()})}.bind(this),3e5)}.bind(this);poll(),this.getData(),$scope.$on("$destroy",function(){this.cancelPolling()}.bind(this))}}),HeaderCentralManagement.prototype.isVisible=inject.mark(function(state){return function(){return!state.admin.guest_admin&&(state.centrally_managed||state.fortimanager_backup_mode)}}),HeaderCentralManagement.prototype.viewBackupObjects=inject.mark(function($rootScope,slide,lang){return function(){var scope=$rootScope.$new();return this.getData(),this.slideOpen=!0,slide.open("fortimanager-backup-objects",{template:"<f-fortimanager-backup-objects></f-fortimanager-backup-objects>",parentScope:scope,options:{fullHeight:!0,title:lang("FortiManager Objects").value,width:1050}}).finally(function(){this.getData(),scope.$destroy(),this.slideOpen=!1}.bind(this))}}),HeaderCentralManagement.prototype.centrallyManagedPrompt=inject.mark(function($location){return function(){var current=fLocation.get_current();$location.url("/prompt/centrally_managed/"),$location.search({viewOnly:"",redir:current})}}),ngModule.component("fHeaderCentralManagement",{controller:HeaderCentralManagement,templateUrl:__webpack_require__(482)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1093:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0),__webpack_require__(34),__webpack_require__(41),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ngModule,BUILD,fUtilDateTime,fUtilSlide,notify)=>{const COVERAGE_DOWNLOAD_URI="/api/v2/monitor/coverage/download",COVERAGE_RESET_URI="/api/v2/monitor/coverage/reset";ngModule.component("fHeaderReleaseInfo",{controller:class{constructor(state,structure,navbar,slide,$window,$http,$scope,$interval,fortigateDebugger){this.structure=structure,this.state=state,this.navbar=navbar,this.slide=slide,this.$window=$window,this.$http=$http,this.$scope=$scope,this.$interval=$interval,this.fortigateDebugger=fortigateDebugger,this.isGA=state.isReleaseBuild(),this._resetCaptureTimestamp(),this.init()}init(){this.version=this.state.version,this.releaseLabel=BUILD.PLATFORM.CONFIG_BUILD_LABEL,this.buildNumber=BUILD.CONFIG.CONFIG_BUILD_NUMBER,this._watchDebugCapture()}downloadCoverage(){this.$window.location.assign(COVERAGE_DOWNLOAD_URI)}resetCoverage(){fUtilSlide.confirm("Are you sure you want to reset code coverage?").then(function(){this.$http.post(COVERAGE_RESET_URI).then(function(){notify.post("Code coverage reset.",notify.LEVEL.SUCCESS)},function(){notify.post("Failed to reset code coverage.",notify.LEVEL.ERROR)})})}hideBuildLabel(){this.structure.hideBuildLabel=!0}stopDebugCapture(){this.fortigateDebugger.stopCapture()}_watchDebugCapture(){let interval;const startTimestampIncrement=()=>{interval=this.$interval(()=>{const ms=Date.now()-this.fortigateDebugger.captureStartTime;this.captureTimestamp=fUtilDateTime.elapsedTime(ms,"short","minute")},1e3)},stopTimestampIncrement=()=>{interval&&(this.$interval.cancel(interval),interval=null)};this.$scope.$watch(()=>this.fortigateDebugger.capturing,(capturing,previous)=>{!capturing&&previous&&this._resetCaptureTimestamp()}),this.$scope.$watch(()=>!(!this.fortigateDebugger.capturing||this.fortigateDebugger.capturePhase!==this.fortigateDebugger.CAPTURE_PHASE.RECORDING),isRecording=>{isRecording?startTimestampIncrement():stopTimestampIncrement()})}_resetCaptureTimestamp(){this.captureTimestamp=fUtilDateTime.elapsedTime(0,"short","minute")}},templateUrl:__webpack_require__(483)})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1094:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ngModule,inject)=>{ngModule.component("fHeaderCsfTree",{controller:class extends inject.Collectable{constructor(state){super(),this.state=state,this.treeNodes=[],this.appliances=[]}$onInit(){this.setupWatcher("globalSpanningTreeNodes","treeNodes","treeMap",this.getFgtTrack),this.setupWatcher("appliances","appliances","applianceMap",this.getApplianceTrack,source=>({$trackBy:source.$trackBy,node:source}))}setupWatcher($INJECTABLE$,$scope,csfTopology){return function(nodeSourceKey,nodeDestKey,nodeDestMapKey,getTrackFn,processNodeFn=(node=>node)){$scope.$watchCollection(()=>{const changedNodes=[];return csfTopology[nodeSourceKey].forEach((node,index)=>{const newTrack=getTrackFn.call(this,node,index);node.$trackBy!==newTrack&&changedNodes.push({node:node,index:index}),node.$trackBy=newTrack}),changedNodes},changedNodes=>{changedNodes&&changedNodes.length&&(this[nodeDestKey]=csfTopology[nodeSourceKey].slice().map(processNodeFn),this[nodeDestMapKey]=this[nodeDestKey].reduce((prev,node)=>(prev[node.id]=node,prev),{}),changedNodes.forEach(({node:node,index:index})=>{this[nodeDestKey].splice(index,1,Object.assign({},processNodeFn(node)))}))})}}isEnabled($INJECTABLE$,state){return()=>(this.treeNodes.length>1||this.appliances.length)&&state.csf_enabled}isLast(ancestorId,index){for(let i=index+1;i<this.treeNodes.length;++i)if(this.treeNodes[i].parent===this.treeMap[ancestorId].node)return!1;return!0}onClick(event,current){current&&(event.preventDefault(),this.headerCsfTreePopUpMenu.hide(!0))}getFgtTrack(treeNode,$index){const fgt=treeNode.node;return`${fgt.getLabel()}#${fgt.getIconClass()}#${$index}`}getApplianceTrack(appliance,$index){return`${appliance.getLabel()}#${appliance.getManagementURL()}#${$index}`}},templateUrl:__webpack_require__(1095)})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1095:function(module,exports){var path="/migadmin/ng/structure/components/f-header-csf-tree.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="hostname small-hide" ng-if="!$ctrl.isEnabled()">\n    <span f-object-tooltip mkey="{{::$ctrl.state.serial}}" datasource="csfFortiGates">\n        {{$ctrl.state.hostname || $ctrl.state.serial}}\n    </span>\n</div>\n<div class="hostname expandable" ng-if="$ctrl.isEnabled()">\n    <button type="button" class="bare"\n            f-pop-up-menu-toggle="$ctrl.headerCsfTreePopUpMenu">\n        <span f-object-tooltip mkey="{{::$ctrl.state.serial}}" datasource="csfFortiGates">\n            {{$ctrl.state.hostname || $ctrl.state.serial}}\n        </span>\n    </button>\n    <div f-pop-up-menu="$ctrl.headerCsfTreePopUpMenu"\n        allow-native-context-menu="::true">\n        <div class="menu-item"\n            ng-repeat="treeNode in $ctrl.treeNodes track by treeNode.$trackBy || $index">\n            <a class="button-style"\n                ng-href="{{treeNode.node.getManagementURL()}}"\n                ng-click="$ctrl.onClick($event, treeNode.node.isCurrent)"\n                ng-class="{selected: treeNode.node.isCurrent}"\n                f-omniselect-entry-tooltip-trigger\n                f-omniselect-entry-tooltip-target>\n                <div class="tree-nodes-container"\n                    ng-class="{disabled: !treeNode.node.isCurrent && !treeNode.node.getManagementIP()}">\n                    <div class="edges-container">\n                        <div class="edges" ng-repeat="ancestorId in treeNode.path">\n                            <div class="edge to-self" ng-if="$last">\n                            </div>\n                            <div class="edge last-child" ng-if="$last && $ctrl.isLast(ancestorId, $parent.$index)">\n                            </div>\n                            <div class="edge to-sibling" ng-if="!$ctrl.isLast(ancestorId, $parent.$index)">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="tree-node-container">\n                        <div class="indent" ng-repeat="ancestorId in treeNode.path"></div>\n                        <div class="tree-node">\n                            <div class="edge to-child" ng-if="treeNode.children.length > 0"></div>\n                            <f-omniselect-entry entry="treeNode.node" tooltip-hint="::false"></f-omniselect-entry>\n                            <span ng-if="treeNode.node.isRoot">\n                                &nbsp;({{:: \'Fabric Root\' | lang }})\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n        <div class="separator" ng-if="$ctrl.appliances.length"></div>\n        <div class="menu-item" ng-repeat="appliance in $ctrl.appliances track by appliance.$trackBy || $index"">\n            <a class="button-style" ng-href="{{::appliance.node.getManagementURL()}}"\n                f-omniselect-entry-tooltip-trigger\n                f-omniselect-entry-tooltip-target>\n                <f-omniselect-entry entry="appliance.node" tooltip-hint="::false"></f-omniselect-entry>\n            </a>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},1096:function(module,exports,__webpack_require__){"use strict";const ngModule=__webpack_require__(29),inject=__webpack_require__(26);ngModule.component("fNavbarViewSection",{templateUrl:__webpack_require__(1097),controller:class extends inject.Collectable{constructor(structure){super(),this.structure=structure,this.inRouteTransition=!1}$onInit($INJECTABLE$,$scope,$route,vdomState){return()=>{$scope.$on("$routeChangeStart",(_,next,current)=>{this._isEmbeddedIframeChange(next,current)||(this.inRouteTransition=!0)}),$scope.$on(vdomState.VDOM_CHANGE_EVENT,()=>{this._isRouteEmbeddedIframe($route.current)||(this.inRouteTransition=!0)}),$scope.$on("$routeChangeSuccess",()=>{this.inRouteTransition=!1}),$scope.$on("$routeChangeError",()=>{this.inRouteTransition=!1})}}_isRouteEmbeddedIframe(route){return route.$$route&&route.$$route.embeddedIframe}_isEmbeddedIframeChange(next,current){return this._isRouteEmbeddedIframe(next)&&this._isRouteEmbeddedIframe(current)}}})},1097:function(module,exports){var path="/migadmin/ng/structure/components/f-navbar-view-section.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<nav f-navbar ng-if="!$ctrl.structure.navigationDisabled && !$ctrl.structure.isViewOnly"\n    ng-class="{expanded: $ctrl.structure.showNavigation, \'with-toggle\': $ctrl.structure.isFullscreen}">\n</nav>\n\n<div class="view-container">\n    <div class="absolute-fill containing-block" ng-view ng-if="!$routeIsSegment"\n        ng-class="{invisible: $ctrl.inRouteTransition}"></div>\n    \x3c!-- For fortiview only. TODO: Refactor angular-route-segment out. --\x3e\n    <div class="absolute-fill containing-block" ng-if="$routeIsSegment"\n        ng-class="{invisible: $ctrl.inRouteTransition}">\n        <div app-view-segment="0"></div>\n    </div>\n    <div class="flex-centered absolute-fill" ng-if="$ctrl.inRouteTransition">\n        <f-icon class="fa-loading icon-xxl"></f-icon>\n    </div>\n</div>\n')}]),module.exports=path},1098:function(module,exports,__webpack_require__){"use strict";__webpack_require__(29).component("fUsbDisk",{templateUrl:__webpack_require__(1099),controller:function(state,usbDisk){Object.assign(this,{state:state,usbDisk:usbDisk})}})},1099:function(module,exports){var path="/migadmin/ng/structure/components/f-usb-disk.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="info-text info-text-centered" ng-show="usbDiskAutoInstall">\n    <a href="/ng/system/advanced?vdom=">\n        <span ng-show="!$ctrl.usbDisk.data.auto_install_conf && $ctrl.usbDisk.data.auto_install_image">\n            {{ ::\'FortiOS image file on USB will be loaded on next boot\' | lang }}\n        </span>\n        <span ng-show="$ctrl.usbDisk.data.auto_install_conf && !$ctrl.usbDisk.data.auto_install_image">\n            {{ ::\'Config file on USB will be loaded on next boot\' | lang }}\n        </span>\n        <span ng-show="$ctrl.usbDisk.data.auto_install_conf && $ctrl.usbDisk.data.auto_install_image">\n            {{ ::\'FortiOS image and config file on USB will be loaded on next boot\' | lang }}\n        </span>\n    </a>\n</div>\n<div class="info-key-value">\n    <div>\n        <span>{{ ::\'USB Disk\' | lang }}</span>\n        <span>\n            <span>{{ $ctrl.usbDisk.data.disk_size | binaryBytes }}</span>\n            <span>{{ $ctrl.usbDisk.data.model }}</span>\n        </span>\n    </div>\n    <div>\n        <span>{{ ::\'Available\' | lang }}</span>\n        <span>{{ $ctrl.usbDisk.data.avail_space | binaryBytes }}</span>\n    </div>\n    <div ng-show="$ctrl.state.current_vdom && $ctrl.usbDisk.isDiskModel">\n        <span>{{ ::\'Log Size\' | lang }}</span>\n        <span>\n            <span ng-if="$ctrl.usbDisk.data.log_size > 0">~{{ $ctrl.usbDisk.data.log_size | binaryBytes }}</span>\n            <span ng-if="!$ctrl.usbDisk.data.log_size">0</span>\n            (<span>{{ $ctrl.usbDisk.data.log_file_no || 0 }}</span> files)\n        </span>\n    </div>\n</div>\n<div ng-show="$ctrl.usbDisk.data.is_copying">\n    <div f-progress-bar="$ctrl.usbDisk.data.progress" show-percentage="true"></div>\n</div>\n<div class="info-text info-text-centered" ng-show="$ctrl.usbDisk.isInsufficientSpace()">\n    <span>{{ ::\'Insufficient USB disk space\' | lang }}</span>\n</div>\n<div class="separator"></div>\n<div>\n    <div f-menu-item-button pop-up-stay-open click="$ctrl.usbDisk.startCopy()"\n        ng-show="$ctrl.usbDisk.copyEnabled()">\n        {{ ::\'Copy to USB\' | lang }}\n    </div>\n    <div f-menu-item-button pop-up-stay-open click="$ctrl.usbDisk.stopCopy()"\n        ng-show="$ctrl.usbDisk.stopEnabled()">\n        {{ ::\'Stop\' | lang }}\n    </div>\n    <div\n        f-menu-item-button\n        pop-up-stay-open\n        enabled="!$ctrl.usbDisk.data.is_copying"\n        click="$ctrl.usbDisk.eject()">\n        {{ ::\'Eject USB\' | lang }}\n    </div>\n    <div f-menu-item-button>\n        {{ ::\'Close\' | lang }}\n    </div>\n</div>\n')}]),module.exports=path},1100:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(46),__webpack_require__(41),__webpack_require__(10),__webpack_require__(8),__webpack_require__(1101)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,fStructure,fSlide,$,ftnt_shared){const Omniselect=ftnt_shared.Omniselect;module.controller("App",function($scope,$rootScope,$location,$window,$http,state,structure,loader,lang,dialog,adminTimeout,navbar,shortcuts,objectUsage,vdomState,usbDisk,connection,notification,notificationRequests,$route,userData,apManager,csfTopology){const search=$location.search();state.vdom_mode&&"string"==typeof search.vdom?vdomState.setCurrent(search.vdom):window!==top?state.current_vdom=structure.getVDOMCookieValue():(state.current_vdom=state.initial_vdom,structure.setVDOMCookie(state.current_vdom)),$location.search("vdom",state.vdom_mode?state.current_vdom:null),$scope.$on("$locationChangeStart",function(event){if(state.vdom_mode&&!navbar.loadingVdom){var vdom=$location.search().vdom;null==vdom?(event.preventDefault(),$location.search("vdom",state.current_vdom),structure.setVDOMCookie(state.current_vdom)):(vdom!==state.current_vdom&&vdomState.setCurrent(vdom),vdom!==structure.getVDOMCookieValue()&&structure.setVDOMCookie(state.current_vdom))}}),$window.addEventListener("message",function(event){var origin=fStructure.getOrigin(),data=event.data;if(event.origin===origin)switch(data.messageType){case"changeNgLocation":$scope.$apply(function(){var path=data.path;path&&((data.embedded||data.absolute)&&(path=structure.ngURI(path)),$location.path(path)),data.search&&$location.search(data.search),data.hash&&$location.hash(data.hash)});break;case"enterVDOM":$scope.$apply(function(){$scope.$broadcast(structure.ENTER_VDOM_EVENT,data.vdom)});break;case"pathAvailable":var reply=data;navbar.isPathAvailable(data.path,state.current_vdom).then(function(isAvailable){reply.result=isAvailable,event.source.postMessage(reply,origin)});break;case"shortcutPressed":$scope.$apply(function(){shortcuts.trigger(data.shortcut)});break;case"showObjectUsage":var serial;if(data.fortigate)serial=data.fortigate;else if(data.csfAware){const fortigate=csfTopology.selectedFortigate;serial=fortigate&&fortigate.serial}objectUsage.open(data.qTypes,data.mkey,data.vdom,serial).then(void 0,function(result){result&&result.shouldReloadRoute&&$route.reload(),result&&result.shouldRefreshState&&state.refresh()});break;case"disconnected":$scope.$apply(function(){connection.setDisconnected()});break;case"restartNotificationsIf":$scope.$apply(function(){data.notificationID?notification.restartIfActive(data.notificationID):notification.restartIfAnyActive()});break;case state.UPDATE_EVENT:state.refresh();break;case"licenseForceUpdate":{const fortigate=csfTopology.getDevice(data.fortigate);notificationRequests.license({forceReload:!0,fortigate:fortigate}).then(function(){notificationRequests.sandboxStatus({forceReload:!0,fortigate:fortigate})})}break;case"closeResponsiveMenu":structure.responsiveMenu=!1;break;case"extendAdminTimeout":adminTimeout.resetBrowserCountdown();break;case"openAPSlide":loader.initModules(data.initModules).then(()=>{apManager.openDetailsSlide(data.wtpID)});break;case Omniselect.NOTIFY_SOURCE_CHANGED_MESSAGE:$rootScope.$apply(function(){$rootScope.$broadcast(data.messageType,data.sourceID)})}},!1),$rootScope.state=state,$rootScope.host_addr=$location.absUrl(),$scope.state=state,$scope.structure=structure,$scope.guestAdmin=state.admin.guest_admin,structure.initialize()}),module.controller("AppControls",function($scope,$window,$location,state,help,lang,$timeout,$http,structure,usbDisk,notification,fortigateDebugger,cliConsole){$scope.state=state,$scope.help=help,$scope.usbDisk=usbDisk,$scope.notification=notification,$scope.structure=structure,$scope.fortigateDebugger=fortigateDebugger,$scope.delayedTooltip={showDelay:!0},$scope.openFullscreen=function(){structure.isFullscreen=!0,structure.showNavigation=!1},$scope.cliConsole=function(){cliConsole.open()},$scope.openHelp=function(){help.$promise.then(function(){var uri=help.getHelpUrl()+help.helpKey;$window.open(uri)})},$scope.currentVdom={q_origin_key:state.getOperatingVDOM(),datasource:"availableVdoms"},$scope.openVideo=function(video){var uri;uri=null==video?help.hrefs.no_video:help.hrefs.video+video.id,uri+="?"+$.param(help.getTrackingInfo()),$window.open(uri)},$scope.openLink=function(url){url&&$window.open(url)}}),module.controller("Index",function($location,structure,state,navbar){state.admin.guest_admin?$location.url(structure.ngURI("/ng/user/guest")):navbar.getFirstValidEntry().then(function(entry){$location.url(structure.ngURI(entry.uri))})})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1101:function(module,exports,__webpack_require__){"use strict";__webpack_require__(1102);const ngModule=__webpack_require__(29),formatters=__webpack_require__(32),inject=__webpack_require__(26);ngModule.service({objectUsage:class extends inject.Collectable{open($INJECTABLE$,lang,slide,$rootScope,csfTopology){return(qTypes,mkey,vdom,fortigateSerial)=>{Array.isArray(qTypes)||(qTypes=[qTypes]);const fortigate=csfTopology.fortigateMapping[fortigateSerial]||csfTopology.thisFortigate,pathName=formatters.path_name_format(fortigate.state.getPathNameByType(qTypes[0])),slideID=`object_usage_slide:${pathName.path}.${pathName.name}:${mkey}`;let template='<f-object-usage qtypes="qtypes" mkey="mkey" path="path" name="name" serial="serial" ';vdom&&(template+='vdom="vdom"'),template+="></f-object-usage>";const childScope=Object.assign($rootScope.$new(),{mkey:mkey,qtypes:qTypes,path:pathName.path,name:pathName.name,vdom:vdom,serial:fortigateSerial});return slide.open(slideID,{template:template,parentScope:childScope,options:{title:lang("Usage of {0}: {1}",[lang(`${pathName.path}.${pathName.name}`),mkey]).toString(),okButtonLabel:lang("Close").toString(),fullHeight:!0}}).finally(()=>{childScope.$destroy()})}}}})},1107:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject){function DisconnectionNotice(injector,state,connection){injector.injectMarked(this),this.state=state,this.connection=connection}DisconnectionNotice.prototype.formatDuration=inject.mark(function($filter){var elapsedTime=$filter("elapsedTime");return function(value){return elapsedTime(value,"short","minute")}}),module.component("fDisconnectionNotice",{templateUrl:__webpack_require__(484),controller:DisconnectionNotice})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1108:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(2),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,fweb,inject){function EmbeddedIframe($scope,$element,injector){injector.injectMarked(this,{$scope:$scope,$element:$element}),this._$iframe=$element.find("iframe"),this._fromIframe=!1,this._firstLoad=!1,this._currentPath=null,this._setupScopeListeners(),this._setupLoadEvents(),this.locationChange()}EmbeddedIframe.prototype.getIframeLocation=function(){return this._$iframe[0].contentWindow.location},EmbeddedIframe.prototype.formatSearchParams=function(search){return"?"+fweb.util.uri.formatParams(search)},EmbeddedIframe.prototype.stringizeBooleanValues=function(object){return Object.keys(object).forEach(function(key){var value=object[key];"boolean"==typeof value&&(object[key]=String(value))}),object},EmbeddedIframe.prototype.updateFromIframe=inject.mark(function($scope,$location,structure,state,adminTimeout){return function(){var iframeLocation=this.getIframeLocation(),currentSearch=this.stringizeBooleanValues($location.search()),newSearch=angular.extend({},fweb.util.uri.urlParams(iframeLocation.search)),iframePath=decodeURIComponent(iframeLocation.pathname),newPath=structure.ngURI(iframePath);null!=currentSearch.vdom&&(newSearch.vdom=currentSearch.vdom),newPath===this._currentPath&&angular.equals(newSearch,currentSearch)?0===iframePath.indexOf("/ng")?this.locationChange():this._firstLoad?this._firstLoad=!1:adminTimeout.resetServerTimeout():$scope.$apply(function(){0!==newPath.indexOf(structure.EMBEDDED_URI_ROUTE)&&fweb.log.warn('Iframe incorrectly tried to embed "'+newPath+'". To reduce unecessary requests, use fweb.util.location.change_ng() when navigating from an embedded iframe page to an angular page.'),$location.path(newPath),$location.search(newSearch),this._fromIframe=!0}.bind(this))}}),EmbeddedIframe.prototype.locationChange=inject.mark(function($location,$routeParams,structure){return function(){var search=this.formatSearchParams($location.search()),path="/"+$routeParams.iframeSource,encodedPath=encodeURI(path);if(encodedPath=encodedPath.replace(/\?/g,"%3F"),!fweb.util.uri.isSafe(encodedPath))throw Error("Attempt to change location to unsafe url");this._fromIframe?this._fromIframe=!1:(this._firstLoad=!0,this.getIframeLocation().replace(encodedPath+search),this.loading=!0),this._currentPath=structure.ngURI(path)}}),EmbeddedIframe.prototype._setupScopeListeners=inject.mark(function($scope,$location,$route,$routeParams,structure){var currentRoute;return function(){currentRoute=$route.current,$scope.$on("$locationChangeSuccess",function(){$route.current.$$route&&0===$route.current.$$route.originalPath.indexOf(structure.EMBEDDED_URI_ROUTE)&&(angular.copy($route.current.params,$routeParams),$route.current=currentRoute)}),$scope.$on("$locationChangeSuccess",function(){structure.isEmbeddedURI($location.path())&&this.locationChange()}.bind(this))}}),EmbeddedIframe.prototype._setupLoadEvents=inject.mark(function($scope,$timeout,structure){return function(){this._$iframe.on("load.embedded_iframe",function(){var contentWindow=this._$iframe[0].contentWindow,getValueAtPath=function(path){return path.split(".").reduce(function(object,key){if(object)return object[key]},contentWindow)},runScriptDependantFunction=function(path){var attempts=0,attemptRun=function(){var fn=getValueAtPath(path);"function"==typeof fn?fn():attempts<4?(attempts++,setTimeout(attemptRun,500)):fweb.log.warn('Failed to run function "'+path+'". Max attempt limit reached.')};attemptRun()};contentWindow.jQuery&&contentWindow.jQuery("body").css({width:"1px","min-width":"100%"}),runScriptDependantFunction("js/fweb.util.shortcuts.listen"),runScriptDependantFunction("js/fweb.util.browser.startResponsiveListener"),runScriptDependantFunction("js/fweb.util.structure.listenForAdminActivity"),this.updateFromIframe(),structure.notifyMessagesQueuedForIframe&&(fweb.util.location.notify_queued_notifications(),structure.notifyMessagesQueuedForIframe=!1),$scope.$apply(function(){this.loading=!1}.bind(this)),contentWindow.addEventListener("beforeunload",function(){var result;result=!1,getValueAtPath("js/fweb.util.uri")&&(result=contentWindow[contentWindow.fweb.util.uri.FILE_DOWNLOADING_IFRAME_FLAG]),result?getValueAtPath("js/fweb.util.uri")&&delete contentWindow[contentWindow.fweb.util.uri.FILE_DOWNLOADING_IFRAME_FLAG]:$timeout(function(){this.loading=!0}.bind(this))}.bind(this))}.bind(this)),$scope.$on("$destroy",function(){if(this._$iframe.off("load.embedded_iframe"),/Trident\/[567]\./.test(navigator.userAgent)){var input=document.body.appendChild(document.createElement("input"));input.focus(),input.blur(),input.parentNode.removeChild(input)}}.bind(this))}}),module.directive("fEmbeddedIframe",function(){return{restrict:"E",scope:!0,templateUrl:__webpack_require__(485),controllerAs:"embeddedIframe",controller:EmbeddedIframe}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1109:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.component("fFirmwareUpgrade",{templateUrl:__webpack_require__(486),controller:function(firmwareUpgrade){this.firmwareUpgrade=firmwareUpgrade}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1110:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(170)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,fShortcuts){module.directive("fShortcutsHelp",function(){return{restrict:"E",controllerAs:"shortcutsHelp",templateUrl:__webpack_require__(487),controller:function($scope,shortcuts){var GENERAL=[[shortcuts.SHORTCUTS.NEXT,"shortcut::next"],[shortcuts.SHORTCUTS.PREVIOUS,"shortcut::previous"]].map(function(entry){return{labels:fShortcuts.getLabels(entry[0]),help:entry[1]}}),ctrl=this;this.shortcuts=shortcuts,$scope.$watch("shortcutsHelp.shortcuts.showHelp",function(showHelp){var binded={global:GENERAL.slice(),view:[]};showHelp&&Object.keys(shortcuts._subscribed).forEach(function(shortcut){var config=shortcuts._subscribed[shortcut],result={help:config.help,labels:fShortcuts.getLabels(shortcut)};config.global?binded.global.push(result):binded.view.push(result)}),ctrl.bindings=binded})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1111:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(80),__webpack_require__(32),__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,fSort,fFormatters,angular){const NAVBAR_MENU_ITEMS_TEMPLATE=__webpack_require__(1112);function Navbar($scope,$element,injector,state,navbar,navbarFavorites,structure){injector.injectMarked(this,{$scope:$scope,$element:$element}),this.state=state,this.navbar=navbar,this.favorites=navbarFavorites,this.structure=structure,this.loading=!0,this.loadingVdom=!0,this.favoriteSortingOptions={update:function(event,ui){navbarFavorites.updating&&ui.items.sortable.cancel()}},this.init()}Navbar.prototype.VDOM_SELECTION_CONFIG={sources:"availableVdoms",singleSelect:!0,meta:{includeGlobal:!0},sortFunction:fSort.vdomSort},Navbar.prototype.init=inject.mark(function($scope,$location,$route,state,structure,navbar,navbarFavorites,shortcuts,vdomState){return async function(){var previousUpdateID,that=this;const changeLocation=uri=>{const path=structure.ngURI(uri),isCurrentPath=path===$location.path();$location.url(path),state.vdom_mode&&state.current_vdom&&$location.search({vdom:state.current_vdom}),isCurrentPath&&$route.reload()},updateAndSelectActive=shouldChangeLocation=>{this.navbar.loadingVdom=!0,navbar.update().then(()=>{navbarFavorites.regenerate().then(()=>{this.navbar.loadingVdom=!1,navbar.selectActiveEntry().then(()=>{shouldChangeLocation&&changeLocation(navbar.activeEntry.uri)},()=>{shouldChangeLocation&&navbar.getFirstValidEntry().then(entry=>{changeLocation(entry.uri)})})})})};this.vdom=this.createOmniselectValidVdom(state.current_vdom),await navbar.update(),await navbarFavorites.regenerate(),this.loading=!1,this.navbar.loadingVdom=!1,navbar.selectActiveEntry(),$scope.$watch("navbarCtrl.vdom",function(vdom,previous){var updatedVdom=vdom.q_origin_key;updatedVdom!==previous.q_origin_key&&updatedVdom!==state.current_vdom&&(vdomState.setCurrent(updatedVdom),updateAndSelectActive(!0))}),$scope.$on("$locationChangeSuccess",function(){that.vdom.q_origin_key!==state.current_vdom?(that.vdom=that.createOmniselectValidVdom(state.current_vdom),updateAndSelectActive()):navbar.selectActiveEntry()}),$scope.$on(structure.ENTER_VDOM_EVENT,function(event,vdom){vdomState.setCurrent(vdom)&&updateAndSelectActive(!0)}),$scope.$watchCollection("navbarCtrl.favorites.list",function(favorites){favorites.updateID&&favorites.updateID===previousUpdateID&&navbarFavorites.updateFromList(),previousUpdateID=favorites.updateID}),$scope.$on(state.UPDATE_EVENT,function(){const selectFirst=navbar._selectFirstNextStateUpdate;that.loading=!0,that.navbar.loadingVdom=!0,state.$promise.then(function(){that.loading=!1,navbar.update().then(function(){navbarFavorites.regenerate().then(function(){that.navbar.loadingVdom=!1,selectFirst?navbar.getFirstValidEntry().then(function(entry){const uri=structure.ngURI(entry.uri);$location.path()===uri?$route.reload():$location.url(uri)}):navbar.selectActiveEntry()})})})})}}),Navbar.prototype.createOmniselectValidVdom=inject.mark(function(lang){return function(name){var isGlobal=""===name;return{name:isGlobal?lang("global"):name,q_origin_key:name,datasource:"system.vdom","css-class":isGlobal?"fa-globe":fFormatters.vdom_icon_class(name)}}}),Navbar.prototype.entryClicked=inject.mark(function(navbar){return function(entry){entry&&navbar.entryClicked(entry)}}),Navbar.prototype.exitFullscreenMode=inject.mark(structure=>(function(){structure.isFullscreen=!1,structure.showNavigation=!0})),module.directive("fNavbar",function(){return{restrict:"A",controllerAs:"navbarCtrl",templateUrl:__webpack_require__(488),controller:Navbar}}),module.directive("fNavbarMenu",function(){return{restrict:"E",scope:{menu:"=",level:"="},templateUrl:__webpack_require__(489),bindToController:!0,controllerAs:"navbarMenuCtrl",controller:function(navbar){this.navbar=navbar,this.NAVBAR_MENU_ITEMS_TEMPLATE=NAVBAR_MENU_ITEMS_TEMPLATE,this.popUpMenuToggle=function(event,popUpMenu){return event.stopPropagation(),popUpMenu.togglePopupAtElement(angular.element(event.currentTarget))}}}}),module.directive("fNavbarMenuItem",function(){var navbarController;return{scope:{entry:"=fNavbarMenuItem"},templateUrl:__webpack_require__(490),bindToController:!0,controllerAs:"menuItemCtrl",require:"^fNavbar",controller:function($scope,$element,$attrs,$timeout,navbar,navbarFavorites,notification,state){var that=this;this.navbar=navbar,this.favorites=navbarFavorites,this.reorderableFavorite=null!=$attrs.reorderableFavorite,this.favoriteOnly=null!=$attrs.favoriteOnly,this.disableFavorite=state.admin.fmg_admin,$scope.$watch(function(){return{isFavorite:navbarFavorites.isFavorite(that.entry.name),favoritesUpdating:navbarFavorites.updating,indexedResult:that.entry.name===(navbar.indexedSearchResult&&navbar.indexedSearchResult.name),currentlyReordering:navbar.currentlyReordering}},function(result){var menuItemIcon,favoriteIcon,indexedResult=!1,currentlyReordering=!1;result.indexedResult?(indexedResult=!0,menuItemIcon="fa-arrow-right icon-sm"):(that.reorderableFavorite||that.entry.reorderableItem)&&result.currentlyReordering?(currentlyReordering=!0,menuItemIcon="fa-loading"):menuItemIcon=that.entry.icon,that.menuItemIcon=menuItemIcon,that.isIndexedResult=indexedResult,that.currentlyReordering=currentlyReordering,that.acknowledged=!result.acknowledged||result.acknowledged.includes(that.entry.name),that.showNewIcon=that.entry.new&&!that.menuItemIcon&&!that.acknowledged&&!that.reorderable,favoriteIcon=result.isFavorite?result.favoritesUpdating?"fa-loading always-visible":"fa-favorite clickable":"fa-star-o clickable",that.favoriteIcon=favoriteIcon,that.isFavorite=result.isFavorite},!0),this.toggleFavorite=function(event){event.stopPropagation(),navbarFavorites.toggleFavorite(that.entry)},this.popUpMenuToggle=function(event,popUpMenu){return event.stopPropagation(),popUpMenu.togglePopupAtElement(angular.element(event.currentTarget))},$element.on("click",function(event){event.preventDefault(),$scope.$apply(function(){navbarController.entryClicked(that.entry)})})},link:function(scope,element,attrs,controller){element.addClass("menu-item"),scope.navbarCtrl=navbarController=controller}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1112:function(module,exports){var path="/migadmin/ng/structure/partials/navbar_menu_items.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<li ng-repeat="entry in navbarMenuCtrl.menu.items"\nng-class="::{\'has-children\': !entry.uri}"\nclass="level-{{::navbarMenuCtrl.level}}">\n    <div f-navbar-menu-item="::entry"></div>\n    <div class="submenu" ng-if="::!entry.uri">\n        <div class="submenu-label" ng-hide="::!entry.showLabel">\n            <f-icon class="menu-item-icon"></f-icon>\n            <span>{{::entry.label}}</span>\n        </div>\n        <f-navbar-menu menu="::entry"\n            level="::navbarMenuCtrl.level + 1">\n        </f-navbar-menu>\n    </div>\n</li>\n')}]),module.exports=path},1113:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module){function AdminTimeout($window,$rootScope,$injector){this._$window=$window,this._$rootScope=$rootScope,this._$injector=$injector,this.count=0,this._promptVisible=!1}AdminTimeout.prototype.resetBrowserCountdown=function(){if(this.started){if(this._browserStartSession=Date.now(),!this._$injector.has("$http"))return;var _$http=this._$injector.get("$http"),timeoutPeriodMilliSeconds=1e3*this._timeoutPeriodSeconds,timeoutThreshold=Math.floor(.2*timeoutPeriodMilliSeconds);Math.abs(this._browserStartSession-this._serverStartSession)>timeoutThreshold&&_$http.get("/api/v2/monitor/web-ui/extend-session").then(function(){this.resetServerTimeout()}.bind(this)),this._$window.clearInterval(this._intervalId),this._intervalId=this._$window.setInterval(this._browserCountdown.bind(this),1e3)}},AdminTimeout.prototype.resetServerTimeout=function(){this.started&&(this._serverStartSession=Date.now())},AdminTimeout.prototype._browserCountdown=function(){var diff=Math.round((Date.now()-this._browserStartSession)/1e3);this.sessionTimeLeft=this._timeoutPeriodSeconds-diff,this.sessionTimeLeft<=0?this._destroySession():this.sessionTimeLeft<=10&&!this._promptVisible&&this._promptTimeoutExtension()},AdminTimeout.prototype._promptTimeoutExtension=function(){if(this._$injector.has("slide")){var _slide=this._$injector.get("slide"),_scope=this._$rootScope.$new();_scope.expiresOn=Date.now()+1e3*this.sessionTimeLeft,_scope.destroySession=this._destroySession.bind(this);var slideParams={template:'<f-admin-timeout-prompt expires-on="::expiresOn" destroy-session="::destroySession"></f-admin-timeout-prompt>',data:{},parentScope:_scope,options:{title:this._lang("Session Timeout"),closeOnEscape:!0,fullHeight:!0}};this._promptVisible=!0,_slide.open("admin-timeout-prompt",slideParams).finally(function(){this._promptVisible=!1,_scope.$destroy(),this._extendTimeout()}.bind(this))}},AdminTimeout.prototype._extendTimeout=function(){this.resetServerTimeout(),this.resetBrowserCountdown()},AdminTimeout.prototype._destroySession=function(){this._$window.clearInterval(this._intervalId),this._$window.onbeforeunload=null,this._redirFn()},AdminTimeout.prototype.start=function(redirFn,timeoutPeriodSeconds){if(this.started)throw new Error("Admin timeout has already been initialized");this._redirFn=redirFn,this._timeoutPeriodSeconds=timeoutPeriodSeconds,this._intervalId=null,["$http","slide","lang","loader"].forEach(function(serviceName){this["_"+serviceName]=this._$injector.get(serviceName)}.bind(this)),this._stopLocationListener=this._$rootScope.$on("$locationChangeSuccess",this.resetServerTimeout.bind(this)),this.started=!0,this._extendTimeout()},AdminTimeout.prototype.stop=function(){this.started&&(this._stopLocationListener(),this._$window.clearInterval(this._intervalId),this.started=!1)},module.service("adminTimeout",AdminTimeout)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1114:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,notify,ftnt_shared){function Connection(injector){injector.injectMarked(this),this._disabled=!1,ftnt_shared.browser.isFortiExploreriOS()&&(this._disabled=!0),this._reset()}Connection.prototype._reset=inject.mark(function($interval){return function(){this.verifyingDisconnected=!1,this.disconnected=!1,this.disconnectedDuration=0,this._disconnectedStart=0,this._lastReconnectAttempt=0,this._reconnectRequestInProgress=!1,$interval.cancel(this._intervalPromise),this._intervalPromise=null}}),Connection.prototype._now=function(){return(new Date).getTime()},Connection.prototype._attemptReconnect=inject.mark(function($injector,$window){return function(){var $http=$injector.get("$http"),lang=$injector.get("lang"),state=$injector.get("state");this._reconnectRequestInProgress=!0,$http.get("/ng",{timeout:5e3}).then(function(){if(this.disconnected){var message=lang("connection_lost_warning",[state.model_name]).toString();this._reset(),notify.post(message,notify.LEVEL.WARNING,null,{clickToDismiss:!1,beforeDisplay:function($elem){$elem.find(".refresh-link").on("click",function(){$window.location.reload()})}})}}.bind(this),function(){this._lastReconnectAttempt=this._now(),this._reconnectRequestInProgress=!1}.bind(this))}}),Connection.prototype._countUp=inject.mark(function($interval){return function(){var eachSecond=function(){var now=this._now(),timeSinceLastReconnectAttempt=now-this._lastReconnectAttempt;this.disconnected&&(this.disconnectedDuration=now-this._disconnectedStart,!this._reconnectRequestInProgress&&timeSinceLastReconnectAttempt>3e3&&this._attemptReconnect())}.bind(this);this._intervalPromise=$interval(eachSecond,1e3)}}),Connection.prototype._verify=inject.mark(function($injector){return function(){var $http=$injector.get("$http");this.verifyingDisconnected=!0,$http.get("/ng",{timeout:5e3}).then(function(){this.verifyingDisconnected=!1}.bind(this),function(){if(this.verifyingDisconnected){var now=this._now();this.disconnected=!0,this._disconnectedStart=now,this._lastReconnectAttempt=now,this._countUp()}}.bind(this))}}),Connection.prototype.setDisconnected=function(){window!==top||this._disabled||this.verifyingDisconnected||this.disconnected||this._verify()},Connection.prototype.disableVerification=function(){this._disabled=!0,this._reset()},module.service("connection",Connection)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1115:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt,fLog){ftnt.factory("$exceptionHandler",function(){return function(error){fLog.error(error)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1116:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(27),__webpack_require__(52),__webpack_require__(49)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,BUILD,notify,fUri,fPersist){function FirmwareUpgrade(injector){injector.injectMarked(this),this.cancel()}FirmwareUpgrade.prototype.STEPS={CONFIRM:"confirm",BACKUP_CONFIG:"backupConfig",RUN_UPGRADE:"runUpgrade",CONFIRM_INVALID_SIGNATURE:"confirmInvalidSignature",RUN_UPGRADE_INVALID_SIGNATURE:"runUpgradeInvalidSignature"},FirmwareUpgrade.prototype.startUpgrade=function(image,backupConfig,redirectImage){var steps=[this.STEPS.CONFIRM];this.image=image,this.redirectImage=redirectImage,this.downgrade=this.image.olderThanCurrent,backupConfig&&steps.push(this.STEPS.BACKUP_CONFIG),steps.push(this.STEPS.RUN_UPGRADE),this.steps=steps,this.running=!0,this.nextStep()},FirmwareUpgrade.prototype.cancel=function(){this.running=!1,this.steps=null,this.currentStep=null,this.uploadPercentage=0,this.uploadComplete=!1,this.image=null,this.redirectImage=null},FirmwareUpgrade.prototype._delayedPromise=inject.mark(function($q,$timeout){return function(delay){var deferred=$q.defer();return $timeout(function(){deferred.resolve()},delay),deferred.promise}}),FirmwareUpgrade.prototype._backupConfig=inject.mark(function($q){return function(){$q.all([fUri.downloadFile("/api/v2/monitor/system/config/backup?scope=global"),this._delayedPromise(3e3)]).then(function(){this.nextStep()}.bind(this))}}),FirmwareUpgrade.prototype._sendRequest=inject.mark(function($q,$rootScope){return function(progressCallback,ignoreInvalidSignature){var deferred=$q.defer(),formData=new FormData,xhr=new XMLHttpRequest,uri="/api/v2/monitor/system/firmware/upgrade",onError=function(error){$rootScope.$apply(function(){deferred.reject(error)})};return xhr.addEventListener("load",function(){var response;xhr.readyState===XMLHttpRequest.DONE&&200===xhr.status?"success"===(response=JSON.parse(xhr.response)).results.status?$rootScope.$apply(function(){deferred.resolve()}):onError(response.results.error):onError()}),xhr.addEventListener("error",function(){onError()}),xhr.upload.addEventListener("load",function(){$rootScope.$apply(function(){progressCallback(100)})}),xhr.upload.addEventListener("progress",function(event){event.lengthComputable&&$rootScope.$apply(function(){progressCallback(event.loaded/event.total*100)})}),ignoreInvalidSignature&&(uri+="?ignore_invalid_signature=true"),xhr.open("POST",uri),xhr.setRequestHeader("X-CSRFTOKEN",fPersist.getCsrfToken()),formData.append("source",this.image.source),"upload"===this.image.source?formData.append("upload_file",this.image.localFile):formData.append("filename",this.image.id),xhr.send(formData),deferred.promise}}),FirmwareUpgrade.prototype._needConfirmInvalidSignature=function(error){return error&&error.code===BUILD.SYMBOLS.CFG_ER_FIRMWARE_NOT_SIGNED_NOT_CONFIRM},FirmwareUpgrade.prototype._confirmInvalidSignature=function(){this.currentStep=this.STEPS.CONFIRM_INVALID_SIGNATURE,this.uploadPercentage=0,this.uploadComplete=!1,this.steps.push(this.STEPS.RUN_UPGRADE_INVALID_SIGNATURE)},FirmwareUpgrade.prototype._runUpgrade=inject.mark(function($http,$location,lang){return function(ignoreInvalidSignature){var onError=function(error){var message=this.downgrade?"Image downgrade failed":"Image upgrade failed",details=error&&(lang(error.message).toString()||lang(error.code).toString())||"";notify.post(lang(message).toString()+". "+details,notify.LEVEL.ERROR),this.cancel()}.bind(this),onProgress=function(percent){this.uploadPercentage=percent,100===percent&&(this.uploadComplete=!0)}.bind(this);"upload"!==this.image.source&&(this.uploadComplete=!0),this._sendRequest(onProgress,ignoreInvalidSignature).then(function(){var search={viewOnly:!0};this.redirectImage&&(search.redir="/ng/system/firmware?id="+this.redirectImage.id),$location.path("/prompt/reboot").search(search),this.cancel()}.bind(this),function(error){this._needConfirmInvalidSignature(error)?this._confirmInvalidSignature():onError(error)}.bind(this))}}),FirmwareUpgrade.prototype.nextStep=function(){switch(this.currentStep=this.steps[0],this.steps=this.steps.slice(1),this.currentStep){case this.STEPS.BACKUP_CONFIG:this._backupConfig();break;case this.STEPS.RUN_UPGRADE:this._runUpgrade();break;case this.STEPS.RUN_UPGRADE_INVALID_SIGNATURE:this._runUpgrade(!0)}},ngModule.service("firmwareUpgrade",FirmwareUpgrade)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1117:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(10),__webpack_require__(0),__webpack_require__(30),__webpack_require__(32),__webpack_require__(52)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,$,BUILD,fLog,fFormatters,fUri){const DEFAULT_HELP_KEY="default";function Help($rootScope,$http,$location,loader,state,structure){this.$rootScope=$rootScope,this.$http=$http,this.$location=$location,this.loader=loader,this.state=state,this.structure=structure,this.helpKey=DEFAULT_HELP_KEY,this.videos=[],this.gutterTopics=[],this.$promise=this._loadTopics(),this._startSync()}Help.prototype.frozenCopy=function(){return Object.freeze(Object.assign({},Help.prototype,this))},Help.prototype.getTrackingInfo=function(){var config=BUILD.CONFIG,version=[config.CONFIG_MAJOR_NUM,config.CONFIG_MINOR_NUM,config.CONFIG_PATCH_NUM].join(".");return{fgt_model:BUILD.PLATFORM.ABBREV,fgt_version:version,fgt_build:config.CONFIG_BUILD_NUMBER,fgt_page:this.helpKey}},Help.prototype._createHelpLinksMapping=function(){const topics=this.topics;return topics?Object.keys(topics).reduce((newMap,topicKey)=>{const links=topics[topicKey].help_links;if(links){const HELP_LINKS_SECTION_KEY_IDS=["sectionKey","subsectionKey","linkKey"],HELP_LINKS_VALUE_KEY_IDS=["subsections","links","url"],createSectionMap=(sections,depth=0)=>sections.reduce((map,_section)=>{const keyValue=_section[HELP_LINKS_SECTION_KEY_IDS[depth]],value=_section[HELP_LINKS_VALUE_KEY_IDS[depth]];return keyValue&&value&&(map[keyValue]&&fLog.warn(`Overwriting help topic mapping for ${keyValue}`),map[keyValue]="string"==typeof value?value:createSectionMap(value,depth+1)),map},{});newMap[topicKey]=createSectionMap(links.en)}return newMap},{}):(fLog.error("Help topics are not available"),{})},Help.prototype.getHelpUrl=function(fullUri){var config=BUILD.CONFIG,version=[config.CONFIG_MAJOR_NUM,config.CONFIG_MINOR_NUM,config.CONFIG_PATCH_NUM];return this.hrefs&&this.hrefs.help?fFormatters.string_interpolate(this.hrefs.help,version)+(fullUri?this.helpKey:""):""},Help.prototype.getHelpUrlByKeys=function(keys){try{if("object"!=typeof keys||null===keys)throw"Parameters are invalid. Must pass an object";if(!Object.values(keys).every(_val=>"string"==typeof _val))throw"Parameters are invalid. All the keys should be strings";const topic=this.helpLinksMapping[keys.topicID];if(!topic)throw`Topic ${keys.topicID} is not defined`;const section=topic[keys.sectionKey];if(!section)throw`sectionKey: ${keys.sectionKey} is not defined`;const subsection=section[keys.subsectionKey];if(!subsection)throw`subsectionKey: ${keys.subsectionKey} is not defined`;const url=subsection[keys.linkKey];if(!url||"string"!=typeof url)throw`linkKey: ${keys.linkKey} or url is not defined`;return url}catch(err){return void fLog.error(err)}},Help.prototype.getVideoUrlByKey=function(topicID,key){return this.$promise.then(function(){var url;return this._getVideos(topicID).some(function(video){if(video.key&&video.key===key)return url=this.hrefs.video+video.id+"?"+fUri.formatParams(this.getTrackingInfo()),!0}.bind(this)),url}.bind(this))},Help.prototype.getUrlForVideo=function(video){var uri;return this.hrefs?(uri=null==video?this.hrefs.no_video:this.hrefs.video+video.id,uri+="?"+$.param(this.getTrackingInfo())):""},Help.prototype._currentViewUrl=function(){var path=this.structure.getAbsolutePath(),search=angular.extend({},this.$location.search());return delete search.vdom,path+(Object.keys(search).length?"?"+$.param(search):"")},Help.prototype._getSpecialTopicKey=function(){var currentVdom=this.state.current_vdom,vdomInfo=this.state.admin.vdom_info;return currentVdom&&vdomInfo[currentVdom].transparent_mode?"op_mode_transparent":null},Help.prototype._getVideos=function(topicID){var get=function(key,cycle){var topic=this.topics[key],videos=topic&&topic.videos;if(null!=videos)return"string"==typeof videos?0===cycle?void fLog.error('Unable to find videos for "'+topicID+'". Cycle detected after 50 references followed'):get(videos,cycle-1):videos[this.state.language_code]||videos.en||[];fLog.warn('Unable to find videos for "'+topicID+'". Last topic: "'+key+'", references followed: '+(50-cycle)+".")}.bind(this),videos=[],topic=this.topics[topicID];return topic&&topic.videos&&(videos=get(topicID,50)),videos},Help.prototype._getHelpLinks=function(topicID){const language=this.state.language_code,helpLinks=this.topics&&this.topics[topicID]&&this.topics[topicID].help_links;return helpLinks&&"string"==typeof helpLinks?this._getHelpLinks(helpLinks):helpLinks&&helpLinks[language]||[]},Help.prototype._update=function(){var viewUrl=this._currentViewUrl(),specialTopicKey=this._getSpecialTopicKey();this.$promise.then(function(){var longestMatchKey=DEFAULT_HELP_KEY,longestVideosMatchKey="default",longestMatch=0;Object.keys(this.topics).forEach(function(key){var topic=this.topics[key],specialTopics=topic.special_topics,matchLength=topic.max_match_length(viewUrl);matchLength>longestMatch&&(longestMatch=matchLength,longestMatchKey=specialTopics&&specialTopics&&specialTopics[specialTopicKey]||key,topic.videos&&(longestVideosMatchKey=key))}.bind(this)),this.helpKey=longestMatchKey,this.videos=this._getVideos(longestVideosMatchKey),this.helpLinks=this._getHelpLinks(longestMatchKey),this.headerHelpLinks=this.helpLinks.reduce((links,sections)=>[...links,...[].concat.apply([],(sections.subsections||[]).map(subsection=>subsection.links.filter(link=>link.displayInHeader)))],[])}.bind(this))},Help.prototype._startSync=function(){"/"!==this.$location.path()&&this._update(),this.$rootScope.$on("$locationChangeSuccess",function(){this._update()}.bind(this))},Help.prototype._loadTopics=function(){var comparePathLength=function(p1,p2){return p2.length-p1.length},maxMatchLength=function(path){for(var i=0,result="";!result&&i<this.paths.length;)this.path_expressions[i].test(path)&&(result=this.paths[i]),i++;return result.length};return this.$http.get("/api/v2/static/help_topics.json").then(results=>{const data=results.data,topics=data.topics||{},hrefs=data.hrefs||{};return Object.keys(topics).forEach(function(key){const topic=topics[key];topic.paths.sort(comparePathLength),topic.path_expressions=topic.paths.map(fUri.makeExpression),topic.max_match_length=maxMatchLength}),this.hrefs=hrefs,this.topics=topics,this.helpLinksMapping=this._createHelpLinksMapping(),this})},module.service("help",Help)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1118:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(30),__webpack_require__(52),__webpack_require__(171),__webpack_require__(8),__webpack_require__(27),__webpack_require__(1119)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,fLog,fUri,fBrowser,ftnt_shared,notify,platformStructure){function Navbar($rootScope,$q,injector,state){injector.injectMarked(this),this._$q=$q,this._initialDeferred=$q.defer(),this._selectFirstNextStateUpdate=!1,this.promise=this._initialDeferred.promise,this.loadingVdom=!1,$rootScope.$on(state.UPDATE_EVENT,function(){this._dashboardsPromise=null}.bind(this))}Object.defineProperty(Navbar.prototype,"loadingVdom",{get:function(){return this._loadingVdom},set:function(loading){if(this._loadingVdom=loading,loading){const existingDeferred=this._vdomLoadingCompleteDeferred;this._vdomLoadingCompleteDeferred=this._$q.defer(),this.vdomLoadingComplete=this._vdomLoadingCompleteDeferred.promise,existingDeferred&&this.vdomLoadingComplete.then(()=>existingDeferred.resolve())}else this._vdomLoadingCompleteDeferred?(this._vdomLoadingCompleteDeferred.resolve(),this._vdomLoadingCompleteDeferred=null):this.vdomLoadingComplete=this._$q.resolve()}}),Navbar.prototype.registeredActions=inject.mark(function(dashboardConfig,dashboardCommon,$http,lang,slide,state){const deleteDashboard=(entry,isStandalone)=>{const msg=isStandalone?"Are you sure you want to delete this monitor?":"delete_dashboard_warning";slide.confirm(lang(msg).toString()).then(()=>{const uri=`${dashboardCommon.DASHBOARD_CMDB_URI}${entry.id}`;$http.delete(uri).then(()=>{this.selectFirstEntryNextStateUpdate(),state.refresh()})})};return{addDashboard:{func:()=>dashboardConfig.editDashboard()},editDashboard:{func:entry=>dashboardConfig.editDashboard(entry.id,entry.label)},deleteDashboard:{func:entry=>deleteDashboard(entry),enable:entry=>!entry.permanent},deleteStandaloneDashboard:{func:entry=>deleteDashboard(entry,!0)},resetDashboard:{func:async()=>{try{await slide.open("dashboardSetup",{template:"<f-dashboard-setup></f-dashboard-setup>",options:{title:lang("Dashboard Setup"),fullHeight:!0}}),this.selectFirstEntryNextStateUpdate(),state.refresh()}catch(e){}}},addStandaloneDashboard:{func:()=>dashboardConfig.addStandaloneDashboard()},editStandaloneDashboard:{func:entry=>dashboardConfig.editDashboard(entry.id,entry.label,null,null,!0)}}}),Navbar.prototype.update=inject.mark(function($q,navSuppression,navSuppressionDeps){return async function(searchValue){searchValue=searchValue?searchValue.toLowerCase():null,await $q.all([navSuppression.getSuppressed(),navSuppressionDeps.update()]),await this._buildTree(searchValue).then(()=>{this._clearSearchIndexing(),this._searchValue=searchValue,this._initialDeferred.resolve()}),this._selectFirstNextStateUpdate=!1}}),Navbar.prototype.getFirstValidEntry=inject.mark(function($q,navbarFavorites){return function(){return this.promise.then(function(){return navbarFavorites.regenerateIfNecessary().then(function(){var first;return this.leafNodes.length?first=navbarFavorites.list.length?navbarFavorites.list[0]:this.leafNodes[0]:fLog.warn("Navbar has no valid entries"),first||$q.reject()}.bind(this))}.bind(this))}}),Navbar.prototype.selectActiveEntry=inject.mark(function($q,$location,structure,navbarFavorites){return function(){var bestMatchEntry,bestMatchLength=0,currentPath=structure.getAbsolutePath(),currentSearch=$location.search(),currentURI=$location.url(),locationMatchesCurrent=function(path,search){return fUri.makeExpression(path).test(currentPath)&&function(search){return!search||Object.keys(search).every(function(key){return search[key]===currentSearch[key]})}(search)},updateBestMatch=function(entry){var length=entry.uri.length;locationMatchesCurrent(entry.path,entry.search)&&length>bestMatchLength&&(bestMatchEntry=entry,bestMatchLength=length),entry.related&&entry.related.forEach(function(path){length=path.length,locationMatchesCurrent(path)&&length>bestMatchLength&&(bestMatchEntry=entry,bestMatchLength=length)})};return this.promise.then(function(){return this.leafNodes.forEach(updateBestMatch),navbarFavorites.regenerateIfNecessary().then(function(){if(!bestMatchEntry)return this.activeEntry=void 0,this.active=void 0,fLog('Could not match location in navbar "'+currentURI+'"'),$q.reject();this.activeEntry=bestMatchEntry,this.active=bestMatchEntry.name,this.expanded!==bestMatchEntry.outermostParent&&navbarFavorites.isFavorite(bestMatchEntry.name)?this.expanded=this.FAVORITE_MENU_NAME:this.expanded=bestMatchEntry.outermostParent}.bind(this))}.bind(this))}}),Navbar.prototype.selectFirstEntryNextStateUpdate=function(){this._selectFirstNextStateUpdate=!0},Navbar.prototype.isExpanded=function(name){return this.expanded===name||this._searchValue},Navbar.prototype.hasDraggable=function(items){return items&&items.some(item=>item.reorderableItem)},Navbar.prototype.isSelected=function(entry){return entry.uri&&entry.name===this.active},Navbar.prototype.clearOtherParams=inject.mark(function($routeParams,$location){return()=>{const allowedParams=new Set(["vdom"]);let newParams={};for(const[param,value]of Object.entries($routeParams))allowedParams.has(param)&&(newParams[param]=value);$location.search(newParams)}}),Navbar.prototype.entryClicked=inject.mark(function($route,$routeSegment,$rootScope,$location,$timeout,structure){return function(entry){var toExpand;if(entry&&entry.uri){const doLocationChange=()=>{this.isSelected(entry)&&entry.path===structure.getAbsolutePath()?$route.current.$$route.segment?$routeSegment.chain[$routeSegment.chain.length-1].reload():(this.clearOtherParams(),$route.reload()):$location.url(structure.ngURI(entry.uri))};structure.isFullscreen||ftnt_shared.browser.responsive.isSmall()?(structure.showNavigation=!1,$timeout(doLocationChange,500)):doLocationChange(),this._clearSearchIndexing()}else(toExpand=entry?entry.name:this.FAVORITE_MENU_NAME)===this.expanded?this.expanded=void 0:this.expanded=toExpand}}),Navbar.prototype.isPathAvailable=function(path){return this.promise.then(function(){return this.leafNodes.some(function(entry){return entry.uri===path||(entry.related||[]).some(function(relatedPath){return relatedPath===path})})}.bind(this))},Navbar.prototype.getEntriesMarkedAsNew=function(){return this.promise.then(function(){return this.possibleLeafNodes.filter(function(entry){return entry.new})}.bind(this))},Navbar.prototype.getNavEntries=function(){return this.promise.then(function(){return this.possibleLeafNodes}.bind(this))},Navbar.prototype.indexSearchResults=function(){this._searchIndex=0,this.indexedSearchResult=this.leafNodes.length?this.leafNodes[0]:null},Navbar.prototype.previousSearchResult=function(){var length=this.leafNodes.length;length&&(this._searchIndex--,this._searchIndex<0&&(this._searchIndex=length-1),this.indexedSearchResult=this.leafNodes[this._searchIndex])},Navbar.prototype.nextSearchResult=function(){var length=this.leafNodes.length;length&&(this._searchIndex++,this._searchIndex>length-1&&(this._searchIndex=0),this.indexedSearchResult=this.leafNodes[this._searchIndex])},Navbar.prototype.FAVORITE_MENU_NAME="favorites",Navbar.prototype.PATH_INTERPOLATOR=inject.mark(function(state){return{profileDefaultName:function(){return state.vdom_mode?"g-default":"default"}}}),Navbar.prototype.act=function(event,actionName,entry){event.stopPropagation();const action=this.registeredActions[actionName];if(!action||!action.func)throw new Error(`${actionName} is not implemented`);action.func(entry)},Navbar.prototype.enableAction=function(actionName,entry){const action=this.registeredActions[actionName];return action&&!action.enable||action.enable(entry)},Navbar.prototype._clearSearchIndexing=function(){this._searchIndex=null,this.indexedSearchResult=null},Navbar.prototype._moveDashboard=inject.mark(function($http,dashboardCommon){return function(dashboard,beforeDashboard){return $http.put(`${dashboardCommon.DASHBOARD_CMDB_URI}${dashboard.id}`,null,{params:{action:"move",before:beforeDashboard.id}})}}),Navbar.prototype._isFilteredOut=function(entry,label,searchValue){var filteredOut=!1;return label&&searchValue&&entry.uri&&(filteredOut=label.toLowerCase().indexOf(searchValue)<0),filteredOut},Navbar.prototype._getDashboards=inject.mark(($http,dashboardCommon)=>(function(params={}){return this._dashboardsPromise&&!params.clearCache||(this._dashboardsPromise=$http.get(dashboardCommon.DASHBOARD_CMDB_URI).then(response=>response.data.results)),this._dashboardsPromise})),Navbar.prototype._generateDashboardItems=inject.mark(function(dashboardConfig){return async function(entry,isStandalone){const createItem=function(id,label,uri,suppressed,temporary,permanent,itemActions=[]){return{name:entry.name+"_"+id,id:id,label:label,path:uri,uri:uri,suppressed:suppressed,temporary:temporary,permanent:permanent,itemActions:itemActions}},isSuppressed=function(dashboard){return"enable"!==dashboard.permanent&&"fixed"===dashboard["layout-type"]&&fBrowser.responsive.isSmall()||!dashboardConfig.isSameVDOM(dashboard.vdom)};let dashboards=await this._getDashboards();const suppressedCount=dashboards.filter(isSuppressed).length;dashboards.length&&dashboards.length!==suppressedCount?dashboards.some(dashboard=>dashboardConfig.isSameVDOM(dashboard.vdom)&&"enable"===dashboard.permanent)||(await dashboardConfig.createDefaultDashboard(dashboardConfig.DASHBOARDS.MAIN),dashboards=await this._getDashboards({clearCache:!0})):(await dashboardConfig.createAllDefaultDashboards(),dashboards=await this._getDashboards({clearCache:!0}));const items=[];for(const dashboard of dashboards)isStandalone===("standalone"===dashboard["layout-type"])&&items.push(createItem(dashboard.id,dashboard.name,"/ng/system/dashboard/"+dashboard.id,isSuppressed(dashboard),!1,"enable"===dashboard.permanent,entry.dynamicItemActions));return items}}),Navbar.prototype._generateDynamicItems=function(entry){var items;if("dashboard"===entry.name)items=this._generateDashboardItems(entry,!1);else{if("dashboard_standalone"!==entry.name)throw new Error('Dynamic menu items unsupported for "'+entry.name+'"');items=this._generateDashboardItems(entry,!0)}return items},Navbar.prototype._reorderDashboards=inject.mark(function(){return function(entry,originalItems,relativeTo,relativeFrom){var toDashboard=originalItems[relativeTo],fromDashboard=originalItems[relativeFrom];return this._moveDashboard(fromDashboard,toDashboard)}}),Navbar.prototype._reorderMenuItems=inject.mark(function($http,$q){return function(entry,originalItems,to,from){return entry.reorderable?this._reorderDashboards(entry,originalItems,to,from):(fLog.error('Reordering menu items unsupported for "'+entry.name+'"'),$q.reject())}}),Navbar.prototype._createSortableOptions=inject.mark(function($timeout,lang){return function(node,isReorderable){var from,originalItems=isReorderable?node.items.slice():null;return{disabled:!isReorderable,start:function(evt,ui){from=ui.item.index()},update:function(event,ui){this.currentlyReordering?ui.items.sortable.cancel():$timeout(function(){var to=ui.item.index();this.currentlyReordering=!0,this._reorderMenuItems(node,originalItems,to,from).catch(function(){var msg=lang("Failed to save changes").toString();notify.post(msg,notify.LEVEL.ERROR)}).finally(function(){originalItems=node.items.slice(),this.currentlyReordering=!1}.bind(this))}.bind(this))}.bind(this)}}}),Navbar.prototype._buildTree=inject.mark(function($interpolate,navSuppression,$sce,lang){return async function(searchValue){var leafNodes=[],possibleLeafNodes=[],leafNodeMapping={},possibleLeafNodeMapping={},build=async function(entry,parentMenu,outermostParentMenu){var label,favoriteLabel,result,node,childResult,i,items,leafNode=!(!entry.name||!entry.uri),hasIncludedLeafNode=!1;entry.dynamicItem?label=entry.label:(label=entry.name?lang(entry.lang||entry.name).toString():null,favoriteLabel=entry.favoriteLang?lang(entry.favoriteLang):null);var suppressed,htmlLabel=label;try{suppressed=entry.dynamicItem?entry.suppressed:navSuppression.isSuppressed(entry.name,entry.deps),ftnt_shared.util.objectIsThenable(suppressed)&&(suppressed=await suppressed)}catch(e){return fLog.error(e),Promise.reject()}var filteredOut=this._isFilteredOut(entry,label,searchValue),shouldInclude=!suppressed&&!filteredOut,reorderable=entry.dynamicItems&&entry.reorderableItems;if(outermostParentMenu=outermostParentMenu||entry.name,entry.dynamicItems&&(entry.items=await this._generateDynamicItems(entry),entry.items&&entry.items.forEach(function(item){item.dynamicItem=!0,item.reorderableItem=reorderable})),items=[],entry.items&&!suppressed)for(i=0;i<entry.items.length;i++)(childResult=await build(entry.items[i],entry.name,outermostParentMenu))&&(items.push(childResult),hasIncludedLeafNode=!0);if(searchValue&&shouldInclude&&leafNode&&(htmlLabel=ftnt_shared.highlighter.highlightMatchesInHTML(label,searchValue,!0),htmlLabel=$sce.trustAsHtml(htmlLabel)),node={name:entry.name,favoriteLabel:favoriteLabel,id:entry.id,related:entry.related,icon:entry.icon,label:label,htmlLabel:htmlLabel,path:entry.path,params:entry.params,uri:entry.uri,parent:parentMenu,outermostParent:outermostParentMenu,items:items,suppressed:suppressed,filteredOut:filteredOut,showLabel:entry.showLabel,reorderableItem:entry.reorderableItem,temporary:entry.temporary,new:!!entry.new,newFeatureMapTo:entry.newFeatureMapTo,reorderable:reorderable,itemActions:entry.itemActions||[],sectionAction:entry.sectionAction,permanent:!1!==entry.permanent},entry.pathInterpolation){var context={};Object.keys(entry.pathInterpolation).forEach(function(key){var pathKey=entry.pathInterpolation[key];context[key]=this.PATH_INTERPOLATOR[pathKey](node)}.bind(this)),node.path=$interpolate(node.path)(context),node.uri=$interpolate(node.uri)(context)}return node.sortableOptions=this._createSortableOptions(node,reorderable),leafNode&&(possibleLeafNodes.push(node),possibleLeafNodeMapping[node.name]=node),shouldInclude&&(leafNode||hasIncludedLeafNode)&&(result=node,leafNode&&(leafNodes.push(node),leafNodeMapping[node.name]=node)),result}.bind(this);this.tree=await build(platformStructure),this.leafNodes=leafNodes,this.leafNodeMapping=leafNodeMapping,this.possibleLeafNodes=possibleLeafNodes,this.possibleLeafNodeMapping=possibleLeafNodeMapping}}),module.service("navbar",Navbar)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1120:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(30),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,inject,fLog,notify){var URI="/api/v2/monitor/system/navigation-favorites",LOG_SUBMENU_NAMES=["log_access_traffic","log_access_event","log_access_utm"];function NavbarFavorites(injector){injector.injectMarked(this),this._cache={},this.list=[],this.map={},this.updating=!1,this._updateID=0}NavbarFavorites.prototype._getCurrentKey=inject.mark(function(state){return function(){return""===state.current_vdom?"global":"vdom"}}),NavbarFavorites.prototype._getForCurrent=inject.mark(function($q,$http){return function(){var key=this._getCurrentKey(),deferred=$q.defer(),resolveFromCache=function(){deferred.resolve(this._cache[key])}.bind(this);return this._cache[key]?resolveFromCache():$http.get(URI,{params:{type:key}}).then(function(response){this._cache[key]=response.data.results,resolveFromCache()}.bind(this)),deferred.promise}}),NavbarFavorites.prototype._updateForCurrent=inject.mark(function($injector,$http,$q){return function(){var navbar=$injector.get("navbar"),key=this._getCurrentKey();return $http.post(URI+"/update",{type:key,favorites:this._cache[key].filter(function(name){var node=navbar.possibleLeafNodeMapping[name];return node||fLog.warn('Not persisting invalid favorite menu entry "'+name+'"'),node})}).then(function(response){if(!response.data.results.success)return $q.reject()})}}),NavbarFavorites.prototype.regenerate=inject.mark(function($injector,lang){return function(){var navbar=$injector.get("navbar");return this.promise=this._getForCurrent().then(function(results){var list=[],map={};results.forEach(function(name){var entry=angular.copy(navbar.leafNodeMapping[name]);entry&&!entry.suppressed?(!function(entry){var label=entry.favoriteLabel||entry.label;"fortiview"===entry.outermostParent?label=lang("FortiView {0}",[entry.label]).toString():"dashboard"===entry.outermostParent?label=lang("{0} Dashboard",[entry.label]).toString():LOG_SUBMENU_NAMES.indexOf(entry.parent)>=0&&(label=lang("{0} Log",[entry.label]).toString()),entry.label=entry.htmlLabel=label}(entry),list.push(entry),map[entry.name]=entry):fLog.info('Ignoring hidden/invalid favorite menu entry " '+name+'"')}),list.updateID=++this._updateID,this.list=list,this.map=map}.bind(this))}}),NavbarFavorites.prototype.regenerateIfNecessary=function(navbarSuppressed){return this.promise?this.promise:this.regenerate(navbarSuppressed)},NavbarFavorites.prototype.isFavorite=function(name){return!!this.map[name]},NavbarFavorites.prototype.addFavorite=inject.mark(function($q){return function(name){var key;return this.updating?$q.resolve():(key=this._getCurrentKey(),this._cache[key].push(name),this.updating=!0,this._updateForCurrent().then(function(){return this.regenerate()}.bind(this)).finally(function(){this.updating=!1}.bind(this)))}}),NavbarFavorites.prototype.removeFavorite=inject.mark(function($q){return function(name){var key,cache;return this.updating?$q.resolve():(key=this._getCurrentKey(),(cache=this._cache[key]).splice(cache.indexOf(name),1),this.updating=!0,this._updateForCurrent().then(function(){return this.regenerate()}.bind(this)).finally(function(){this.updating=!1}.bind(this)))}}),NavbarFavorites.prototype.toggleFavorite=inject.mark(function($injector,lang){return function(menu){var name=menu.name;return(this.isFavorite(name)?this.removeFavorite(name):this.addFavorite(name)).catch(function(){notify.post(lang("Failed to update favorites").toString(),"error")})}}),NavbarFavorites.prototype.updateFromList=inject.mark(function(lang){return function(){var key=this._getCurrentKey(),visible=this.list.map(function(menu){return menu.name}),hidden=this._cache[key].filter(function(name){return!this.map[name]}.bind(this));return this._cache[key]=visible.concat(hidden),this.updating=!0,this._updateForCurrent().then(function(){this.updating=!1}.bind(this),function(){this.updating=!1,notify.post(lang("Failed to update favorites").toString(),"error")}.bind(this))}}),module.service("navbarFavorites",NavbarFavorites)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1121:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,inject,BUILD,ftnt_shared){const SUPPRESSED_URI="/api/v2/monitor/web-ui/suppressed-menus",DEPENDENCIES_URI="/api/v2/monitor/web-ui/navbar-dependencies",SUPPRESSED_CACHE="navbarSuppressedMenus2",SUPPRESSED_DEPEDENCIES_CACHE="navSuppressionDependencies",SYMBOLS=BUILD.SYMBOLS,PLATFORM=BUILD.PLATFORM;module.service("navSuppression",class extends inject.Collectable{constructor(){super(),this.init()}init($INJECTABLE$,$cacheFactory,$rootScope,state){return()=>{this._suppressedCache=$cacheFactory(SUPPRESSED_CACHE),$rootScope.$on(state.UPDATE_EVENT,()=>{this._suppressedCache.removeAll()})}}SUPPRESSED_CHECK($INJECTABLE$,state,navSuppressionDeps,fortiviewConfig){return{csf_enabled:function(){return state.csf_enabled},csf_is_root_fortigate:function(){return state.isRootFortiGate()},central_nat_enabled:function(){return state.centralNatEnabled({skipNgfwCheck:!0})},operation_mode:function(){return state.getOperationMode()},has_virtual_wire_pair:function(){var vdom=state.getOperatingVDOM();return state.admin.vdom_info[vdom].virtual_wire_pair_count>0},has_vpn_reporting:function(){return state.featureEnabled("gui-vpn")&&(state.getOperationMode()===state.OPERATION_MODE.NAT||state.featureEnabled("gui-policy-based-ipsec"))},wireless_mode_wtp:function(){return navSuppressionDeps.wifi&&navSuppressionDeps.wifi.wireless_mode===SYMBOLS.WIRELESS_MODE_WTP},is_client_wireless_mode:function(){return!PLATFORM.HAVE_CAPWAP_WTP||navSuppressionDeps.wifi&&navSuppressionDeps.wifi.wireless_mode===SYMBOLS.WIRELESS_MODE_CLIENT},is_local_radio_vdom_current:function(){return!state.vdom_mode||navSuppressionDeps.wifi&&navSuppressionDeps.wifi.local_radio_vdom===state.current_vdom},full_capwap_wtp_support:function(){return PLATFORM.HAVE_CAPWAP_AC&&navSuppressionDeps.wifi&&navSuppressionDeps.wifi.full_capwap_wtp_support},has_pki_users:function(){return navSuppressionDeps.has_pki_users},vdom_only:function(){return state.isVdomModeDisabled()||""!==state.current_vdom},vdom_disabled_or_root_vdom:function(){return state.isVdomModeDisabled()||state.current_vdom===BUILD.SYMBOLS.ROOT_VF_NAME},vdom_disabled:function(){return state.isVdomModeDisabled()},ngfw_policy_mode:function(){return state.isNgfwPolicyMode()},ngfw_policy_mode_or_central_nat_enabled:function(){return state.centralNatEnabled()},fortianalyzer_enabled:function(){return state.getLogDeviceDefault()===state.LOG_DEVICES.FORTIANALYZER},forticloud_enabled:function(){return state.getLogDeviceDefault()===state.LOG_DEVICES.FORTICLOUD},carrier_mode:function(){return state.carrier_mode},fmg_admin:function(){return state.admin.fmg_admin},in_split_task_management_vdom:function(){return state.inSplitTaskManagementVdom()},in_split_task_vdom_mode:function(){return state.inSplitTaskVdomMode()},in_multi_vdom_mode:function(){return state.inMultiVdomMode()},historical_disk_fortiview:()=>state.isHistoricalDiskFortiViewSupported()&&state.isLogDeviceEnabled(state.LOG_DEVICES.DISK),fortiview_threats:async()=>{const[enabled]=await fortiviewConfig.isFortiviewSupported("threats");return enabled},fortiview_ioc:async()=>{const[enabled]=await fortiviewConfig.isFortiviewSupported("compromisedHosts",{skipLicenseCheck:!0});return enabled},global_vdom:()=>state.isGlobalVDOM()}}getSuppressed($INJECTABLE$,$http,state){return async()=>{const params={};state.current_vdom?params.vdom=state.current_vdom:params.global_vdom=!0;const results=(await $http.get(SUPPRESSED_URI,{params:params,cache:this._suppressedCache})).data.results;this._suppressed=angular.extend(results.perm,results.runtime)}}_featuresEnabled($INJECTABLE$,state){return features=>Object.keys(features).every(feature=>state.featureEnabled(feature)===features[feature])}isSuppressed(id,dependencies){const doesRuntimeCheckFail=runtime=>{const promises=[];let doesFail=!1;for(const[key,value]of Object.entries(runtime)){if("features"===key)doesFail=!this._featuresEnabled(value);else{const checkFunction=this.SUPPRESSED_CHECK[key];if(!checkFunction)throw new Error('No runtime dependency check function exists for "'+key+'"');const checkValue=checkFunction();ftnt_shared.util.objectIsThenable(checkValue)?promises.push(checkValue.then(resolvedValue=>resolvedValue!==value)):doesFail=checkValue!==value}if(doesFail)break}return!doesFail&&promises.length&&(doesFail=Promise.all(promises).then(values=>values.some(fail=>fail))),doesFail};let suppressed=id&&this._suppressed[id];if(!suppressed&&dependencies)if(dependencies.runtime)suppressed=doesRuntimeCheckFail(dependencies.runtime);else if(dependencies.runtimeOneOf){let promises=[];for(const runtime of dependencies.runtimeOneOf){const doesFail=doesRuntimeCheckFail(runtime);if(ftnt_shared.util.objectIsThenable(doesFail))promises.push(doesFail);else{if(!doesFail){suppressed=!1,promises=null;break}doesFail&&(suppressed=!0)}}promises&&promises.length&&(suppressed=Promise.all(promises).then(values=>values.every(doesFail=>doesFail)))}return suppressed}}),module.service("navSuppressionDeps",class extends inject.Collectable{constructor($cacheFactory,$rootScope,state){super(),this._dependenciesCache=$cacheFactory(SUPPRESSED_DEPEDENCIES_CACHE),$rootScope.$on(state.UPDATE_EVENT,()=>{this._dependenciesCache.removeAll()})}update($INJECTABLE$,$http){return async()=>{const response=await $http.get(DEPENDENCIES_URI,{cache:this._dependenciesCache});angular.extend(this,response.data.results||{})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1122:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(8),__webpack_require__(46),__webpack_require__(30),__webpack_require__(42),__webpack_require__(471),__webpack_require__(177),__webpack_require__(475)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ngModule,ftnt_shared,fwebStructure,fwebLog,fwebLocation){ngModule.provider("structure",function(){this.EMBEDDED_URI_ROUTE=fwebStructure.EMBEDDED_URI_ROUTE,this.ENTER_VDOM_EVENT="enterVDOM",this.ngURI=function(uri){return fwebStructure.ngURI(uri)},this.isEmbeddedURI=function(uri){return 0===uri.indexOf(fwebStructure.EMBEDDED_URI_ROUTE)},this.navigationDisabled=!1,this.isViewOnly=!1,this.showNavigation=!ftnt_shared.browser.responsive.isSmall(),this.isFullscreen=!1,this.toggleNavigationMenu=function(){this.showNavigation=!this.showNavigation}.bind(this),this.isHASynchronized=!0,this.$get=function($location,$rootScope,$injector,$window,$cookies,$q,state,loader,slide,headStylesheets){this.navigationDisabled=0===Object.keys(state.admin.profile).length,this.hideBuildLabel=!1,this.notifyMessagesQueuedForIframe=!1;let initialized=!1,viewOnlyAlways=!1;const checkIfViewOnly=()=>{let result;if(viewOnlyAlways)result=!0;else{const viewOnly=$location.search().viewOnly;viewOnlyAlways="always"===viewOnly,result=null!=viewOnly}return result},initialize=()=>{if(initialized)return;const notificationRequests=$injector.get("notificationRequests"),adminTimeout=$injector.get("adminTimeout"),notification=$injector.get("notification"),usbDisk=$injector.get("usbDisk"),userData=$injector.get("userData"),fortigateDebugger=$injector.get("fortigateDebugger");$rootScope.$watchGroup([()=>this.isFullscreen,()=>this.showNavigation],()=>{$window.requestAnimationFrame(function(){angular.element($window).resize()})}),state.timeout_minutes&&adminTimeout.start(function(){fwebLocation.logout({redirect:!0,messageLangKey:"session_expired",timeout:!0})},60*state.timeout_minutes);notificationRequests.watch({scope:$rootScope,requestType:"haSyncStatus",callback:synchronized=>{this.isHASynchronized=synchronized}}),state.admin.guest_admin||(state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_CFG)&&usbDisk.start(),notification.start()),userData.start(),fortigateDebugger.register(),initialized=!0};return this.initialize=function(){this.isViewOnly=checkIfViewOnly(),this.isViewOnly||initialize(),$rootScope.$on("$locationChangeStart",()=>{this.isViewOnly=checkIfViewOnly(),this.isViewOnly||initialized||initialize()})},this.getAbsolutePath=function(){var path=$location.path();return path=0===path.indexOf(fwebStructure.EMBEDDED_URI_ROUTE)?path.replace(fwebStructure.EMBEDDED_URI_ROUTE,""):"/ng"+path},this.setVDOMCookie=function(vdom){$cookies.put(state.vdom_cookie_name,vdom,{path:"/"})},this.getVDOMCookieValue=function(){return $cookies.get(state.vdom_cookie_name)},this.openRouteAsSlide=function(uri){const route=$injector.get("fosRoute").getRouteForURI(uri);if(!route)return fwebLog.error(`Failed to retrieve route config for "${uri}"`),$q.reject();const div=document.createElement("div");let loadPromise=Promise.resolve();div.innerHTML=route.route.template;const templateElement=div.firstChild;templateElement.setAttribute("route-params","::routeParams");const scope=$rootScope.$new();if(scope.routeParams=route.routeParams,route.route.loader_resolve&&(loadPromise=new Promise(resolve=>{$injector.invoke(route.route.resolve.requiredDependencies).then(resolve)})),route.route.css)for(const link of route.route.css){let url=link;"/"!==link.charAt(0)&&(url=`/ng${loader.getPathForRoute(route.route)}/${link}`),headStylesheets.add(url,scope)}return $q.resolve(slide.open(uri,{template:templateElement.outerHTML,parentScope:scope,options:{loadPromise:loadPromise,fullHeight:!0}})).finally(()=>scope.$destroy())},this.ngRouteURI=function(path,search){if(void 0===search){var searchMatch=/^([^?]+)\?(.*)/.exec(path);searchMatch&&searchMatch[2]&&(path=searchMatch[1],search=searchMatch[2].split("&").map(function(kv){return kv=/^([^=]+)=?(.*)?/.exec(kv),{key:decodeURIComponent(kv[1]),value:kv[2]&&decodeURIComponent(kv[2])}}).reduce(function(obj,kv){return obj[kv.key]=kv.value,obj},{}))}return!state.vdom_mode||search&&"vdom"in search||((search=search||{}).vdom=state.current_vdom),(path+((search=search&&Object.keys(search).reduce(function(params,k){return params.push(encodeURIComponent(k)+(void 0!==search[k]?"="+encodeURIComponent(search[k]):"")),params},[]).join("&"))?"?"+search:"")).replace(/^(?:\/ng)?\/?\/?/,"/ng/")},this.dialogSaveSuccessRedirect=function(redir){return"/success"===redir?$window.location.href=redir:$location.url(fwebStructure.ngURI(redir))},this}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1123:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(170),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,fweb_shortcuts,ftnt_shared){const Sliderin=ftnt_shared.Sliderin;function Shortcuts($rootScope){this._subscribed={},this.showHelp=!1,this.subscribe(this.SHORTCUTS.CLEAR,function(){this.showHelp?this.showHelp=!1:Sliderin.closeLast()}.bind(this),"shortcut::clear",!0),$rootScope.$on("$locationChangeSuccess",function(){Object.keys(this._subscribed).forEach(function(shortcut){this._subscribed[shortcut].global||delete this._subscribed[shortcut]}.bind(this))}.bind(this))}Shortcuts.prototype.SHORTCUTS=fweb_shortcuts.SHORTCUTS,Shortcuts.prototype.subscribe=function(shortcut,callback,help,global){this._subscribed[shortcut]={callback:callback,help:help,global:global}},Shortcuts.prototype.trigger=function(shortcut){var config=this._subscribed[shortcut];config&&config.callback()},module.service("shortcuts",Shortcuts)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1124:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(0),__webpack_require__(30),__webpack_require__(26),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,BUILD,fLog,inject,Notify){var USBDISK_URI="/api/v2/monitor/system/usb-log",INTERVAL_NORMAL=5e3,INTERVAL_COPYING=1e3;function USBDisk(injector){injector.injectMarked(this),this.data={},this.isDiskModel=BUILD.PLATFORM.CONFIG_RESERVE_LOG_DISK,this.copyInProgress=!1,this.copyDestination=null,this._pendingUpdate=!1,this.copyDoneNotified=!1}USBDisk.prototype.start=inject.mark(function($http,$timeout){return function(){var that=this;this.stopped=!1;var pollFn=function(){BUILD.PLATFORM.HAVE_USB?$http.get(USBDISK_URI).then(function(obj){that._pendingUpdate||(angular.extend(that.data,obj.data.results),that.data.usb_attached||(that.copyInProgress=!1),that.data.is_copying||that.copyInProgress&&(that.copyDoneNotified=!0,$timeout(function(){that.copyDoneNotified=!1},5e3),that.copyInProgress=!1,that.data.progress=0))}).finally(function(){var interval=that.copyInProgress?INTERVAL_COPYING:INTERVAL_NORMAL;that.stopped||(that.timeoutPromise=$timeout(pollFn,interval))}):fLog.warn("USB is not supported.")};pollFn()}}),USBDisk.prototype.stop=inject.mark(function($timeout){return function(){$timeout.cancel(this.timeoutPromise),this.stopped=!0}}),USBDisk.prototype.isVisible=function(){return BUILD.PLATFORM.HAVE_USB&&this.data.usb_attached},USBDisk.prototype.copyEnabled=inject.mark(function(state,$rootScope){return function(){return!$rootScope.ADMIN_RO&&!this.data.is_copying&&this.data.log_size>0&&this.data.avail_space>=this.data.log_size&&""!==state.current_vdom&&state.isHistoricalFortiViewSupported()&&this.isDiskModel}}),USBDisk.prototype.stopEnabled=inject.mark(function($rootScope){return function(){return!$rootScope.ADMIN_RO&&this.data.is_copying&&this.data.same_vdom}}),USBDisk.prototype.isInsufficientSpace=function(){return this.data.avail_space<this.data.log_size},USBDisk.prototype.startCopy=inject.mark(function($http){return function(){BUILD.PLATFORM.HAVE_USB?(this._pendingUpdate=!0,$http.post(USBDISK_URI+"/start").then(function(response){this.data.is_copying=!0,this.data.progress=0,this.copyDestination=response.data.results.backup_to,this.copyInProgress=!0}.bind(this),function(){fLog.info("Failed to start log backup")}).finally(function(){this._pendingUpdate=!1}.bind(this))):fLog.warn("USB is not supported.")}}),USBDisk.prototype.stopCopy=inject.mark(function($http){return function(){BUILD.PLATFORM.HAVE_USB?(this._pendingUpdate=!0,$http.post(USBDISK_URI+"/stop").then(function(response){0===response.data.results.ret&&(this.copyInProgress=!1,this.data.is_copying=!1)}.bind(this),function(){fLog.info("Failed to stop log backup")}).finally(function(){this._pendingUpdate=!1}.bind(this))):fLog.warn("USB is not supported.")}}),USBDisk.prototype.eject=inject.mark(function($http,lang){return function(){BUILD.PLATFORM.HAVE_USB?$http.post("/api/v2/monitor/system/usb-device/eject").then(function(response){0===response.data.results.ret?Notify.post(lang("Successfully ejected USB device"),Notify.LEVEL.SUCCESS):Notify.post(lang("Error ejecting USB device"),Notify.LEVEL.ERROR)}):fLog.warn("USB is not supported.")}}),module.service("usbDisk",USBDisk)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1125:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,ftnt_shared){const MAX_ITEMS=20,shiftPush=function(array,element,maxLength){array.length>=maxLength&&array.shift(),array.push(element)};module.service("userData",class{constructor(lang,state,$location,$rootScope,$http,$q){this.lang=lang,this.state=state,this.$location=$location,this.$rootScope=$rootScope,this.$http=$http,this.$q=$q,this.init()}init(){this.recentURLS=[],this.recentErrors=[]}start(){this.monitorURLChanges(),this.monitorConsoleErrors()}monitorConsoleErrors(){ftnt_shared.log.addCallback(message=>{if(message.level===ftnt_shared.log.LOG_LEVEL.ERROR){const newError={timestamp:Date.now(),message:message.getMessage(),stack:message.getShortStack()};shiftPush(this.recentErrors,newError,MAX_ITEMS)}})}monitorURLChanges(){const addNewPage=()=>{const lastPage=this.recentURLS[this.recentURLS.length-1],newURL=this.$location.url(),newPage={timestamp:Date.now(),url:newURL};lastPage&&lastPage.url===newURL||shiftPush(this.recentURLS,newPage,MAX_ITEMS)};this.$rootScope.$on("$locationChangeSuccess",()=>{addNewPage()}),this.$rootScope.$on("$routeChangeSuccess",()=>{addNewPage()})}getUserData(){return{recent_errors:this.recentErrors,recent_urls:this.recentURLS}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1126:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject){const API_URL="/api/v2/cmdb",RENAME_URL="/api/v2/monitor/system/csf/send-sync-command";module.service("csfObjectSync",class extends inject.Collectable{constructor(){super(),this.SYNC_STEPS={FORTIGATE_PREVIEW:1,TABLE_PREVIEW:2,MANUAL:3,DONE:4},this.SYNC_STATUS={NEEDS_MANUAL_SYNC:"needs_manual_sync",UNSYNCED:"unsynced",SYNCING:"syncing",ANALYZING:"analyzing",UPDATING:"updating",SYNCED:"synced"},this.CONFLICT_STATUS={NAME_CONFLICT:"name conflict",RESOLVED:"resolved"},this.RESOLUTION_TYPE={AUTOMATIC:"automatic",MANUAL:"manual"}}sendSyncCommand($INJECTABLE$,$http){return(csfPath,table,commands)=>{const cmdbParts=table.split(".");let cmdbPath,cmdbTable="";return 3===cmdbParts.length?(cmdbPath=`${cmdbParts[0]}.${cmdbParts[1]}`,cmdbTable=cmdbParts[2]):(cmdbPath=cmdbParts[0],cmdbTable=cmdbParts[1]),$http.post(RENAME_URL,{csf_path:csfPath,cmdb_path:cmdbPath,cmdb_name:cmdbTable,commands:commands})}}getUri(table,mkey){const cmdbParts=table.split(".");let uri="";return uri=3===cmdbParts.length?`${API_URL}/${cmdbParts[0]}.${cmdbParts[1]}/${cmdbParts[2]}`:`${API_URL}/${cmdbParts[0]}/${cmdbParts[1]}`,mkey&&(uri+=`/${mkey}`),uri+="?format=name|global-object&with_contents_hash=1&with_meta=1"}objectContentsIdentical(o1,o2){return o1.q_contents_checksum===o2.q_contents_checksum}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1127:function(module,exports,__webpack_require__){"use strict";module.exports=[__webpack_require__(486),__webpack_require__(490),__webpack_require__(489),__webpack_require__(487),__webpack_require__(488),__webpack_require__(485),__webpack_require__(484),__webpack_require__(480),__webpack_require__(483),__webpack_require__(481),__webpack_require__(482)]},1128:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module){module.controller("PromptIndex",function(prompt){prompt.next()})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1129:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject){function SystemReboot(injector,lang){injector.injectMarked(this),this.title=lang("System rebooting").toString(),this.message=lang("Please wait while the system reboots.").toString(),this.loading=!0,this.reboot()}SystemReboot.prototype={reboot:inject.mark(function($window,$location,adminTimeout,notification,rebootService,usbDisk,fortigateDebugger){return function(){rebootService.monitor(function(){usbDisk.stop(),adminTimeout.stop(),notification.stop(),fortigateDebugger.deregister()},"/ng").then(function(){var redir=$location.search().redir,uri="/login";redir&&(uri+="?redir="+encodeURIComponent(redir)),$window.location.href=uri},function(error){var message;"timeout-down"===error?message="reboot_system_down_too_long":"timeout-up"===error&&(message="reboot_system_up_too_long"),this.errorMessage=message}.bind(this))}})},module.component("systemReboot",{controller:SystemReboot,templateUrl:__webpack_require__(229)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},113:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(26),__webpack_require__(30),__webpack_require__(36),__webpack_require__(92),__webpack_require__(52),__webpack_require__(93),__webpack_require__(134),__webpack_require__(431),__webpack_require__(67),__webpack_require__(84),__webpack_require__(179),__webpack_require__(181),__webpack_require__(94),__webpack_require__(812)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,inject,fwebLog,fwebUtilSelect,firewallInterfaces,fwebUtilUri,fwebUtilQuarantine,FortiGateModels,FortiGateUrls,fosCommonSymbols,BaseCsfObject,FortiSwitch,FortiAP,FabricDevice,Appliance){const Omniselect=ftnt_shared.Omniselect,{CsfFortiGate:CsfFortiGate,CsfGlobalFortiGate:CsfGlobalFortiGate,CsfSlaveFortiGate:CsfSlaveFortiGate,CsfUpstreamFortiGate:CsfUpstreamFortiGate,HA:HA}=FortiGateModels,{FWEB_BUILD_URI:FWEB_BUILD_URI,CMDB_CSF_URI:CMDB_CSF_URI,CMDB_USER_QUARANTINE_URI:CMDB_USER_QUARANTINE_URI,CMDB_LOG_THREATWEIGHT_URI:CMDB_LOG_THREATWEIGHT_URI,FORTISWITCH_REVISION_URI:FORTISWITCH_REVISION_URI,FORTIAP_REVISION_URI:FORTIAP_REVISION_URI,AWS_INSPECTOR_URI:AWS_INSPECTOR_URI,AWS_EC2_URI:AWS_EC2_URI,BANNED_USERS_URI:BANNED_USERS_URI,FORTISWITCHES_URI:FORTISWITCHES_URI,FORTIAPS_URI:FORTIAPS_URI,FSW_DETECTED_DEVICE_URI:FSW_DETECTED_DEVICE_URI,HA_URI:HA_URI,OBJECT_URLS_URI:OBJECT_URLS_URI,RESOURCE_USAGE_URI:RESOURCE_USAGE_URI,STATE_URI:STATE_URI}=FortiGateUrls,{DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=fosCommonSymbols,{GuiCsfMixin:GuiCsfMixin,VdomRevision:VdomRevision}=BaseCsfObject,extendableCsfFortiGate=GuiCsfMixin(CsfFortiGate),extendableCsfSlaveFortiGate=GuiCsfMixin(CsfSlaveFortiGate),notEmptyIp=function(ip){return ip&&"0.0.0.0"!==ip?ip:""};class GuiCsfFortiGate extends extendableCsfFortiGate{constructor(csfEntry,proxyRootSerial,State){super(csfEntry,proxyRootSerial),this.proxyRootVdom=null,this.fortiswitches=[],this.fortiswitchMapping={},this.fortiswitchRevision=null,this.fortiaps=[],this.fortiapMapping={},this.fortiapRevision=null,this.fabricDevices=[],this.fabricDeviceMapping={},this.appliances=[],this.appliancesMapping={},this.parentDownstreamInterface=null,this.viaRouterNat=!1,this.viaVPN=!1,this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null,this.state=new State({}),Object.defineProperty(this,"isFirmwareCompatible",{get:()=>this._isFirmwareCompatible(),configurable:!1})}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData,$injector){const instance=$injector.instantiate(this,{csfEntry:instanceJSONData.csfEntry,proxyRootSerial:instanceJSONData.proxyRootSerial});return instanceJSONData.state=Object.assign(instance.state,instanceJSONData.state),Object.assign(instance,instanceJSONData),instance}get sourceID(){return"csfFortiGates"}get vdom(){return this.state?this.state.current_vdom:void 0}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfFortiGate,"getIconClass")}getVersionLabel($INJECTABLE$,$filter,lang,csfTopology){const buildNumberFilter=$filter("buildNumber");return()=>{let label="";const thisFgt=csfTopology.thisFortigate,hasWarning=!this.isFirmwareCompatible;if(label=hasWarning?`${label}<f-icon class="fa-warning incompatible">\n                    </f-icon>${lang("Incompatible version:")} `:label,this.firmware){const firmware=this.firmware,{major:major,minor:minor,patch:patch,build:build}=firmware;label=`${label}${formatVersion(`v${[major,minor,patch].join(".")}`,build)}`}else label=this.version&&this.build?`${label}${formatVersion(this.version,this.build)}`:`${label}${lang("unknown")}`;return hasWarning&&thisFgt&&null!=thisFgt.version&&null!=thisFgt.build&&(label=`${label} (${lang("Upstream")}: ${formatVersion(thisFgt.version,thisFgt.build)})`),label};function formatVersion(version,build){return`${version} build${buildNumberFilter(build)}`}}unconfiguredSamlSp($INJECTABLE$,csfTopology){return()=>csfTopology.isRootFortigate&&this!==csfTopology.thisFortigate&&"identity-provider"===csfTopology.thisFortigate.csfEntry.saml_role&&"disable"===this.csfEntry.saml_role&&!notEmptyIp(this.managementIP)}createCSFURI(uri,vdom,interceptor){var result=uri;return this.isCurrent||(result=`/csf/${(interceptor?":snPath":this.path)+uri}`),vdom&&(result=fwebUtilUri.setQueryValue(result,"vdom",vdom)),result}getManagementIPLabel($INJECTABLE$,lang){const translate=function(key){return lang(key).toString()};return()=>{let str=this.getManagementIP();const mgmtIpWithoutFallback=notEmptyIp(this.managementIP);return str&&!mgmtIpWithoutFallback&&(str=`<span class="tooltip-hint" f-tip-target><f-icon class="fa-warning">\n                        </f-icon><span>${str}</span><span f-tip>\n                        ${translate("Management IP/FQDN is not configured. WAN IP is shown as fallback.")}</span></span>`),this.viaVPN?str+=(str?"<br>":"")+translate("This FortiGate connects to upstream FortiGate via a VPN"):this.viaRouterNat&&(str+=(str?"<br>":"")+translate("This FortiGate is behind Router/NAT device")),str}}_isFirmwareCompatible($INJECTABLE$,csfTopology,state){return()=>{const rootFortigate=csfTopology.thisFortigate;return!!rootFortigate&&(this===rootFortigate||!rootFortigate.firmware||(!!state.featureEnabled("gui-allow-incompatible-fabric-fgt")||!!this.firmware&&(this.firmware.major===rootFortigate.firmware.major&&this.firmware.minor===rootFortigate.firmware.minor&&this.firmware.patch===rootFortigate.firmware.patch)))}}canAuthorize(){return!1}canDeauthorize($INJECTABLE$,csfTopology,state){return()=>csfTopology.isRootFortigate&&!this.isCurrent&&state.adminHasWritePermissionForTable("system","csf")&&this.isPreAuthorized}canDenyAuthorization(){return!1}getCustomizeSlideId(){return`customizeFortigateSlide-${this.id}`}isCustomizeSlideOpened($INJECTABLE$,csfTopology,slide){return()=>{let existingSlide;try{existingSlide=slide.get(this.getCustomizeSlideId())}catch(e){}return!!existingSlide}}csfObjectSyncEnabled($INJECTABLE$,csfTopology){return()=>this.isRoot?Boolean(this.csfEntry.object_unification):Boolean(this.csfEntry.object_unification)&&csfTopology.csfObjectSyncEnabled}areFirewallObjectsReadOnly(){return this.csfObjectSyncEnabled()&&!this.isRoot}areFirewallObjectsOutOfSync(){return!this.isRoot&&this.csfObjectSyncEnabled()&&Object.values(this.csfEntry.global_tables).some(e=>!e)}toggleAuthorization($INJECTABLE$,$http,csfTopology){return toggle=>{const uri=`${CMDB_CSF_URI}/trusted-list/${this.serial}`;let promise;this.hasPendingStatusUpdate=!0;const toggleAction=toggle?"accept":"deauthorize";if(toggle){var authEntry={action:"accept"};promise=$http.put(uri,authEntry).then(()=>{this.action=authEntry.action,Omniselect.notifySourceChanged("csfPreauthorizedDevices")})}else promise=$http.delete(uri).then(()=>{this.action="",Omniselect.notifySourceChanged("csfFortiGates"),Omniselect.notifySourceChanged("csfFortiNACs")});return promise.then(()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle(toggleAction,!0),csfTopology.invalidateLastBuildIfNecessary()},()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle(toggleAction,!1)})}}denyAuthorization($INJECTABLE$,$http,csfTopology){return()=>{const authEntry={action:"deny"},uri=`${CMDB_CSF_URI}/trusted-list/${this.serial}`;return this.hasPendingStatusUpdate=!0,$http.put(uri,authEntry).then(function(){this.action=authEntry.action,this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!0),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!1)}.bind(this))}}canOpenCustomizeSlide($INJECTABLE$,csfTopology,state){return()=>csfTopology.isRootFortigate&&this.isFirmwareCompatible&&state.adminHasWritePermissionForTable("system","global")}openCustomizeSlide($INJECTABLE$,slide,$rootScope,lang){return()=>{const childScope=Object.assign($rootScope.$new(),{fortigate:this});slide.open(this.getCustomizeSlideId(),{template:'<f-customize-fortigate fortigate="fortigate">\n                        \'</f-customize-fortigate>',parentScope:childScope,options:{fullHeight:!0,title:lang("Configure").toString()}}).finally(function(){childScope.$destroy()})}}requiresAuthorizationDecision(){return!1}canConnectToGui(){return!this.isCurrent&&!!this.getManagementURL()}connectToGui($INJECTABLE$,$window){return()=>{if(!this.isCurrent){var url=this.getManagementURL();url&&$window.open(url,"_blank")}}}getCurrentResourceUsage($INJECTABLE$,$http,$q){return()=>{if(!this.isFirmwareCompatible)return $q.resolve();const params={};return this.state.vdom_mode&&this.state.current_vdom!==this.state.GLOBAL_VDOM||(params.scope="global"),$http.get(this.createCSFURI(RESOURCE_USAGE_URI),{params:params}).then(response=>(this._updateResourceUsage(response.data),this.resourceUsage))}}getOmniselectProxySourceID(sourceID){return Array.isArray(sourceID)?sourceID.map(source=>fwebUtilSelect.getCSFProxySourceID(source,this.path)):fwebUtilSelect.getCSFProxySourceID(sourceID,this.path)}sendArrayRequest($INJECTABLE$,$http,state){return url=>{const isGlobalVdom=this.vdom===state.GLOBAL_VDOM;return $http.get(url,{params:{vdom:isGlobalVdom?"*":void 0}}).then(resp=>isGlobalVdom?Array.isArray(resp.data)?resp.data.reduce((aggregated,currentData)=>Array.isArray(currentData.results)?aggregated.concat(currentData.results):aggregated,[]):[]:Array.isArray(resp.data.results)?resp.data.results:[])}}_sendRevisionRequest($INJECTABLE$,$http,state){return url=>{const isGlobalVdom=this.vdom===state.GLOBAL_VDOM;return $http.get(url,{params:{vdom:isGlobalVdom?"*":void 0}}).then(function(resp){return isGlobalVdom?Array.isArray(resp.data)?resp.data.reduce((aggregated,currentData)=>currentData.revision?aggregated+currentData.revision:aggregated,""):"":resp.data.revision})}}getDependencies(){return this._populateState().then(()=>Promise.all([this._populateInterfaces(),this._populateCsfSettings()]))}_populateState($INJECTABLE$,$http,$q,state,State){return()=>this.isCurrent?(this.state=state,this._updateStateInformation(),$q.resolve()):$q.all([$http.get(this.createCSFURI(STATE_URI)),$http.get(this.createCSFURI(FWEB_BUILD_URI)),$http.get(this.createCSFURI(OBJECT_URLS_URI))]).then(([stateResponse,fwebBuildResponse,objectUrlsResponse])=>{this.state=new State(stateResponse.data,this.proxyRootSerial,{fwebBuildResponse:fwebBuildResponse.data,objectUrlsResponse:objectUrlsResponse.data,fortigate:this}),this.isCurrent||(this.state.current_vdom=stateResponse.initial_vdom),this._updateStateInformation()})}_populateInterfaces($INJECTABLE$,state){return()=>{const isGlobalVdom=!this.isCurrent||this.vdom===state.GLOBAL_VDOM;return firewallInterfaces.get(isGlobalVdom,this.path).then(response=>{this._updateInterfaces({list:response,map:response.mapping})})}}clearCsfSettingsCache(){this._csfSettingsPromise=null}_populateCsfSettings($INJECTABLE$,$http,$q,state){return()=>state.adminHasReadPermissionForTable("system","csf")?(this._csfSettingsPromise||(this._csfSettingsPromise=$http.get(this.createCSFURI(CMDB_CSF_URI)).then(response=>(this._updateCsfSettings(response.data.results),response.data.results))),this._csfSettingsPromise):$q.resolve({})}populateConnectedExtensionDevices(){return this._populateFabricDevices()}populateConnectedAccessDevices($INJECTABLE$,$q){return()=>{const promises=[this._populateFortiSwitches(),this._populateHA(),this._populateFortiAps()];return $q.all(promises).then(()=>this.fortiswitches.length?this._populateFortilinkDetectedDevices():$q.resolve())}}_populateFortiSwitches($INJECTABLE$,$q,$injector){return()=>{const fswRevision=new VdomRevision(this.csfEntry.fsw_version,this.vdom);if(fswRevision.equals(this.fortiswitchRevision))return $q.resolve(this.fortiswitches);fwebLog.info(`FortiSwitch revision update for ${this.serial}.`);const fswEntries=this.csfEntry.fsw_list||[];return this.fortiswitches=fswEntries.map(entry=>$injector.instantiate(FortiSwitch,{csfEntry:entry,parentFortigateId:this.serial})),this.fortiswitchMapping=this.fortiswitches.reduce((prev,fsw)=>(prev[fsw.serial]=fsw,prev),{}),this.fortiswitchRevision=fswRevision,Omniselect.notifySourceChanged("csfFortiSwitches"),$q.resolve(this.fortiswitches)}}populateAppliances($INJECTABLE$,$q,$injector){return()=>{var existingMapping=this.appliancesMapping||{};return this.appliances=[],this.appliancesMapping={},(this.csfEntry.appliance_info||[]).map(entry=>{var serial=entry.serial,appliance=existingMapping[serial];appliance?appliance.updateCsfEntry(entry):appliance=$injector.instantiate(Appliance,{csfEntry:entry,parentFortigateId:this.serial,path:this.path}),this.appliances.push(appliance),this.appliancesMapping[serial]=appliance}),$q.resolve(this.appliances)}}_populateFortiAps($INJECTABLE$,$q,$injector){return()=>{const fortiapRevision=new VdomRevision(this.csfEntry.fap_version,this.vdom);if(fortiapRevision.equals(this.fortiapRevision))return $q.resolve(this.fortiaps);fwebLog.info(`FortiAP revision update for ${this.serial}.`);const fapEntries=(this.csfEntry.fap_list||[]).filter(entry=>"local"!==entry.mesh_uplink);return this.fortiaps=fapEntries.map(entry=>$injector.instantiate(FortiAP,{csfEntry:entry,parentFortigateId:this.serial})),this.fortiapRevision=fortiapRevision,this.fortiapMapping=this.fortiaps.reduce((prev,fap)=>(prev[fap.serial]=fap,prev),{}),this.fortiaps.sort(function(a,b){return(a.meshHopCount||0)-(b.meshHopCount||0)}),Omniselect.notifySourceChanged("csfFortiAPs"),$q.resolve(this.fortiaps)}}_populateHA($INJECTABLE$,$http,$q){return()=>{const symbols=this.state.getBuildInformation().SYMBOLS;return this.state.hasOwnProperty("ha_mode")&&[symbols.HA_AA,symbols.HA_AP].indexOf(this.state.ha_mode)>-1&&(this.ha=(this.csfEntry.ha_list||[]).filter(entry=>this.serial!==entry.serial_no).map(entry=>new HA(entry,this.serial))),$q.resolve(this.ha)}}_populateFabricDevices($INJECTABLE$,$q,$injector){return()=>{let fabricDeviceList=this.csfEntry.fabric_devices;fabricDeviceList||(fabricDeviceList=((this.csfEntry.fgt_device_lists||[]).find(list=>list.fgt_sn===this.serial)||{}).devices);const existingMapping=this.fabricDeviceMapping;return this.fabricDevices=[],this.fabricDeviceMapping={},(fabricDeviceList||[]).forEach(csfEntry=>{const deviceName=csfEntry.device_name||csfEntry.name;let device=existingMapping[deviceName];device?device.updateCsfEntry(csfEntry):device=$injector.instantiate(FabricDevice,{csfEntry:csfEntry,parentFortigateId:this.serial,path:this.path}),device.getStatus(),this.fabricDevices.push(device),this.fabricDeviceMapping[deviceName]=device}),$q.resolve(this.fabricDevices)}}_populateFortilinkDetectedDevices($INJECTABLE$,$http){return()=>{const uri=this.createCSFURI(FSW_DETECTED_DEVICE_URI,this.vdom);return $http.get(uri).then(response=>{const results=(Array.isArray(response.data)?response.data:[response.data]).reduce(function(prev,data){return prev.concat(data.results)},[]);this._updateFortilinkDetectedDevices(results)},()=>{})}}_populateBannedUsers($INJECTABLE$,$http){return()=>$http.get(this.createCSFURI(BANNED_USERS_URI,this.vdom)).then(response=>response.data.results,()=>[]).then(this._updateBannedUsers.bind(this))}_populateQuarantinedUsers($INJECTABLE$,$http){return()=>$http.get(this.createCSFURI(CMDB_USER_QUARANTINE_URI,this.vdom)).then(response=>response.data.results.targets,()=>[]).then(this._updateQuarantinedUsers.bind(this))}_populateLogThreatWeight($INJECTABLE$,$http){return()=>$http.get(this.createCSFURI(CMDB_LOG_THREATWEIGHT_URI,this.vdom)).then(response=>response.data.results,()=>{}).then(this._updateLogThreatWeight.bind(this))}_populateResourceUsage($INJECTABLE$,$http){return()=>$http.get(this.createCSFURI(RESOURCE_USAGE_URI,this.vdom)).then(response=>response.data,()=>({results:{}})).then(this._updateLogThreatWeight.bind(this))}_populateUserDeviceAndAwsInstanceInfo($INJECTABLE$,$http,$q){return()=>{const sourceID=this.getOmniselectProxySourceID("devices"),promises=[$q.when(Omniselect.getSourceData(sourceID)).catch(()=>[]),fwebUtilQuarantine.getQuarantineData(this.csfPath),fwebUtilQuarantine.getBannedData(this.csfPath)],defaultResults={results:{}},noop=()=>defaultResults;return this.isAWS()?promises.push($http.get(this.createCSFURI(AWS_EC2_URI)).catch(noop),$http.get(this.createCSFURI(AWS_INSPECTOR_URI)).catch(noop)):promises.push(defaultResults,defaultResults),$q.all(promises).then(([userDevicesResponse,quarantineMapping,bannedMapping,awsEc2Response,awsInspectorResponse])=>{this._updateUserDevicesAndAwsInstanceInfo(userDevicesResponse,awsEc2Response,awsInspectorResponse);const quarantinedUsers=Object.values(quarantineMapping||{}),bannedUsers=Object.values(bannedMapping||{});this._updateQuarantinedUsers(quarantinedUsers),this._updateBannedUsers(bannedUsers)})}}}const globalFortiGateMixin=(parentClass,noInject)=>(noInject||(parentClass=inject.CollectableExtends(parentClass)),class extends parentClass{constructor(){super(...arguments),this.appliances=[],this.appliancesMapping={}}get sourceID(){return"csfFortiGates"}getVersionLabel($INJECTABLE$,$filter,lang){var buildNumberFilter=$filter("buildNumber");return()=>{let label="";if(this.firmware){const{major:major,minor:minor,patch:patch}=this.firmware;label=`${label}${`v${[major,minor,patch].join(".")}`} build${buildNumberFilter(this.firmware.build)}`}else label=`${label}${lang("unknown")}`;return label}}getManagementIPLabel($INJECTABLE$,lang){return()=>{const mgmtIpWithoutFallback=notEmptyIp(this.managementIP);let str=this.getManagementIP();if(str&&!mgmtIpWithoutFallback){let msg;msg=this.isRoot?"Management IP/FQDN is not configured on root FortiGate. IP used to connect to it is shown as fallback.":"Management IP/FQDN is not configured. WAN IP is shown as fallback.",str=`<span class="tooltip-hint" f-tip-target><f-icon class="fa-warning">\n                            </f-icon><span>${str}</span><span f-tip>\n                            ${lang(msg).toString()}</span></span>`}return str}}getManagementIP($INJECTABLE$,csfTopology){return()=>{const result=notEmptyIp(this.managementIP)||notEmptyIp(this.parentDownstreamIP);if(result)return result;if(this.isRoot){const thisFgt=csfTopology.thisFortigate,globalFortigateMapping=csfTopology.globalFortigateMapping;if(this.isRoot&&!thisFgt.isRoot){let child=thisFgt,parent=globalFortigateMapping[child.parentFortigateId];for(;parent&&parent.serial!==this.serial;)parent=globalFortigateMapping[(child=parent).parentFortigateId];if(parent&&parent.serial===this.serial)return notEmptyIp(child.upstreamIP)}}return""}}canConnectToGui(){return!!this.getManagementIP()}connectToGui($INJECTABLE$,$window){return()=>{if(this.isCurrent)return;const url=this.getManagementURL();url&&$window.open(url,"_blank")}}populateAppliances($INJECTABLE$,$q,$injector){return()=>{var existingMapping=this.appliancesMapping||{};return this.appliances=[],this.appliancesMapping={},(this.csfEntry.appliance_info||[]).map(entry=>{var serial=entry.serial,appliance=existingMapping[serial];appliance?appliance.updateCsfEntry(entry):appliance=$injector.instantiate(Appliance,{csfEntry:entry,parentFortigateId:this.serial,path:this.path}),this.appliances.push(appliance),this.appliancesMapping[serial]=appliance}),$q.resolve(this.appliances)}}}),extendableCsfGlobalFortiGate=globalFortiGateMixin(GuiCsfMixin(CsfGlobalFortiGate),!0);const extendableCsfUpstreamFortiGate=globalFortiGateMixin(CsfUpstreamFortiGate);return{FortiGate:GuiCsfFortiGate,StandaloneFortiGate:class extends GuiCsfFortiGate{constructor(csfEntry,proxyRootSerial,State){super(csfEntry,proxyRootSerial,State)}_populateFortiSwitches($INJECTABLE$,$q){return()=>{const promises={fswList:this._sendArrayRequest(FORTISWITCHES_URI),noop:this._sendRevisionRequest(FORTISWITCH_REVISION_URI)};function genHash(fswList,cmdbRevision){return fswList.sort(function(a,b){return a.serial-b.serial}),[cmdbRevision,fswList.map(function(fswEntry){return`[${[fswEntry.serial,fswEntry.status,fswEntry.os_version].join(", ")}]`}).join(", ")].join("-")}return $q.all(promises).then(response=>{const fswList=response.fswList,fswVersion=genHash(fswList,response.noop);this.csfEntry.fsw_list=fswList,this.csfEntry.fsw_version=fswVersion},()=>{const fswList=[],fswVersion=genHash(fswList,"");this.csfEntry.fsw_list=fswList,this.csfEntry.fsw_version=fswVersion}).then(()=>this.callSuperMethod(GuiCsfFortiGate,"_populateFortiSwitches"))}}_populateHA($INJECTABLE$,$http,$q){return()=>{const symbols=this.state.getBuildInformation().SYMBOLS;return this.state.hasOwnProperty("ha_mode")&&[symbols.HA_AA,symbols.HA_AP].indexOf(this.state.ha_mode)>-1?$http.get(HA_URI).then(response=>{const results=response.data.results||[];this.csfEntry.ha_list=results},()=>{this.csfEntry.ha_list=[]}).finally(()=>{this.ha=(this.csfEntry.ha_list||[]).filter(entry=>this.serial!==entry.serial_no).map(entry=>new HA(entry,this.serial))}):(this.csfEntry.ha_list=[],$q.resolve())}}_populateFortiAps($INJECTABLE$,$q){return()=>{function genHash(fapList,cmdbRevision){return fapList.sort(function(a,b){return a.serial-b.serial}),[cmdbRevision,fapList.map(fapEntry=>{const ssidHashable=(fapEntry.radio||[]).reduce((prev,radio)=>(Object.keys(radio.ssid||{}).forEach(ifName=>{prev.push(ifName,radio.ssid[ifName])}),prev),[]);return`[${[fapEntry.serial,fapEntry.connection_state,fapEntry.os_version,fapEntry.mesh_hop_count,fapEntry.mesh_uplink_intf,fapEntry.parent_wtp_id,ssidHashable.join(", ")].join(", ")}]`}).join(", ")].join("-")}const promises={fapList:this._sendArrayRequest(FORTIAPS_URI),noop:this._sendRevisionRequest(FORTIAP_REVISION_URI)};return $q.all(promises).then(response=>{const fapList=response.fapList,fapVersion=genHash(fapList,response.noop);this.csfEntry.fap_list=fapList,this.csfEntry.fap_version=fapVersion},()=>{const fapList=[],fapVersion=genHash(fapList,"");this.csfEntry.fap_list=fapList,this.csfEntry.fap_version=fapVersion}).then(()=>this.callSuperMethod(GuiCsfFortiGate,"_populateFortiAps"))}}_populateFabricDevices(){return this._populateCsfSettings().then(results=>{this.csfEntry.fabric_devices=results["fabric-device"]||[]},()=>{this.csfEntry.fabric_devices=[]}).then(()=>this.callSuperMethod(GuiCsfFortiGate,"_populateFabricDevices"))}_sendArrayRequest($INJECTABLE$,$http,state){return url=>{const isGlobalVdom=this.vdom===state.GLOBAL_VDOM;return $http.get(url,{params:{vdom:isGlobalVdom?"*":void 0}}).then(function(resp){return isGlobalVdom?Array.isArray(resp.data)?resp.data.reduce(function(aggregated,currentData){return Array.isArray(currentData.results)?aggregated.concat(currentData.results):aggregated},[]):[]:Array.isArray(resp.data.results)?resp.data.results:[]})}}_sendRevisionRequest($INJECTABLE$,$http,state){return url=>{const isGlobalVdom=this.vdom===state.GLOBAL_VDOM;return $http.get(url,{params:{vdom:isGlobalVdom?"*":void 0}}).then(function(resp){return isGlobalVdom?Array.isArray(resp.data)?resp.data.reduce(function(aggregated,currentData){return currentData.revision?aggregated+currentData.revision:aggregated},""):"":resp.data.revision})}}},SlaveFortiGate:class extends extendableCsfSlaveFortiGate{constructor(masterFgt,serial,hostname){super(masterFgt,serial,hostname)}get sourceID(){return"csfFortiGates"}canDenyAuthorization(){return!1}canAuthorize(){return!1}canDeauthorize(){return!1}canConnectToGui(){return!1}getCurrentResourceUsage($INJECTABLE$,$q){return()=>$q.resolve({})}},UpstreamFortiGate:class extends extendableCsfUpstreamFortiGate{constructor(currentFortigate){super(currentFortigate),this.q_origin_key=this.id,this.datasource=this.sourceID,this.action="accept"}},GlobalFortiGate:class extends extendableCsfGlobalFortiGate{constructor(csfEntry,proxyRootSerial){super(csfEntry,proxyRootSerial),this.action="accept"}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1130:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module){module.component("systemShutdown",{controller:function(lang){this.message=lang("System is shutting down. You may now close this window.").toString(),this.loading=!1},templateUrl:__webpack_require__(229)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1131:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0),__webpack_require__(52),__webpack_require__(472)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,BUILD,fUri){var REDIR_BLACKLIST=[/^\/ng\/prompt/];function Prompt($location,$routeParams,$window,state,structure,volatileStorage,notificationRequests,$q){this._$location=$location,this._$routeParams=$routeParams,this._$window=$window,this._state=state,this._structure=structure,this._volatileStorage=volatileStorage,this._notificationRequests=notificationRequests,this._q=$q,this._index=-1,this.fortigateSetupQueue=[]}Prompt.prototype.next=function(){var CHECKS={_vmLicense:"/prompt/vm-license",_fileSystem:"/prompt/file_system_check",_centrallyManaged:"/prompt/centrally_managed",_fortigateSetup:"/prompt/fortigate-setup"};if(this._index+1<Object.keys(CHECKS).length){var key=Object.keys(CHECKS)[++this._index],permissionCheck=this[key]();this._q.when(permissionCheck).then(function(hasPermission){hasPermission?this._$location.path(CHECKS[key]):this.next()}.bind(this))}else this._$location.url(this._structure.ngURI(this.getRedirectURL())),this.sanitizeQueryParameters()},Prompt.prototype.getRedirectURL=function(){var url,isBlackListed,isSafe;return this._state.admin.guest_admin?url="/ng/user/guest":(url=this._$routeParams.redir||"/ng/",isBlackListed=REDIR_BLACKLIST.some(function(regex){return regex.test(url)}),isSafe=fUri.isSafe(url),url=isBlackListed||!isSafe?"/ng/":url),url},Prompt.prototype.sanitizeQueryParameters=function(){var search=this._$location.search();delete search.viewOnly,this._$location.search(search)},Prompt.prototype.logout=function(){this._$window.location.href="/logout"},Prompt.prototype._fileSystem=function(){var state=this._state;return this._q.resolve(state.need_fs_check&&state.admin.global_admin&&state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG))},Prompt.prototype._centrallyManaged=function(){var state=this._state;return this._q.resolve(!state.admin.guest_admin&&state.centrally_managed)},Prompt.prototype._vmLicense=function(){var state=this._state,SYMBOLS=BUILD.SYMBOLS;return this._q.resolve(state.is_vm&&state.admin.global_admin&&state.vm_license_status===SYMBOLS.LICENSE_STATUS_VM_PENDING)},Prompt.prototype._fortigateSetup=function(){return this._q.resolve(!0)},module.service("prompt",Prompt)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1132:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("Prompt",function(){return class{constructor({checker:checker,title:title,info:info}={}){this._checker=checker,this._title=title,this._info=info,this.active=!1,this._errorMessageHandler=function(err){return err},this.previousIndex=-1}get title(){return this._title||""}set title(value){this._title=value}get info(){return this._info||""}set info(value){this._info=value}setErrorMsgHandler(cb){this._errorMessageHandler=cb}get hasPrevious(){return-1!==this.previousIndex}async runCheck(){if(!this._checker)throw Error("Check for this prompt is not defined");try{const result=await this._checker();return this.done=!result,result}catch(error){return this.error=this._errorMessageHandler(error),this.done=!1,!this.done}}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1133:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,BUILD,inject){const PROMPTS={PASSWORD:"password",FORTICARE:"forticare",HOSTNAME:"hostname",FIRMWARE:"firmware",DASHBOARD:"dashboard"},PROMPT_CONFIG={[PROMPTS.PASSWORD]:{title:"Change Your Password",info:"This account is using the default password, it is strongly recommended that you change your password.",check:"passwordCheck",visibleCheck:"passwordVisibilityCheck"},[PROMPTS.FORTICARE]:{title:"Register with FortiCare",info:"This step is required to activate threat protection services and receive firmware & package updates.",check:"forticareCheck",visibleCheck:"forticareVisibilityCheck"},[PROMPTS.HOSTNAME]:{title:"Specify Hostname",info:"By default, this FortiGate will use the serial number as its hostname. It is strongly recommended to set a descriptive hostname to make this FortiGate more identifiable.",check:"hostnameCheck",visibleCheck:"hostnameVisibilityCheck"},[PROMPTS.FIRMWARE]:{title:"Upgrade Firmware",info:"A new firmware version is available",check:"firmwareCheck",visibleCheck:"firmwareVisibilityCheck"},[PROMPTS.DASHBOARD]:{title:"Dashboard Setup",info:"Dashboards have not been setup yet, choose which dashboard layout works best for you.",check:"dashboardCheck",visibleCheck:"dashboardVisibilityCheck"}};class SetupPromptService extends inject.Collectable{get PROMPT(){return PROMPTS}create($INJECTABLE$,Prompt){return async type=>{if(PROMPT_CONFIG[type]){const promptSettings=PROMPT_CONFIG[type];if(await this[promptSettings.visibleCheck]())return new Prompt({title:promptSettings.title,info:promptSettings.info,checker:()=>this[promptSettings.check]()})}}}passwordVisibilityCheck($INJECTABLE$,state,$q){return()=>$q.resolve(!state.admin.remote_admin&&!state.admin.pki_admin)}forticareVisibilityCheck($INJECTABLE$,state,$q,notificationRequests){return()=>$q.resolve(state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG)&&state.admin.global_admin&&!BUILD.PLATFORM.GUI_HIDE_FORTICARE_SUPPORT&&notificationRequests.license().then(licenses=>licenses.forticare.registration_supported))}hostnameVisibilityCheck($INJECTABLE$,state,$q){return()=>$q.resolve(state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG)&&state.admin.global_admin)}firmwareVisibilityCheck($INJECTABLE$,state,$q){return()=>{const settingEnable=state.featureEnabled("gui-firmware-upgrade-warning");return $q.resolve(state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM_CFG)&&state.admin.global_admin&&settingEnable)}}dashboardVisibilityCheck(){return!0}forticareCheck($INJECTABLE$,notificationRequests){const STATUSES=BUILD.SYMBOLS;return async()=>{let forticare;try{forticare=(await notificationRequests.license()).forticare}catch(e){throw"unavailable"}if(forticare.status===STATUSES.LICENSE_STATUS_PENDING)throw"pending";return forticare.status===STATUSES.LICENSE_STATUS_NOT_REGISTERED}}hostnameCheck($INJECTABLE$,$q,state){return()=>{const shouldCheck=""===state.hostname||!state.featureEnabled("gui-allow-default-hostname")&&state.usingDefaultHostname();return $q.resolve(shouldCheck)}}passwordCheck($INJECTABLE$,$q,state){return()=>$q.resolve(state.admin_using_default_password&&!state.admin.sso_sp_admin)}firmwareCheck($INJECTABLE$,fortigateFirmware){return async()=>(await fortigateFirmware.update(),!fortigateFirmware.runningLatestPatch)}dashboardCheck($INJECTABLE$,$http,dashboardCommon){return async()=>{return!(await $http.get(dashboardCommon.DASHBOARD_CMDB_URI)).data.results.length}}}return ngModule.service("setupPrompt",SetupPromptService),(provider,loaderProvider)=>(provider.$provide.service("setupPrompt",SetupPromptService),loaderProvider.initModules([__webpack_require__(250)]))}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1147:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(8),__webpack_require__(1148),__webpack_require__(0),__webpack_require__(54)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,ftnt_shared,Audit,BUILD,select_setup){const createExtensionSource=select_setup.createExtensionSource,Omniselect=ftnt_shared.Omniselect,SYMBOLS=BUILD.SYMBOLS,SOURCES=Omniselect.prototype.SOURCES,TooltipKey=ftnt_shared.TooltipKey,REPORTS_POSTURE="PostureReport",REPORTS_COVERAGE="CoverageReport",REPORTS_OPTIMIZATION="OptimizationReport",SELECT_SOURCES={AUDIT_DEVICE_TYPES:"auditDeviceTypes",AUDIT_FORTIGATES:"auditFortiGates",AUDIT_FORTIANALYZERS:"auditFortiAnalyzers",AUDIT_FORTIMANAGERS:"auditFortiManagers",AUDIT_GENERIC_DEVICES:"auditGenericDevices"};function SecurityAudit(injector,lang){injector.injectMarked(this),this.audit=null,this.allDeviceEntry={q_origin_key:"all",label:lang("All").toString(),datasource:SELECT_SOURCES.AUDIT_DEVICE_TYPES,iconClass:"ftnt-security-fabric security-fabric-node"}}SecurityAudit.prototype.addAuditOmniselect=inject.mark(function(lang,csfTopology,auditLang,$injector,state){const aLang=auditLang.translate;return function(audit){const baseConfig={formatFunction:(entry,value)=>'<f-icon class="'+entry.iconClass+'"></f-icon><span>'+value+"</span>",valueFunction:entry=>entry.label,preProcessSelected:!0,dontCache:!0};this.audit=audit,SOURCES[SELECT_SOURCES.AUDIT_DEVICE_TYPES]=Object.assign({},baseConfig,{name:lang("device_categories").toString(),data:(meta,sourceId)=>{const deviceTypes=new Set;return Promise.resolve([this.allDeviceEntry,...this.audit.devices.reduce((acc,value)=>(deviceTypes.has(value.deviceType)||(acc.push({q_origin_key:value.deviceType,deviceType:value.deviceType,label:aLang(value.deviceType),datasource:sourceId,iconClass:value.iconClass}),deviceTypes.add(value.deviceType)),acc),[])])}}),createExtensionSource("csfFortiGates",SELECT_SOURCES.AUDIT_FORTIGATES,{data:async(meta,sourceId)=>(await csfTopology.buildIfNecessary(),csfTopology.getAllFgts().filter(fortigate=>this.audit.deviceMapping[fortigate.serial]).map(fortigate=>{const _fortigate=$injector.instantiate(fortigate.constructor,{csfEntry:fortigate.csfEntry,proxyRootSerial:state.serial,parentFortigateId:state.serial});return Object.assign(_fortigate,fortigate),Object.defineProperty(_fortigate,"datasource",{value:sourceId,writable:!0,enumerable:!0}),_fortigate.deviceID=_fortigate.serial,_fortigate}))}),SOURCES[SELECT_SOURCES.AUDIT_FORTIANALYZERS]=Object.assign({},baseConfig,{name:lang("faz").toString(),data:(meta,sourceId)=>Promise.resolve(this.audit.devices.filter(device=>device.deviceType===this.audit.STATIC.DEVICES.FORTIANALYZER).map(fortianalyzer=>(fortianalyzer.q_origin_key=fortianalyzer.deviceID,fortianalyzer.datasource=sourceId,fortianalyzer))),tooltipKeys:{hostname:new TooltipKey(lang("hostname").toString()),serial:new TooltipKey(lang("serial").toString()),model:new TooltipKey(lang("model").toString()),version:new TooltipKey(lang("version").toString(),entry=>entry.version?entry.version:lang("unknown").toString()),ip:new TooltipKey(lang("Management IP").toString())},searchKeys:{hostname:!0,serial:!0,model:!0,version:!0,ip:!0}}),SOURCES[SELECT_SOURCES.AUDIT_FORTIMANAGERS]=Object.assign({},baseConfig,{name:lang("fmg").toString(),data:(meta,sourceId)=>Promise.resolve(this.audit.devices.filter(device=>device.deviceType===this.audit.STATIC.DEVICES.FORTIMANAGER).map(fortimanager=>(fortimanager.q_origin_key=fortimanager.deviceID,fortimanager.datasource=sourceId,fortimanager))),tooltipKeys:{hostname:new TooltipKey(lang("hostname").toString()),serial:new TooltipKey(lang("serial").toString()),model:new TooltipKey(lang("model").toString()),version:new TooltipKey(lang("version").toString(),entry=>entry.version?entry.version:lang("unknown").toString()),ip:new TooltipKey(lang("Management IP").toString())},searchKeys:{hostname:!0,serial:!0,model:!0,version:!0,ip:!0}}),SOURCES[SELECT_SOURCES.AUDIT_GENERIC_DEVICES]=Object.assign({},baseConfig,{name:lang("Fabric Device").toString(),data:(meta,sourceId)=>Promise.resolve(this.audit.devices.filter(device=>!device.nonGeneric).map(device=>(device.q_origin_key=device.deviceID,device.datasource=sourceId,device))),tooltipKeys:{deviceID:new TooltipKey(lang("ID").toString(),entry=>{const idComponents=entry.deviceID.split("::");return idComponents[idComponents.length-1]}),deviceType:new TooltipKey(lang("devtype").toString(),entry=>{const type=entry.deviceType;return!type||["default","undefined"].includes(type)?"Unknown":lang(type)})},searchKeys:{deviceID:!0,deviceType:!0}})}}),SecurityAudit.prototype.reloadSources=function(){this.getDatasources().forEach(source=>Omniselect.invalidateCacheForSource(source))},SecurityAudit.prototype.removeSources=function(){this.reloadSources(),this.getDatasources().forEach(source=>delete SOURCES[source])},SecurityAudit.prototype.getDatasources=function(){return Object.values(SELECT_SOURCES)},SecurityAudit.prototype.SELECT_SOURCES=SELECT_SOURCES,SecurityAudit.prototype.getAudit=inject.mark(function(csfTopology,reportRunner){return async(reportType=REPORTS_POSTURE,reportID)=>{reportID&&({report_type:reportType}.id=reportID);const report=await reportRunner.loadReport(reportID,reportType);return await csfTopology.buildIfNecessary(),this.instantiateReport(report,reportType)}}),SecurityAudit.prototype.runAll=inject.mark(function(reportRunner,$injector,lang,$q){return async percentageCallback=>{const checkStats=["numPassedChecks","numExemptChecks","numNonLicensedChecks","numSeverityLow","numSeverityMedium","numSeverityHigh","numSeverityCritical"],runErr=lang("An error occurred while running Security Rating.").toString(),unavailableErr=lang("Security Rating is unavailable.").toString();if(!this.canAuditRun())return $q.reject(unavailableErr);this.reloadSources(),this.clearLocalStorage();try{let allStats=[{},{},{}];const combineStats=()=>{const hasStatsForEach=allStats.every(s=>null!=s.numChecks);if(percentageCallback){if(!hasStatsForEach)return void percentageCallback(5);const numRan=allStats.reduce((acc,value)=>(checkStats.forEach(stat=>{value[stat]&&(acc+=value[stat])}),acc),1),total=allStats.reduce((acc,value)=>(value.numChecks&&(acc+=value.numChecks),acc),1);percentageCallback(Math.round(numRan/total*100))}};return(await reportRunner.runAndWaitMultiple([REPORTS_POSTURE,REPORTS_COVERAGE,REPORTS_OPTIMIZATION],{},allStats.map((_,i)=>stats=>{allStats[i]=stats;try{combineStats()}catch(e){percentageCallback&&percentageCallback(99)}}))).map(report=>$injector.instantiate(Audit,{auditData:report}))}catch(e){return $q.reject(runErr)}}}),SecurityAudit.prototype.canAuditRun=inject.mark(function(state){return function(){var lowCryptoMode=state.forced_low_crypto,writePermission=state.adminHasWritePermission(state.ACCESS_GROUP.FABRIC),haMaster=!0;return state.ha_mode&&(haMaster=state.is_ha_master),writePermission&&!lowCryptoMode&&haMaster}}),SecurityAudit.prototype.clearLocalStorage=function(){for(let i=0;i<localStorage.length;i++)localStorage.key(i).includes("SECURITY_RATING")&&localStorage.removeItem(localStorage.key(i))},SecurityAudit.prototype.instantiateReport=inject.mark($injector=>(function(report,reportType){return this[reportType]&&report.statistics.auditTime===this[reportType].statistics.auditTime||(this[reportType]=$injector.instantiate(Audit,{auditData:report})),this[reportType]})),SecurityAudit.prototype.run=inject.mark(function($q,lang,reportRunner){return async function(reportType=REPORTS_POSTURE,returnLoadStats){const runErr=lang("An error occurred while running Security Rating.").toString(),unavailableErr=lang("Security Rating is unavailable.").toString();if(!this.canAuditRun())return $q.reject(unavailableErr);this.reloadSources(),this.clearLocalStorage();try{const report=await reportRunner.runAndWait(reportType,void 0,returnLoadStats);return this.instantiateReport(report,reportType)}catch(e){return $q.reject(runErr)}}}),SecurityAudit.prototype.loadLatestResults=inject.mark(function($q,csfTopology,lang,reportRunner){return async function(reportType=REPORTS_POSTURE,returnLoadStats){if(!csfTopology.isRootFortigate)return $q.reject(lang("Security Rating is unavailable.").toString());const report=await reportRunner.loadLatestResults(reportType,returnLoadStats);return this.instantiateReport(report,reportType)}}),SecurityAudit.prototype.hasAuditBeenRunBefore=inject.mark((reportRunner,$q)=>(async function(reportType=REPORTS_POSTURE){try{return await reportRunner.loadReport(null,reportType),$q.resolve(!0)}catch(e){return 404===e.status?$q.resolve(!1):$q.reject()}})),SecurityAudit.prototype.checkTopologyLicenseStatus=inject.mark(function(csfTopology,$q,$http,reportRunner){return async function(reportType=REPORTS_POSTURE){const VALID_STATUSES=[SYMBOLS.LICENSE_STATUS_LICENSED,SYMBOLS.LICENSE_STATUS_EXPIRES_SOON];try{if((await reportRunner.loadReport(null,reportType)).topologyFullyLicensed)return!1;{const licenses=await $q.all(csfTopology.fortigates.map(fortigate=>$http.get(fortigate.createCSFURI("/api/v2/monitor/license/status"))));let topologyFullyLicensed=!0;return licenses.forEach(response=>{const license=response.data.results.security_rating;(!license||VALID_STATUSES.indexOf(license.status)<0)&&(topologyFullyLicensed=!1)}),topologyFullyLicensed}}catch(e){return!1}}}),SecurityAudit.prototype.isSchedulingEnabled=inject.mark(function(state){return function(){return state.security_rating_run_on_schedule}}),SecurityAudit.prototype.isSubmissionEnabled=inject.mark(function(state){return function(){return state.security_rating_result_submission}}),module.service("securityAudit",SecurityAudit)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1148:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30),__webpack_require__(34),__webpack_require__(49),__webpack_require__(26),__webpack_require__(1149),__webpack_require__(1152)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fLog,fDateTime,persist,inject,Category,AuditDevice){const UNSUPPORTED_DEVICE_TYPES=["FortiNAC"];function Audit(injector,auditData){injector.injectMarked(this),this.unmetInstances=[],this.reportName=auditData.reportName,this.auditID=auditData.auditID||"",this.persistKey=`SECURITY_RATING::${auditData.auditID}`,this.scheduledRun=auditData.scheduledRun,this.detectedEndpoints=auditData.detectedEndpoints,this.topologyRevision=auditData.topologyRevision,this.weekHistory=auditData.weekHistory,this.statistics=auditData.statistics,this.statistics.perDevice=auditData.perDeviceStatistics,this.statistics.perDeviceType=auditData.perDeviceTypeStatistics,this.statistics.perCheck=auditData.perCheckStatistics,this.statistics.perCategory=auditData.perCategoryStatistics,this.detectedEndpointTypes=auditData.detectedEndpointTypes,this.detectedEndpointChange=auditData.detectedEndpointChange,this.topologyFullyLicensed=auditData.topologyFullyLicensed,this.securityRatingResults=auditData.securityRatingResults,this.packageMetaData=auditData.packageMetaData,this.auditDevices=auditData.devices.filter(device=>!UNSUPPORTED_DEVICE_TYPES.includes(device.deviceType)),this.devices=[],this.deviceHierachy=[],this.deviceMapping={},this.instanceResultMap={},this.categories=[],this.instances=[],this.applying=!1,this.STATIC=auditData.STATIC,this.resetAudit(),this.instantiateCategories(auditData.results)}return Audit.prototype.resetAudit=function(){this.statistics.applyCount=0,this._processData(),this._processFortiGates()},Audit.prototype.getWeightedPassPercentage=function(){const passing=this.instances.reduce((acc,i)=>(i.didPass()&&acc++,acc),0),total=passing+this.instances.reduce((acc,i)=>(i.didFail()&&(acc+=1*(i.scaledFailureFactor||1)),acc),0)||1;return Math.round(passing/total*100)},Audit.prototype.isRatingDirty=function(){for(let i=0;i<localStorage.length;i++)if(localStorage.key(i).includes(`SECURITY_RATING::CONFIG_REV::${this.auditID}`))return!0},Audit.prototype.instantiateCategories=inject.mark(function($injector){return function(categories){Object.keys(categories).forEach(function(categoryName){var categoryObject=categories[categoryName];categoryObject.name=categoryName,this.categories.push($injector.instantiate(Category,{audit:this,categoryData:categoryObject}))}.bind(this))}}),Audit.prototype._humanizeTime=function(timestamp){var auditTime=new Date(timestamp),now=new Date,diff=Math.max(now.getTime()-auditTime.getTime(),1);return fDateTime.elapsedTime(diff,null,null,2)},Audit.prototype._processData=function(){this.statistics.humanizedAuditTime=this._humanizeTime(this.statistics.auditTime);var auditDate=new Date(this.statistics.auditTime);if(this.statistics.auditTimeFormatted=fDateTime.formatDateTime(auditDate),this.statistics.lastAuditTime){var lastAuditDate=new Date(this.statistics.lastAuditTime);this.statistics.lastAuditTimeFormatted=fDateTime.formatDateTime(lastAuditDate)}this.topologyHasChanged=this._hasTopologyChanged()},Audit.prototype._hasTopologyChanged=inject.mark(function(csfTopology){return function(){var fortigates=this.auditDevices.filter(device=>device.deviceType===this.STATIC.DEVICES.FORTIGATE),sameSize=csfTopology.fortigates.length===fortigates.length,serials=Object.keys(csfTopology.fortigateMapping),fortigatesStillActive=fortigates.every(function(fortigate){return serials.includes(fortigate.deviceID)});return!(sameSize&&fortigatesStillActive)}}),Audit.prototype._processFortiGates=inject.mark(function(csfTopology,lang,$injector){var setupMapping=function(){this.devices.forEach(function(device){device.isRoot||device.deviceType!==this.STATIC.DEVICES.FORTIGATE||(this.rootFortigate=device),this.deviceMapping[device.deviceID]=device}.bind(this))}.bind(this),setupRelationships=function(){this.devices.forEach(function(device){if(!device.ancestors.length){var parentNode=this.deviceMapping[device.parentSerial];for(parentNode&&parentNode.children.push(device);parentNode;)device.ancestors.unshift(parentNode),parentNode=this.deviceMapping[parentNode.parentSerial]}}.bind(this))}.bind(this),sortSerialsByHierachy=function(){if(this.deviceHierachy=[],this.rootFortigate){var insertChildren=function(fortigate){fortigate.children.forEach(function(child){this.deviceHierachy.push(child.deviceID),insertChildren(child)}.bind(this))}.bind(this);this.deviceHierachy.push(this.rootFortigate.deviceID),insertChildren(this.rootFortigate)}}.bind(this),instantiateAuditDevices=function(){this.devices=this.auditDevices.map(function(auditDevice){var activeCsfDevice=null;return auditDevice.deviceType===this.STATIC.DEVICES.FORTIGATE&&(activeCsfDevice=csfTopology.getAllFgts().find(fortigate=>fortigate.serial===auditDevice.deviceID)),$injector.instantiate(AuditDevice,{audit:this,auditDevice:auditDevice,activeCsfDevice:activeCsfDevice})}.bind(this)),setupMapping(),setupRelationships(),sortSerialsByHierachy()}.bind(this);return function(){instantiateAuditDevices()}}),Audit.prototype._collectNumDepsNowMet=inject.mark(function(){return function(){var numDepsNowMet=0,matchingAppliedRecommendation=function(unmetInstance,instance,depName){return instance.checkName===depName&&this.getInstanceRecommendationResult(instance)===this.STATIC.AUTO_RECOMMENDATION_RESULT.SUCCESS&&instance.getDevice().deviceID===unmetInstance.getDevice().deviceID}.bind(this);return this.unmetInstances.forEach(function(unmetInstance){unmetInstance.unmetDependencies.every(function(depName){var resultsMap=this._resultsMarkedForAutoRecommendation;return Object.keys(resultsMap).map(function(id){return resultsMap[id].instance}).find(function(instance){return matchingAppliedRecommendation(unmetInstance,instance,depName)})}.bind(this))&&numDepsNowMet++}.bind(this)),numDepsNowMet}}),Audit.prototype.getInstanceRecommendationResult=function(instance){try{let instanceResultMap=persist.get(this.persistKey);instanceResultMap&&Object.assign(this.instanceResultMap,instanceResultMap)}catch(e){fLog.error("Could not get persisted application result")}return this.instanceResultMap[instance.id]},Audit.prototype.setInstanceRecommendationResult=function(instance,result,save){if(this.instanceResultMap[instance.id]=result,save)try{let instanceResultMap=persist.get(this.persistKey);instanceResultMap||(instanceResultMap={}),instanceResultMap[instance.id]=result,persist.put(this.persistKey,instanceResultMap)}catch(e){fLog.error("Could not persist application result")}},Audit.prototype.hasSecurityRatingData=function(){var ratingData=this.securityRatingResults;return ratingData&&ratingData.rating&&Object.keys(ratingData.rating).length>0},Audit.prototype.getComplianceTypes=function(){return Object.values(this.STATIC.COMPLIANCE)},Audit}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1149:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(1150)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,Check){function Category(injector,audit,categoryData){injector.injectMarked(this),this._audit=audit,this.checks=[],this.name=categoryData.name,this.instantiateChecks(categoryData)}return Category.prototype.instantiateChecks=inject.mark(function($injector){return function(checks){Object.keys(checks).forEach(function(checkName){var checkObject=checks[checkName];"object"==typeof checkObject&&(checkObject.name=checkName,this.checks.push($injector.instantiate(Check,{audit:this._audit,category:this,checkData:checkObject})))}.bind(this))}}),Category.prototype.getWeightedPassPercentage=function(){const instances=this.checks.reduce((acc,c)=>acc=acc.concat(c.instances),[]),passing=instances.reduce((acc,i)=>(i.didPass()&&acc++,acc),0),total=passing+instances.reduce((acc,i)=>(i.didFail()&&(acc+=1*(i.scaledFailureFactor||1)),acc),0)||1;return Math.round(passing/total*100)},Category}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1150:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(1151)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,DeviceCheck){function Check(injector,audit,category,checkData){injector.injectMarked(this),this._audit=audit,this._category=category,this.instances=[],this.perDevice=checkData.perDevice,this.supportedDevices=checkData.supportedDevices,this.numberFortiGatesApplicableFor=checkData.numberFortiGatesApplicableFor,this.passedForFullFabric=checkData.passedForFullFabric,this.name=checkData.name,this.categoryName=this._category.name,this.standards=checkData.standards,this.standardRequirements={},this.hasComplianceRequirements()&&this.standards.forEach(function(standard){let requirements=checkData[standard]||[];requirements=requirements.sort((a,b)=>{a=a.replace(/[A-Za-z]/g,""),b=b.replace(/[A-Za-z]/g,"");const a1=a.split("."),b1=b.split("."),len=Math.max(a1.length,b1.length);for(let i=0;i<len;i++){var _a=+a1[i]||0,_b=+b1[i]||0;if(_a!==_b)return _a-_b}return 0}),this.standardRequirements[standard]=requirements}.bind(this)),this.standardRequirements.FSBP&&(this.fsbpID=this.standardRequirements.FSBP[0]),this.instantiateDeviceChecks(checkData.instances)}return Check.prototype.instantiateDeviceChecks=inject.mark(function($injector){return function(instances){instances.forEach(function(instance){this.instances.push($injector.instantiate(DeviceCheck,{audit:this._audit,category:this._category,check:this,instanceData:instance}))}.bind(this))}}),Check.prototype.hasComplianceRequirements=function(){return this.standards&&this.standards.length},Check.prototype.getComplianceRequirements=function(standard){return this.hasComplianceRequirements()&&this.standards.indexOf(standard)>=0&&this.standardRequirements[standard]||[]},Check.prototype.getPCICategories=function(){const categories=new Set;return this.getComplianceRequirements("PCI").reduce((acc,value)=>{value=value.split(".")[0];const pciRequirement=parseInt(value);let pciCategory=0;return pciCategory=pciRequirement<=2?1:pciRequirement<=4?2:pciRequirement<=6?3:pciRequirement<=9?4:pciRequirement<=11?5:6,isNaN(pciCategory)||categories.has(pciCategory)||(acc.push(pciCategory),categories.add(pciCategory)),acc},[])},Check.prototype.getPCIDSSRequirements=function(){const requirements=new Set;return this.getComplianceRequirements("PCI").reduce((acc,value)=>{value=value.split(".")[0];const pciRequirement=parseInt(value);return isNaN(pciRequirement)||requirements.has(pciRequirement)||(acc.push(pciRequirement),requirements.add(pciRequirement)),acc},[])},Check}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1151:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(30),__webpack_require__(32),__webpack_require__(9),__webpack_require__(49)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fLog,fFormatters,angular,persist){function DeviceCheck(injector,audit,category,check,instanceData){injector.injectMarked(this),this._audit=audit,this._category=category,this.check=check,this.id=`${audit.auditID}::${instanceData.id}`,this.checkName=instanceData.name,this.domain=instanceData.domain,this.hasAutoRecommendation=instanceData.hasAutoRecommendation,this.categoryName=this._category.name,this.severity=instanceData.severity,this.score=instanceData.score,this.result=instanceData.result,this.deviceType=instanceData.device,this.deviceID=instanceData.deviceID,this.markedForAutoRecommendation=!1,this.recommendation=instanceData.recommendation,this.easyApply=instanceData.easyApply,this.multipleDeviceFactor=instanceData.multipleDeviceFactor,this.failureFactor=instanceData.failureFactor,this.scaledFailureFactor=instanceData.scaledFailureFactor,this.unmetDependencies=instanceData.unmetDependencies,this.exemptReason=instanceData.exemptReason,this.applyRevisions={},this._audit.instances.push(this),(this.didNotMeetDependencies()||this.didNotHaveLicensing())&&this._audit.unmetInstances.push(this)}return DeviceCheck.prototype.getDevice=function(){return this._audit.deviceMapping[this.deviceID]},DeviceCheck.prototype.getSeverityWeight=function(){return this._audit.STATIC.SEVERITY_LEVEL_WEIGHT[this.severity]},DeviceCheck.prototype.generateEasyApplyKey=function(cmdbPath,mkey,field){return[cmdbPath,mkey,field].filter(angular.identity).join("::")},DeviceCheck.prototype.addEasyApplyUserSelectedValue=function(value,key){this.easyApply&&(this.easyApply.userSelectedValues[key]=value)},DeviceCheck.prototype.getResultSeverityClass=function(){return this.didPass()?"severity-none":this.isExempt()||this.didNotHaveLicensing()?"severity-low":this.didNotMeetDependencies()?"severity-medium":this.didFail()||this.didError()?"severity-critical":"severity-none"},DeviceCheck.prototype.getSeveritySeverityClass=function(){return this.didPass()?"severity-none":this.didError()?"severity-critical":this.hasNegativeResult()?`severity-${this.severity}`:"severity-low"},DeviceCheck.prototype.isDeviceInCurrentTopology=function(){return this.getDevice().isOnline},DeviceCheck.prototype.getRecommendationResultIcon=function(){var recommendationResult=this._audit.STATIC.AUTO_RECOMMENDATION_RESULT,icons={},easyApplyResult=this._audit.getInstanceRecommendationResult(this);return icons[recommendationResult.PENDING]="fa-loading",icons[recommendationResult.EXECUTION_ERROR]="fa-negate",icons[recommendationResult.FAILED]="fa-disabled",icons[recommendationResult.SUCCESS]="fa-enabled",icons[easyApplyResult]},DeviceCheck.prototype.getEasyApplyData=function(update){let success=!0;const convertValue=(value,accField)=>{value instanceof Object&&!(value instanceof Array)&&Object.keys(value).forEach(field=>{let fieldForKey=accField?`${accField}.${field}`:field;if(value[field]!==this._audit.STATIC.RUN_TIME_VALUE)return convertValue(value[field],fieldForKey);{const key=this.generateEasyApplyKey(update.cmdbPath,update.mkey,fieldForKey);let userSelectedValue=this.easyApply.userSelectedValues[key];userSelectedValue?(this._audit.STATIC.USER_INPUT_TRANSLATION[userSelectedValue]&&(userSelectedValue=this._audit.translateUserInputValue(this._audit.STATIC.USER_INPUT_TRANSLATION[userSelectedValue])),value[field]=userSelectedValue):success=!1}})};return update&&convertValue(update.data,""),success?update.data:null},DeviceCheck.prototype.applyRecommendation=inject.mark(($http,$q,csfTopology,lang,auditLang)=>(function(){const name=auditLang.translate(`audit_package::check::${this.checkName}`).toString();let easyApply=this.easyApply,device=this.getDevice(),fortigate=null;if(device.isExtensionDevice)fortigate=csfTopology.fortigateMapping[device.parentSerial];else{if(device.deviceType!==this._audit.STATIC.DEVICES.FORTIGATE)return $q.reject(lang("Easy Apply is not supported on this device.").toString());fortigate=csfTopology.fortigateMapping[device.deviceID]}if(this._audit.setInstanceRecommendationResult(this,this._audit.STATIC.AUTO_RECOMMENDATION_RESULT.PENDING),!fortigate)return $q.reject(lang("Connection with the device failed.").toString());var cmdbUpdate=function(csfURI,data,params={}){const config={params:{}};return Object.assign(config.params,params),$http.put(csfURI,data,config)},cmdbList=function(csfURI,mkey,data,params={},splice){var config={params:{with_meta:1}};return Object.assign(config.params,params),$http.get(csfURI,config).then(function(response){const obj=response.data.results&&response.data.results.find(o=>o.q_origin_key===mkey);if(!obj)return $q.reject(lang("Easy Apply target does not exist.").toString());const splicedData={};for(let key in data){if("string"!=typeof obj[key])return $q.reject();try{const values=obj[key].split(" ");splice?values.splice(values.indexOf(data[key]),1):values.push(data[key]),splicedData[key]=values.join(" ")}catch(e){}}return cmdbUpdate(csfURI,splicedData)})},promises=[];return easyApply.updates.forEach(function(update){var parsedData=this.getEasyApplyData(update);if(parsedData){var cmdbPath=fFormatters.path_name_format(update.cmdbPath),uriPath=[cmdbPath.path,cmdbPath.name,update.mkey].filter(angular.identity).join("/"),csfURI=fortigate.createCSFURI("/api/v2/cmdb/"+uriPath);const params={};switch(update.domain&&update.domain.id&&(params.vdom=update.domain.id),update.operation){case this._audit.STATIC.SUPPORTED_OPERATIONS_MAP.DEFAULT:promises.push(function(csfURI,data,params={}){var config={params:{action:"default",with_meta:1}};return Object.assign(config.params,params),$http.get(csfURI,config).then(function(response){var defaults=response.data.results,withDefaults=Object.assign({},defaults,data);return cmdbUpdate(csfURI,withDefaults)})}(csfURI,parsedData,params));break;case this._audit.STATIC.SUPPORTED_OPERATIONS_MAP.UPDATE:promises.push(cmdbUpdate(csfURI,parsedData,params));break;case this._audit.STATIC.SUPPORTED_OPERATIONS_MAP.SPLICE:promises.push(cmdbList(csfURI,update.mkey,parsedData,params,!0));break;case this._audit.STATIC.SUPPORTED_OPERATIONS_MAP.APPEND:promises.push(cmdbList(csfURI,update.mkey,parsedData,params,!1));break;default:fLog.error("Audit error: Unsupported CMDB operation")}}else promises.push($q.reject()),fLog.error("Audit error: Parsing easy apply data failed")}.bind(this)),$q.all(promises).then(function(){return this._audit.setInstanceRecommendationResult(this,this._audit.STATIC.AUTO_RECOMMENDATION_RESULT.SUCCESS,!0),lang("security_audit::recommendationsAppliedSuccess",[name]).toString()}.bind(this),function(){this._audit.setInstanceRecommendationResult(this,this._audit.STATIC.AUTO_RECOMMENDATION_RESULT.FAILED);const msg=lang("security_audit::recommendationsAppliedFailure",[name]).toString();return $q.reject(msg)}.bind(this))})),DeviceCheck.prototype.isExempt=function(){return this.result===this._audit.STATIC.RESULT.EXEMPT},DeviceCheck.prototype.didFail=function(){return this.result===this._audit.STATIC.RESULT.FAILED},DeviceCheck.prototype.didPass=function(){return this.result===this._audit.STATIC.RESULT.PASSED},DeviceCheck.prototype.didError=function(){return this.result===this._audit.STATIC.RESULT.EXECUTION_ERROR},DeviceCheck.prototype.didNotMeetDependencies=function(){return this.result===this._audit.STATIC.RESULT.DEPENDENCIES_NOT_MET},DeviceCheck.prototype.didNotHaveLicensing=function(){return this.result===this._audit.STATIC.RESULT.NOT_LICENSED},DeviceCheck.prototype.hasNegativeResult=function(){return this.didFail()||this.didNotMeetDependencies()},DeviceCheck.prototype.compareApplyStatus=function(status){if(this._audit){return this._audit.getInstanceRecommendationResult(this)===status}return!1},DeviceCheck.prototype.applyAttempted=function(){return"string"==typeof this._audit.getInstanceRecommendationResult(this)},DeviceCheck.prototype.getTranslatedResult=inject.mark(auditLang=>(function(result){result=result||this.result;return auditLang.translate(`audit_package::result::${result}`).toString()})),DeviceCheck.prototype._getRevisionKey=function(key){return`SECURITY_RATING::CONFIG_REV::${this.id}::${key}`},DeviceCheck.prototype.setRevisionKey=function(key,id){const localStorageKey=this._getRevisionKey(key);try{persist.put(localStorageKey,id)}catch(e){this.applyRevisions[localStorageKey]=id}},DeviceCheck.prototype.getRevisionKey=function(key){const localStorageKey=this._getRevisionKey(key);try{return persist.get(localStorageKey)}catch(e){return this.applyRevisions[localStorageKey]}},DeviceCheck.prototype.canEasyApply=function(){return this.hasAutoRecommendation&&this.didFail()},DeviceCheck.prototype.doesEnforceCompliance=function(compliance){return this.check.standards.includes(compliance)},DeviceCheck}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1152:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function AuditDevice(audit,auditDevice,activeCsfDevice,csfTopology){this._audit=audit,this.deviceID=auditDevice.deviceID,Object.assign(this,auditDevice),this.datasource="auditGenericDevices",this.iconClass=auditDevice.iconClass||"ftnt-security-fabric security-fabric-node",this.children=[],this.ancestors=[],activeCsfDevice&&"function"==typeof activeCsfDevice.isConnected&&(this.isOnline=activeCsfDevice.isConnected()),this.isExtensionDevice&&(this.isOnline=csfTopology.fortigateMapping[auditDevice.parentSerial]),this.parentSerial=auditDevice.parentSerial,this.deviceType===this._audit.STATIC.DEVICES.FORTIGATE&&activeCsfDevice&&(this.datasource="auditFortiGates",this.nonGeneric=!0),this.deviceType===this._audit.STATIC.DEVICES.FORTIANALYZER&&(this.datasource="auditFortiAnalyzers",this.nonGeneric=!0),this.deviceType===this._audit.STATIC.DEVICES.FORTIMANAGER&&(this.datasource="auditFortiManagers",this.nonGeneric=!0)}return AuditDevice.prototype.createCSFURI=function(uri){return`${this.csfUrlPrefix}${uri}`},AuditDevice.prototype.getLabel=function(){return this.hostname||this.deviceID},AuditDevice}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1153:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0),__webpack_require__(30),__webpack_require__(26),__webpack_require__(27),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,BUILD,fLog,inject,notify,ftnt_shared){var AUDIT_LANG_PATH="/"+BUILD.CONFIG.CONFIG_GUI_NO+"/report-runner/package/lang/";function AuditLang(injector){injector.injectMarked(this),this.languageMap=null,this.languageMapPromise=null,this.loadLanguageMap()}AuditLang.prototype.loadLanguageMap=inject.mark(function($http,state,$q,lang){return function(){return this.languageMap?$q.resolve():this.languageMapPromise?this.languageMapPromise:BUILD.PLATFORM.HAVE_NODEJS?(this.languageMapPromise=$http.get(AUDIT_LANG_PATH+state.language_code+".json").then(function(results){this.languageMap=results.data}.bind(this),function(){notify.post(lang("An error occured while loading language files").toString(),notify.LEVEL.ERROR)}),this.languageMapPromise.finally(function(){this.languageMapPromise=null}.bind(this)),this.languageMapPromise):(this.languageMap={},$q.resolve())}}),AuditLang.prototype.translate=inject.mark(function(lang){return function(id,interpolate){var result;return this.languageMap&&(result=this.languageMap[id],interpolate&&interpolate.length&&(result=ftnt_shared.lang.stringInterpolate(result,interpolate))),id&&!result&&(fLog.warn("Missing audit language key, falling back to FOS lang: "+id),result=lang(id).toString()),result}}),module.service("auditLang",AuditLang),module.filter("auditLang",function(auditLang){return function(id,interpolate){return id=id||"",auditLang.translate(id,interpolate)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},177:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(0),__webpack_require__(30),__webpack_require__(416),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,BUILD,fLog,lazyRouteModuleLoader){function FOSError_factory(lang){function FOSError(err_no){if(!this)throw new Error("Use new keyword to create FOSError");this.name="FOSError",isNaN(Number(err_no))?(this.message=err_no,this.err_no=null):(this.message=err_no+": "+lang(String(err_no)),this.err_no=err_no);try{try{throw new Error}catch(ex){this._stack=ex.stack.split("\n").slice(2,99999)}}catch(ex){}}return angular.extend(FOSError,{NO_PERMISSIONS:-37}),FOSError}class Loader{basePath(path,relative_to_module){if(/\.(js|html)$/.test(path))throw new Error(`Should use require for ${path}`);if("/"===path.substr(0,1))return this._config.root+path.substr(1);if(relative_to_module){var module_path=relative_to_module.id.replace(/\/[^/]+\/?$/,"/");return this._config.root+module_path+path}return this._config.root+path}config(newConfig){this._config=angular.extend(this._config,newConfig)}cachePath(path,route){if("/"!==path[0]){if(route)return this.basePath(`${this._config.ng_path}/${(route.$$route.path||route.$$route.originalPath.replace(/:.*$/,"")).replace(/^\//,"")}/${path}`);if(/\.(js|html)$/.test(path))throw new Error(`Should use require for ${path}`)}return this.basePath(path)}}Loader.prototype._config={root:"/"+BUILD.CONFIG.CONFIG_GUI_NO+"/",ng_path:"ng"};class LoaderService extends Loader{constructor(lang,$q,$injector){super(),this.registeredModules=new Map,this.FOSError=FOSError_factory(lang),this._di={$q:$q},angular.module("ng").run=(cb=>{$injector.invoke(cb)})}initModules(modules){return this._di.$q.all(modules.map(m=>{if(!m)return m;let result;return this.registeredModules.has(m)?result=this.registeredModules.get(m):"function"==typeof m&&this.registeredModules.set(m,result=m(this.providers,this)),result}))}getPathForRoute(route){let path=route.path;return path||(path=route.originalPath.replace(/:.*$/,"")),path}}module.provider("loader",class{constructor($compileProvider,$controllerProvider,$provide){this.providers={$compile:$compileProvider,$controller:$controllerProvider,$provide:$provide}}$get($injector){var service=$injector.instantiate(LoaderService);return service.providers=this.providers={$compile:this.providers.$compile,$controller:this.providers.$controller,$provide:this.providers.$provide,$injector:$injector},service}resolve(route){if(arguments.length>1)throw new Error("use static require()");const config=route.config,path=(config.path||route.url.replace(/\/(:.*)?$/g,"")).replace(/^\//,""),absModuleNames=config.loader_resolve.map(mn=>"/"===mn[0]?mn.replace(/^\//,""):`${path}/${mn}`);return{requiredDependencies:($q,loader)=>$q.all(absModuleNames.map(m=>lazyRouteModuleLoader.require(m))).then(modules=>loader.initModules(modules))}}}),module.factory("FOSError",FOSError_factory),module.filter("cache_path",function(loader){return function(input){return input=input||"",fLog.warn(`tried to load something via cache_path_filter: ${input}`),loader.cachePath(input)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},178:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(62)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ngModule,f_obj){function FtntRoute($route){this.$route=$route}ngModule.service({ftntRoute:FtntRoute}),FtntRoute.ENCODED_SLASH=new RegExp(encodeURIComponent("/"),"g"),FtntRoute.INTERP_EXPR=/(^|\/):([^/$]+)/g,FtntRoute.OPT_OR_GREEDY_EXPR=/[*?]+$/,FtntRoute.prototype={interpolate:function(path,routeParams,dontEncode){return path.replace(FtntRoute.INTERP_EXPR,function(match,slash,name){var value,optOrGreedy=FtntRoute.OPT_OR_GREEDY_EXPR.exec(name),opt=!1,greedy=!1;optOrGreedy&&(name=name.replace(FtntRoute.OPT_OR_GREEDY_EXPR,""),opt=optOrGreedy[0].indexOf("?")>-1,greedy=optOrGreedy[0].indexOf("*")>-1);value=routeParams[name],opt&&null==value?(value="",slash=""):value=dontEncode?value:encodeURIComponent(value);greedy&&(value=value.replace(FtntRoute.ENCODED_SLASH,"/"));return slash+value})},extractVars:function(path){for(var m,ex=new RegExp(FtntRoute.INTERP_EXPR),result=[];null!==(m=ex.exec(path));)result.push(m[2].replace(FtntRoute.OPT_OR_GREEDY_EXPR,""));return result},extractVarMap:function(path){return this.extractVars(path).reduce(function(result,name){return result[name]=name,result},{})},findBySegment:function(segment,withParams,includeVDOM){return withParams=withParams&&f_obj.makeSet(withParams.filter(function(key){return includeVDOM||"vdom"!==key})),Object.keys(this.$route.routes).filter(function(r){var route=this.$route.routes[r];return route.segment===segment&&(!withParams||withParams.equalToSet(route.keys.map(pluckName)))}.bind(this))[0];function pluckName(key){return key.name}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},179:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(67),__webpack_require__(84),__webpack_require__(180)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,fosCommonSymbols,BaseCsfObject,FortiSwitchClasses){const{DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=fosCommonSymbols,{CsfFortiSwitch:CsfFortiSwitch}=FortiSwitchClasses,Omniselect=ftnt_shared.Omniselect,extendableCsfFortiSwitch=(0,BaseCsfObject.GuiCsfManagedDeviceMixin)(CsfFortiSwitch),CMDB_URI="/api/v2/cmdb/switch-controller/managed-switch",API_MONITOR="/api/v2/monitor/switch-controller/managed-switch";return class extends extendableCsfFortiSwitch{constructor(csfEntry,parentFortigateId){super(csfEntry,parentFortigateId),this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData,$injector){const instance=$injector.instantiate(this,{csfEntry:instanceJSONData.csfEntry,parentFortigateId:instanceJSONData.parentFortigateId});return Object.assign(instance,instanceJSONData),instance}get sourceID(){return"csfFortiSwitches"}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfFortiSwitch,"getIconClass")}canConnectToGui(){return!1}canDenyAuthorization(){return!1}toggleAuthorization($INJECTABLE$,$http,csfTopology){return(toggle,skipNotify)=>{const parentFortigate=csfTopology.fortigateMapping[this.parentFortigateId];this.hasPendingStatusUpdate=!0;const uri=parentFortigate.createCSFURI(`${CMDB_URI}/${this.serial}`,this.vdom),toggleAction=toggle?"accept":"deauthorize";return $http.put(uri,JSON.stringify({"fsw-wan1-admin":toggle?"enable":"discovered"})).then(function(){this.authorizationState=toggle?"authorized":"discovered",this.connectionState="Idle",this.hasPendingStatusUpdate=!1,skipNotify||this._notifyAuthorizationToggle(toggleAction,!0),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,skipNotify||this._notifyAuthorizationToggle(toggleAction,!1)})}}reboot($INJECTABLE$,$http,csfTopology){return()=>{const parentFortigate=csfTopology.fortigateMapping[this.parentFortigateId];this.hasPendingStatusUpdate=!0;const uri=parentFortigate.createCSFURI(`${API_MONITOR}/restart`,this.vdom);return $http.post(uri,JSON.stringify({mkey:this.serial})).then(function(){this.connectionState="Idle"}.bind(this)).finally(function(){this.hasPendingStatusUpdate=!1,Omniselect.notifySourceChanged("csfFortiSwitches")}.bind(this))}}upgradeFirmware($INJECTABLE$,$rootScope,slide,lang){return function(){const tempScope=$rootScope.$new();tempScope.devices=[{serial:this.serial,firmwareVersion:this.version,name:this.name}],slide.open({template:'<f-upgradable-extension-device-list devices="::devices" device-type="::\'FORTI_SWITCH\'"></f-upgradable-extension-device-list>',parentScope:tempScope,options:{title:lang("Upgrade FortiSwitches").toString(),fullHeight:!0,closeButton:!1}}).then(function(){this.hasPendingStatusUpdate=!0}.bind(this)).finally(function(){tempScope.$destroy()})}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},181:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(8),__webpack_require__(67),__webpack_require__(235),__webpack_require__(84)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,ftnt_shared,fosCommonSymbols,CsfFortiAP,BaseCsfObject){const{DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=fosCommonSymbols,Omniselect=ftnt_shared.Omniselect,extendableCsfFortiAP=(0,BaseCsfObject.GuiCsfManagedDeviceMixin)(CsfFortiAP),CMDB_URI="/api/v2/cmdb/wireless-controller/wtp",API_RESTART="/api/v2/monitor/wifi/managed_ap/restart";return class extends extendableCsfFortiAP{constructor(csfEntry,parentFortigateId){super(csfEntry,parentFortigateId),this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData,$injector){const instance=$injector.instantiate(this,{csfEntry:instanceJSONData.csfEntry,parentFortigateId:instanceJSONData.parentFortigateId});return Object.assign(instance,instanceJSONData),instance}get sourceID(){return"csfFortiAPs"}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfFortiAP,"getIconClass")}canConnectToGui(){return!1}canResetAuthorization(){return!1}toggleAuthorization($INJECTABLE$,$http,csfTopology){return(toggle,skipNotify)=>{var parentFortigate=csfTopology.fortigateMapping[this.parentFortigateId];this.hasPendingStatusUpdate=!0;var uri=parentFortigate.createCSFURI(`${CMDB_URI}/${this.serial}`,this.vdom);const toggleAction=toggle?"accept":"deauthorize";return $http.put(uri,JSON.stringify({admin:toggle?"enable":"discovered"})).then(function(){this.authorizationState=toggle?"authorized":"discovered",this.connectionState="Idle",this.hasPendingStatusUpdate=!1,skipNotify||this._notifyAuthorizationToggle(toggleAction,!0),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,skipNotify||this._notifyAuthorizationToggle(toggleAction,!1)})}}reboot($INJECTABLE$,$http,csfTopology,slide,lang){return(callback,{showConfirmation:showConfirmation=!0}={})=>{const parentFortigate=csfTopology.fortigateMapping[this.parentFortigateId];this.hasPendingStatusUpdate=!0;const uri=parentFortigate.createCSFURI(API_RESTART,this.vdom),restart=()=>$http.post(uri,JSON.stringify({wtpname:this.serial})).then(()=>{this.connectionState="Idle"}),finalAction=()=>{this.hasPendingStatusUpdate=!1,Omniselect.notifySourceChanged("csfFortiAPs"),"function"==typeof callback&&callback()};return showConfirmation?slide.confirm(lang("restart_confirm")).then(()=>restart()).finally(finalAction):restart().finally(finalAction)}}upgradeFirmware($INJECTABLE$,$rootScope,slide,lang){return()=>{const tempScope=$rootScope.$new();tempScope.devices=[{serial:this.serial,firmwareVersion:this.version,name:this.name}],slide.open({template:'<f-upgradable-extension-device-list devices="::devices" device-type="::\'FORTI_AP\'"></f-upgradable-extension-device-list>',parentScope:tempScope,options:{title:lang("Upgrade FortiAPs").toString(),fullHeight:!0,closeButton:!1}}).then(()=>{this.hasPendingStatusUpdate=!0}).finally(()=>{tempScope.$destroy()})}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},184:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(30),__webpack_require__(62),__webpack_require__(26),__webpack_require__(8),__webpack_require__(82),__webpack_require__(178)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,fLog,fObj,inject,ftntShared,fFortiguard){const COLLAPSABLE_LOG_TYPES={event:["system","router","vpn","sdwan","user","endpoint","ha","security-rating","wad","wireless","fortiextender","connector"]};function flatten(a,b){return a.concat(b)}function fLogView(){return{restrict:"E",controllerAs:"logView",controller:LogView,bindToController:!0,scope:{embeddedType:"<?logType",fortiview:"<?",embeddedFilters:"<?filters",embeddedFilterModel:"<?filterModel",embeddedFilterModelTranslateValues:"<?filterModelTranslateValues",embeddedFilterModelTranslateMap:"<?filterModelTranslateMap",embeddedExtraFilters:"<?extraFilters",embeddedDevice:"@device",defaultColumnMods:"<?",embeddedShowDetails:"=?showDetails",embeddedFortigate:"<?fortigateSerial",refreshEvent:"@"},templateUrl:__webpack_require__(862)}}function LogView($scope,injector){injector.injectMarked(this,{$scope:$scope}),$scope.$watch("::logView.logType()",async value=>{if(value){let redirecting=!1;this.embeddedType||(redirecting=await this._checkForLogTypeSubcategories()),redirecting||await this._init()}})}return LogView.url={abort:"/api/v2/log/search/abort/:id"},LogView.prototype={state:null,persist:null,viewPersist:null,config:null,muTable:null,muTableController:void 0,facetModel:null,facets:null,fsOptions:null,contextMenuHasItems:!0,logType:inject.mark(function($routeParams){return function(){return this.embeddedType||$routeParams.logType}}),logTypeCategory:function(){return this.logType().split("/")[0]},logTypeSubtype:function(){return this.logType().split("/")[1]},$onDestroy:inject.mark((loggingFacets,facetedSearchUtil)=>(function(){this.muTable={},this.destroyed=!0,loggingFacets.purgeState(),facetedSearchUtil.purgeState()})),_checkForLogTypeSubcategories:inject.mark(($location,logMetadata)=>(async function(){const logTypeCategory=this.logTypeCategory();let logTypeSubtype=this.logTypeSubtype();const logTypeMetaData=await logMetadata(logTypeCategory),metaDataSubtypes=logTypeMetaData.subtypes,predefinedSubtypeOrder=COLLAPSABLE_LOG_TYPES[logTypeCategory];if(metaDataSubtypes&&predefinedSubtypeOrder){const logTypeSubtypes=Object.keys(metaDataSubtypes).sort((a,b)=>predefinedSubtypeOrder.indexOf(a)-predefinedSubtypeOrder.indexOf(b));if(logTypeSubtype||(logTypeSubtype=logTypeSubtypes[0]),!$location.path().includes(`${logTypeCategory}/${logTypeSubtype}`))return $location.path(`/log/view/${logTypeCategory}/${logTypeSubtype}`),!0;this.logTypeSubtype=logTypeSubtype,this.logTypeSubtypes=logTypeSubtypes,this.logTypeCategoryMetaData=logTypeMetaData}})),isLogTypeSubtypeVisible:inject.mark(navSuppression=>(function(logTypeSubtype){if(this.logTypeCategoryMetaData){const deps=this.logTypeCategoryMetaData.subtypes[logTypeSubtype].deps;return!deps||!navSuppression.isSuppressed(null,deps)}return!1})),changeLogTypeSubtype:inject.mark($location=>(function(logTypeSubtype){const logTypeCategory=this.logTypeCategory();$location.search({}),$location.path(`/log/view/${logTypeCategory}/${logTypeSubtype}`)})),_init:inject.mark(function($scope,$http,$q,$route,ftntRoute,loggingFacets,Facets,LogFormatters,state,haPeerResource,facetedSearchUtil,CMDB,LOG_DEVICE_ID_MAP,LogViewContext,csfTopology){return async function(){await csfTopology.buildIfNecessary(),$scope.$watch("::logView.muTableController",ctrl=>this.context=new LogViewContext(this,ctrl,$scope)),this.logFormatters=new LogFormatters(this.logType()),this.initState();const isCurFgt=csfTopology.selectedFortigate.serial===csfTopology.thisFortigate.serial;this.logDevice=isCurFgt?this.embeddedDevice||state.getPreferredLogDevice():"fortianalyzer",this.logDeviceId=LOG_DEVICE_ID_MAP[this.logDevice],this.logDisplay=new CMDB("log","gui-display",{format:"resolve-apps"}).get(),this.muTable={},this.loading={logMetadata:this.getLogMetadata(),logDisplay:this.logDisplay.$promise,fortiguardLinks:fFortiguard.links.resolve()},$scope.$watch("logView.embeddedDevice",(newVal,oldVal)=>{newVal!==oldVal&&this.updateDevice(newVal)}),$scope.$watch("logView.embeddedFortigate",(newVal,oldVal)=>{(!this.fortigate||newVal&&newVal!==oldVal)&&(this.fortigate=csfTopology.getDevice(newVal),this.refresh())}),this.setupPersistence(),this.watchFacetModels(),this.resetMuTableSource(),this._listenForReload(),this._listenForOmniselectSourceChange(),this._listenForFortigateChange(),this._listenForQuarantineEvents(),this.fsOptions={entries:()=>this.muTable.entries,source:"history",complex:!0,filterMerge:{max:1}};try{await $q.all(this.loading),this.resolveResponses()}catch(err){this&&!this.destroyed&&fLog.error(err)}$scope.$on("$routeUpdate",(event,data)=>{var params=data.params;if(!this.embeddedType){const filterStrs=this.state.filters.map(f=>f.toString());!params.filter||Array.isArray(params.filter)&&filterStrs.length===params.filter.length&&filterStrs.every((s,i)=>s===params.filter[i])||(this.facetModel=loggingFacets.facets.fromApiFilters(params.filter,"history"))}}),$scope.$watch("logView.showDetails() && logView.logType()",function(){$scope.$broadcast("qtip_hide")})}}),contentQuery:inject.mark(function(ApiFilter,state,csfTopology,LOG_DEVICE_ID_MAP){return async function(){const metadata=await this.loading.logMetadata,[type,subType]=this.logType().split("/"),extra=["country_id"];state.shouldResolveHostnames()&&extra.push("reverse_lookup");const result={filter:this.state.tweakedFilters.slice(),logType:type,logSubType:subType,device:this.logDevice,extra:extra};if(metadata.filters)for(const key of Object.keys(metadata.filters))result.filter.push(new ApiFilter(key,metadata.filters[key]));return result.serial_no=this.fortigate.id,this.fortigate.isHaSlave&&(this.logDeviceId===LOG_DEVICE_ID_MAP.faz?result.filter.push(new ApiFilter("devid",result.serial_no)):result.is_ha_member=!0),this.fortigate.serial!==csfTopology.thisFortigate.serial&&(result.csfPath=this.fortigate.path),result}}),clicked($event){"threat_details"===$event.target.className&&(this.showDetails(!0),this.detailTab="security")},refresh(){this.resetMuTableSource()},resolveResponses:function(){this._updateMuTableSettings()},populateFacets:function(entries){this.muTable.entries=this.muTable.entries.concat(entries);const len=this.muTable.entries.length;len>5e3&&(this.muTable.entries=this.muTable.entries.slice(len-5e3,len))},setupPersistence:inject.mark(function($location,$scope,persistentStorage,state){return function(){const vdom=state.current_vdom;var MODEL_KEY="LogView."+(vdom?"vdom:"+vdom+".":"")+this.logType()+".facetModel";this.viewPersist=persistentStorage.get("LogView.all.view")||{};try{this.facetModel=persistentStorage.get(MODEL_KEY),this.facetModel&&!this.embeddedType||(this.facetModel={})}catch(ex){this.facetModel={}}$scope.$watch("logView.viewPersist",function(value,oldValue){value!==oldValue&&persistentStorage.put("LogView.all.view",value)},!0),this.embeddedType||$scope.$watch("logView.facetModel",function(value){persistentStorage.put(MODEL_KEY,value)},!0),this.loading.logMetadata.then(()=>{this.embeddedType||$scope.$watchCollection("logView.state.filters",function(value){if(Array.isArray(value)&&value.length){const filter=value.map(v=>v.toString());$location.search("filter",filter).replace()}else $location.search("filter")&&$location.search("filter",null).replace()})})}}),_updateLogFilters:inject.mark(function(loggingFacets){return function(reload){const embedded=function(embedded,filters,translateValues,translateMap){const historyFacets=loggingFacets.facets.bySource("history");translateValues&&translateMap&&Object.entries(embedded).forEach(([key,value])=>{const keyForValue=translateMap[key];keyForValue&&(embedded[translateValues[keyForValue]]=value,delete embedded[key])});return embedded&&Object.keys(embedded).reduce(function(model,id){if(filters){const embedFilter=filters[id],historySelector=embedFilter&&embedFilter.selectors&&embedFilter.selectors.history||id;let facet=historyFacets[historySelector];if(!facet&&historySelector)try{facet=loggingFacets.addFacet(historySelector)}catch(e){fLog.error(e)}embedFilter?(embedFilter.tweakFilter&&(facet.tweakFilter=embedFilter.tweakFilter),facet.meta=Object.assign({filters:embedded},embedFilter.meta||{}),model[facet.id||id]=embedded[id]):fLog.warn(`Could not translate embedded facet ID "${id}"`)}return model},{})}(this.embeddedFilterModel,this.embeddedFilters,this.embeddedFilterModelTranslateValues,this.embeddedFilterModelTranslateMap),facetModel=angular.extend({},this.facetModel,embedded),oldFilters=this.state.filters;this.state.filters=loggingFacets.facets.makeApiFilters(facetModel,this.embeddedExtraFilters),this.state.tweakedFilters=loggingFacets.facets.makeApiFilters(facetModel,this.embeddedExtraFilters,!0),reload&&this.state.filters.join("&")!==oldFilters.join("&")&&this.resetMuTableSource()}}),allModels:function(){return{facetModel:this.facetModel,embeddedFilterModel:this.embeddedFilterModel,embeddedExtraFilters:this.embeddedExtraFilters}},watchFacetModels:inject.mark(function($scope){return function(){this.loading.logMetadata.then(function(){$scope.$watch("logView.allModels()",function(value,oldValue){value!==oldValue&&this._updateLogFilters(!0)}.bind(this),!0),$scope.$watch("logView._useServerSidePaging()",function(value,oldValue){value!==oldValue&&this._updateMuTableSettings()}.bind(this))}.bind(this))}}),addToFacetModel:function(facet,valueOption){if(!this.embeddedFilterModel&&facet){var values=this.facetModel[facet.id];void 0===values&&(values=this.facetModel[facet.id]=[]),values.push(valueOption.key)}},resetMuTableSource:inject.mark(function($scope,LogSource){return function(){const source=new LogSource($scope,this.contentQuery(),this.loading);source.onFetchEntries=(entries=>{const filterMap=new Map;for(const filter of this.state.filters)filterMap.set(filter.key,filter);for(const entry of entries)entry._filters=filterMap;this.populateFacets(entries)}),this.muTable.source&&this.muTable.source.dispose(),this.muTable.source=source,this.muTable.entries=[]}}),getLogMetadata:inject.mark(function(logMetadata,lang){return async function(){let metadata=await logMetadata(this.logType()),columns=metadata.columns;const default_columns=[];return columns=Object.keys(columns).map(function(columns){return function(key){var col=columns[key];col.id=key;col.novalidate&&(null==col.filter&&(col.filter={}),col.filter.validate=function(){return!0});var lang_key="lang_key"in col?col.lang_key:key;null!==lang_key&&(col.lang_key=lang.getPrefixedKey("Log::column.",lang_key)),col.flags.default&&default_columns.push(key);var result={id:key,_metadata:col,type:/u?int\d+/.test(col.type)?["_metadata.timestamp","audittime","scandate","itime","dtime"].includes(key)?"date":"number":"standard"},override={vulnid:{numberType:"custom"},appid:{numberType:"custom"},"msg-type":{numberType:"custom"},proto:{cellValueFunction:function(entry,column){return"protocol"in entry?entry.protocol:entry[column.id]}},protocol:{cellValueFunction:function(entry,column){return"proto"in entry?entry.proto:entry[column.id]}},policyid:{type:"standard"},eventid:{numberType:"custom"},audittime:{cellValueFunction:function(entry,column){return 1e3*entry[column.id]}}}[key];if(override&&Object.assign(result,override),key.includes(".")&&(result.cellValueFunction=getSplitKeyCellValue),result.langKey=col.lang_key||lang_key,result.icon=col.icon,result.title=col.title,null===result.langKey&&(result.menuLangKey=result.title),!col.lang_key&&col.flags.filter)throw new Error("Filterable column without a lang_key");return result}}(columns)).reduce(flatten,[]),metadata=Object.assign(metadata,{columns:columns.concat(columns.reduce(function(columns,col){"alias"in col&&columns.push(angular.extend({},col,{selector:col.alias,alias:null,alias_of:col.selector,lang_key:col.alias_lang_key||col.alias}));return columns},[])),default_columns:metadata.default_columns&&metadata.default_columns.length?metadata.default_columns:default_columns}),this.logMetadata=metadata,await this.updateColumnState(metadata);function getSplitKeyCellValue(entry,column){var i,keys=column.id.split("."),value=entry;for(i=0;i<keys.length;++i)value=value[keys[i]];return value}}}),_lastSessionId:null,_updateMuTableSettings:function(){this.muTable.settings=this.getMuTableSettings(this.logMetadata)},getMuTableSettings:inject.mark(function(lang){return function(logMetadata){var defaultColumns=logMetadata.default_columns,sortCols=[],idSuffix=this.logType()+(this.fortiview?".fortiview":""),defColMods=null;this.defaultColumnMods&&(defColMods=angular.extend({prepend:[],remove:[]},this.defaultColumnMods),defaultColumns=fObj.makeSet(defColMods.prepend.concat(defaultColumns),!0).difference(defColMods.remove),sortCols=defColMods.prepend),defColMods&&(idSuffix+=".wdc-"+defColMods.prepend.join("_")+"-"+defColMods.remove.join("_"));var settings={defaultColumns:defaultColumns,columns:logMetadata.columns.filter(c=>!c._metadata.flags.hidden).sort(function(a,b){return ftntShared.util.fastLocaleCompare(lang(a._metadata.lang_key).toString(),lang(b._metadata.lang_key).toString())}).sort(function(cols,prop){return function(a,b){return index(prop?a[prop]:a)-index(prop?b[prop]:b)};function index(value){return(value=cols.indexOf(value))>-1?value:Number.MAX_VALUE}}(sortCols,"id")),id:"log-viewer."+idSuffix,sorting:!1,sections:!1,userDefinedSections:!1};return this.logFormatters.setFormatters(settings.columns),settings}}),initState:function(){this.state=this.state||{filters:[]}},_listenForReload:inject.mark(function($scope){return function(){var unSubscribe;$scope.$watch("logView.refreshEvent",function(eventName){unSubscribe&&unSubscribe(),eventName&&(unSubscribe=$scope.$on(eventName,function(){this.refresh()}.bind(this)))}.bind(this))}}),_listenForOmniselectSourceChange:inject.mark(function($scope){return function(){$scope.$on(ftntShared.Omniselect.NOTIFY_SOURCE_CHANGED_MESSAGE,(event,sourceID)=>{sourceID.includes("firewall.address")&&(ftntShared.Omniselect.invalidateCacheForSource("devices"),this.refresh())})}}),_listenForFortigateChange:inject.mark(($scope,csfTopology)=>(function(){$scope.$watch(()=>csfTopology.selectedFortigate,fortigate=>{this.embeddedFortigate||!fortigate||this.fortigate&&fortigate===this.fortigate||(this.fortigate=fortigate,this.refresh())})})),_listenForQuarantineEvents:inject.mark(function($scope){return function(){$scope.$on("QUARANTINE_EVENTS",()=>{this.refresh()})}}),updateColumnState:inject.mark(function($routeParams,loggingFacets,facetedSearchUtil,LogFormatters,ApiFilter,$q){return function(metadata){var muTableInstance=this.muTable.instance;if(this.destroyed)return $q.reject();var facetColumns=metadata.columns.filter(c=>c._metadata.flags.filter||!c._metadata.flags.hidden);if(this.facets=loggingFacets.initFacets(this.logType(),this.logDeviceId,facetColumns,function(){var chosen=!1,scm=LogFormatters.smartColumnMap,selector=this.selectors.history,settings=muTableInstance&&muTableInstance.getSettings(),activeColumns=settings&&settings.activeColumns&&settings.activeColumns.map(function(column){return column.id});activeColumns&&!(chosen=activeColumns.indexOf(selector)>-1)&&scm&&selector in scm&&(selector=scm[selector],chosen=activeColumns.indexOf(selector)>-1);return chosen}),facetedSearchUtil.facets=loggingFacets.facets.byId(),this.facetModel=facetedSearchUtil.jsonForModel(this.facetModel),$routeParams.filter){const filters=ApiFilter.parse(Array.isArray($routeParams.filter)?$routeParams.filter:[$routeParams.filter]).filter(f=>!!f);this.facetModel=loggingFacets.facets.fromApiFilters(filters,"history")}this._updateLogFilters();var fm=this.embeddedFilterModel;if(fm&&this.embeddedFilters)for(let id in fm)-1===metadata.default_columns.indexOf(id)&&metadata.columns.some(hasId(id))&&metadata.default_columns.push(id);return metadata;function hasId(id){return function(col){return col.id===id}}}}),facetBySelector:inject.mark(function(loggingFacets){return function(source,key){return loggingFacets.bySelector(this.facets,source)[key]}}),updateDevice:inject.mark(function($q,LOG_DEVICE_ID_MAP){return function(device){this.logDeviceId=LOG_DEVICE_ID_MAP[device],this.logDevice=device,this.loading.logMetadata=this.getLogMetadata(),$q.all(this.loading).then(()=>{this._updateMuTableSettings(),this.resetMuTableSource()})}}),downloadRaw:inject.mark(function(logViewData,ApiFilter,$window){return async function(){const metadata=await this.loading.logMetadata,filters=this.state.filters.slice(),logTypes=this.logType().split("/");if(metadata.filters)for(const key of Object.keys(metadata.filters))filters.push(new ApiFilter(key,metadata.filters[key]));const uri=logViewData.download(filters,logTypes.join("/"),this.logDevice,{serial_no:this.fortigate.id});$window.location.assign(this.fortigate.createCSFURI(uri))}}),showDetails:function(update){return this.embeddedType?(void 0!==update&&(this.embeddedShowDetails=update),this.embeddedShowDetails):this.viewPersist?(void 0!==update&&(this.viewPersist.showDetails=update),this.viewPersist.showDetails):void 0},csfEntryDisable:inject.mark(function(LOG_DEVICE_ID_MAP,csfTopology){return entry=>entry.serial!==csfTopology.thisFortigate.serial&&this.logDeviceId!==LOG_DEVICE_ID_MAP.faz})},function(providers,loader){return providers.$compile.directive({fLogView:fLogView}),loader.initModules([__webpack_require__(450),__webpack_require__(863),__webpack_require__(865),__webpack_require__(867),__webpack_require__(868),__webpack_require__(883),__webpack_require__(185),__webpack_require__(241),__webpack_require__(892)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},189:function(module,exports,__webpack_require__){"use strict";const inject=__webpack_require__(26),REGISTER_URL="/api/v2/monitor/registration/forticloud/register-device",REGISTRATION_STATUS_URL="/api/v2/monitor/registration/forticloud/device-status";class DeviceRegistration extends inject.Collectable{getRegistration($INJECTABLE$,$http){return(serials,fortigate,updateCache)=>{Array.isArray(serials)||(serials=[serials]);let url=REGISTRATION_STATUS_URL;fortigate&&(url=fortigate.createCSFURI(url));const params={serials:JSON.stringify(serials)};return updateCache&&(params.update_cache=1),$http.get(url,{params:params})}}registerFortiCloud($INJECTABLE$,$http){return(serial,params,fortigate)=>{let url=REGISTER_URL;return fortigate&&(url=fortigate.createCSFURI(url)),$http.post(url,{serial:serial,email:params.email,password:params.password,country:params.country,reseller:params.reseller})}}registerDevices($INJECTABLE$,slide,$rootScope,lang,loader){return(serials,fortigate)=>{Array.isArray(serials)||(serials=[serials]);const scope=$rootScope.$new();return loader.initModules([__webpack_require__(462)]).then(()=>(scope.serials=serials,scope.fortigate=fortigate,slide.open("registerFswFap",{template:'<f-authorize-fsw-fap-wizard serials="serials"fortigate=fortigate register-only="true"></f-authorize-fsw-fap-wizard>',parentScope:scope,options:{fullHeight:!0,title:lang("Device Registration")}}).finally(()=>{scope.$destroy()})))}}}module.exports=(providers=>{providers.$provide.service("deviceRegistration",DeviceRegistration)})},229:function(module,exports){var path="/migadmin/ng/prompt/partials/power_prompt.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt">\n    <div class="content">\n        <h1>{{:: $ctrl.title }}</h1>\n        <div class="message" ng-if="!$ctrl.errorMessage">\n            <f-icon ng-if="$ctrl.loading" class="fa-loading icon-xl"></f-icon>\n            <div class="message-content">\n                {{:: $ctrl.message }}\n            </div>\n        </div>\n        <div class="error-message" ng-if="$ctrl.errorMessage">\n            <f-icon class="fa-error icon-xl"></f-icon>\n            <div class="message-content">\n                {{:: $ctrl.errorMessage | lang }}\n            </div>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},230:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ngModule){function FtntCopy(){}ngModule.service({ftntCopy:FtntCopy}),FtntCopy.prototype={fastCopy:function(object){var storage={},copy=angular.copy(this.strip$Properties(object,storage));return angular.extend(copy,storage)},strip$Properties:function(subject,storage){var i,result;if(Array.isArray(subject)){if(result=subject.slice(),storage)for(i in subject)"$"===i[0]&&(storage[i]=subject[i])}else for(i in result={},subject)"$"!==i[0]?result[i]=subject[i]:storage&&(storage[i]=subject[i]);return result}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},231:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(30),__webpack_require__(172),__webpack_require__(36),__webpack_require__(80),__webpack_require__(32),__webpack_require__(43),__webpack_require__(31),__webpack_require__(46),__webpack_require__(8),__webpack_require__(84),__webpack_require__(113),__webpack_require__(94),__webpack_require__(814),__webpack_require__(815),__webpack_require__(179),__webpack_require__(181),__webpack_require__(237),__webpack_require__(816),__webpack_require__(434)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,inject,fLog,fTree,fSelect,fSort,fFormatters,fLang,fDom,fStructure,ftnt_shared,BaseCsfClasses,FortiGateClasses,FabricDevice,PendingDevice,PreauthorizedDevice,FortiSwitch,FortiAp,FortiNAC,SelectConfigFactory,SharedTopology){const Omniselect=ftnt_shared.Omniselect,{Graph:{TopologyNode:TopologyNode,TopologyEdge:TopologyEdge,TopologyGraph:TopologyGraph,TopologyGraphObjects:TopologyGraphObjects},CondensedGraph:{CondensedTopologyGraph:CondensedTopologyGraph,CondensedTopologyGraphObjects:CondensedTopologyGraphObjects}}=SharedTopology,SUPPORTED_OMNISELECT_CSF_PROXY_SOURCES=[{id:"antivirus.profile",inlineEditCreate:!0},"application.category","application.custom","application.group","application.name",{id:"availableCertificates",inlineEditCreate:!0},"availableIPsecTunnels","availableVdoms","application.name",{id:"crlCertificates",inlineEditCreate:!0},"devices","dlpFileTypes",{id:"dnsfilter.profile",inlineEditCreate:!0},"emailfilter.profile",{id:"extender-controller.extender",inlineEditCreate:!0},{id:"file-filter.profile",inlineEditCreate:!0},{id:"firewallInterfaces",inlineEditCreate:!0},"firewall.address","firewall.address6","firewall.addrgrp","firewall.addrgrp6","firewall.gtp","firewall.internet-service","firewall.internet-service-custom","firewall.internet-service-name","firewall.ippool","firewall.ippool6","firewall.ldb-monitor","firewall.multicast-policy","firewall.policy","firewall.policy46","firewall.policy64","firewall.profile-group",{id:"firewall.profile-protocol-options",inlineEditCreate:!0},"firewall.proxy-address","firewall.proxy-addrgrp","firewall.proxy-policy","firewall.wildcard-fqdn.custom","firewall.wildcard-fqdn.group",{id:"firewall.schedule.group",inlineEditCreate:!0},{id:"firewall.schedule.onetime",inlineEditCreate:!0},{id:"firewall.schedule.recurring",inlineEditCreate:!0},{id:"firewall.service.custom",inlineEditCreate:!0},{id:"firewall.service.category",inlineEditCreate:!0},{id:"firewall.service.group",inlineEditCreate:!0},{id:"firewall.shaper.traffic-shaper",inlineEditCreate:!0},{id:"firewall.shaper.per-ip-shaper",inlineEditCreate:!0},{id:"firewall.ssl-ssh-profile",inlineEditCreate:!0},{id:"firewall.traffic-class",inlineEditCreate:!0},{id:"firewall.vip",inlineEditCreate:!0},{id:"firewall.vip46",inlineEditCreate:!0},{id:"firewall.vip6",inlineEditCreate:!0},{id:"firewall.vip64",inlineEditCreate:!0},{id:"firewall.vipgrp",inlineEditCreate:!0},{id:"firewall.vipgrp46",inlineEditCreate:!0},{id:"firewall.vipgrp6",inlineEditCreate:!0},{id:"firewall.vipgrp64",inlineEditCreate:!0},"allTypesFirewallInterfaces","firewallInterfacesCreate",{id:"icap.profile",inlineEditCreate:!0},{id:"icap.server",inlineEditCreate:!0},"ips.rule","ips.custom",{id:"ips.sensor",inlineEditCreate:!0},{id:"localCertificates",inlineEditCreate:!0},{id:"remoteCaCertificates",inlineEditCreate:!0},{id:"remoteCertificates",inlineEditCreate:!0},"router.policy","router.policy6","router.static","sdWanService","switchControllerPorts","switchControllerTransceivers","switchControllerVLANs",{id:"switch-controller.managed-switch",inlineEditCreate:!0},{id:"switch-controller.switch-group",inlineEditCreate:!0},"switch-controller.lldp-profile","switch-controller.security-policy.802-1X","switch-controller.qos.qos-policy","switch-controller.vlan-policy","switch-controller.nac-device","system.accprofile","system.custom-language","system.dns-server","system.dns-database","system.elbc","system.external-resource.address","system.external-resource.category","system.external-resource.domain","system.geneve",{id:"system.interface",inlineEditCreate:!0},{id:"system.ipsec-aggregate",inlineEditCreate:!0},"system.accprofile","system.object-tagging",{id:"system.pppoe-interface",inlineEditCreate:!1},{id:"system.replacemsg-group",inlineEditCreate:!0},"system.sdn-connector","system.physical-switch",{id:"system.switch-interface",inlineEditCreate:!0},{id:"system.vdom-link",inlineEditCreate:!0},{id:"system.virtual-switch",inlineEditCreate:!1},{id:"system.sdwan",inlineEditCreate:!1},{id:"system.virtual-wire-pair",inlineEditCreate:!0},{id:"system.vxlan",inlineEditCreate:!1},{id:"system.zone",inlineEditCreate:!0},"systemTransceivers","systemVdomLink","trustedCertificateAuthorities","user.adgrp","user.group","user.adgrp","user.guest",{id:"user.ldap",inlineEditCreate:!0},"user.local","user.info","user.nac-policy",{id:"vpn.certificate.ca",inlineEditCreate:!0},{id:"voip.profile",inlineEditCreate:!0},{id:"vpn.ipsec.concentrator",inlineEditCreate:!0},"vpn.ipsec.phase1","vpn.ipsec.phase1-interface","vpn.ipsec.manualkey","vpn.ipsec.phase1-interface","vpn.ipsec.phase2-interface","vpn.ssl.web.portal","vpn.ssl.web.realm","vpn.ssl.web.user-bookmark","waf.main-class",{id:"waf.profile",inlineEditCreate:!0},{id:"wanopt.auth-group",inlineEditCreate:!0},{id:"wanopt.peer",inlineEditCreate:!0},{id:"wanopt.profile",inlineEditCreate:!0},"webfilter.ftgd-cat","webfilter.ftgd-local-cat","webfilter.ftgd-local-rating",{id:"webfilter.override",inlineEditCreate:!0},"webfilter.profile","wirelessNetworks","wireless-controller.global","wireless-controller.vap","wireless-controller.vap-group",{id:"wireless-controller.wids-profile",inlineEditCreate:!0},{id:"wireless-controller.wtp",inlineEditCreate:!0},"wireless-controller.wtp-group",{id:"wireless-controller.wtp-profile",inlineEditCreate:!0},"application.custom",{id:"vpn.ipsec.phase1-interface",inlineEditCreate:!1},{id:"zoneFirewallInterfaces",inlineEditCreate:!0}],TooltipKey=ftnt_shared.TooltipKey,VdomRevision=BaseCsfClasses.VdomRevision,{FortiGate:FortiGate,StandaloneFortiGate:StandaloneFortiGate,UpstreamFortiGate:UpstreamFortiGate,GlobalFortiGate:GlobalFortiGate,SlaveFortiGate:SlaveFortiGate}=FortiGateClasses;function Topology(injector,$rootScope){injector.injectMarked(this),this._ongoingPromise=null,this._ongoingType=null,this.currentRevision=null,this.csfEnabled=!1,this.isRootFortigate=!1,this.csfSyncMode=null,this.fortigates=[],this.incompatibleFortigates=[],this.fortinacs=[],this.fortinacMapping={},this.fortigateMapping={},this.incompatibleFortigateMapping={},this.globalFortigatesResponseEntries=[],this.globalFortigates=[],this.globalFortigateMapping={},this.thisFortigate=null,this.upstreamFortigate=null,this.pendingDevices=[],this.pendingDeviceMapping={},this.deviceAuthorizationList=[],this.slaveFortigates=[],this.slaveFortigateMapping={},this.spanningTreeMap={},this.spanningTreeNodes=[],this.globalSpanningTreeMap={},this.globalSpanningTreeNodes=[],this.appliancesMap={},this.appliances=[],this.blockCutTreeMap={},this.selectedFortigate=null,$rootScope.$on("$routeChangeSuccess",function(){this.selectedFortigate&&this.selectedFortigate.allFortigates&&(this.selectedFortigate=this.thisFortigate)}.bind(this)),Object.defineProperty(this,"selectedFortigateIsThisFortigate",{get:function(){return this.selectedFortigate.serial===this.thisFortigate.serial}.bind(this)}),Object.defineProperty(this,"upstreamSerial",{get:function(){return this.upstreamFortigate&&this.upstreamFortigate.serial}.bind(this)}),Object.defineProperty(this,"upstreamHostname",{get:function(){return this.upstreamFortigate&&this.upstreamFortigate.hostname}.bind(this)})}Topology.prototype.BUILD_TYPES={STANDARD:1,WITH_EXTENSION_DEVICES:2,WITH_DETAILED_DEVICES:4},Topology.prototype.buildIfNecessary=inject.mark(function($q,state){return function(wantedBuildType){function includedInBuildType(buildType){return!wantedBuildType||buildType&&(buildType&wantedBuildType)===wantedBuildType}var promise=$q.resolve(),performedBuild=!1,alreadyBuilt=this.currentRevision,csfStateChanged=this.csfEnabled!==state.csf_enabled,includedInPreviousBuild=!this._ongoingPromise&&includedInBuildType(this._previousBuildType),includedInOngoingBuild=this._ongoingPromise&&includedInBuildType(this._ongoingType);return alreadyBuilt&&!csfStateChanged&&includedInPreviousBuild?promise=$q.resolve():alreadyBuilt&&includedInOngoingBuild?(promise=this._ongoingPromise,performedBuild=!0):(promise=this.build(wantedBuildType),performedBuild=!0),promise.then(()=>performedBuild)}}),Topology.prototype.invalidateLastBuildIfNecessary=function(){this._ongoingPromise||(this.currentRevision=0)},Topology.prototype.build=inject.mark(function($q){return function(wantedBuildType){var promise;wantedBuildType=wantedBuildType||this.BUILD_TYPES.STANDARD;var typeBuildFunctions=[];this._ongoingPromise?promise=this._ongoingPromise:(promise=$q.resolve(),typeBuildFunctions.push(this._buildTopology),typeBuildFunctions.push(this._buildGlobalTopology),typeBuildFunctions.push(this._buildFortiGateInterfaces),typeBuildFunctions.push(this._buildAccessDevices),typeBuildFunctions.push(this._buildAppliances),typeBuildFunctions.push(this._buildAccessDeviceInterfaces),typeBuildFunctions.push(this._buildSlaveFortiGates)),this._shouldIncludeNonCachedBuildType(this.BUILD_TYPES.WITH_EXTENSION_DEVICES,wantedBuildType)&&typeBuildFunctions.push(this._buildExtensionDevices),this._shouldIncludeNonCachedBuildType(this.BUILD_TYPES.WITH_DETAILED_DEVICES,wantedBuildType)&&typeBuildFunctions.push(this._getUserDeviceAndAwsInstanceInfo),typeBuildFunctions.push(this._constructGraphs.bind(this)),this._ongoingType=this._ongoingType|wantedBuildType;var _ongoingTypeBackup=this._ongoingType;return promise=this._ongoingPromise=promise.then(function(){return typeBuildFunctions.reduce(function(previous,current){return previous.then(function(){return current()})},$q.resolve()).then(function(){promise===this._ongoingPromise&&(this._ongoingPromise=null,this._ongoingType=null,this._previousBuildType=_ongoingTypeBackup)}.bind(this))}.bind(this))}}),Topology.prototype.removePendingDevice=function(serial){var indexOf=this.pendingDevices.findIndex(function(device){return device.serial===serial});indexOf>=0&&(this.pendingDevices.splice(indexOf,1),delete this.pendingDeviceMapping[serial])},Topology.prototype._shouldIncludeNonCachedBuildType=function(buildType,wantedType){return 0!=(wantedType&buildType)&&(!this._ongoingType||0==(this._ongoingType&buildType))},Topology.prototype._createFortiGate=inject.mark(function($injector,state){return function(csfEntry){const constructor=state.csf_enabled?FortiGate:StandaloneFortiGate,locals={csfEntry:csfEntry,proxyRootSerial:state.serial};return $injector.instantiate(constructor,locals)}}),Topology.prototype._addFgt=function(fortigate){var isCompatible=fortigate.isFirmwareCompatible,map=isCompatible?this.fortigateMapping:this.incompatibleFortigateMapping,array=isCompatible?this.fortigates:this.incompatibleFortigates,serial=fortigate.serial;this._removeFortiGateExec(serial,!isCompatible),map[serial]||(array.push(fortigate),map[serial]=fortigate,isCompatible||fLog.warn("Found incompatible fortigate "+serial))},Topology.prototype._addFgtToGlobal=inject.mark(function($injector,state){return function(serial,responseEntry){const localBranchFgt=this.getDevice(serial),existing=this.globalFortigateMapping[serial];let newFgt;return existing?existing!==localBranchFgt&&existing.updateCsfEntry(responseEntry):localBranchFgt?newFgt=this.globalFortigateMapping[serial]=localBranchFgt:responseEntry&&(newFgt=this.globalFortigateMapping[serial]=$injector.instantiate(GlobalFortiGate,{csfEntry:responseEntry,proxyRootSerial:state.serial})),existing||this.globalFortigates.push(newFgt),existing}}),Topology.prototype._removeFgtFromGlobal=function(serial){const fgt=this.globalFortigateMapping[serial];fgt&&(delete this.globalFortigateMapping[serial],this.globalFortigates.splice(this.globalFortigates.indexOf(fgt),1))},Topology.prototype._removeFortiGate=function(serial){[!0,!1].forEach(isCompatible=>{this._removeFortiGateExec(serial,isCompatible)})},Topology.prototype._removeFortiGateExec=function(serial,isCompatible){const map=isCompatible?this.fortigateMapping:this.incompatibleFortigateMapping,array=isCompatible?this.fortigates:this.incompatibleFortigates,fortigate=map[serial];fortigate&&(array.splice(array.indexOf(fortigate),1),delete map[serial])},Topology.prototype._removeFortiNAC=function(serial){var map=this.fortinacMapping,array=this.fortinacs,fortinac=map[serial];fortinac&&(array.splice(array.indexOf(fortinac),1),delete map[serial])},Topology.prototype.getDevice=function(serial){return Object.assign({},this.fortigateMapping,this.incompatibleFortigateMapping,this.fortinacMapping)[serial]},Topology.prototype.getFgts=function(withIncompatible,withHa){let result=this.fortigates;return withIncompatible&&(result=[...result,...this.incompatibleFortigates]),withHa&&(result=[...result,...this.slaveFortigates]),result},Topology.prototype.getDevices=function(withIncompatible){let devices=[...this.fortigates,...this.fortinacs];return withIncompatible?[...devices,...this.incompatibleFortigates]:devices},Topology.prototype.getAllFgts=function(){const fortigates=new Set([this.thisFortigate,...this.pendingDevices,...this.deviceAuthorizationList.map(device=>{let onlineDevice=this.getDevice(device.serial);return onlineDevice||device})]);return Array.from(fortigates)},Topology.prototype.setToMaster=function(){this.selectedFortigate&&this.selectedFortigate.isHaSlave&&(this.selectedFortigate=this.getDevice(this.selectedFortigate.serial))},Topology.prototype._createCatchForFailedFortiGateRequest=inject.mark(function($q){return function(fortigate,requestString){return function(){var serial=fortigate.serial;return this._removeFortiGate(serial),fLog.error('Removing FortiGate "'+serial+'" from topology due to failed '+requestString+" request"),$q.resolve()}.bind(this)}}),Topology.prototype._constructGraphs=function(){const devices=this.getFgts(!0).reduce((prev,fortigate)=>(prev.push(fortigate,...fortigate.fortiswitches,...fortigate.fortiaps),prev.push(...fortigate.fabricDevices),this.upstreamFortigate&&prev.push(this.upstreamFortigate),prev),[...this.fortinacs,...this.slaveFortigates,...this.pendingDevices,...this.deviceAuthorizationList.filter(entry=>entry.isAuthorized()&&!entry.isConnected())]),globalDevices=this.globalFortigates.concat(this.getFgts(!0)),{nodes:nodes,edges:edges}=TopologyGraphObjects.constructNodesAndEdges(devices,TopologyNode,TopologyEdge),{nodes:globalNodes,edges:globalEdges}=TopologyGraphObjects.constructNodesAndEdges(globalDevices,TopologyNode,TopologyEdge),graph=new TopologyGraph(nodes,edges),globalGraph=new TopologyGraph(globalNodes,globalEdges);this.spanningTreeMap=fTree.getSpanningTreeMap(graph,this.upstreamFortigate?graph.nodes.find(node=>node.id===this.upstreamFortigate.serial):graph.nodes.find(node=>node.id===this.thisFortigate.serial),bfsState=>{const nodeData=bfsState.node.data,parentNodeId=bfsState.parent?bfsState.parent.id:null,edge=bfsState.edge;if(parentNodeId){const parentProperties=edge.properties.get(bfsState.parent);nodeData.parentDownstreamInterface=parentProperties&&parentProperties.intf}edge&&(nodeData.viaRouterNat=edge.hasRouterNat,nodeData.viaVPN=edge.hasVPNTunnel)});let globalRootFgt=globalGraph.nodes.find(node=>node.data.isRoot);globalRootFgt||(globalRootFgt=globalGraph.nodes.find(node=>node.data.isCurrent)),this.globalSpanningTreeMap=fTree.getSpanningTreeMap(globalGraph,globalRootFgt),this.blockCutTreeMap=this._getBlockCutTreeMap(devices),Object.keys(this.spanningTreeMap).forEach(id=>{const treeNode=this.spanningTreeMap[id];if(treeNode.node instanceof FortiGate){const fortigate=treeNode.node,cnraSerial=fortigate&&fortigate.path?fortigate.path.split(":")[1]:null,cnra=this.spanningTreeMap[cnraSerial];cnra&&cnra.node&&cnra.node.parentDownstreamInterface&&(fortigate.proxyRootVdom=cnra.node.parentDownstreamInterface.vdom)}}),this.spanningTreeNodes=Object.keys(this.spanningTreeMap).map(key=>this.spanningTreeMap[key]).sort(fTree.createNodeComparator(this.spanningTreeMap,({nodeA:nodeA,nodeB:nodeB})=>csfInstancesSort(nodeA,nodeB))),this.globalSpanningTreeNodes=Object.keys(this.globalSpanningTreeMap).map(key=>this.globalSpanningTreeMap[key]).sort(fTree.createNodeComparator(this.globalSpanningTreeMap,({nodeA:nodeA,nodeB:nodeB})=>csfInstancesSort(nodeA,nodeB)))},Topology.prototype._getBlockCutTreeMap=function(devices){const{nodes:condensedNodes,edges:condensedEdges}=CondensedTopologyGraphObjects.constructNodesAndEdges(devices),stackingHierarchy=new CondensedTopologyGraph(condensedNodes,condensedEdges).getBlockCutHierarchy(!1),blockCutTreeMap={};let index=0;function dfsVisitCallback(hierarchy){const node=hierarchy.data,parentInstance=blockCutTreeMap[hierarchy.parentId]&&blockCutTreeMap[hierarchy.parentId].node,bcTreeParentId=parentInstance?parentInstance.id:node.data.parentFortigateId,instance=node.data;if(instance){instance.bcTreeParentId=bcTreeParentId;const parent=blockCutTreeMap[bcTreeParentId];blockCutTreeMap[hierarchy.id]=new fTree.TreeNode(hierarchy.id,instance,parent,index),parent&&parent.children.push(hierarchy.id),index++}}return stackingHierarchy.children.forEach(function(hierarchy){hierarchy.depthFirstSearch(dfsVisitCallback)}),blockCutTreeMap},Topology.prototype.addOmniselectProxySources=function(sourceID){const SOURCES=Omniselect.prototype.SOURCES,select=fSelect;let inlineEditCreate=!1;const makeProxySource=(fortigate,destSourceID,srcSourceID)=>{var sourceConfig,extension,alias;!SOURCES[destSourceID]&&SOURCES[srcSourceID]&&(sourceConfig=SOURCES[srcSourceID],extension={csfPath:fortigate.path,fortigate:fortigate},(alias=sourceConfig.aliasFor)?Array.isArray(alias)?extension.aliasFor=alias.concat([srcSourceID]):extension.aliasFor=[alias,srcSourceID]:extension.aliasFor=srcSourceID,inlineEditCreate||(extension.createNew=!1,extension.inlineEdit=!1),extension.createNewDatasource=sourceConfig.createNewDatasource||srcSourceID,SOURCES[destSourceID]=Object.assign({},SOURCES[srcSourceID],extension))};if("object"==typeof sourceID){const config=sourceID;sourceID=config.id,inlineEditCreate=config.inlineEditCreate}this.getFgts().forEach(function(fortigate){const csfSource=select.makeCSFProxySourceID(sourceID,fortigate.path);if(makeProxySource(fortigate,csfSource,sourceID),select.doesAllVdomSourceExist(sourceID)){const allVdomSource=select.makeAllVdomsSourceID(sourceID),allVdomCsfSource=select.makeAllVdomsSourceID(csfSource);makeProxySource(fortigate,allVdomCsfSource,allVdomSource)}if(select.doesGlobalSourceExist(sourceID)){const globalSource=select.makeGlobalSourceID(sourceID),globalCsfSource=select.makeGlobalSourceID(csfSource);makeProxySource(fortigate,globalCsfSource,globalSource)}})},Topology.prototype.addCSFOmniselectSources=function(){const sources=SelectConfigFactory(ftnt_shared,fLang,fDom,this);sources.csfFortiGates.sortFunction=csfFortiGateSort,sources.csfPendingDevices.sortFunction=csfFortiGateSort,Omniselect.prototype.SOURCES.csfFortiGates=sources.csfFortiGates,Omniselect.prototype.SOURCES.csfFortiSwitches=sources.csfFortiSwitches,Omniselect.prototype.SOURCES.csfFortiAPs=sources.csfFortiAPs,Omniselect.prototype.SOURCES.csfFortiNACs=sources.csfFortiNACs,Omniselect.prototype.SOURCES.csfPendingDevices=sources.csfPendingDevices,Omniselect.prototype.SOURCES.csfPreauthorizedDevices=sources.csfPreauthorizedDevices,Omniselect.prototype.SOURCES.csfFabricDevices=sources.csfFabricDevices,Omniselect.prototype.SOURCES.csfAppliances=sources.csfAppliances,this.addCSFOmniselectFabricDeviceWidgetSource()},Topology.prototype.addCSFOmniselectFabricDeviceWidgetSource=inject.mark(function(lang,$q){var translate=function(key){return lang(key).toString()};return function(){Omniselect.prototype.SOURCES.csfFabricDeviceWidgets={dontCache:!0,name:lang("Fabric Device Widget").toString(),valueFunction:function(entry){return entry.id},formatFunction:function(entry){return entry.getLabel()},data:function(getSelectedDevice){return Omniselect.getSourceData("csfFabricDevices").then(function(devices){var promises=[],result=[],selectedDevice=getSelectedDevice&&getSelectedDevice();return devices.forEach(function(device){selectedDevice&&device.q_origin_key!==selectedDevice.q_origin_key||promises.push(device.getWidgetList().then(function(widgets){widgets&&(result=result.concat(widgets))}))}),$q.all(promises).then(function(){return result})})},sortFunction:function(valueA,valueB,entryA,entryB){return ftnt_shared.util.fastLocaleCompare(entryA.getUnescapedLabel(),entryB.getUnescapedLabel())},tooltipKeys:{device:new TooltipKey(translate("Device"),function(widget){return Omniselect.processedFormatEntrySync(widget.device)}),supported_visualization_types:new TooltipKey(translate("Visualization Type"),function(widget){var supported=(widget.supported_visualization_types||[]).filter(function(t){return FabricDevice.SUPPORTED_VISUALIZATION_TYPES.includes(t)});return 1===supported.length?translateType(supported[0]):fFormatters.nColumnListFormat(supported,1,translateType);function translateType(type){return translate("dashboard_widget_fabric_device_visualization_type::"+type)}})},searchKeys:{device:!0}}}});const compareByProperty=fSort.compareByProperty,compareByOrder=fSort.compareByOrder;function csfInstancesSort(a,b){var TYPE_ORDERS={FGT:{sortValue:0,sort:()=>csfFortiGateSort(null,null,a,b),needAction:entry=>entry instanceof PendingDevice},FSW:{sortValue:1,sort:csfFswAndFapSort,needAction:entry=>!entry.isAuthorized()},FAP:{sortValue:2,sort:csfFswAndFapSort,needAction:entry=>!entry.isAuthorized()},FABRIC_DEVICE:{sortValue:3,sort:compareByOrder([compareByProperty(entry=>entry.getLabel())]),needAction:()=>!1},OTHERS:{sortValue:4,sort:()=>0,needAction:entry=>entry instanceof PendingDevice}};return compareByOrder([compareByProperty(entry=>{return TYPE_ORDERS[getType(entry)].needAction(entry)}),compareByProperty(entry=>{const order=TYPE_ORDERS[getType(entry)];return order&&order.sortValue||0}),()=>{const aType=getType(a),bType=getType(b),order=TYPE_ORDERS[aType];return aType===bType&&order.sort?order.sort(a,b):0}])(a,b);function getType(instance){return function(instance){return Object.keys(FortiGateClasses).some(key=>instance instanceof FortiGateClasses[key])}(instance)?"FGT":function(instance){return instance instanceof FabricDevice}(instance)?"FABRIC_DEVICE":function(instance){return instance instanceof FortiSwitch||Array.isArray(instance.fortiswitchMembers)}(instance)?"FSW":function(instance){return instance instanceof FortiAp}(instance)?"FAP":"OTHERS"}function csfFswAndFapSort(){return compareByOrder([compareByOrder([compareByProperty(entry=>!entry.isAuthorized()),compareByProperty(entry=>entry.hasPendingStatusUpdate||entry.isConnected())]),compareByProperty(entry=>entry.getLabel())])(a,b)}}function csfFortiGateSort(valueA,valueB,entryA,entryB){const FORTIGATE_SORT_ORDER=[compareByProperty(entry=>"all"===entry.q_origin_key),compareByOrder([compareByProperty(entry=>entry instanceof PendingDevice),compareByProperty(entry=>!(entry instanceof PreauthorizedDevice))]),compareByProperty(entry=>(entry.csfEntry&&entry.csfEntry.path||"").split(":").length),compareByProperty(entry=>entry.ha&&entry.ha.length?entry.serial:entry.getLabel?entry.getLabel():entry.serial),compareByProperty(entry=>entry.isHaMaster)];return compareByOrder(FORTIGATE_SORT_ORDER)(entryA,entryB)}Topology.prototype._buildThisFortiGateManually=inject.mark(function(state){return function(){this.thisFortigate&&this.thisFortigate instanceof StandaloneFortiGate&&(!state.vdom_mode||!state.current_vdom||this.thisFortigate.vdom===state.current_vdom)||(this.thisFortigate=this._createFortiGate({serial:state.serial,path:state.serial,is_ha_master:state.is_ha_master})),this.thisFortigate._populateState(),Omniselect.notifySourceChanged("csfFortiGates")}}),Topology.prototype._buildFortiGates=inject.mark(function($http,$q,$injector,state){return function(){var uri=state.vdom_mode&&!state.current_vdom?"/api/v2/monitor/system/csf?scope=global":"/api/v2/monitor/system/csf";return $http.get(uri).then(function(response){var responseData=response.data,results=responseData.results,treeRevision=new VdomRevision(responseData.revision,state.current_vdom),existingDeviceSeen={},statePromises=[],responseComplete=!0,notifyOmniselectSourceChange=!1;if(!treeRevision.equals(this.currentRevision)&&results){notifyOmniselectSourceChange=!0,fLog.info("Fabric topology tree revision has changed."),this.getDevices(!0).forEach(function(fortigate){fortigate.isCurrent||(existingDeviceSeen[fortigate.serial]=!1)}),Object.values(results.device_type_list_keys).reduce((res,key)=>[...res,...results[key]||[]],[]).forEach(function(entry){var serial=entry.serial;entry.ip_str;if(entry.path===entry.serial&&(entry.object_unification?this.csfObjectSyncEnabled=!0:this.csfObjectSyncEnabled=!1),entry.path&&!entry.path.includes(state.serial))this.globalFortigatesResponseEntries.push(entry);else{var existingDevice=this.getDevice(serial),addFgt=function(fgt){existingDevice&&(existingDeviceSeen[serial]=!0),this._addFgt(fgt)}.bind(this);existingDevice instanceof StandaloneFortiGate&&(this._removeFortiGate(serial),existingDevice=null);var isCurrent=entry.serial===state.serial;if(function(existingDevice,newResponse,isCurrent){if(!existingDevice)return!0;if(isCurrent&&existingDevice.vdom!==state.current_vdom)return!0;var existingResponse=existingDevice.csfEntry||{};return Object.keys(existingResponse).length!==Object.keys(newResponse).length||Object.keys(existingResponse).some(function(key){return"fsw_list"!==key&&"fap_list"!==key&&!angular.equals(existingResponse[key],newResponse[key])})}(existingDevice,entry,isCurrent))if(this._fortigateResponsePopulated(entry)||isCurrent){if(existingDevice?fLog.info(`Device updated in fabric: "${serial}"`):fLog.info(`Device added to fabric: "${serial}"`),"fortinac"===entry.device_type){const fortinac=$injector.instantiate(FortiNAC,{csfEntry:entry,proxyRootSerial:state.serial});existingDevice?existingDeviceSeen[serial]=!0:(this.fortinacs.push(fortinac),this.fortinacMapping[serial]=fortinac)}else if("fortigate"===entry.device_type){var fortigate=existingDevice||this._createFortiGate(entry);existingDevice&&existingDevice.updateCsfEntry(entry),fortigate.isCurrent&&(this.thisFortigate=fortigate,fortigate.parentFortigateId&&fortigate.csfEntry.path&&(this.upstreamFortigate=$injector.instantiate(UpstreamFortiGate,{currentFortigate:this.thisFortigate}))),fortigate.isFirmwareCompatible?statePromises.push(fortigate._populateState().then(()=>{addFgt(fortigate),fortigate.isCurrent&&this._buildPendingDevices(results)},function(){fLog.error("Failed to retrieve state information for "+serial)})):addFgt(fortigate)}}else fLog.info('Still waiting on "'+serial||!1),responseComplete=!1;else existingDeviceSeen[serial]=!0}}.bind(this)),responseComplete&&(this.currentRevision=treeRevision)}return $q.all(statePromises).then(function(){SUPPORTED_OMNISELECT_CSF_PROXY_SOURCES.forEach(function(sourceID){this.addOmniselectProxySources(sourceID)}.bind(this)),Object.keys(existingDeviceSeen).forEach(function(serial){existingDeviceSeen[serial]||(this._removeFortiGate(serial),this._removeFortiNAC(serial),fLog.info(`Device removed from fabric: "${serial}"`))}.bind(this)),notifyOmniselectSourceChange&&(Omniselect.notifySourceChanged("csfFortiGates"),Omniselect.notifySourceChanged("csfFortiNACs"))}.bind(this))}.bind(this))}}),Topology.prototype._buildGlobalTopology=inject.mark(function(){return function(){let notifySourceChange=!1,promise=Promise.resolve();const existingDeviceSeen={};return this.globalFortigates.forEach(fgt=>{existingDeviceSeen[fgt.serial]=!1}),this.isRootFortigate||this.globalFortigatesResponseEntries.forEach(entry=>{let isNew=!1;entry.serial===this.upstreamSerial?(this.upstreamFortigate.updateCsfEntry(entry),this.globalFortigateMapping[this.upstreamSerial]||(this.globalFortigates.push(this.upstreamFortigate),this.globalFortigateMapping[this.upstreamSerial]=this.upstreamFortigate,isNew=!0)):isNew=this._addFgtToGlobal(entry.serial,entry),existingDeviceSeen[entry.serial]=!0,notifySourceChange=notifySourceChange||isNew}),promise.then(()=>{notifySourceChange&&Omniselect.notifySourceChanged("csfFortiGates"),Object.keys(existingDeviceSeen).forEach(function(serial){existingDeviceSeen[serial]||this._removeFgtFromGlobal(serial)}.bind(this))})}}),Topology.prototype._buildTopology=inject.mark(function($q,state){return function(){this.csfEnabled=state.csf_enabled,this.isRootFortigate=state.isRootFortiGate(),this.groupName=state.csf_group_name,this.csfSyncMode=state.csf_sync_mode;var promises=[];return this.csfEnabled&&state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM_CFG)?promises.push(this._buildFortiGates()):promises.push($q.reject()),$q.all(promises).catch(function(){this.upstreamFortigate=null,this.selectedFortigate=null,this._buildThisFortiGateManually(),this.fortigates=[this.thisFortigate],this.currentRevision=new VdomRevision(-1,state.current_vdom),this.fortigateMapping={},this.fortigateMapping[this.thisFortigate.serial]=this.thisFortigate}.bind(this)).finally(()=>{this.selectedFortigate||(this.selectedFortigate=this.thisFortigate)})}}),Topology.prototype._buildFortiGateInterfaces=inject.mark(function($q){return function(){return $q.all(this.getFgts().map(fortigate=>{const intfsPromise=fortigate._populateInterfaces().catch(this._createCatchForFailedFortiGateRequest(fortigate,"interfaces")),csfSettingsPromise=fortigate._populateCsfSettings().catch(this._createCatchForFailedFortiGateRequest(fortigate,"csfSettings"));return $q.all([intfsPromise,csfSettingsPromise])}))}}),Topology.prototype._buildExtensionDevices=inject.mark(function($q){return function(){const promises=this.getFgts().map(fortigate=>fortigate.populateConnectedExtensionDevices().catch(this._createCatchForFailedFortiGateRequest(fortigate,"extension device")));return $q.all(promises)}}),Topology.prototype._buildAccessDevices=inject.mark(function($q){return function(){const promises=this.getFgts().map(fortigate=>fortigate.populateConnectedAccessDevices().catch(this._createCatchForFailedFortiGateRequest(fortigate,"access device")));return $q.all(promises)}}),Topology.prototype._buildAppliances=inject.mark(function($q){return function(){this.appliances=[],this.appliancesMap={};var promises=[...this.globalFortigates,...this.getFgts()].map(function(fortigate){return fortigate.populateAppliances().then(appliances=>{this.appliances=this.appliances.concat(appliances)},this._createCatchForFailedFortiGateRequest(fortigate,"appliances"))}.bind(this));return $q.all(promises).then(()=>{this.appliancesMap=this.appliances.reduce((acc,appliance)=>(acc[appliance.serial]=appliance,acc),{}),Omniselect.notifySourceChanged("csfAppliances")})}}),Topology.prototype._buildAccessDeviceInterfaces=inject.mark(function($q){return function(){const promises=this.getFgts().reduce((prev,fortigate)=>{const fswPromises=fortigate.fortiswitches.map(fsw=>fsw._populateInterfaces()),fapPromises=fortigate.fortiaps.map(fap=>fap._populateInterfaces());return prev.concat(fswPromises).concat(fapPromises)},[]);return $q.all(promises)}}),Topology.prototype._getUserDeviceAndAwsInstanceInfo=inject.mark(function($q){return function(){const promises=this.getFgts().map(fgt=>fgt._populateUserDeviceAndAwsInstanceInfo());return $q.all(promises).catch(angular.noop)}}),Topology.prototype._buildSlaveFortiGates=inject.mark(function($q,$injector){return function(){return $q(resolve=>{this.slaveFortigates=[],this.slaveFortigateMapping={},this.getFgts().forEach(masterFgt=>{(masterFgt.ha||[]).forEach(ha=>{const slaveFgt=$injector.instantiate(SlaveFortiGate,{masterFgt:masterFgt,serial:ha.serial,hostname:ha.hostname});slaveFgt&&this.slaveFortigateMapping[slaveFgt.id]!==slaveFgt&&(this.slaveFortigateMapping[slaveFgt.id]=slaveFgt,this.slaveFortigates.push(slaveFgt))})}),resolve()})}}),Topology.prototype._fortigateResponsePopulated=function(entry){return entry.downstream_intf&&"N/A"!==entry.downstream_intf&&entry.serial},Topology.prototype.csfInstancesSort=function(entryA,entryB){return csfInstancesSort(entryA,entryB)},Topology.prototype._buildPendingDevices=inject.mark(function($q,$injector,state){return function(csfAPIResponse){let pendingDevices=[],deviceAuthorizationList=[];!this.csfEnabled||!this.isRootFortigate||state.vdom_mode&&this.thisFortigate.vdom!==state.GLOBAL_VDOM?(pendingDevices=[],deviceAuthorizationList=[]):(pendingDevices=csfAPIResponse.pending||[],deviceAuthorizationList=csfAPIResponse.trusted||[]);let existingPendingDeviceSeen=(this.pendingDevices||[]).reduce(function(prev,instance){return prev[instance.serial]=!1,prev},{}),pendingDevicesChange=!1;pendingDevices.forEach(pendingInfo=>{const existingInfo=this.pendingDeviceMapping[pendingInfo.serial]&&this.pendingDeviceMapping[pendingInfo.serial].monitorResponseEntry;let instance={};instance=$injector.instantiate(PendingDevice,{csfEntry:pendingInfo});const hasValidParent=!!this.getDevice(instance.parentFortigateId);!hasValidParent||existingInfo&&angular.equals(existingInfo,pendingInfo)||(existingInfo?fLog.info(`Device updated in pending list:\n                            "${pendingInfo.serial}"`):(fLog.info(`Device added to pending list: "${pendingInfo.serial}"`),pendingDevicesChange=!0),instance.uniqueParentSerial=instance.uniqueBcTreeParentSerial=instance.parentFortigateId,this.pendingDeviceMapping[pendingInfo.serial]=instance),hasValidParent&&(existingPendingDeviceSeen[pendingInfo.serial]=!0)}),Object.keys(existingPendingDeviceSeen).forEach(serial=>{existingPendingDeviceSeen[serial]||(fLog.info('FortiGate removed from pending list: "'+serial+'"'),delete this.pendingDeviceMapping[serial],pendingDevicesChange=!0)}),this.pendingDevices=Object.keys(this.pendingDeviceMapping).map(serial=>this.pendingDeviceMapping[serial]),Omniselect.notifySourceChanged("csfPendingDevices"),this.deviceAuthorizationList=deviceAuthorizationList.map(entry=>{let instance={};return instance=$injector.instantiate(PreauthorizedDevice,{csfEntry:entry,parentFortigateId:this.thisFortigate.serial})}),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),pendingDevicesChange&&fStructure.updateNotificationsIfActive("unauthorizedCsfDevices")}}),Topology.prototype._createTopologyElement=function(selectInstance,entry){return this._createAngularElement(selectInstance,entry.datasource,entry.id+"-topology",'<f-csf-truncated-tree device="entry"></f-csf-truncated-tree>',{entry:entry})},Topology.prototype._createAngularElement=inject.mark(($rootScope,$compile,$timeout)=>(function(selectInstance,datasource,lifeCycleKey,html,scopeData){if(!html)return;const element=document.createElement("div"),lifeCycleData=selectInstance.getSourceLifeCycleData(datasource);let scope=lifeCycleData[lifeCycleKey];return scope||(scope=lifeCycleData[lifeCycleKey]=$rootScope.$new(!0)),element.innerHTML=html,$compile(element)(scope),Object.assign(scope,scopeData),$timeout(),element})),module.service("csfTopology",Topology)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},237:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(67),__webpack_require__(238),__webpack_require__(84)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,fosCommonSymbols,CsfFortiNAC,BaseCsfObject){const Omniselect=ftnt_shared.Omniselect,CMDB_CSF_URI="/api/v2/cmdb/system/csf",{DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=fosCommonSymbols,extendableCsfFortiNAC=(0,BaseCsfObject.GuiCsfMixin)(CsfFortiNAC);return class extends extendableCsfFortiNAC{constructor(csfEntry,proxyRootSerial){super(csfEntry,proxyRootSerial),this.hasPendingStatusUpdate=!1}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData,$injector){const instance=$injector.instantiate(this,{csfEntry:instanceJSONData.csfEntry,proxyRootSerial:instanceJSONData.proxyRootSerial});return Object.assign(instance,instanceJSONData),instance}get sourceID(){return"csfFortiNACs"}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfFortiNAC,"getIconClass")}getLabel(){return this.name||this.id}canDeauthorize($INJECTABLE$,csfTopology,state){return()=>csfTopology.isRootFortigate&&state.adminHasWritePermissionForTable("system","csf")}connectToGui($INJECTABLE$,$window){return()=>{var url=this.getManagementURL();url&&$window.open(url,"_blank")}}toggleAuthorization($INJECTABLE$,$http,csfTopology){return()=>{const uri=`${CMDB_CSF_URI}/trusted-list/${this.id}`;let promise;return this.hasPendingStatusUpdate=!0,(promise=$http.delete(uri).then(()=>{this.action="",csfTopology.invalidateLastBuildIfNecessary(),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),Omniselect.notifySourceChanged("csfPendingDevices"),Omniselect.notifySourceChanged("csfFortiNACs")})).then(()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deauthorize",!0),csfTopology.invalidateLastBuildIfNecessary()},()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deauthorize",!1)})}}denyAuthorization($INJECTABLE$,$http,csfTopology){return()=>{const authEntry={action:"deny"},uri=`${CMDB_CSF_URI}/trusted-list/${this.serial}`;return this.hasPendingStatusUpdate=!0,$http.put(uri,authEntry).then(()=>{this.action=authEntry.action,this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!0),csfTopology.invalidateLastBuildIfNecessary(),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),Omniselect.notifySourceChanged("csfPendingDevices"),Omniselect.notifySourceChanged("csfFortiNACs")},()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!1)})}}canConnectToGui(){return!0}isConnected(){return!0}canDenyAuthorization(){return!0}isAuthorized(){return!0}canAuthorize(){return!1}canUpgradeFirmware(){return!1}requiresAuthorizationDecision(){return!1}canConnectToCli(){return!1}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},239:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){const MANAGED_AP_VIEWS={AP:"ap",RADIO:"radio",GROUP:"group"},WIDGET_TYPES={AP_STATUS:"ap-status",CHANNEL_UTILIZATION:"channel-utilization",INTERFERING_SSIDS:"interfering-ssids",CLIENT_SIGNAL_STRENGTH:"client-signal-strength",CLIENTS_BY_AP:"clients-by-ap",HISTORICAL_CLIENTS:"historical-clients",WIFI_LOGIN_FAILURES:"wifi-login-failures",ROGUE_AP:"rogue-ap"},WIFI_HELP_PREFIX="WifiHealthMonitor::help";class WifiDashboardConfig{constructor(lang){this._settings={[WIDGET_TYPES.AP_STATUS]:{view:MANAGED_AP_VIEWS.AP,hasBandSelection:!1,getTableSettings:function(){return{defaultSectionColumn:"status",sectionSortDirection:"desc"}},chartSettings:{columns:["status","health_2G_radio","health_5G_radio"],get totalLabels(){return this.columns.map(()=>lang("FortiAPs").toString())}}},[WIDGET_TYPES.CHANNEL_UTILIZATION]:{view:MANAGED_AP_VIEWS.RADIO,hasBandSelection:!0,getTableSettings:function({wifiBands:wifiBands}){return{defaultColumns:["id","access_point","channel_utilization","health","ssid","operatingChannel","radioType","clientCount","operatingPower"],sectionSortDirection:"desc",defaultSectionColumn:2===wifiBands.length?"radioFrequency":null,defaultSortDirection:"desc",sourceFilterFunction:function(source){return source.filter(entry=>entry.$apInstance&&"connected"===entry.$apInstance.status&&null!=entry.channelUtilization&&(!wifiBands||wifiBands.includes(entry.radioFrequency)))}}},chartSettings:{columns:["channel_utilization_level","health","client_count_level"],get totalLabels(){return this.columns.map(()=>lang("Radios").toString())}},widgetInfo:{main:lang(`${WIFI_HELP_PREFIX}.channelUtilization`)}},[WIDGET_TYPES.INTERFERING_SSIDS]:{view:MANAGED_AP_VIEWS.RADIO,hasBandSelection:!0,getTableSettings:function({wifiBands:wifiBands}){return{defaultColumns:["id","access_point","interfering_aps","health","ssid","operatingChannel","radioType","clientCount","operatingPower"],sectionSortDirection:"desc",defaultSectionColumn:2===wifiBands.length?"radioFrequency":null,defaultSortColumn:"interfering_aps",defaultSortDirection:"desc",sourceFilterFunction:function(source){return source.filter(entry=>entry.$apInstance&&"connected"===entry.$apInstance.status&&wifiBands.includes(entry.radioFrequency)&&entry.detectInterfering)}}},chartSettings:{columns:["interfering_aps_level","health","client_count_level"],get totalLabels(){return this.columns.map(()=>lang("Monitoring Radios").toString())}},widgetInfo:{main:lang(`${WIFI_HELP_PREFIX}.interferenceRequirement`),sub:[lang(`${WIFI_HELP_PREFIX}.interferenceWIDSandRogueAP`),lang(`${WIFI_HELP_PREFIX}.interferenceRadioProvisioning`)]}},[WIDGET_TYPES.CLIENT_SIGNAL_STRENGTH]:{hasBandSelection:!0,getTableSettings:function({wifiBands:wifiBands}){return{defaultColumns:["ip","mac","signal","snr","wtp_id","ssid","user","device","channel","bandwidth_trx","association_time"],defaultSectionColumn:2===wifiBands.length?"band":null,sectionSortDirection:"desc",defaultSortColumn:"signal",defaultSortDirection:"asc",sourceFilterFunction:function(source){return source.filter(entry=>entry.radio_type&&"unknown"!==entry.radio_type&&wifiBands.includes(entry.frequency))}}},chartSettings:{columns:["signal_strength","band","technology"],get totalLabels(){return this.columns.map(()=>lang("clients").toString())}}},[WIDGET_TYPES.CLIENTS_BY_AP]:{hasBandSelection:!0,getTableSettings:function({wifiBands:wifiBands}){return{defaultColumns:["ip","mac","user","device","wtp-id","ssid","channel","bandwidth_trx","snr","signal","association_time"],defaultSectionColumn:2===wifiBands.length?"band":null,sectionSortDirection:"desc",defaultSortColumn:"bandwidth_trx",defaultSortDirection:"desc",sourceFilterFunction:function(source){return source.filter(entry=>entry.radio_type&&"unknown"!==entry.radio_type&&wifiBands.includes(entry.frequency))}}},chartSettings:{columns:["wtp_id","technology","band"],get totalLabels(){return this.columns.map(()=>lang("clients").toString())}}},[WIDGET_TYPES.HISTORICAL_CLIENTS]:{hasBandSelection:!0},[WIDGET_TYPES.WIFI_LOGIN_FAILURES]:{hasBandSelection:!1},[WIDGET_TYPES.ROGUE_AP]:{hasBandSelection:!1}}}getSettings(key){return this._settings[key]}}WifiDashboardConfig.prototype.MANAGED_AP_VIEWS=MANAGED_AP_VIEWS,ngModule.service("wifiDashboardConfig",WifiDashboardConfig)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},241:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular){var HA_PREFIX="/api/v2/monitor/system/ha-",HA_PEER_URL=HA_PREFIX+"peer",HA_STATISTICS_URL=HA_PREFIX+"statistics",HA_CHECKSUMS_URL=HA_PREFIX+"checksums";function HAPeer($resource,$http,$q){var result=$resource(HA_PEER_URL,{serial_no:"@serialno",vcluster_id:"@vclusterId"},{get:{method:"GET",transformResponse:function(data){return fromMonitorApi(data)[0]}},fetch:{method:"GET",isArray:!0,transformResponse:fromMonitorApi},save:{method:"POST",url:HA_PEER_URL+"/update"}});return result.getStatistics=function(){return $http.get(HA_STATISTICS_URL)},result.fetchWithStatistics=function(){var peers=this.fetch(),promises={stats:result.getStatistics(),peers:peers.$promise,checksums:$http.get(HA_CHECKSUMS_URL,{headers:{"If-None-Match":null}}).catch($q.resolve.bind($q))};return peers.$promise=$q.all(promises).then(function(res){let statIndex=res.stats.data.results.reduce(indexBySn,{});res.peers.forEach(function(item){0===item.vcluster_id&&statIndex.hasOwnProperty(item.serial_no)&&Object.assign(item,statIndex[item.serial_no])});let checksumIndex={},masterIndex={};return 200===res.checksums.status&&res.checksums.data.results.reduce(indexBySn,checksumIndex),res.peers.forEach(function(item){if(item.serial_no&&checksumIndex.hasOwnProperty(item.serial_no)){let checksum=checksumIndex[item.serial_no];item.checksums=checksum.checksum,item.hasOwnProperty("master")||(item.master=!!checksum.is_manage_master)}item.master&&(masterIndex[item.vcluster_id]=item)}),res.peers.forEach(function(item){masterIndex[item.vcluster_id]&&(item.masterVcluster=masterIndex[item.vcluster_id])}),peers;function indexBySn(index,entry){return index[entry.serial_no]=entry,index}}),peers},result;function fromMonitorApi(data){return angular.fromJson(data).results}}return function(providers){providers.$provide.factory("haPeerResource",HAPeer)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},244:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(31),__webpack_require__(34),__webpack_require__(77),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,dom,datetime,TRIGGERS,ftnt_shared){const Omniselect=ftnt_shared.Omniselect,fStitchList={controller:StitchList,templateUrl:__webpack_require__(964),require:{slideController:"?^^fSlideContainer"},bindings:{filter:"<?"}};function StitchList($scope,injector){injector.injectMarked(this,{$scope:$scope})}return StitchList.prototype={muTable:null,statsMap:{},$onInit:inject.mark(function(CMDB,StitchModel){return function(){this.muTable={},this.stitchCmdb=new CMDB("system","automation-stitch",{model:StitchModel,datasource:1}),this._loadData()}}),_loadData:inject.mark(function($q,$http,fazStatus,CMDB,lang){return function(){var stitches=this.stitchCmdb.fetch();this.iocSupport=fazStatus.checkIocSupport(),this.fazSetting=new CMDB("log.fortianalyzer","setting").fetch(),this.muTable.options=this._getMuTableOptions(),this.muTable.source=stitches.$promise.then(function(){var promises=[];return promises.push($http.get("/api/v2/monitor/system/automation-stitch/stats/").then(function(response){response.data.results.forEach(function(result){this.statsMap[result.name]=result}.bind(this))}.bind(this))),stitches.forEach(function(stitch){promises.push(stitch.$trigger.$promise),promises.push(stitch.$actions.$promise)}),promises.push(Omniselect.getSourceData("csfFortiGates")),$q.all(promises)}.bind(this)).then(function(){if(this.filter&&this.filter.action){const actionType=this.filter.action;this.muTable.instance.search(lang(`fabric_automation::action::action-type.${actionType}`).toString())}return this.filter?stitches.filter(entry=>this._filterEntry(entry)):stitches}.bind(this))}}),_filterEntry(entry){if(!this.filter)return!0;if(this.filter.action){const actionType=this.filter.action;return entry.$actions.some(action=>action.checked&&actionType===action.name)}return!0},_getMuTableOptions:inject.mark(function(lang,state,fazStatus){return function(){return{id:"stitchList",defaultColumns:["name","destination","trigger-type","action-type","status","last_trigger_time"],defaultSortColumn:"name",defaultSectionColumn:"event-type",columns:[{id:"name",type:"standard",langKey:"Name",cellValueFunction:entry=>entry.name,cellFormatter:(entry,column,value)=>{return entry.$trigger["event-type"]===TRIGGERS.EVENT_TYPES.IOC?this.iocSupport.then(iocSupport=>iocSupport!==fazStatus.STATUS.IOC_SUPPORTED?warningContent():value,()=>value):entry.$trigger["event-type"]===TRIGGERS.EVENT_TYPES.FAZ_EVENT?this.fazSetting.$promise.then(setting=>"enable"!==setting.status?warningContent():value,()=>value):value;function warningContent(){return dom.elem("span",{className:"tooltip-hint"},{children:[dom.elem("f-icon",{className:"fa-warning"}),dom.elem("span",{textContent:value})]})}},onCellRendered:(cell,cellEntry)=>{function setTooltip(msg,interpolate,isHtml){const content=lang(msg,interpolate).toString();ftnt_shared.Tooltip.addToElement(cell,dom.elem("span",null,{children:[dom.elem("f-icon",{className:"fa-warning"}),dom.elem("span",isHtml?{innerHTML:content}:{textContent:content})]}),isHtml?{fixed:!0}:null)}cellEntry.$trigger["event-type"]===TRIGGERS.EVENT_TYPES.IOC?this.iocSupport.then(iocSupport=>{let langKey,isHtml,interpolate;iocSupport!==fazStatus.STATUS.IOC_SUPPORTED&&(iocSupport===fazStatus.STATUS.IOC_REQUIRE_FAZ?(langKey="(Configure FortiAnalyzer){LINK} for compromised host automation.",interpolate=[fazStatus.FAZ_SETTING_URL],isHtml=!0):iocSupport===fazStatus.STATUS.IOC_REQUIRE_LICENSE&&(langKey="FortiAnalyzer requires a FortiGuard Indicators of Compromise service license for compromised host automation."),setTooltip(langKey,interpolate,isHtml))}):cellEntry.$trigger["event-type"]===TRIGGERS.EVENT_TYPES.FAZ_EVENT&&this.fazSetting.$promise.then(setting=>{"enable"!==setting.status&&setTooltip("(Configure FortiAnalyzer){LINK} for event automation.",[fazStatus.FAZ_SETTING_URL],!0)})}},{id:"destination",type:"omniselect",langKey:"FortiGate",omniselectAllowFallback:!0,hidden:!state.csf_enabled,cellValueFunction:function(entry){return entry.$destinationModel},collectionEntryValueFunction:function(entry){return entry.q_origin_key},collectionEntryFormatter:function(entry,value){return dom.elem("div",null,{children:[dom.elem("f-icon",{className:"ftnt-standard-fortigate security-fabric-node"}),dom.elem("span",{textContent:value})]})}},{id:"event-type",type:"standard",langKey:"fabric_automation::Trigger",cellFormatter:function(entry,column){var triggerType=entry.$trigger["trigger-type"],eventType=entry.$trigger[column.id]||triggerType,namespace=triggerType===TRIGGERS.TYPES.EVENT?"fabric_automation::trigger::event-type.":"fabric_automation::trigger::trigger-type.",iconClass=TRIGGERS.genEventTypeIcon(eventType)||"ftnt-schedule-trigger",icon=dom.elem("f-icon",{className:iconClass}),event=dom.elem("span",{textContent:lang(namespace+eventType).toString()});return dom.elem("span",{},{children:[icon,event]})}},{id:"action-type",type:"collection",langKey:"fabric_automation::Action",cellValueFunction:function(entry){return entry.$actions.reduce(function(res,action){return action.checked&&res.push({text:lang("fabric_automation::action::action-type."+action.name),icon:action.iconClass}),res},[])},collectionEntryFormatter:function(entry){var icon=dom.elem("f-icon",{className:entry.icon}),action=dom.elem("span",{textContent:entry.text&&entry.text.toString()});return dom.elem("span",{},{children:[icon,action]})}},{id:"last_trigger_time",type:"date",langKey:"Last Trigger Time",cellValueFunction:function(entry){var stats=this.statsMap[entry.name];return stats?stats.last_trigger_time*datetime.S_TO_MS:null}.bind(this)},{id:"status",type:"standard",cellFormatter:function(entry,column,value){var status="enable"===entry[column.id]?"enabled":"disabled";return dom.elem("span",null,{children:[dom.elem("f-icon",{className:"fa-"+status}),dom.elem("span",{textContent:value})]})},cellValueFunction:function(entry,column){var status="enable"===entry[column.id]?"enabled":"disabled";return lang(status).toString()}}],onRowRendered:function(row,entry){return"disable"===entry.status&&row.classList.add("disabled")}}}})},function(providers,loader){return providers.$compile.component("fStitchList",fStitchList),loader.initModules([__webpack_require__(469),__webpack_require__(967)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},245:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(26),__webpack_require__(31),__webpack_require__(43)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,inject,dom,lang){function SystemExternalResourceEntry($scope,injector,$filter){injector.injectMarked(this,{$scope:$scope}),this.numberFilter=$filter("number")}return SystemExternalResourceEntry.prototype.$onInit=inject.mark(function(){return function(){this.settings=this.getSettings(),this.getEntryList(this.name).then(function(result){this.entries=result,this.source=result.entries||[]}.bind(this))}}),SystemExternalResourceEntry.prototype.getEntryList=inject.mark(function($http){return function(name){var params={mkey:name};return $http.get("/api/v2/monitor/system/external-resource/entry-list",{params:params}).then(function(response){return response.data.results},function(){return{}})}}),SystemExternalResourceEntry.prototype.getSettings=function(){const entryColumn={id:"entry",langKey:"entry"};return"address"===this.type&&(entryColumn.type="ip-collection",entryColumn.cellValueFunction=(entry=>entry.entry)),{id:"f-system-external-resource-entry",columns:[entryColumn,{id:"valid",langKey:"Validity",cellValueFunction:function(entry){return lang.translate(entry.valid?"Valid":"Invalid")},cellFormatter:function(entry,column,value){return dom.elem("span",{},{children:[dom.elem("f-icon",{className:entry.valid?"fa-accepted":"fa-error"}),dom.elem("span",{textContent:value})]})}}],defaultColumns:["entry","valid"]}},function(providers){providers.$compile.component("fSystemExternalResourceEntry",{controller:SystemExternalResourceEntry,bindings:{name:"<",type:"<"},templateUrl:__webpack_require__(969)})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},246:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(34),__webpack_require__(31),__webpack_require__(82),__webpack_require__(32),__webpack_require__(30),__webpack_require__(133),__webpack_require__(27),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((inject,fDatetime,fDom,fFortiguard,fFormatters,fLog,fAWS,notify,BUILD)=>{const FILTER_API="/api/v2/monitor/firewall/sdn-connector-filters",AWS_INSTANCE_API="/api/v2/monitor/aws/ec2",AWS_INSPECTOR_API="/api/v2/monitor/aws/inspector",RISK_LEVELS=["none","low","medium","high","critical"],ERR_PERMISSION_DENIED=BUILD.SYMBOLS.CFG_ER_NO_PERMISSION;const fSdnConnectorObjectsList={controller:class extends inject.Collectable{constructor(){super(),this.muTable={}}$onInit($INJECTABLE$,sdnConnectorUtils){return async()=>{await sdnConnectorUtils.initIfNecessary(),this.views=this.view?[this.view]:sdnConnectorUtils.getObjectListViews(this.connector),this.selectedView=this.view||this.views[0],this.viewsAllowed=this.views.reduce((viewsAllowed,viewName)=>(viewsAllowed[viewName]=!0,viewsAllowed),{}),this.allViewsAllowed=!0}}set selectedView(value){this._selectedView=value,this.refreshMuTable()}get selectedView(){return this._selectedView}refreshMuTable(){this.muTable.settings=this.getMuTableSettings(),this.muTable.source=this.getMuTableSource()}getColumnLangKey(langKey){return`FabricConnector::object-list::column.${langKey}`}getMuTableSettings($INJECTABLE$,sdnConnectorUtils){return()=>{const VIEWS=sdnConnectorUtils.VIEWS;return this.selectedView===VIEWS.FILTERS?this.getFilterSettings():this.selectedView===VIEWS.INSTANCES?this.getInstanceSettings():this.selectedView===VIEWS.CVE?this.getCVESettings():{}}}getFilterSettings($INJECTABLE$,lang,state){return()=>({useDefinedSection:!1,defaultSectionColumn:"category",defaultColumns:["category","filter","addresses"],columns:[{id:"category",cellValueFunction:entry=>{if(entry.$other)return lang("Other");const key=entry.$supportedFilterKey,type=this.connector&&this.connector.type;return lang(`DynamicAddr::${type}::filter.${key}`)}},{id:"filter",cellValueFunction:entry=>`${entry.key}=${entry.value}`},{id:"addresses",langKey:"Address Usage",type:"omniselect",hidden:!state.isVdomModeDisabled(),omniselectAllowFallback:!0,collectionEntryFormatter:entry=>entry.q_origin_key}]})}getCVESettings(){const attributesValue=(entry,column)=>entry.attributes[column.id];return{defaultSectionColumn:"agentId",defaultSortColumn:"createdAt",defaultSortDirection:"desc",defaultColumns:["agentId","CVE_ID","package_name","CVSS3_SCORE","createdAt","description"],columns:[{id:"agentId",langKey:this.getColumnLangKey("agentId"),cellValueFunction:(entry,column)=>entry.assetAttributes[column.id]},{id:"package_name",type:"collection",langKey:this.getColumnLangKey("package_name"),cellValueFunction:(...attrs)=>{const packages=attributesValue(...attrs);return packages&&packages.split(", ")}},{id:"CVSS3_SCORE",type:"number",numberType:"custom",langKey:this.getColumnLangKey("CVSS3_SCORE"),cellValueFunction:attributesValue,cellFormatter:(entry,column,value)=>{const idx=Math.floor(Math.max(value-1,0)/2);return fFormatters.severity_bar_elem(RISK_LEVELS[idx],null,value)}},{id:"CVE_ID",langKey:this.getColumnLangKey("CVE_ID"),cellValueFunction:attributesValue,cellFormatter:(entry,column,value)=>fFortiguard.links.resolve().then(()=>{const uri=fFortiguard.getLink(fFortiguard.LINK_TYPE.CVE_LOOKUP);return fDom.elem("a",{href:`${uri}${value}`,textContent:value,target:"_blank",rel:"noopener noreferrer"})})},{id:"CVSS2_SCORE",type:"number",numberType:"custom",langKey:this.getColumnLangKey("CVSS2_SCORE"),cellValueFunction:attributesValue,cellFormatter:(entry,column,value)=>{const idx=Math.floor(Math.max(value-1,0)/2);return fFormatters.severity_bar_elem(RISK_LEVELS[idx],null,value)}},{id:"createdAt",type:"date",langKey:this.getColumnLangKey("createdAt"),cellValueFunction:(entry,column)=>entry[column.id]*fDatetime.S_TO_MS},{id:"confidence",type:"number",langKey:this.getColumnLangKey("confidence")},"description"]}}getInstanceSettings(){return{userDefinedSection:!0,defaultColumns:["instanceId","groupSet","vpcId","privateIpAddress","subnetId"],columns:[{id:"instanceId",langKey:this.getColumnLangKey("instanceId")},{id:"groupSet",langKey:this.getColumnLangKey("groupSet"),type:"collection",cellValueFunction:(entry,column)=>{const groups=entry[column.id]&&entry[column.id].item;return groups?(Array.isArray(groups)?groups:[groups]).map(group=>group.groupName):[]}},{id:"vpcId",langKey:this.getColumnLangKey("vpcId")},{id:"privateIpAddress",langKey:this.getColumnLangKey("privateIpAddress")},{id:"subnetId",langKey:this.getColumnLangKey("subnetId")}]}}getMuTableSource($INJECTABLE$,sdnConnectorUtils){return async()=>{const VIEWS=sdnConnectorUtils.VIEWS,sourceFn={[VIEWS.FILTERS]:this.getFilterSource,[VIEWS.INSTANCES]:this.getInstanceSource,[VIEWS.CVE]:this.getCVESource}[this.selectedView];let result=[];try{result=await(sourceFn?sourceFn():[])}catch(err){err.message===`${ERR_PERMISSION_DENIED}`&&(this.viewsAllowed[this.selectedView]=!1,this.allViewsAllowed=!1)}return result}}getFilterSource($INJECTABLE$,$http,$q,CMDB,lang,sdnConnectorUtils){return async()=>{const connector=this.connector,params={connector:connector.name},promises={filters:$http.get(FILTER_API,{params:params}),address:new CMDB("firewall","address",{filter:[`sdn==${connector.name}`]}).fetch().$promise};try{const res=await $q.all(promises),filters=res.filters.data.results,filterAddressMap=res.address.reduce((acc,address)=>(address.filter.split(/[&|]/).forEach(filter=>{const key=filter.trim();acc[key]||(acc[key]=[]),acc[key].push(address)}),acc),{});return filters.reduce((acc,filter)=>{const supportedFilters=sdnConnectorUtils.getSupportedFilters(connector);return filter.$supportedFilterKey=supportedFilters.find(entry=>{if(entry===filter.key)return!0;if(entry.length<=filter.key.length&&filter.key.includes(".")){const filterArray=filter.key.split(".");return entry.split(".").every((element,index)=>element===filterArray[index])}}),filter.$other=!filter.$supportedFilterKey,acc.push(filter),filter.addresses=filterAddressMap[`${filter.key}=${filter.value}`],acc},[])}catch(e){return fLog.error(e),notify.post(lang("Failed to load data."),notify.LEVEL.ERROR),[]}}}getCVESource($INJECTABLE$,$http,lang){return async()=>{try{const mkey=this.connector.name,findings=((await $http.get(AWS_INSPECTOR_API,{params:{mkey:mkey}})).data.results[mkey]||{}).findings||[];return findings.forEach(finding=>{const attrs=finding.attributes;attrs.forEach(attribute=>{attrs[attribute.key]=attribute.value})}),findings}catch(e){const err=e.data&&e.data.error,errStr=lang(err||"Failed to load data.").toString();throw fLog.error(new Error(errStr)),notify.post(errStr,notify.LEVEL.ERROR),new Error(err)}}}getInstanceSource($INJECTABLE$,$http,lang){return async()=>{try{const mkey=this.connector.name,xml=(await $http.get(AWS_INSTANCE_API,{params:{mkey:mkey}})).data.results[mkey];return xml?fAWS.processAwsInstances(xml):[]}catch(e){return fLog.error(e),notify.post(lang("Failed to load data."),notify.LEVEL.ERROR),[]}}}},templateUrl:__webpack_require__(970),bindings:{connector:"<",view:"<"}};return(provider,loaderProvider)=>(provider.$compile.component("fSdnConnectorObjectsList",fSdnConnectorObjectsList),loaderProvider.initModules([__webpack_require__(247)]))}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},247:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(inject=>{const SDN_CONNECTOR_META_URI="/api/v2/static/sdn_connector_metadata.json";class SdnConnectorUtils extends inject.Collectable{constructor(){super(),this.meta=null,this._destroyed=!1}initIfNecessary(){return this.meta||this.forceInit()}forceInit($INJECTABLE$,$http){return async()=>{this._destroyed=!1;const resp=await $http.get(SDN_CONNECTOR_META_URI);return this._destroyed||(this.meta=resp.data.connectors,this.views=resp.data.views,this._loadEnums(resp.data)),this.meta}}supportsFilters(connector){return this.getSupportedFilters(connector).length}getSupportedFilters(connector){const typeMeta=this._getMetaForConnector(connector);return[...typeMeta.filters||[],...typeMeta.k8s_filters||[]]}showPolicyDrilldown($INJECTABLE$,$rootScope,lang,slide){return connector=>{const slideScope=Object.assign($rootScope.$new(),{filter:{sdn:connector.name},type:"policy",subType:"standard"});return slide.open("connectorPolicySlide",{template:'<f-policy-list\n                            filter="filter"\n                            type="type"\n                            sub-type="subType">\n                        </f-policy-list>',parentScope:slideScope,options:{fullHeight:!0,title:lang("External Connector Policies")}}).finally(()=>slideScope.$destroy())}}supportsAutomation(connector){return this.getRelatedAutomationAction(connector)}getRelatedAutomationAction(connector){return this._getMetaForConnector(connector).relatedAutomationAction}showAutomationDrilldown($INJECTABLE$,$rootScope,lang,slide){return connector=>{const slideScope=Object.assign($rootScope.$new(),{filter:{action:this.getRelatedAutomationAction(connector)}});return slide.open("sdnAutomationRulesSlide",{template:"<f-stitch-list filter=filter></f-stitch-list>",parentScope:slideScope,options:{fullHeight:!0,title:`${lang("Connector Automation Rules")}: ${connector.name}`}}).finally(()=>slideScope.$destroy())}}showConnectorObjects($INJECTABLE$,$rootScope,lang,slide){return(connector,forcedView)=>{const isFsso="fsso"===connector.q_name,views=isFsso?[]:this.getObjectListViews(connector);if(!forcedView||isFsso||views.includes(forcedView)){let component;if(this.supportsFilters(connector))component="f-sdn-connector-objects-list";else{if(!isFsso)return;component="f-collector-agent-adgrp-list"}const slideScope=Object.assign($rootScope.$new(),{connector:connector,view:forcedView});return slide.open("connectorObjectsSlide",{template:`<${component} connector="connector" view="view"></${component}>`,parentScope:slideScope,options:{fullHeight:!0,title:`${lang("External Connector Objects")}: ${connector.name}`}}).finally(()=>slideScope.$destroy())}}}getObjectListViews($INJECTABLE$,state){return connector=>{return this._getMetaForConnector(connector).supportedObjectViews.filter(view=>{const viewMeta=this.views[view];return state.adminHasReadPermission(state.ACCESS_GROUP[viewMeta.permission])})}}purge(){for(const key of Object.getOwnPropertyNames(this))this[key]=null;this._destroyed=!0}_loadEnums(data){for(const[key,values]of Object.entries(data.enums)){const map=this[key.toUpperCase()]={};for(const value of values)map[value.toUpperCase()]=value}}_getMetaForConnector(connector){return this.meta[connector.type]||{}}}return(providers,loaderProvider)=>(providers.$provide.service("sdnConnectorUtils",SdnConnectorUtils),loaderProvider.initModules([__webpack_require__(190),__webpack_require__(244),__webpack_require__(137)]))}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},250:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(79),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fwebFirmware,fwebLog){function FirmwareImage(injector,info){injector.injectMarked(this),this.id=info.id,this.source=info.source,this.name=info.name,this.version=info.version,this.major=info.major,this.minor=info.minor,this.patch=info.patch,this.build=info.build,this.isCurrent=info.isCurrent,this.label=info["release-type"],this.notesURI=info.notes,this.localFile=info.localFile,this.newerThanCurrent=!1,this.olderThanCurrent=!1,this.upgradeSupportedTo=[],this._upgradePathFromCurrent=null}function Firmware(injector){injector.injectMarked(this),this._reset()}return Object.defineProperty(FirmwareImage.prototype,"upgradePathFromCurrent",{get:function(){return this._upgradePathFromCurrent||(this._upgradePathFromCurrent=this._findUpgradePathFromCurrent()),this._upgradePathFromCurrent}}),FirmwareImage.prototype.getVersionWithBuildString=function(){return[this.major,this.minor,this.patch,this.build].join("#")},FirmwareImage.prototype.compareTo=function(otherImage){return fwebFirmware.compareFirmware(this,otherImage)},FirmwareImage.prototype.isNewerThan=function(otherImage){return fwebFirmware.isFirmwareUpdate(otherImage,this)},FirmwareImage.prototype.isSameMinor=function(otherImage){return this.major===otherImage.major&&this.minor===otherImage.minor},FirmwareImage.prototype.getLabel=inject.mark(function($filter){var buildNumberFilter=$filter("buildNumber");return function(){return`${this.name} ${this.version} build${buildNumberFilter(this.build)}`}}),FirmwareImage.prototype.getShortLabel=function(){return`${this.name} ${this.version}`},FirmwareImage.prototype.getIcon=function(){var icon;switch(this.source){case"upload":icon="fa-file-o";break;case"fortiguard":icon="ftnt-fortiguard";break;case"usb":icon="fa-usb"}return icon},FirmwareImage.prototype.getVersionBasedID=function(){return`${this.version}#${this.build}`},FirmwareImage.prototype._findUpgradePathFromCurrent=inject.mark(function(fortigateFirmware){return function(){var result=null,getPathTo=function(currentImage,targetImage){var i,toImage,bestPath,possiblePath;for(i=0;i<currentImage.upgradeSupportedTo.length;i++){if((toImage=currentImage.upgradeSupportedTo[i])===targetImage){bestPath=[targetImage];break}(possiblePath=getPathTo(toImage,targetImage))&&(!bestPath||possiblePath.length<bestPath.length)&&(bestPath=possiblePath)}return bestPath?[currentImage].concat(bestPath):null};return"fortiguard"===this.source&&(fortigateFirmware.current.getVersionWithBuildString()===this.getVersionWithBuildString()?result=[this]:this.isNewerThan(fortigateFirmware.current)&&(result=getPathTo(fortigateFirmware.current,this))),result}}),Firmware.prototype._reset=function(){this.current=null,this.runningLatestPatch=null,this.firmwareAvailable=null,this.upgradeMatrixAvailable=null,this.latestPatch=null,this.latestJumps=null,this.allPatches=null,this.groupedJumps=null,this.older=null,this.versionBasedMapping=null,this.idBasedMapping=null,this.allUSB=null},Firmware.prototype.createFirmwareImage=inject.mark(function($injector){return function(info,isCurrent){var image=$injector.instantiate(FirmwareImage,{info:info});return!isCurrent&&this.current&&(image.newerThanCurrent=image.isNewerThan(this.current),image.olderThanCurrent=this.current.isNewerThan(image)),image}}),Firmware.prototype._getFirmware=inject.mark(function($http){return function(){return $http.get("/api/v2/monitor/system/firmware").then(function(response){var latestJumps,groupedJumps,results=response.data.results,versionBasedMapping={},idBasedMapping={},allPatches=[],groupedJumpsMap={},older=[],allUSB=[],firmwareAvailable=!1;this.runningLatestPatch=!0,this.latestPatch=null,this.current=this.createFirmwareImage(results.current,!0),results.available.forEach(function(info){var image=this.createFirmwareImage(info),sameMinor=image.isSameMinor(this.current),jumpLabel=`${image.major}.${image.minor}`;"usb"===image.source?allUSB.push(image):(firmwareAvailable=!0,versionBasedMapping[image.getVersionBasedID()]=image,idBasedMapping[image.id]=image,image.newerThanCurrent?sameMinor?(this.runningLatestPatch=!1,allPatches.push(image),this.latestPatch&&!image.isNewerThan(this.latestPatch)||(this.latestPatch=image)):groupedJumpsMap[jumpLabel]?groupedJumpsMap[jumpLabel].images.push(image):groupedJumpsMap[jumpLabel]={label:jumpLabel,images:[image]}:older.push(image))}.bind(this)),latestJumps=(groupedJumps=Object.keys(groupedJumpsMap).sort().map(function(jumpLabel){return groupedJumpsMap[jumpLabel]})).map(function(group){return group.images[0]}),[allPatches,older,allUSB].forEach(function(firmwareList){firmwareList.sort(function(imageA,imageB){return imageA.compareTo(imageB)})}),this.firmwareAvailable=firmwareAvailable,this.latestJumps=latestJumps,this.allPatches=allPatches,this.groupedJumps=groupedJumps,this.older=older,this.allUSB=allUSB,this.versionBasedMapping=versionBasedMapping,this.idBasedMapping=idBasedMapping}.bind(this))}}),Firmware.prototype.update=inject.mark(function($q,$http){return function(){var upgradeMatrixAvailable=!1;return this._reset(),$q.all([$http.get("/api/v2/monitor/system/firmware/upgrade-paths").then(function(response){return response},()=>{}),this._getFirmware()]).then(function(responses){var upgrades,currentVersionID,upgradesResponse=responses[0],createVersionID=function(info){return`v${info.major}.${info.minor}.${info.patch}#${info.build}`};upgradesResponse?(upgradeMatrixAvailable=!0,upgrades=upgradesResponse.data.results,currentVersionID=this.current.getVersionBasedID(),upgrades.forEach(function(entry){var fromID=createVersionID(entry.from),toID=createVersionID(entry.to),fromImage=this.versionBasedMapping[fromID],toImage=this.versionBasedMapping[toID];fromImage&&toImage&&fromImage.upgradeSupportedTo.push(toImage),fromID===currentVersionID&&toImage&&this.current.upgradeSupportedTo.push(toImage)}.bind(this))):fwebLog.error("Failed to retrieve FortiGuard firmware upgrade matrix."),this.upgradeMatrixAvailable=upgradeMatrixAvailable}.bind(this))}}),Firmware.prototype.formattedFirmwareVersion=inject.mark(($filter,lang)=>firmware=>{const buildNumber=$filter("buildNumber");return firmware&&lang("{FIRMWARE_NAME} {FIRMWARE_VERSION} build{FIRMWARE_BUILD} ({FIRMWARE_LABEL})",[firmware.name,firmware.version,buildNumber(firmware.build),firmware.label])}),function(providers){providers.$provide.service("fortigateFirmware",Firmware)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},26:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(21),__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared){return ftnt_shared.services.injector}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},416:function(module,exports,__webpack_require__){const moduleImports={"admin/edit/f-admin-edit":()=>__webpack_require__.e(69).then(__webpack_require__.t.bind(null,1155,7)),"admin/api-user/f-api-user-edit":()=>__webpack_require__.e(98).then(__webpack_require__.t.bind(null,1157,7)),"admin/sso-admin/f-sso-admin-edit":()=>__webpack_require__.e(154).then(__webpack_require__.t.bind(null,1162,7)),"admin/f-admin-list":()=>__webpack_require__.e(112).then(__webpack_require__.t.bind(null,1164,7)),"firewall/address/edit/f-address-dialog":()=>__webpack_require__.e(49).then(__webpack_require__.t.bind(null,1168,7)),"firewall/address/f-address-list":()=>__webpack_require__.e(87).then(__webpack_require__.t.bind(null,1183,7)),"ng/firewall/address/edit/f-address-group-dialog":()=>__webpack_require__.e(130).then(__webpack_require__.t.bind(null,1188,7)),"firewall/address6-template//f-address6-template-dialog":()=>__webpack_require__.e(65).then(__webpack_require__.t.bind(null,1192,7)),"firewall/decrypted-traffic-mirror//f-decrypted-traffic-mirror":()=>__webpack_require__.e(186).then(__webpack_require__.t.bind(null,1203,7)),"firewall/wildcard-address/f-wildcard-address-list":()=>__webpack_require__.e(133).then(__webpack_require__.t.bind(null,1205,7)),"firewall/wildcard-address/edit/f-wildcard-address-edit":()=>__webpack_require__.e(29).then(__webpack_require__.t.bind(null,493,7)),"firewall/wildcard-address/edit//f-wildcard-address-edit":()=>__webpack_require__.e(29).then(__webpack_require__.t.bind(null,493,7)),"firewall/gtp/f-gtp-list":()=>__webpack_require__.e(187).then(__webpack_require__.t.bind(null,1210,7)),"firewall/gtp/edit/f-gtp-profile":()=>__webpack_require__.e(88).then(__webpack_require__.t.bind(null,1212,7)),"firewall/internet_service/f-internet-service":()=>__webpack_require__.e(73).then(__webpack_require__.t.bind(null,1219,7)),"firewall/internet_service/f-internet-service-entry":()=>__webpack_require__.e(116).then(__webpack_require__.t.bind(null,258,7)),"firewall/internet_service/f-internet-service-name-dialog":()=>__webpack_require__.e(156).then(__webpack_require__.t.bind(null,1223,7)),"firewall/ip-pool/f-ip-pool-list":()=>__webpack_require__.e(188).then(__webpack_require__.t.bind(null,1226,7)),"firewall/ip-pool/f-ip-pool-edit":()=>__webpack_require__.e(157).then(__webpack_require__.t.bind(null,1228,7)),"firewall/load-balance/health-check/f-health-check":()=>__webpack_require__.e(190).then(__webpack_require__.t.bind(null,1231,7)),"firewall/load-balance/health-check/f-health-check-edit":()=>__webpack_require__.e(189).then(__webpack_require__.t.bind(null,1233,7)),"firewall/load-balance/virtual-server/f-virtual-server-list":()=>__webpack_require__.e(117).then(__webpack_require__.t.bind(null,1235,7)),"firewall/load-balance/virtual-server/edit/f-virtual-server-edit":()=>__webpack_require__.e(89).then(__webpack_require__.t.bind(null,1240,7)),"firewall/policy//f-local-in-policy-list":()=>__webpack_require__.e(191).then(__webpack_require__.t.bind(null,1247,7)),"firewall/policy/policy-list":()=>Promise.resolve().then(__webpack_require__.t.bind(null,190,7)),"firewall/policy//dialog/policy-dialog":()=>Promise.all([__webpack_require__.e(3),__webpack_require__.e(4),__webpack_require__.e(45)]).then(__webpack_require__.t.bind(null,1249,7)),"firewall/authentication/f-authentication-rules":()=>__webpack_require__.e(131).then(__webpack_require__.t.bind(null,1292,7)),"firewall/authentication//f-authentication-rules-dialog":()=>__webpack_require__.e(185).then(__webpack_require__.t.bind(null,1296,7)),"firewall/authentication//f-authentication-scheme-dialog":()=>__webpack_require__.e(155).then(__webpack_require__.t.bind(null,1298,7)),"firewall/service/f-service-list":()=>__webpack_require__.e(128).then(__webpack_require__.t.bind(null,1301,7)),"firewall/service/f-service-dlg":()=>__webpack_require__.e(158).then(__webpack_require__.t.bind(null,1303,7)),"firewall/service/f-service-group-dlg":()=>__webpack_require__.e(197).then(__webpack_require__.t.bind(null,1306,7)),"firewall/service/category/f-category-list":()=>__webpack_require__.e(78).then(__webpack_require__.t.bind(null,1308,7)),"firewall/service/category/f-category-edit":()=>__webpack_require__.e(196).then(__webpack_require__.t.bind(null,265,7)),"firewall/schedule/f-schedule-list":()=>__webpack_require__.e(127).then(__webpack_require__.t.bind(null,1312,7)),"firewall/schedule/f-schedule-edit":()=>__webpack_require__.e(194).then(__webpack_require__.t.bind(null,1314,7)),"firewall/schedule/f-schedule-group-edit":()=>__webpack_require__.e(195).then(__webpack_require__.t.bind(null,1316,7)),"firewall/shaper/f-shaping-class-id-list":()=>__webpack_require__.e(201).then(__webpack_require__.t.bind(null,1318,7)),"firewall/shaper/f-shaping-class-id-dialog":()=>__webpack_require__.e(200).then(__webpack_require__.t.bind(null,1320,7)),"firewall/shaper/f-shaper-policy":()=>__webpack_require__.e(118).then(__webpack_require__.t.bind(null,1322,7)),"firewall/shaper/f-shaper-list":()=>__webpack_require__.e(199).then(__webpack_require__.t.bind(null,1327,7)),"firewall/shaper/f-shaper-dialog":()=>__webpack_require__.e(198).then(__webpack_require__.t.bind(null,1329,7)),"firewall/shaper//f-shaping-profile-list":()=>__webpack_require__.e(202).then(__webpack_require__.t.bind(null,1331,7)),"firewall/shaper/f-shaping-profile-dialog":()=>__webpack_require__.e(79).then(__webpack_require__.t.bind(null,1333,7)),"firewall/sniffer/f-packet-capture":()=>Promise.all([__webpack_require__.e(25),__webpack_require__.e(31),__webpack_require__.e(159)]).then(__webpack_require__.t.bind(null,1341,7)),"firewall/sniffer/f-packet-capture-edit":()=>__webpack_require__.e(90).then(__webpack_require__.t.bind(null,1347,7)),"firewall/virtual-ip/f-virtual-ip-list":()=>__webpack_require__.e(132).then(__webpack_require__.t.bind(null,1349,7)),"firewall/virtual-ip/edit/f-virtual-ip-group":()=>__webpack_require__.e(28).then(__webpack_require__.t.bind(null,495,7)),"firewall/virtual-ip/edit/f-virtual-ip-group":()=>__webpack_require__.e(28).then(__webpack_require__.t.bind(null,495,7)),"firewall/virtual-ip/edit/f-virtual-ip":()=>__webpack_require__.e(23).then(__webpack_require__.t.bind(null,496,7)),"firewall/virtual-ip/edit/f-virtual-ip":()=>__webpack_require__.e(23).then(__webpack_require__.t.bind(null,496,7)),"firewall/protocol-options/f-protocol-options-list":()=>__webpack_require__.e(193).then(__webpack_require__.t.bind(null,1358,7)),"firewall/protocol-options/edit/f-protocol-options":()=>__webpack_require__.e(192).then(__webpack_require__.t.bind(null,1360,7)),"fortiview/f-fortiview":()=>Promise.resolve().then(__webpack_require__.t.bind(null,186,7)),"fortiview/f-fortiview":()=>Promise.resolve().then(__webpack_require__.t.bind(null,186,7)),"gtp/apn/f-gtp-apn-list":()=>__webpack_require__.e(134).then(__webpack_require__.t.bind(null,1362,7)),"gtp/apn/f-gtp-apn":()=>__webpack_require__.e(203).then(__webpack_require__.t.bind(null,271,7)),"gtp/message-filter/f-gtp-message-filter-list":()=>__webpack_require__.e(204).then(__webpack_require__.t.bind(null,1364,7)),"gtp/message-filter/f-gtp-message-filter":()=>__webpack_require__.e(205).then(__webpack_require__.t.bind(null,1366,7)),"log/report/f-log-report":()=>__webpack_require__.e(80).then(__webpack_require__.t.bind(null,1368,7)),"log/report/forticloud/f-forticloud-report-list":()=>__webpack_require__.e(101).then(__webpack_require__.t.bind(null,1374,7)),"log/settings/f-log-settings":()=>Promise.all([__webpack_require__.e(9),__webpack_require__.e(20),__webpack_require__.e(47)]).then(__webpack_require__.t.bind(null,1378,7)),"log/threat-weight/f-log-threat-weight":()=>__webpack_require__.e(207).then(__webpack_require__.t.bind(null,1402,7)),"log/view/f-log-view":()=>Promise.resolve().then(__webpack_require__.t.bind(null,184,7)),"network/explicit-proxy//f-explicit-proxy-settings":()=>__webpack_require__.e(62).then(__webpack_require__.t.bind(null,1404,7)),"network/dns/settings/f-dns":()=>__webpack_require__.e(135).then(__webpack_require__.t.bind(null,1417,7)),"network/dns/service/edit/f-dns-service":()=>__webpack_require__.e(160).then(__webpack_require__.t.bind(null,1421,7)),"network/dns/zones/edit/f-dns-zones":()=>__webpack_require__.e(61).then(__webpack_require__.t.bind(null,1424,7)),"network/dns/f-dns-servers":()=>__webpack_require__.e(102).then(__webpack_require__.t.bind(null,1435,7)),"network/extender/f-extender-list":()=>__webpack_require__.e(70).then(__webpack_require__.t.bind(null,1441,7)),"network/extender/edit/f-extender-dialog":()=>__webpack_require__.e(54).then(__webpack_require__.t.bind(null,1443,7)),"network/modem//f-system-modem":()=>__webpack_require__.e(212).then(__webpack_require__.t.bind(null,1445,7)),"network/modem/f-system-3g-modem-list":()=>__webpack_require__.e(210).then(__webpack_require__.t.bind(null,1447,7)),"network/modem//f-system-3g-modem":()=>__webpack_require__.e(211).then(__webpack_require__.t.bind(null,1449,7)),"network/modem/monitor/f-modem-monitor":()=>__webpack_require__.e(162).then(__webpack_require__.t.bind(null,1451,7)),"network/interface/virtual-wire-pair/../virtual-wire-pair":()=>__webpack_require__.e(209).then(__webpack_require__.t.bind(null,1453,7)),"network/virtualwan/members/../f-virtualwan-members":()=>__webpack_require__.e(164).then(__webpack_require__.t.bind(null,286,7)),"network/virtualwan/edit/f-virtualwan-member-edit":()=>Promise.all([__webpack_require__.e(19),__webpack_require__.e(129)]).then(__webpack_require__.t.bind(null,1455,7)),"network/virtualwan/zone/edit/../../edit/f-virtualwan-zone-edit":()=>__webpack_require__.e(163).then(__webpack_require__.t.bind(null,1467,7)),"network/virtualwan/health-check/f-virtualwan-health-check-list":()=>__webpack_require__.e(10).then(__webpack_require__.t.bind(null,506,7)),"network/virtualwan/health-check/edit/../../edit/f-virtualwan-health-check":()=>__webpack_require__.e(103).then(__webpack_require__.t.bind(null,1472,7)),"network/virtualwan/service/edit/sd-wan/../../../edit/f-virtualwan-service-sdwan":()=>__webpack_require__.e(213).then(__webpack_require__.t.bind(null,1474,7)),"network/virtualwan/service/edit/../../edit/f-virtualwan-service":()=>Promise.all([__webpack_require__.e(26),__webpack_require__.e(119)]).then(__webpack_require__.t.bind(null,1476,7)),"network/virtualwan/service/../f-virtualwan-service-list":()=>Promise.all([__webpack_require__.e(26),__webpack_require__.e(214)]).then(__webpack_require__.t.bind(null,1478,7)),"network/explicit-proxy/forward-server//f-web-proxy-forward-server":()=>__webpack_require__.e(208).then(__webpack_require__.t.bind(null,1480,7)),"network/explicit-proxy/url-match//f-web-proxy-url-match":()=>__webpack_require__.e(161).then(__webpack_require__.t.bind(null,1482,7)),"prompt/centrally_managed/f-centrally-managed-prompt":()=>__webpack_require__.e(215).then(__webpack_require__.t.bind(null,1485,7)),"prompt/file_system_check/f-file-system-check-prompt":()=>__webpack_require__.e(216).then(__webpack_require__.t.bind(null,1487,7)),"prompt/vm-license/f-vm-license-prompt":()=>__webpack_require__.e(282).then(__webpack_require__.t.bind(null,1489,7)),"prompt/setup//f-fortigate-setup-prompt":()=>__webpack_require__.e(136).then(__webpack_require__.t.bind(null,1490,7)),"ng/score-cards/f-score-cards":()=>Promise.all([__webpack_require__.e(25),__webpack_require__.e(31),__webpack_require__.e(41)]).then(__webpack_require__.t.bind(null,1494,7)),"stitch/f-stitch-list":()=>Promise.resolve().then(__webpack_require__.t.bind(null,244,7)),"stitch/edit/../f-stitch":()=>__webpack_require__.e(39).then(__webpack_require__.t.bind(null,1525,7)),"switchctrl/managed_sw/f-fortiswitch-list":()=>__webpack_require__.e(43).then(__webpack_require__.t.bind(null,1569,7)),"switchctrl/switch-group/edit/f-switch-group-edit":()=>__webpack_require__.e(166).then(__webpack_require__.t.bind(null,1596,7)),"switchctrl/managed_sw/edit//f-fortiswitch-edit":()=>__webpack_require__.e(121).then(__webpack_require__.t.bind(null,1598,7)),"switchctrl/ports/f-fortiswitch-ports":()=>Promise.all([__webpack_require__.e(11),__webpack_require__.e(63)]).then(__webpack_require__.t.bind(null,1601,7)),"switchctrl/ports/edit/fortiswitch-port":()=>__webpack_require__.e(92).then(__webpack_require__.t.bind(null,1614,7)),"switchctrl/vlan/f-fsw-vlan-list":()=>__webpack_require__.e(139).then(__webpack_require__.t.bind(null,298,7)),"switchctrl/security-policy/f-fortiswitch-security-policy":()=>__webpack_require__.e(222).then(__webpack_require__.t.bind(null,1619,7)),"switchctrl/security-policy//f-fortiswitch-security-policy-edit":()=>__webpack_require__.e(221).then(__webpack_require__.t.bind(null,1621,7)),"switchctrl/fortilink/f-fortilink-interface":()=>Promise.all([__webpack_require__.e(1),__webpack_require__.e(2),__webpack_require__.e(24),__webpack_require__.e(138)]).then(__webpack_require__.t.bind(null,1623,7)),"switchctrl/nac-policy/f-nac-policy-list":()=>__webpack_require__.e(106).then(__webpack_require__.t.bind(null,1675,7)),"switchctrl/nac-settings//f-nac-settings-edit":()=>__webpack_require__.e(220).then(__webpack_require__.t.bind(null,1677,7)),"switchctrl/nac-policy/edit//f-nac-settings-wizard":()=>Promise.all([__webpack_require__.e(24),__webpack_require__.e(107)]).then(__webpack_require__.t.bind(null,1679,7)),"switchctrl/nac-policy/edit/f-nac-policy-edit":()=>__webpack_require__.e(91).then(__webpack_require__.t.bind(null,1681,7)),"interface/fext-wan/edit/f-interface-extender":()=>__webpack_require__.e(206).then(__webpack_require__.t.bind(null,284,7)),"system/certificate/f-certificate-list":()=>__webpack_require__.e(17).then(__webpack_require__.t.bind(null,529,7)),"system/certificate/csr/f-certificate-gen-csr":()=>__webpack_require__.e(141).then(__webpack_require__.t.bind(null,1689,7)),"system/certificate/import/ca/f-certificate-import-ca":()=>__webpack_require__.e(114).then(__webpack_require__.t.bind(null,309,7)),"system/certificate/import/crl/f-certificate-import-crl":()=>__webpack_require__.e(99).then(__webpack_require__.t.bind(null,311,7)),"system/certificate/import/local/f-certificate-import-local":()=>__webpack_require__.e(100).then(__webpack_require__.t.bind(null,314,7)),"system/certificate/import/remote/f-certificate-import-remote":()=>__webpack_require__.e(115).then(__webpack_require__.t.bind(null,316,7)),"system/features/controllers":()=>__webpack_require__.e(226).then(__webpack_require__.t.bind(null,1691,7)),"system/features/services":()=>__webpack_require__.e(283).then(__webpack_require__.t.bind(null,1693,7)),"system/features/directives":()=>__webpack_require__.e(169).then(__webpack_require__.t.bind(null,1694,7)),"system/admin-profiles/f-admin-profiles":()=>__webpack_require__.e(168).then(__webpack_require__.t.bind(null,1697,7)),"system/admin-profiles//f-admin-profile-edit":()=>__webpack_require__.e(167).then(__webpack_require__.t.bind(null,1699,7)),"system/config/backup/controllers":()=>__webpack_require__.e(223).then(__webpack_require__.t.bind(null,1701,7)),"system/config/restore/controllers":()=>__webpack_require__.e(224).then(__webpack_require__.t.bind(null,1703,7)),"ng/directives/f-file-select":()=>__webpack_require__.e(184).then(__webpack_require__.t.bind(null,50,7)),"system/config/revisions/system-config-revisions":()=>__webpack_require__.e(74).then(__webpack_require__.t.bind(null,1705,7)),"system/config/scripts/f-script-list":()=>__webpack_require__.e(93).then(__webpack_require__.t.bind(null,1713,7)),"system/dashboard/f-system-dashboard":()=>Promise.all([__webpack_require__.e(5),__webpack_require__.e(8),__webpack_require__.e(18),__webpack_require__.e(13),__webpack_require__.e(12),__webpack_require__.e(15)]).then(__webpack_require__.t.bind(null,530,7)),"system/dashboard/f-system-dashboard":()=>Promise.all([__webpack_require__.e(5),__webpack_require__.e(8),__webpack_require__.e(18),__webpack_require__.e(13),__webpack_require__.e(12),__webpack_require__.e(15)]).then(__webpack_require__.t.bind(null,530,7)),"system/debug/f-debug":()=>__webpack_require__.e(225).then(__webpack_require__.t.bind(null,1865,7)),"security-fabric/topology/physical/../f-physical-topology":()=>Promise.all([__webpack_require__.e(10),__webpack_require__.e(5),__webpack_require__.e(14),__webpack_require__.e(219)]).then(__webpack_require__.t.bind(null,1867,7)),"security-fabric/topology/logical/../f-logical-topology":()=>Promise.all([__webpack_require__.e(10),__webpack_require__.e(5),__webpack_require__.e(14),__webpack_require__.e(218)]).then(__webpack_require__.t.bind(null,1897,7)),"fortinet-connector/f-fortinet-connector-list":()=>Promise.all([__webpack_require__.e(9),__webpack_require__.e(16),__webpack_require__.e(48)]).then(__webpack_require__.t.bind(null,1899,7)),"fortinet-connector/edit/f-fortinet-connector-dialog":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(7),__webpack_require__.e(9),__webpack_require__.e(16),__webpack_require__.e(20),__webpack_require__.e(40)]).then(__webpack_require__.t.bind(null,1915,7)),"fabric-connector/edit/f-fabric-connector-edit":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(7),__webpack_require__.e(38)]).then(__webpack_require__.t.bind(null,1967,7)),"fabric-connector/f-fabric-connector-list":()=>__webpack_require__.e(60).then(__webpack_require__.t.bind(null,2016,7)),"system/firmware/f-system-firmware":()=>__webpack_require__.e(142).then(__webpack_require__.t.bind(null,2026,7)),"system/fortiguard/controllers":()=>__webpack_require__.e(81).then(__webpack_require__.t.bind(null,2030,7)),"system/fortiguard/directives":()=>__webpack_require__.e(284).then(__webpack_require__.t.bind(null,2038,7)),"system/fortiguard/services":()=>__webpack_require__.e(285).then(__webpack_require__.t.bind(null,2039,7)),"system/fortiguard/f-entitlement-table":()=>__webpack_require__.e(55).then(__webpack_require__.t.bind(null,2040,7)),"system/ha/peer/f-system-ha-peer":()=>__webpack_require__.e(228).then(__webpack_require__.t.bind(null,2046,7)),"system/ha/cluster/f-system-ha-cluster":()=>__webpack_require__.e(170).then(__webpack_require__.t.bind(null,2048,7)),"system/ha/monitor/f-system-ha-monitor":()=>Promise.all([__webpack_require__.e(11),__webpack_require__.e(71)]).then(__webpack_require__.t.bind(null,2050,7)),"system/language/f-custom-lang":()=>__webpack_require__.e(144).then(__webpack_require__.t.bind(null,2058,7)),"system/language/f-custom-lang-edit":()=>__webpack_require__.e(230).then(__webpack_require__.t.bind(null,2062,7)),"ng/directives/f-system-power":()=>Promise.resolve().then(__webpack_require__.t.bind(null,474,7)),"ng/system/replacemsg/group/f-replacemsg-group-list":()=>__webpack_require__.e(172).then(__webpack_require__.t.bind(null,2064,7)),"ng/system/replacemsg/group/f-replacemsg-group-edit":()=>__webpack_require__.e(231).then(__webpack_require__.t.bind(null,2067,7)),"ng/system/replacemsg/image/f-replacemsg-image":()=>__webpack_require__.e(233).then(__webpack_require__.t.bind(null,2069,7)),"ng/system/replacemsg/image/f-replacemsg-image-edit":()=>__webpack_require__.e(232).then(__webpack_require__.t.bind(null,2071,7)),"system/replacemsg/f-replacemsg-list":()=>Promise.all([__webpack_require__.e(3),__webpack_require__.e(4),__webpack_require__.e(171)]).then(__webpack_require__.t.bind(null,2073,7)),"system/reputation/f-ip-reputation":()=>__webpack_require__.e(66).then(__webpack_require__.t.bind(null,2076,7)),"system/settings/f-system-settings":()=>Promise.all([__webpack_require__.e(1),__webpack_require__.e(53)]).then(__webpack_require__.t.bind(null,2086,7)),"system/snmp/f-system-snmp":()=>__webpack_require__.e(82).then(__webpack_require__.t.bind(null,2095,7)),"system/vdom-link/edit/f-vdom-link":()=>__webpack_require__.e(108).then(__webpack_require__.t.bind(null,2103,7)),"system/vdom/f-vdom-list":()=>__webpack_require__.e(234).then(__webpack_require__.t.bind(null,2108,7)),"system/vdom/edit/f-vdom-settings":()=>__webpack_require__.e(173).then(__webpack_require__.t.bind(null,2110,7)),"system/global-resources/f-global-resources":()=>__webpack_require__.e(227).then(__webpack_require__.t.bind(null,2112,7)),"system/zone/edit/f-zone-dialog":()=>__webpack_require__.e(236).then(__webpack_require__.t.bind(null,2114,7)),"system/vm/license/f-vm-license":()=>__webpack_require__.e(235).then(__webpack_require__.t.bind(null,2116,7)),"third_party/controllers":()=>__webpack_require__.e(237).then(__webpack_require__.t.bind(null,2118,7)),"threatmap/f-threat-map":()=>__webpack_require__.e(238).then(__webpack_require__.t.bind(null,2120,7)),"user/auth-settings/f-user-auth-settings":()=>__webpack_require__.e(113).then(__webpack_require__.t.bind(null,2122,7)),"user/domain-controller//f-user-domain-controller-dialog":()=>__webpack_require__.e(239).then(__webpack_require__.t.bind(null,2127,7)),"user/group/f-user-group-list":()=>__webpack_require__.e(174).then(__webpack_require__.t.bind(null,2129,7)),"user/group/edit/f-user-group":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(67)]).then(__webpack_require__.t.bind(null,2132,7)),"user/guest/f-user-guest-list":()=>__webpack_require__.e(109).then(__webpack_require__.t.bind(null,2143,7)),"user/krb-keytab//f-user-krb-keytab-dialog":()=>__webpack_require__.e(242).then(__webpack_require__.t.bind(null,2149,7)),"user/ldap/f-ldap-server-list":()=>__webpack_require__.e(145).then(__webpack_require__.t.bind(null,2151,7)),"user/ldap/edit/f-ldap-server":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(77)]).then(__webpack_require__.t.bind(null,2155,7)),"user/local/f-local-user-list":()=>__webpack_require__.e(83).then(__webpack_require__.t.bind(null,2159,7)),"user/local/edit/f-local-user":()=>Promise.all([__webpack_require__.e(21),__webpack_require__.e(243)]).then(__webpack_require__.t.bind(null,2165,7)),"user/pki/f-pki-users-list":()=>__webpack_require__.e(245).then(__webpack_require__.t.bind(null,2167,7)),"user/pki/edit/f-pki-user":()=>__webpack_require__.e(244).then(__webpack_require__.t.bind(null,2169,7)),"user/radius/f-radius-server-list":()=>__webpack_require__.e(146).then(__webpack_require__.t.bind(null,2171,7)),"user/radius/edit/f-radius-server":()=>__webpack_require__.e(86).then(__webpack_require__.t.bind(null,2175,7)),"user/saml/f-saml":()=>__webpack_require__.e(95).then(__webpack_require__.t.bind(null,2178,7)),"user/tacacs-plus/f-tacacs-plus-server-list":()=>__webpack_require__.e(246).then(__webpack_require__.t.bind(null,2184,7)),"user/tacacs-plus/edit/f-tacacs-plus-server":()=>__webpack_require__.e(126).then(__webpack_require__.t.bind(null,2186,7)),"user/wizard/f-user-wizard":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(21),__webpack_require__.e(75)]).then(__webpack_require__.t.bind(null,2188,7)),"ng/user/wizard/f-adgrp-import":()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(7),__webpack_require__.e(247)]).then(__webpack_require__.t.bind(null,2196,7)),"user/ftoken/f-ftoken-list":()=>__webpack_require__.e(241).then(__webpack_require__.t.bind(null,2198,7)),"user/ftoken/edit/f-ftoken-edit":()=>__webpack_require__.e(122).then(__webpack_require__.t.bind(null,2200,7)),"user/ftoken/activate/f-ftoken-activate":()=>__webpack_require__.e(240).then(__webpack_require__.t.bind(null,349,7)),"utm/antivirus//f-av-profile":()=>__webpack_require__.e(123).then(__webpack_require__.t.bind(null,2205,7)),"utm/antivirus//f-av-profile-list":()=>__webpack_require__.e(175).then(__webpack_require__.t.bind(null,2208,7)),"utm/appctrl/signature/f-application-signatures":()=>Promise.resolve().then(__webpack_require__.t.bind(null,114,7)),"utm/appctrl/signature/f-application-signatures":()=>Promise.resolve().then(__webpack_require__.t.bind(null,114,7)),"utm/appctrl/group/f-application-group-edit":()=>__webpack_require__.e(248).then(__webpack_require__.t.bind(null,2210,7)),"utm/appctrl/sensor/f-application-control-sensor-list":()=>__webpack_require__.e(147).then(__webpack_require__.t.bind(null,2212,7)),"utm/appctrl/sensor//f-application-control-sensor":()=>__webpack_require__.e(44).then(__webpack_require__.t.bind(null,2216,7)),"utm/dnsfilter//f-dns-filter":()=>__webpack_require__.e(50).then(__webpack_require__.t.bind(null,2242,7)),"utm/dnsfilter//f-dns-filter-list":()=>__webpack_require__.e(250).then(__webpack_require__.t.bind(null,2255,7)),"utm/voip//f-voip-profile":()=>__webpack_require__.e(259).then(__webpack_require__.t.bind(null,2257,7)),"utm/voip//f-voip-profile-list":()=>__webpack_require__.e(258).then(__webpack_require__.t.bind(null,2259,7)),"utm/custom/signature/f-custom-signature-edit":()=>__webpack_require__.e(249).then(__webpack_require__.t.bind(null,2261,7)),"utm/ips/signature/f-ips-signature-list":()=>__webpack_require__.e(111).then(__webpack_require__.t.bind(null,2263,7)),"utm/ips/sensor/f-ips-sensor-list":()=>__webpack_require__.e(176).then(__webpack_require__.t.bind(null,2267,7)),"utm/ips/sensor/edit/f-ips-sensor":()=>__webpack_require__.e(57).then(__webpack_require__.t.bind(null,2269,7)),"utm/icap/profile/f-icap-profile":()=>__webpack_require__.e(253).then(__webpack_require__.t.bind(null,2279,7)),"ng/utm/icap/profile/f-icap-profile-edit":()=>__webpack_require__.e(252).then(__webpack_require__.t.bind(null,2281,7)),"utm/icap/server/f-icap-server":()=>__webpack_require__.e(255).then(__webpack_require__.t.bind(null,2283,7)),"ng/utm/icap/server/f-icap-server-edit":()=>__webpack_require__.e(254).then(__webpack_require__.t.bind(null,2285,7)),"utm/profile/group/f-profile-group":()=>__webpack_require__.e(257).then(__webpack_require__.t.bind(null,2287,7)),"utm/profile/group//f-profile-group-edit":()=>__webpack_require__.e(256).then(__webpack_require__.t.bind(null,2289,7)),"utm/waf//f-waf-profile-edit":()=>__webpack_require__.e(51).then(__webpack_require__.t.bind(null,2291,7)),"utm/waf//f-waf-profile-list":()=>__webpack_require__.e(260).then(__webpack_require__.t.bind(null,2306,7)),"utm/webfilter/profile/edit/f-webfilter-profile-dialog":()=>Promise.all([__webpack_require__.e(3),__webpack_require__.e(4),__webpack_require__.e(42)]).then(__webpack_require__.t.bind(null,2308,7)),"utm/webfilter/profile/list//f-webfilter-profile-list":()=>__webpack_require__.e(124).then(__webpack_require__.t.bind(null,2339,7)),"utm/webfilter/override/edit/f-webfilter-override-dialog":()=>__webpack_require__.e(148).then(__webpack_require__.t.bind(null,2343,7)),"utm/webfilter/override//f-webfilter-override-list":()=>__webpack_require__.e(264).then(__webpack_require__.t.bind(null,2346,7)),"utm/webfilter/localrating/edit/f-webfilter-rating-override-dialog":()=>__webpack_require__.e(263).then(__webpack_require__.t.bind(null,2348,7)),"utm/webfilter/localrating//f-webfilter-rating-override-list":()=>__webpack_require__.e(149).then(__webpack_require__.t.bind(null,2350,7)),"utm/webfilter/customcategories//f-custom-categories-list":()=>__webpack_require__.e(262).then(__webpack_require__.t.bind(null,2354,7)),"utm/webfilter/customcategories/edit//f-custom-categories-dialog":()=>__webpack_require__.e(261).then(__webpack_require__.t.bind(null,2356,7)),"utm/email/f-email-filter-list":()=>__webpack_require__.e(110).then(__webpack_require__.t.bind(null,2358,7)),"utm/email/f-email-filter-profile":()=>__webpack_require__.e(58).then(__webpack_require__.t.bind(null,2360,7)),"utm/filefilter/f-file-filter-list":()=>__webpack_require__.e(251).then(__webpack_require__.t.bind(null,2368,7)),"utm/filefilter/f-file-filter-profile":()=>__webpack_require__.e(72).then(__webpack_require__.t.bind(null,2370,7)),"utm/ssl-ssh-profile/f-ssl-ssh-profile-list":()=>__webpack_require__.e(177).then(__webpack_require__.t.bind(null,2377,7)),"utm/ssl-ssh-profile//f-ssl-ssh-profile-edit":()=>Promise.all([__webpack_require__.e(17),__webpack_require__.e(96)]).then(__webpack_require__.t.bind(null,2379,7)),"vpn/ipsec/f-ipsec-tunnel-list":()=>__webpack_require__.e(150).then(__webpack_require__.t.bind(null,2385,7)),"vpn/ipsec/edit/controllers":()=>__webpack_require__.e(59).then(__webpack_require__.t.bind(null,2389,7)),"vpn/ipsec/aggregate/f-ipsec-aggregate-edit":()=>__webpack_require__.e(265).then(__webpack_require__.t.bind(null,2400,7)),"vpn/ipsec/template/f-ipsec-tunnel-template-list":()=>__webpack_require__.e(269).then(__webpack_require__.t.bind(null,2402,7)),"vpn/ipsec/template/controllers":()=>__webpack_require__.e(268).then(__webpack_require__.t.bind(null,2404,7)),"ng/components/wizard/f-wizard":()=>__webpack_require__.e(183).then(__webpack_require__.t.bind(null,288,7)),"ng/vpn/ipsec/wizard/controllers":()=>__webpack_require__.e(19).then(__webpack_require__.t.bind(null,505,7)),"vpn/one-click/settings/vpn-one-click-settings":()=>__webpack_require__.e(46).then(__webpack_require__.t.bind(null,2406,7)),"vpn/ipsec/concentrator/f-ipsec-concentrator-list":()=>__webpack_require__.e(267).then(__webpack_require__.t.bind(null,2426,7)),"vpn/ipsec/concentrator/f-ipsec-concentrator-dialog":()=>__webpack_require__.e(266).then(__webpack_require__.t.bind(null,2428,7)),"vpn/ssl/bookmarks/f-sslvpn-bookmarks":()=>__webpack_require__.e(151).then(__webpack_require__.t.bind(null,2430,7)),"vpn/ssl/portal/f-sslvpn-portal-list":()=>__webpack_require__.e(270).then(__webpack_require__.t.bind(null,2434,7)),"vpn/ssl/portal/edit/f-sslvpn-portal-dialog":()=>__webpack_require__.e(52).then(__webpack_require__.t.bind(null,2436,7)),"vpn/ssl/realms/f-sslvpn-realms-list":()=>__webpack_require__.e(178).then(__webpack_require__.t.bind(null,2451,7)),"ng/vpn/ssl/realms/f-sslvpn-realms-dialog":()=>Promise.all([__webpack_require__.e(3),__webpack_require__.e(4),__webpack_require__.e(271)]).then(__webpack_require__.t.bind(null,2454,7)),"vpn/ssl/settings/f-sslvpn-settings":()=>__webpack_require__.e(76).then(__webpack_require__.t.bind(null,2456,7)),"ng/vpn/map/vpn-map":()=>__webpack_require__.e(84).then(__webpack_require__.t.bind(null,2465,7)),"routing/rip/f-routing-rip":()=>__webpack_require__.e(105).then(__webpack_require__.t.bind(null,2473,7)),"routing/ospf/f-routing-ospf":()=>__webpack_require__.e(56).then(__webpack_require__.t.bind(null,2477,7)),"routing/bgp/f-routing-bgp":()=>__webpack_require__.e(104).then(__webpack_require__.t.bind(null,2489,7)),"routing/multicast/f-routing-multicast":()=>__webpack_require__.e(137).then(__webpack_require__.t.bind(null,2493,7)),"routing/static/f-static-route-list":()=>__webpack_require__.e(120).then(__webpack_require__.t.bind(null,2497,7)),"routing/static/edit/f-static-route":()=>__webpack_require__.e(27).then(__webpack_require__.t.bind(null,557,7)),"routing/static/edit//f-static-route":()=>__webpack_require__.e(27).then(__webpack_require__.t.bind(null,557,7)),"routing/policy/f-policy-route-list":()=>__webpack_require__.e(217).then(__webpack_require__.t.bind(null,2502,7)),"routing/policy/edit/f-policy-route":()=>__webpack_require__.e(30).then(__webpack_require__.t.bind(null,558,7)),"routing/policy/edit//f-policy-route":()=>__webpack_require__.e(30).then(__webpack_require__.t.bind(null,558,7)),"system/botnet/f-botnet-hit-monitor":()=>__webpack_require__.e(140).then(__webpack_require__.t.bind(null,325,7)),"wanopt/profile/f-profile-list":()=>__webpack_require__.e(277).then(__webpack_require__.t.bind(null,2505,7)),"wanopt/profile/f-profile-dialog":()=>__webpack_require__.e(97).then(__webpack_require__.t.bind(null,2507,7)),"wanopt/cache/controllers":()=>__webpack_require__.e(274).then(__webpack_require__.t.bind(null,2514,7)),"wanopt/cache/monitor/controllers":()=>__webpack_require__.e(275).then(__webpack_require__.t.bind(null,2516,7)),"wanopt/peer/monitor/f-peer-monitor":()=>__webpack_require__.e(165).then(__webpack_require__.t.bind(null,2518,7)),"wanopt/peer/f-peer-list":()=>__webpack_require__.e(152).then(__webpack_require__.t.bind(null,2520,7)),"wanopt/peer/f-peer-dialog":()=>__webpack_require__.e(276).then(__webpack_require__.t.bind(null,2524,7)),"wanopt/auth-group/f-auth-group-list":()=>__webpack_require__.e(273).then(__webpack_require__.t.bind(null,2526,7)),"wanopt/auth-group/f-auth-group-dialog":()=>__webpack_require__.e(272).then(__webpack_require__.t.bind(null,2528,7)),"wanopt/stats/monitor/controllers":()=>__webpack_require__.e(278).then(__webpack_require__.t.bind(null,2530,7)),"wifi/ap-group/edit/f-ap-group":()=>__webpack_require__.e(279).then(__webpack_require__.t.bind(null,2532,7)),"wifi/ap-profile/f-ap-profile-list":()=>__webpack_require__.e(179).then(__webpack_require__.t.bind(null,2534,7)),"wifi/ap-profile/edit/f-ap-profile":()=>Promise.all([__webpack_require__.e(22),__webpack_require__.e(280)]).then(__webpack_require__.t.bind(null,2536,7)),"wifi/client-mode/f-wifi-client-status":()=>__webpack_require__.e(68).then(__webpack_require__.t.bind(null,2540,7)),"wifi/monitor//f-wifi-client-monitor":()=>Promise.resolve().then(__webpack_require__.t.bind(null,456,7)),"wifi/managed-ap/f-managed-ap-list":()=>Promise.all([__webpack_require__.e(8),__webpack_require__.e(281)]).then(__webpack_require__.t.bind(null,2549,7)),"wifi/managed-ap/edit/f-managed-ap":()=>Promise.all([__webpack_require__.e(22),__webpack_require__.e(85)]).then(__webpack_require__.t.bind(null,2551,7)),"system/interface/f-interface-list":()=>Promise.all([__webpack_require__.e(11),__webpack_require__.e(94)]).then(__webpack_require__.t.bind(null,2557,7)),"system/interface/edit/f-interface-edit":()=>Promise.all([__webpack_require__.e(1),__webpack_require__.e(2),__webpack_require__.e(6)]).then(__webpack_require__.t.bind(null,359,7)),"system/interface/ssid/f-ssid-list":()=>__webpack_require__.e(143).then(__webpack_require__.t.bind(null,2583,7)),"system/interface/edit/f-interface-edit":()=>Promise.all([__webpack_require__.e(1),__webpack_require__.e(2),__webpack_require__.e(6)]).then(__webpack_require__.t.bind(null,359,7)),"system/interface/edit/f-interface-edit":()=>Promise.all([__webpack_require__.e(1),__webpack_require__.e(2),__webpack_require__.e(6)]).then(__webpack_require__.t.bind(null,359,7)),"system/interface/ssid/f-ssid-group":()=>__webpack_require__.e(229).then(__webpack_require__.t.bind(null,2587,7)),"wifi/utm-profile/f-wifi-utm-profile-list":()=>__webpack_require__.e(125).then(__webpack_require__.t.bind(null,2589,7)),"wifi/utm-profile/edit/../f-wifi-utm-profile":()=>__webpack_require__.e(181).then(__webpack_require__.t.bind(null,2593,7)),"wifi/region/f-wifi-region":()=>__webpack_require__.e(64).then(__webpack_require__.t.bind(null,2595,7)),"wifi/region/f-wifi-region-edit":()=>__webpack_require__.e(180).then(__webpack_require__.t.bind(null,361,7)),"wifi/wids/f-wids-profile-list":()=>__webpack_require__.e(153).then(__webpack_require__.t.bind(null,2605,7)),"wifi/wids/edit/f-wids-profile":()=>__webpack_require__.e(182).then(__webpack_require__.t.bind(null,2609,7))};module.exports={require:function(moduleName){if(!(moduleName in moduleImports))throw new Error("Route module "+moduleName+" not found");return moduleImports[moduleName]().then(m=>m.default)},routes:[{url:"/",config:{template:"",controller:"Index"}},{url:"/admin/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-admin-edit></f-admin-edit>",loader_resolve:["f-admin-edit"]}},{url:"/admin/api-user/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-api-user-edit></f-api-user-edit>",loader_resolve:["f-api-user-edit"]}},{url:"/admin/sso-admin/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-sso-admin-edit></f-sso-admin-edit>",loader_resolve:["f-sso-admin-edit"]}},{url:"/admin",config:{template:"<f-admin-list></f-admin-list>",css:["f-admin-list.css"],loader_resolve:["f-admin-list"]}},{url:"/cli-console",config:{template:'<f-console mode="\'detached\'" class="absolute-fill"></f-console>'}},{url:"/firewall/address/edit/:mkey*?",config:{template:"<f-address-dialog f-read-only-manager></f-address-dialog>",loader_resolve:["f-address-dialog"],css:["/css/colorSelector.css"]}},{url:"/firewall/address",config:{template:"<f-address-list f-read-only-manager></f-address-list>",loader_resolve:["f-address-list"]}},{url:"/firewall/address-group/edit/:mkey*?",config:{template:"<f-address-group-dialog f-read-only-manager></f-address-group-dialog>",loader_resolve:["/ng/firewall/address/edit/f-address-group-dialog"],css:["/css/colorSelector.css"]}},{url:"/firewall/address6-template/edit/:mkey*?",config:{path:"/firewall/address6-template/",template:"<f-address6-template-dialog></f-address6-template-dialog>",loader_resolve:["f-address6-template-dialog"]}},{url:"/firewall/decrypted-traffic-mirror/edit/:mkey*?",config:{path:"/firewall/decrypted-traffic-mirror/",template:"<f-decrypted-traffic-mirror></f-decrypted-traffic-mirror>",loader_resolve:["f-decrypted-traffic-mirror"]}},{url:"/firewall/wildcard-address",config:{template:"<f-wildcard-address-list></f-wildcard-address-list>",loader_resolve:["f-wildcard-address-list"]}},{url:"/firewall/wildcard-address/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-wildcard-address-edit></f-wildcard-address-edit>",loader_resolve:["f-wildcard-address-edit"]}},{url:"/firewall/wildcard-address/group/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/wildcard-address/edit/",template:'<f-wildcard-address-edit group="::true"></f-wildcard-address-edit>',loader_resolve:["f-wildcard-address-edit"]}},{url:"/firewall/gtp",config:{template:"<f-gtp-list></f-gtp-list>",loader_resolve:["f-gtp-list"]}},{url:"/firewall/gtp/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-gtp-profile></f-gtp-profile>",loader_resolve:["f-gtp-profile"]}},{url:"/firewall/internet_service",config:{template:"<f-internet-service></f-internet-service>",loader_resolve:["f-internet-service"]}},{url:"/firewall/internet_service/:mkey*",config:{template:"<f-internet-service-entry></f-internet-service-entry>",loader_resolve:["f-internet-service-entry"]}},{url:"/firewall/internet-service-name/edit/:mkey*?",config:{path:"/firewall/internet_service",template:"<f-internet-service-name-dialog></f-internet-service-name-dialog>",loader_resolve:["f-internet-service-name-dialog"]}},{url:"/firewall/ip-pool",config:{template:"<f-ip-pool-list></f-ip-pool-list>",loader_resolve:["f-ip-pool-list"]}},{url:"/firewall/ip-pool/edit/:mkey*?",config:{path:"/firewall/ip-pool",template:"<f-ip-pool-edit></f-ip-pool-edit>",loader_resolve:["f-ip-pool-edit"]}},{url:"/firewall/load-balance/health-check",config:{template:"<f-health-check></f-health-check>",loader_resolve:["f-health-check"]}},{url:"/firewall/load-balance/health-check/edit/:mkey*?",config:{path:"/firewall/load-balance/health-check",template:"<f-health-check-edit></f-health-check-edit>",loader_resolve:["f-health-check-edit"]}},{url:"/firewall/load-balance/virtual-server",config:{template:"<f-virtual-server-list></f-virtual-server-list>",loader_resolve:["f-virtual-server-list"]}},{url:"/firewall/load-balance/virtual-server/edit/:type?/:mkey*?",config:{template:"<f-virtual-server-edit></f-virtual-server-edit>",loader_resolve:["f-virtual-server-edit"],css:["/css/colorSelector.css"]}},{url:"/firewall/policy/local-in",config:{path:"/firewall/policy/",template:"<f-local-in-policy-list></f-local-in-policy-list>",loader_resolve:["f-local-in-policy-list"]}},{url:"/firewall/policy/:type/:subType",allowNonEagerParam:!0,config:{template:"<f-policy-list></f-policy-list>",loader_resolve:["policy-list"]}},{url:"/firewall/policy/:type/:subType/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/policy/",template:"<f-policy-dialog></f-policy-dialog>",css:["/ng/system/replacemsg/f-replacemsg-edit.css","/ng/system/replacemsg/replacemsg-group-chooser/f-replacemsg-group-chooser.css"],loader_resolve:["dialog/policy-dialog"]}},{url:"/firewall/authentication",config:{template:"<f-authentication-rules></f-authentication-rules>",loader_resolve:["f-authentication-rules"]}},{url:"/firewall/authentication/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/authentication/",template:"<f-authentication-rules-dialog></f-authentication-rules-dialog>",loader_resolve:["f-authentication-rules-dialog"]}},{url:"/firewall/authentication/scheme/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/authentication/",template:"<f-authentication-scheme-dialog></f-authentication-scheme-dialog>",loader_resolve:["f-authentication-scheme-dialog"]}},{url:"/firewall/service",config:{path:"/firewall/service",template:"<f-service-list f-read-only-manager></f-service-list>",loader_resolve:["f-service-list"]}},{url:"/firewall/service/edit/:mkey*?",config:{path:"/firewall/service",template:"<f-service-dlg f-read-only-manager></f-service-dlg>",loader_resolve:["f-service-dlg"],css:["/css/colorSelector.css","f-service-dlg.css"]}},{url:"/firewall/service/group/edit/:mkey*?",config:{path:"/firewall/service",template:"<f-service-group-dlg f-read-only-manager></f-service-group-dlg>",loader_resolve:["f-service-group-dlg"],css:["/css/colorSelector.css"]}},{url:"/firewall/service/category",config:{path:"/firewall/service/category",template:"<f-category-list f-read-only-manager></f-category-list>",loader_resolve:["f-category-list"]}},{url:"/firewall/service/category/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/service/category",template:"<f-category-edit f-read-only-manager></f-category-edit>",loader_resolve:["f-category-edit"]}},{url:"/firewall/schedule",config:{path:"/firewall/schedule",template:"<f-schedule-list f-read-only-manager></f-schedule-list>",loader_resolve:["f-schedule-list"]}},{url:"/firewall/schedule/edit/:mkey*?",config:{path:"/firewall/schedule",template:"<f-schedule-edit f-read-only-manager></f-schedule-edit>",loader_resolve:["f-schedule-edit"],css:["/css/colorSelector.css"]}},{url:"/firewall/schedule/group/edit/:mkey*?",config:{path:"/firewall/schedule",template:"<f-schedule-group-edit f-read-only-manager></f-schedule-group-edit>",loader_resolve:["f-schedule-group-edit"],css:["/css/colorSelector.css"]}},{url:"/firewall/shaper/shaping-class-id",config:{path:"/firewall/shaper",template:"<f-shaping-class-id-list></f-shaping-class-id-list>",loader_resolve:["f-shaping-class-id-list"]}},{url:"/firewall/shaper/shaping-class-id/edit/:mkey*?",config:{path:"/firewall/shaper",template:"<f-shaping-class-id-dialog></f-shaping-class-id-dialog>",loader_resolve:["f-shaping-class-id-dialog"]}},{url:"/firewall/shaper/policy/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/shaper",template:"<f-shaper-policy></f-shaper-policy>",loader_resolve:["f-shaper-policy"]}},{url:"/firewall/shaper",config:{template:"<f-shaper-list></f-shaper-list>",loader_resolve:["f-shaper-list"]}},{url:"/firewall/shaper/edit/:type?/:mkey*?",config:{path:"/firewall/shaper",template:"<f-shaper-dialog></f-shaper-dialog>",loader_resolve:["f-shaper-dialog"]}},{url:"/firewall/shaper/profile",config:{path:"/firewall/shaper/",template:"<f-shaping-profile-list></f-shaping-profile-list>",loader_resolve:["f-shaping-profile-list"]}},{url:"/firewall/shaper/profile/edit/:mkey*?",config:{path:"/firewall/shaper",css:["/ng/firewall/shaper/f-shaping-profile-dialog.css"],template:"<f-shaping-profile-dialog></f-shaping-profile-dialog>",loader_resolve:["f-shaping-profile-dialog"]}},{url:"/firewall/sniffer",config:{template:"<f-packet-capture></f-packet-capture>",loader_resolve:["f-packet-capture"]}},{url:"/firewall/sniffer/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/firewall/sniffer",template:"<f-packet-capture-edit></f-packet-capture-edit>",loader_resolve:["f-packet-capture-edit"]}},{url:"/firewall/virtual-ip",config:{template:"<f-virtual-ip-list></f-virtual-ip-list>",loader_resolve:["f-virtual-ip-list"]}},{url:"/firewall/virtual-ip/group/edit/:mkey*?",config:{path:"/firewall/virtual-ip/edit",template:"<f-virtual-ip-group></f-virtual-ip-group>",loader_resolve:["f-virtual-ip-group"],css:["/css/colorSelector.css"]}},{url:"/firewall/virtual-ip/group/:category?/edit/:mkey*?",config:{path:"/firewall/virtual-ip/edit",template:"<f-virtual-ip-group></f-virtual-ip-group>",loader_resolve:["f-virtual-ip-group"],css:["/css/colorSelector.css"]}},{url:"/firewall/virtual-ip/edit/:mkey*?",config:{template:"<f-virtual-ip></f-virtual-ip>",loader_resolve:["f-virtual-ip"],css:["/css/colorSelector.css","/ng/firewall/virtual-ip/edit/f-virtual-ip.css"]}},{url:"/firewall/virtual-ip/:category?/edit/:mkey*?",config:{path:"/firewall/virtual-ip/edit",template:"<f-virtual-ip></f-virtual-ip>",loader_resolve:["f-virtual-ip"],css:["/css/colorSelector.css","/ng/firewall/virtual-ip/edit/f-virtual-ip.css"]}},{url:"/firewall/protocol-options",config:{template:"<f-protocol-options-list></f-protocol-options-list>",loader_resolve:["f-protocol-options-list"]}},{url:"/firewall/protocol-options/edit/:mkey*?",config:{template:"<f-protocol-options></f-protocol-options>",loader_resolve:["f-protocol-options"]}},{url:"/fortiview/:type",allowNonEagerParam:!0,config:{css:["f-fortiview.css","/ng/log/view/f-log-view.css","/ng/directives/faceted_search/faceted_search.css"],template:"<f-fortiview></f-fortiview>",loader_resolve:["f-fortiview"],reloadOnSearch:!1}},{url:"/fortiview/:type/:drilldownValue?",allowNonEagerParam:!0,config:{css:["f-fortiview.css","/ng/log/view/f-log-view.css","/ng/directives/faceted_search/faceted_search.css"],template:"<f-fortiview></f-fortiview>",loader_resolve:["f-fortiview"],reloadOnSearch:!1}},{url:"/gtp/apn",config:{template:"<f-gtp-apn-list></f-gtp-apn-list>",loader_resolve:["f-gtp-apn-list"]}},{url:"/gtp/apn:type?/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-gtp-apn></f-gtp-apn>",loader_resolve:["f-gtp-apn"]}},{url:"/gtp/message-filter",config:{template:"<f-gtp-message-filter-list></f-gtp-message-filter-list>",loader_resolve:["f-gtp-message-filter-list"]}},{url:"/gtp/message-filter:type/edit/:mkey*?",config:{path:"/gtp/message-filter",legacyInlineEdit:!0,template:"<f-gtp-message-filter></f-gtp-message-filter>",loader_resolve:["f-gtp-message-filter"]}},{url:"/log/report",config:{template:"<f-log-report></f-log-report>",loader_resolve:["f-log-report"]}},{url:"/log/report/forticloud",config:{template:"<f-forticloud-report-list></f-forticloud-report-list>",loader_resolve:["f-forticloud-report-list"]}},{url:"/log/settings",config:{template:"<f-log-settings></f-log-settings>",css:["f-log-settings.css"],loader_resolve:["f-log-settings"]}},{url:"/log/threat-weight",config:{template:"<f-log-threat-weight></f-log-threat-weight>",loader_resolve:["f-log-threat-weight"]}},{url:"/log/view/:logType*",config:{template:"<f-log-view></f-log-view>",css:["f-log-view.css","/ng/directives/faceted_search/faceted_search.css"],loader_resolve:["f-log-view"],reloadOnSearch:!1}},{url:"/network/explicit-proxy",config:{path:"/network/explicit-proxy/",template:"<f-explicit-proxy-settings></f-explicit-proxy-settings>",css:["main.css"],loader_resolve:["f-explicit-proxy-settings"]}},{url:"/network/dns/settings",config:{template:"<f-dns></f-dns>",loader_resolve:["f-dns"]}},{url:"/network/dns/service/edit/:mkey*?",config:{template:"<f-dns-service></f-dns-service>",loader_resolve:["f-dns-service"]}},{url:"/network/dns/zones/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-dns-zones></f-dns-zones>",css:["/ng/network/dns/f-dns-servers.css"],loader_resolve:["f-dns-zones"]}},{url:"/network/dns",config:{template:"<f-dns-servers></f-dns-servers>",css:["f-dns-servers.css"],loader_resolve:["f-dns-servers"]}},{url:"/network/extender",config:{template:"<f-extender-list></f-extender-list>",css:["/ng/network/extender/f-extender.css"],loader_resolve:["f-extender-list"]}},{url:"/network/extender/edit/:mkey*?",config:{template:"<f-extender-dialog></f-extender-dialog>",css:["/ng/network/extender/f-extender.css"],loader_resolve:["f-extender-dialog"]}},{url:"/network/modem",config:{path:"/network/modem/",template:"<f-system-modem></f-system-modem>",loader_resolve:["f-system-modem"]}},{url:"/network/3g-modem",config:{path:"/network/modem",template:"<f-system-3g-modem-list></f-system-3g-modem-list>",loader_resolve:["f-system-3g-modem-list"]}},{url:"/network/3g-modem/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/network/modem/",template:"<f-system-3g-modem></f-system-3g-modem>",loader_resolve:["f-system-3g-modem"]}},{url:"/network/modem/monitor",config:{template:"<f-modem-monitor f-read-only-manager></f-modem-monitor>",loader_resolve:["f-modem-monitor"]}},{url:"/network/interface/virtual-wire-pair/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-virtual-wire-pair></f-virtual-wire-pair>",loader_resolve:["../virtual-wire-pair"]}},{url:"/network/virtualwan/members",config:{template:"<f-virtualwan-members></f-virtualwan-members>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["../f-virtualwan-members"]}},{url:"/network/virtualwan/members/edit/:mkey*?",config:{path:"/network/virtualwan/edit",template:"<f-virtualwan-member-edit></f-virtualwan-member-edit>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["f-virtualwan-member-edit"]}},{url:"/network/virtualwan/zone/edit/:mkey*?",config:{template:"<f-virtualwan-zone-edit></f-virtualwan-zone-edit>",loader_resolve:["../../edit/f-virtualwan-zone-edit"]}},{url:"/network/virtualwan/health-check",config:{template:"<f-virtualwan-health-check-list></f-virtualwan-health-check-list>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["f-virtualwan-health-check-list"]}},{url:"/network/virtualwan/health-check/edit/:mkey*?",config:{template:"<f-virtualwan-health-check></f-virtualwan-health-check>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["../../edit/f-virtualwan-health-check"]}},{url:"/network/virtualwan/service/edit/sd-wan",config:{template:"<f-virtualwan-service-sdwan></f-virtualwan-service-sdwan>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["../../../edit/f-virtualwan-service-sdwan"]}},{url:"/network/virtualwan/service/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-virtualwan-service></f-virtualwan-service>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["../../edit/f-virtualwan-service"]}},{url:"/network/virtualwan/service",config:{template:"<f-virtualwan-service-list></f-virtualwan-service-list>",css:["/ng/network/virtualwan/f-virtualwan-sdwan.css"],loader_resolve:["../f-virtualwan-service-list"]}},{url:"/network/web-proxy/forward-server/edit/:mkey*?",config:{path:"/network/explicit-proxy/forward-server/",template:"<f-web-proxy-forward-server></f-web-proxy-forward-server>",loader_resolve:["f-web-proxy-forward-server"]}},{url:"/network/web-proxy/url-match/edit/:mkey*?",config:{path:"/network/explicit-proxy/url-match/",template:"<f-web-proxy-url-match></f-web-proxy-url-match>",loader_resolve:["f-web-proxy-url-match"]}},{url:"/prompt",config:{template:"",controller:"PromptIndex"}},{url:"/prompt/centrally_managed",config:{template:"<f-centrally-managed-prompt></f-centrally-managed-prompt>",loader_resolve:["f-centrally-managed-prompt"]}},{url:"/prompt/file_system_check",config:{template:"<f-file-system-check-prompt></f-file-system-check-prompt>",loader_resolve:["f-file-system-check-prompt"]}},{url:"/prompt/reboot",config:{template:"<system-reboot></system-reboot>"}},{url:"/prompt/shutdown",config:{template:"<system-shutdown></system-shutdown>"}},{url:"/prompt/vm-license",config:{template:"<f-vm-license-prompt></f-vm-license-prompt>",loader_resolve:["f-vm-license-prompt"]}},{url:"/prompt/fortigate-setup",config:{path:"/prompt/setup/",template:"<f-fortigate-setup-prompt></f-fortigate-setup-prompt>",loader_resolve:["f-fortigate-setup-prompt"]}},{url:"/security-rating",config:{template:"<f-score-cards></f-score-cards>",css:["/ng/security-rating/main.css","/ng/score-cards/main.css","/ng/components/csf/tree-view/f-csf-tree-view.css","/ng/directives/f-diff.css"],loader_resolve:["/ng/score-cards/f-score-cards"],reloadOnSearch:!1}},{url:"/stitch",config:{template:"<f-stitch-list></f-stitch-list>",loader_resolve:["f-stitch-list"]}},{url:"/stitch/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-stitch></f-stitch>",loader_resolve:["../f-stitch"]}},{url:"/switchctrl/managed-switch",config:{path:"/switchctrl/managed_sw",template:"<f-fortiswitch-list></f-fortiswitch-list>",css:["/ng/components/faceplate/f-faceplate.css","f-fortiswitch-stacking.css"],loader_resolve:["f-fortiswitch-list"]}},{url:"/switchctrl/switch-group/edit/:mkey*?",config:{template:"<f-switch-group-edit></f-switch-group-edit>",loader_resolve:["f-switch-group-edit"]}},{url:"/switchctrl/managed-switch/edit/:mkey*?",config:{path:"/switchctrl/managed_sw/edit/",template:"<f-fortiswitch-edit></f-fortiswitch-edit>",loader_resolve:["f-fortiswitch-edit"]}},{url:"/switchctrl/ports",config:{template:"<f-fortiswitch-ports></f-fortiswitch-ports>",loader_resolve:["f-fortiswitch-ports"],css:["/ng/components/faceplate/f-faceplate.css","main.css"]}},{url:"/switchctrl/ports/edit",config:{template:"<fortiswitch-port></fortiswitch-port>",loader_resolve:["fortiswitch-port"]}},{url:"/switchctrl/vlan",config:{template:"<f-fsw-vlan-list></f-fsw-vlan-list>",loader_resolve:["f-fsw-vlan-list"]}},{url:"/switchctrl/security-policy",config:{template:"<f-fortiswitch-security-policy></f-fortiswitch-security-policy>",loader_resolve:["f-fortiswitch-security-policy"]}},{url:"/switchctrl/security-policy/edit/:type?/:mkey*?",config:{legacyInlineEdit:!0,path:"/switchctrl/security-policy/",template:"<f-fortiswitch-security-policy-edit></f-fortiswitch-security-policy-edit>",loader_resolve:["f-fortiswitch-security-policy-edit"]}},{url:"/switchctrl/fortilink",config:{template:"<f-fortilink-interface></f-fortilink-interface>",loader_resolve:["f-fortilink-interface"]}},{url:"/switchctrl/nac-policy",config:{template:"<f-nac-policy-list f-read-only-manager></f-nac-policy-list>",loader_resolve:["f-nac-policy-list"],css:["/ng/switchctrl/nac-policy/f-nac-policy-list.css"]}},{url:"/switchctrl/nac-settings/edit/:mkey*?",config:{path:"/switchctrl/nac-settings/",template:"<f-nac-settings-edit></f-nac-settings-edit>",loader_resolve:["f-nac-settings-edit"]}},{url:"/switchctrl/nac-settings-wizard",config:{path:"/switchctrl/nac-policy/edit/",template:"<f-nac-settings-wizard></f-nac-settings-wizard>",loader_resolve:["f-nac-settings-wizard"]}},{url:"/switchctrl/nac-policy/edit/:mkey*?",config:{template:"<f-nac-policy-edit></f-nac-policy-edit>",loader_resolve:["f-nac-policy-edit"],css:["/ng/switchctrl/nac-policy/edit/f-nac-policy-edit.css"]}},{url:"/interface/fext-wan/edit/:mkey*?",config:{template:"<f-interface-extender></f-interface-extender>",loader_resolve:["f-interface-extender"]}},{url:"/system/certificate",config:{template:"<f-certificate-list></f-certificate-list>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-list"]}},{url:"/system/certificate/csr",config:{template:"<f-certificate-gen-csr></f-certificate-gen-csr>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-gen-csr"]}},{url:"/system/certificate/import/ca",config:{template:"<f-certificate-import-ca></f-certificate-import-ca>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-import-ca"]}},{url:"/system/certificate/import/crl/:mkey*?",config:{template:"<f-certificate-import-crl></f-certificate-import-crl>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-import-crl"]}},{url:"/system/certificate/import/local",config:{template:"<f-certificate-import-local></f-certificate-import-local>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-import-local"]}},{url:"/system/certificate/import/remote",config:{template:"<f-certificate-import-remote></f-certificate-import-remote>",css:["/ng/system/certificate/certificate.css"],loader_resolve:["f-certificate-import-remote"]}},{url:"/system/features",config:{legacy_base_dialog:!0,controller:"SystemFeatures",css:["main.css"],loader_resolve:["controllers","services","directives"]}},{url:"/system/admin-profiles",config:{template:"<f-admin-profiles></f-admin-profiles>",loader_resolve:["f-admin-profiles"]}},{url:"/system/admin-profiles/edit/:mkey*?",config:{path:"/system/admin-profiles/",template:"<f-admin-profile-edit></f-admin-profile-edit>",loader_resolve:["f-admin-profile-edit"]}},{url:"/system/config/backup",config:{legacy_base_dialog:!0,controller:"ConfigBackupController",loader_resolve:["controllers"]}},{url:"/system/config/restore",config:{legacy_base_dialog:!0,controller:"ConfigRestoreController",loader_resolve:["controllers","/ng/directives/f-file-select"]}},{url:"/system/config/revisions",config:{template:"<system-config-revisions></system-config-revisions>",css:["system-config-revisions.css","/ng/directives/f-diff.css"],loader_resolve:["system-config-revisions"]}},{url:"/system/config/scripts",config:{template:"<f-script-list></f-script-list>",loader_resolve:["f-script-list"]}},{url:"/system/dashboard/:id*",config:{template:"<f-system-dashboard></f-system-dashboard>",css:["/ng/system/dashboard/main.css","/ng/components/csf/tree-view/f-csf-tree-view.css","/ng/fortiview/f-fortiview.css","/ng/directives/faceted_search/faceted_search.css","/ng/log/view/f-log-view.css","/ng/wifi/wifi-radio-dom.css"],loader_resolve:["f-system-dashboard"],reloadOnSearch:!1}},{url:"/system/dashboard-preview/:type*",config:{path:"/system/dashboard",template:'<f-system-dashboard temporary="true"></f-system-dashboard>',css:["/ng/system/dashboard/main.css","/ng/components/csf/tree-view/f-csf-tree-view.css","/ng/fortiview/f-fortiview.css","/ng/directives/faceted_search/faceted_search.css","/ng/log/view/f-log-view.css","/ng/wifi/wifi-radio-dom.css"],loader_resolve:["f-system-dashboard"]}},{url:"/system/debug",config:{template:"<f-debug></f-debug>",loader_resolve:["f-debug"]}},{url:"/security-fabric/topology/physical",config:{template:"<f-physical-topology></f-physical-topology>",loader_resolve:["../f-physical-topology"],css:["/ng/security-fabric/topology/main.css","/ng/network/virtualwan/f-virtualwan-sdwan.css"]}},{url:"/security-fabric/topology/logical",config:{template:"<f-logical-topology></f-logical-topology>",loader_resolve:["../f-logical-topology"],css:["/ng/security-fabric/topology/main.css","/ng/network/virtualwan/f-virtualwan-sdwan.css"]}},{url:"/fabric-connector",config:{path:"/fortinet-connector",template:"<f-fortinet-connector-list></f-fortinet-connector-list>",loader_resolve:["f-fortinet-connector-list"],css:["/ng/components/csf/tree-view/f-csf-tree-view.css"]}},{url:"/fabric-connector/edit/:type?/:mkey*?",config:{path:"/fortinet-connector/edit",template:"<f-fortinet-connector-dialog></f-fortinet-connector-dialog>",loader_resolve:["f-fortinet-connector-dialog"],css:["/ng/components/csf/tree-view/f-csf-tree-view.css"]}},{url:"/external-connector/edit/:type?/:mkey*?",config:{path:"/fabric-connector/edit",template:"<f-fabric-connector-edit></f-fabric-connector-edit>",loader_resolve:["f-fabric-connector-edit"],css:["/ng/components/ldap/f-ldap-browser.css","/ng/user/sso/edit/main.css"]}},{url:"/external-connector",config:{path:"/fabric-connector",template:"<f-fabric-connector-list></f-fabric-connector-list>",loader_resolve:["f-fabric-connector-list"],css:["f-fabric-connector-list.css"]}},{url:"/system/firmware",config:{template:"<f-system-firmware></f-system-firmware>",css:["f-system-firmware.css"],loader_resolve:["f-system-firmware"],reloadOnSearch:!1}},{url:"/system/fortiguard",config:{legacy_gutter_dialog:!0,controller:"FortiGuardController",css:["main.css"],loader_resolve:["controllers","directives","services","f-entitlement-table"]}},{url:"/system/ha/peer/:serialno/:vclusterId*?",config:{template:"<f-system-ha-peer></f-system-ha-peer>",loader_resolve:["f-system-ha-peer"]}},{url:"/system/ha/cluster/:vclusterId*?",config:{template:"<f-system-ha-cluster></f-system-ha-cluster>",loader_resolve:["f-system-ha-cluster"],css:["f-system-ha-cluster.css"]}},{url:"/system/ha/monitor",config:{template:"<f-system-ha-monitor></f-system-ha-monitor>",loader_resolve:["f-system-ha-monitor"],css:["/ng/components/faceplate/f-faceplate.css","f-system-ha-faceplate.css","f-system-ha-monitor.css"]}},{url:"/system/language",config:{template:"<f-custom-lang></f-custom-lang>",css:["f-custom-lang.css"],loader_resolve:["f-custom-lang"]}},{url:"/system/language/edit/:mkey*?",config:{path:"/system/language",template:"<f-custom-lang-edit></f-custom-lang-edit>",loader_resolve:["f-custom-lang-edit"]}},{url:"/system/power/:type*",config:{template:"<f-system-power></f-system-power>",loader_resolve:["/ng/directives/f-system-power"]}},{url:"/system/replacemsg-group",config:{template:"<f-replacemsg-group-list></f-replacemsg-group-list>",loader_resolve:["/ng/system/replacemsg/group/f-replacemsg-group-list"]}},{url:"/system/replacemsg-group/edit",config:{template:"<f-replacemsg-group-edit></f-replacemsg-group-edit>",loader_resolve:["/ng/system/replacemsg/group/f-replacemsg-group-edit"]}},{url:"/system/replacemsg-image",config:{template:"<f-replacemsg-image></f-replacemsg-image>",loader_resolve:["/ng/system/replacemsg/image/f-replacemsg-image"]}},{url:"/system/replacemsg-image/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-replacemsg-image-edit></f-replacemsg-image-edit>",loader_resolve:["/ng/system/replacemsg/image/f-replacemsg-image-edit"]}},{url:"/system/replacemsg/:group*?",config:{template:"<f-replacemsg-list></f-replacemsg-list>",css:["/ng/system/replacemsg/f-replacemsg-edit.css"],loader_resolve:["f-replacemsg-list"]}},{url:"/system/reputation",config:{template:"<f-ip-reputation></f-ip-reputation>",css:["main.css"],loader_resolve:["f-ip-reputation"]}},{url:"/system/settings",config:{template:"<f-system-settings></f-system-settings>",css:["/ng/directives/f-diff.css","/ng/system/settings/f-system-settings.css"],loader_resolve:["f-system-settings"]}},{url:"/system/snmp",config:{template:"<f-system-snmp></f-system-snmp>",loader_resolve:["f-system-snmp"]}},{url:"/system/vdom-link/edit/:mkey*?",config:{template:"<f-vdom-link></f-vdom-link>",loader_resolve:["f-vdom-link"]}},{url:"/system/vdom",config:{template:"<f-vdom-list></f-vdom-list>",loader_resolve:["f-vdom-list"]}},{url:"/system/vdom/edit/:mkey*?",config:{template:"<f-vdom-settings></f-vdom-settings>",loader_resolve:["f-vdom-settings"],css:["f-vdom-settings.css","/ng/system/vdom/resources/f-vdom-resources.css"]}},{url:"/system/global-resources",config:{template:"<f-global-resources></f-global-resources>",loader_resolve:["f-global-resources"],css:["/ng/system/vdom/resources/f-vdom-resources.css"]}},{url:"/system/zone/edit/:mkey*?",config:{template:"<f-zone-dialog></f-zone-dialog>",loader_resolve:["f-zone-dialog"]}},{url:"/system/vm/license",config:{template:"<f-vm-license></f-vm-license>",loader_resolve:["f-vm-license"]}},{url:"/third_party",config:{legacy_base_dialog:!0,controller:"ThirdParty",loader_resolve:["controllers"]}},{url:"/threatmap/:role_type*",config:{template:"<f-threat-map></f-threat-map>",css:["main.css"],loader_resolve:["f-threat-map"]}},{url:"/user/auth-settings",config:{template:"<f-user-auth-settings></f-user-auth-settings>",loader_resolve:["f-user-auth-settings"]}},{url:"/user/domain-controller/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-user-domain-controller-dialog></f-user-domain-controller-dialog>",path:"/user/domain-controller/",loader_resolve:["f-user-domain-controller-dialog"]}},{url:"/user/group",config:{template:"<f-user-group-list></f-user-group-list>",loader_resolve:["f-user-group-list"]}},{url:"/user/group/edit/:mkey*?",config:{template:"<f-user-group></f-user-group>",css:["/ng/user/group/edit/browser-remote-groups.css","/ng/components/ldap/f-ldap-browser.css"],loader_resolve:["f-user-group"]}},{url:"/user/guest",config:{template:"<f-user-guest-list></f-user-guest-list>",loader_resolve:["f-user-guest-list"]}},{url:"/user/krb-keytab/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-user-krb-keytab-dialog></f-user-krb-keytab-dialog>",path:"/user/krb-keytab/",loader_resolve:["f-user-krb-keytab-dialog"]}},{url:"/user/ldap",config:{template:"<f-ldap-server-list></f-ldap-server-list>",loader_resolve:["f-ldap-server-list"]}},{url:"/user/ldap/edit/:mkey*?",config:{template:"<f-ldap-server></f-ldap-server>",css:["/ng/components/ldap/f-ldap-browser.css"],loader_resolve:["f-ldap-server"]}},{url:"/user/local",config:{template:"<f-local-user-list></f-local-user-list>",loader_resolve:["f-local-user-list"]}},{url:"/user/local/edit/:mkey*?",config:{template:"<f-local-user></f-local-user>",loader_resolve:["f-local-user"]}},{url:"/user/pki",config:{template:"<f-pki-users-list></f-pki-users-list>",loader_resolve:["f-pki-users-list"]}},{url:"/user/pki/edit/:mkey*?",config:{template:"<f-pki-user></f-pki-user>",loader_resolve:["f-pki-user"]}},{url:"/user/radius",config:{template:"<f-radius-server-list></f-radius-server-list",loader_resolve:["f-radius-server-list"]}},{url:"/user/radius/edit/:mkey*?",config:{template:"<f-radius-server></f-radius-server>",loader_resolve:["f-radius-server"]}},{url:"/user/saml",config:{template:"<f-saml></f-saml>",loader_resolve:["f-saml"]}},{url:"/user/tacacs-plus",config:{template:"<f-tacacs-plus-server-list></f-tacacs-plus-server-list>",loader_resolve:["f-tacacs-plus-server-list"]}},{url:"/user/tacacs-plus/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-tacacs-plus-server></f-tacacs-plus-server>",loader_resolve:["f-tacacs-plus-server"]}},{url:"/user/wizard",config:{template:"<f-user-wizard></f-user-wizard>",css:["f-user-wizard.css","/ng/components/ldap/f-ldap-browser.css"],loader_resolve:["f-user-wizard"]}},{url:"/user/wizard/adgrp-import",config:{template:"<f-adgrp-import></f-adgrp-import>",css:["/ng/components/ldap/f-ldap-browser.css","/ng/user/sso/edit/main.css"],loader_resolve:["/ng/user/wizard/f-adgrp-import"]}},{url:"/user/ftoken",config:{template:"<f-ftoken-list></f-ftoken-list>",loader_resolve:["f-ftoken-list"]}},{url:"/user/ftoken/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-ftoken-edit></f-ftoken-edit>",loader_resolve:["f-ftoken-edit"]}},{url:"/user/ftoken/activate/:userName?/:action*?",config:{template:"<f-ftoken-activate></f-ftoken-activate>",loader_resolve:["f-ftoken-activate"]}},{url:"/utm/antivirus/profile/edit/:mkey*?",config:{path:"/utm/antivirus/",template:"<f-av-profile></f-av-profile>",loader_resolve:["f-av-profile"]}},{url:"/utm/antivirus/profile",config:{path:"/utm/antivirus/",template:"<f-av-profile-list></f-av-profile-list>",loader_resolve:["f-av-profile-list"]}},{url:"/utm/application/signature",config:{path:"/utm/appctrl/signature",template:"<f-application-signatures></f-application-signatures>",loader_resolve:["f-application-signatures"]}},{url:"/utm/application/name",config:{path:"/utm/appctrl/signature",template:"<f-application-signatures single-view=\"'application.name'\"></f-application-signatures>",loader_resolve:["f-application-signatures"]}},{url:"/utm/application/group/edit/:mkey*?",config:{path:"/utm/appctrl/group",template:"<f-application-group-edit></f-application-group-edit>",loader_resolve:["f-application-group-edit"]}},{url:"/utm/appctrl/sensor",config:{template:"<f-application-control-sensor-list></f-application-control-sensor-list>",loader_resolve:["f-application-control-sensor-list"]}},{url:"/utm/appctrl/sensor/edit/:mkey*?",config:{path:"/utm/appctrl/sensor/",template:"<f-application-control-sensor></f-application-control-sensor>",css:["main.css"],loader_resolve:["f-application-control-sensor"]}},{url:"/utm/dnsfilter/edit/:mkey*?",config:{path:"/utm/dnsfilter/",template:"<f-dns-filter></f-dns-filter>",css:["/ng/utm/dnsfilter/f-dns-filter.css"],loader_resolve:["f-dns-filter"]}},{url:"/utm/dnsfilter",config:{path:"/utm/dnsfilter/",template:"<f-dns-filter-list></f-dns-filter-list>",loader_resolve:["f-dns-filter-list"]}},{url:"/utm/voip/profile/edit/:mkey*?",config:{path:"/utm/voip/",template:"<f-voip-profile></f-voip-profile>",loader_resolve:["f-voip-profile"]}},{url:"/utm/voip/profile",config:{path:"/utm/voip/",template:"<f-voip-profile-list></f-voip-profile-list>",loader_resolve:["f-voip-profile-list"]}},{url:"/utm/:type/custom/edit/:mkey*?",config:{path:"/utm/custom/signature",template:"<f-custom-signature-edit></f-custom-signature-edit>",loader_resolve:["f-custom-signature-edit"]}},{url:"/utm/ips/signature",config:{template:"<f-ips-signature-list></f-ips-signature-list>",loader_resolve:["f-ips-signature-list"]}},{url:"/utm/ips/sensor",config:{template:"<f-ips-sensor-list></f-ips-sensor-list>",loader_resolve:["f-ips-sensor-list"]}},{url:"/utm/ips/sensor/edit/:mkey*?",config:{template:"<f-ips-sensor></f-ips-sensor>",css:["/ng/utm/ips/sensor/edit/f-ips-sensor.css"],loader_resolve:["f-ips-sensor"]}},{url:"/utm/icap/profile",config:{template:"<f-icap-profile></f-icap-profile>",loader_resolve:["f-icap-profile"]}},{url:"/utm/icap/profile/edit/:mkey*?",config:{template:"<f-icap-profile-edit></f-icap-profile-edit>",loader_resolve:["/ng/utm/icap/profile/f-icap-profile-edit"]}},{url:"/utm/icap/server",config:{template:"<f-icap-server></f-icap-server>",loader_resolve:["f-icap-server"]}},{url:"/utm/icap/server/edit/:mkey*?",config:{template:"<f-icap-server-edit></f-icap-server-edit>",loader_resolve:["/ng/utm/icap/server/f-icap-server-edit"]}},{url:"/utm/profile/group",config:{template:"<f-profile-group></f-profile-group>",loader_resolve:["f-profile-group"]}},{url:"/utm/profile/group/edit/:mkey*?",config:{path:"/utm/profile/group/",template:"<f-profile-group-edit></f-profile-group-edit>",loader_resolve:["f-profile-group-edit"]}},{url:"/utm/waf/profile/edit/:mkey*?",config:{path:"/utm/waf/",template:"<f-waf-profile-edit></f-waf-profile-edit>",loader_resolve:["f-waf-profile-edit"]}},{url:"/utm/waf/profile",config:{path:"/utm/waf/",template:"<f-waf-profile-list></f-waf-profile-list>",loader_resolve:["f-waf-profile-list"]}},{url:"/utm/webfilter/profile/edit/:mkey*?",config:{template:"<f-webfilter-profile-dialog></f-webfilter-profile-dialog>",loader_resolve:["f-webfilter-profile-dialog"],css:["/ng/system/replacemsg/f-replacemsg-edit.css","/ng/system/replacemsg/replacemsg-group-chooser/f-replacemsg-group-chooser.css"]}},{url:"/utm/webfilter/profile",config:{path:"/utm/webfilter/profile/list/",template:"<f-webfilter-profile-list></f-webfilter-profile-list>",loader_resolve:["f-webfilter-profile-list"]}},{url:"/utm/webfilter/override/edit/:mkey*?",path:"/utm/webfilter/override/edit/",config:{template:"<f-webfilter-override-dialog></f-webfilter-override-dialog>",loader_resolve:["f-webfilter-override-dialog"]}},{url:"/utm/webfilter/override",config:{path:"/utm/webfilter/override/",template:"<f-webfilter-override-list></f-webfilter-override-list>",loader_resolve:["f-webfilter-override-list"]}},{url:"/utm/webfilter/localrating/edit/:mkey*?",path:"/utm/webfilter/override/edit/",config:{template:"<f-webfilter-rating-override-dialog></f-webfilter-rating-override-dialog>",loader_resolve:["f-webfilter-rating-override-dialog"]}},{url:"/utm/webfilter/localrating",config:{path:"/utm/webfilter/localrating/",template:"<f-webfilter-rating-override-list></f-webfilter-rating-override-list>",loader_resolve:["f-webfilter-rating-override-list"]}},{url:"/utm/webfilter/custom-categories",config:{path:"/utm/webfilter/customcategories/",template:"<f-custom-categories-list></f-custom-categories-list>",loader_resolve:["f-custom-categories-list"]}},{url:"/utm/webfilter/custom-categories/edit/:mkey*?",config:{path:"/utm/webfilter/customcategories/edit/",template:"<f-custom-categories-dialog></f-custom-categories-dialog>",loader_resolve:["f-custom-categories-dialog"]}},{url:"/utm/email/profile",config:{path:"/utm/email",template:"<f-email-filter-list></f-email-filter-list>",loader_resolve:["f-email-filter-list"]}},{url:"/utm/email/profile/edit/:mkey*?",config:{path:"/utm/email",css:["f-protocol-spam-table.css"],template:"<f-email-filter-profile></f-email-filter-profile>",loader_resolve:["f-email-filter-profile"]}},{url:"/utm/filefilter/profile",config:{path:"/utm/filefilter",template:"<f-file-filter-list></f-file-filter-list>",loader_resolve:["f-file-filter-list"]}},{url:"/utm/filefilter/profile/edit/:mkey*?",config:{path:"/utm/filefilter",template:"<f-file-filter-profile></f-file-filter-profile>",loader_resolve:["f-file-filter-profile"]}},{url:"/utm/ssl-ssh-profile",config:{template:"<f-ssl-ssh-profile-list></f-ssl-ssh-profile-list>",loader_resolve:["f-ssl-ssh-profile-list"]}},{url:"/utm/ssl-ssh-profile/edit/:mkey*?",config:{path:"/utm/ssl-ssh-profile/",template:"<f-ssl-ssh-profile-edit></f-ssl-ssh-profile-edit>",loader_resolve:["f-ssl-ssh-profile-edit"]}},{url:"/vpn/ipsec",config:{template:"<f-ipsec-tunnel-list></f-ipsec-tunnel-list>",loader_resolve:["f-ipsec-tunnel-list"]}},{url:"/vpn/ipsec/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-ipsec-tunnel-edit></f-ipsec-tunnel-edit>",css:["/ng/legacy.css","main.css"],loader_resolve:["controllers"]}},{url:"/vpn/ipsec/aggregate/edit/:mkey*?",config:{path:"/vpn/ipsec/aggregate",template:"<f-ipsec-aggregate-edit></f-ipsec-aggregate-edit>",loader_resolve:["f-ipsec-aggregate-edit"]}},{url:"/vpn/ipsec/template",config:{template:"<f-ipsec-tunnel-template-list></f-ipsec-tunnel-template-list>",loader_resolve:["f-ipsec-tunnel-template-list"]}},{url:"/vpn/ipsec/template/:mkey*?",config:{legacyInlineEdit:!0,path:"/vpn/ipsec/template",legacy_base_dialog:!0,controller:"VPNTemplate",loader_resolve:["controllers"],css:["/ng/legacy.css"]}},{url:"/vpn/ipsec/wizard",config:{css:["/ng/legacy.css","main.css"],template:"<f-wizard><f-vpn-wizard></f-vpn-wizard></f-wizard>",loader_resolve:["/ng/components/wizard/f-wizard","/ng/vpn/ipsec/wizard/controllers"]}},{url:"/vpn/ocvpn/settings",config:{path:"/vpn/one-click/settings",template:"<vpn-one-click-settings></vpn-one-click-settings>",loader_resolve:["vpn-one-click-settings"]}},{url:"/vpn/ipsec/concentrator",config:{template:"<f-ipsec-concentrator-list></f-ipsec-concentrator-list>",loader_resolve:["f-ipsec-concentrator-list"]}},{url:"/vpn/ipsec/concentrator/edit/:mkey*?",config:{path:"/vpn/ipsec/concentrator",template:"<f-ipsec-concentrator-dialog></f-ipsec-concentrator-dialog>",loader_resolve:["f-ipsec-concentrator-dialog"]}},{url:"/vpn/ssl/bookmarks",config:{template:"<f-sslvpn-bookmarks></f-sslvpn-bookmarks>",loader_resolve:["f-sslvpn-bookmarks"]}},{url:"/vpn/ssl/portal",config:{template:"<f-sslvpn-portal-list></f-sslvpn-portal-list>",loader_resolve:["f-sslvpn-portal-list"]}},{url:"/vpn/ssl/portal/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-sslvpn-portal-dialog></f-sslvpn-portal-dialog>",loader_resolve:["f-sslvpn-portal-dialog"]}},{url:"/vpn/ssl/realms",config:{template:"<f-sslvpn-realms-list></f-sslvpn-realms-list>",loader_resolve:["f-sslvpn-realms-list"]}},{url:"/vpn/ssl/realms/edit/:mkey*?",config:{template:"<f-sslvpn-realms-dialog></f-sslvpn-realms-dialog>",css:["/ng/system/replacemsg/f-replacemsg-edit.css"],loader_resolve:["/ng/vpn/ssl/realms/f-sslvpn-realms-dialog"]}},{url:"/vpn/ssl/settings",config:{template:"<f-sslvpn-settings></f-sslvpn-settings>",loader_resolve:["f-sslvpn-settings"]}},{url:"/vpn/map",config:{css:["/ng/vpn/map/vpn-map.css"],template:"<f-vpn-map></f-vpn-map>",loader_resolve:["/ng/vpn/map/vpn-map"]}},{url:"/routing/rip",config:{template:"<f-routing-rip></f-routing-rip>",loader_resolve:["f-routing-rip"]}},{url:"/routing/ospf",config:{template:"<f-routing-ospf></f-routing-ospf>",loader_resolve:["f-routing-ospf"]}},{url:"/routing/bgp",config:{template:"<f-routing-bgp></f-routing-bgp>",loader_resolve:["f-routing-bgp"]}},{url:"/routing/multicast",config:{template:"<f-routing-multicast></f-routing-multicast>",loader_resolve:["f-routing-multicast"]}},{url:"/routing/static",config:{template:"<f-static-route-list></f-static-route-list>",loader_resolve:["f-static-route-list"]}},{url:"/routing/static/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-static-route></f-static-route>",loader_resolve:["f-static-route"]}},{url:"/routing/static6/edit/:mkey*?",config:{legacyInlineEdit:!0,path:"/routing/static/edit/",template:'<f-static-route ip-v6="::true"></f-static-route>',loader_resolve:["f-static-route"]}},{url:"/routing/policy",config:{template:"<f-policy-route-list></f-policy-route-list>",loader_resolve:["f-policy-route-list"]}},{url:"/routing/policy/edit/:mkey*?",config:{template:"<f-policy-route></f-policy-route>",loader_resolve:["f-policy-route"]}},{url:"/routing/policy6/edit/:mkey*?",config:{path:"/routing/policy/edit/",template:'<f-policy-route ip-v6="::true"></f-policy-route>',loader_resolve:["f-policy-route"]}},{url:"/system/botnet",config:{template:"<f-botnet-hit-monitor></f-botnet-hit-monitor>",loader_resolve:["f-botnet-hit-monitor"]}},{url:"/wanopt/profile",config:{template:"<f-profile-list></f-profile-list>",loader_resolve:["f-profile-list"]}},{url:"/wanopt/profile/edit/:mkey*?",config:{path:"/wanopt/profile",template:"<f-profile-dialog></f-profile-dialog>",loader_resolve:["f-profile-dialog"]}},{url:"/wanopt/cache",config:{legacy_base_dialog:!0,controller:"CacheSettings",css:["main.css"],loader_resolve:["controllers"]}},{url:"/wanopt/cache/monitor",config:{legacy_base:!0,controller:"WebCacheMonitor",css:["main.css"],loader_resolve:["controllers"]}},{url:"/wanopt/peer/monitor",config:{template:"<f-peer-monitor f-read-only-manager></f-peer-monitor>",loader_resolve:["f-peer-monitor"],css:["f-peer-monitor.css"]}},{url:"/wanopt/peer",config:{template:"<f-peer-list></f-peer-list>",loader_resolve:["f-peer-list"]}},{url:"/wanopt/peer/edit/:mkey*?",config:{path:"/wanopt/peer",template:"<f-peer-dialog></f-peer-dialog>",loader_resolve:["f-peer-dialog"]}},{url:"/wanopt/auth-group",config:{template:"<f-auth-group-list></f-auth-group-list>",loader_resolve:["f-auth-group-list"]}},{url:"/wanopt/auth-group/edit/:mkey*?",config:{path:"/wanopt/auth-group",template:"<f-auth-group-dialog></f-auth-group-dialog>",loader_resolve:["f-auth-group-dialog"]}},{url:"/wanopt/stats/monitor",config:{legacy_base:!0,controller:"WanOptMonitor",css:["main.css"],loader_resolve:["controllers"]}},{url:"/wifi/ap-group/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-ap-group></f-ap-group>",loader_resolve:["f-ap-group"]}},{url:"/wifi/ap-profile",config:{template:"<f-ap-profile-list></f-ap-profile-list>",loader_resolve:["f-ap-profile-list"],css:["../wifi-radio-dom.css"]}},{url:"/wifi/ap-profile/edit/:mkey*?",config:{template:"<f-ap-profile></f-ap-profile>",loader_resolve:["f-ap-profile"]}},{url:"/wifi/client-mode",config:{template:"<f-wifi-client-status></f-wifi-client-status>",loader_resolve:["f-wifi-client-status"]}},{url:"/wifi/client-monitor",config:{path:"/wifi/monitor/",template:"<f-wifi-client-monitor></f-wifi-client-monitor>",loader_resolve:["f-wifi-client-monitor"]}},{url:"/wifi/managed-ap",config:{template:"<f-managed-ap-list></f-managed-ap-list>",loader_resolve:["f-managed-ap-list"],css:["f-managed-ap-list.css","../wifi-radio-dom.css"]}},{url:"/wifi/managed-ap/edit/:mkey*?",config:{template:"<f-managed-ap></f-managed-ap>",loader_resolve:["f-managed-ap"],css:["f-managed-ap.css"]}},{url:"/interface",config:{template:"<f-interface-list></f-interface-list>",path:"/system/interface",loader_resolve:["f-interface-list"],css:["f-interface-list.css","/ng/components/faceplate/f-faceplate.css"]}},{url:"/interface/edit/:mkey*?",config:{template:"<f-interface-edit></f-interface-edit>",path:"/system/interface/edit",loader_resolve:["f-interface-edit"],css:["f-interface-edit.css","/ng/system/replacemsg/f-replacemsg-edit.css","/css/colorSelector.css"]}},{url:"/interface/ssid",config:{template:"<f-ssid-list></f-ssid-list>",path:"/system/interface/ssid",loader_resolve:["f-ssid-list"]}},{url:"/interface/ssid/edit/:mkey*?",config:{template:'<f-interface-edit type="vap-switch"></f-interface-edit>',path:"/system/interface/edit",loader_resolve:["f-interface-edit"],css:["/css/colorSelector.css"]}},{url:"/interface/fsw/edit/:mkey*?",config:{template:'<f-interface-edit switch-vlan-mode="true"></f-interface-edit>',path:"/system/interface/edit",loader_resolve:["f-interface-edit"],css:["/css/colorSelector.css"]}},{url:"/interface/ssid-group/edit/:mkey*?",config:{path:"/system/interface/ssid",legacyInlineEdit:!0,template:"<f-ssid-group></f-ssid-group>",loader_resolve:["f-ssid-group"]}},{url:"/wifi/utm-profile",config:{template:"<f-wifi-utm-profile-list></f-wifi-utm-profile-list>",loader_resolve:["f-wifi-utm-profile-list"]}},{url:"/wifi/utm-profile/edit/:mkey*?",config:{legacyInlineEdit:!0,template:"<f-wifi-utm-profile></f-wifi-utm-profile>",loader_resolve:["../f-wifi-utm-profile"]}},{url:"/wifi/region",config:{template:"<f-wifi-region></f-wifi-region>",loader_resolve:["f-wifi-region"],css:["f-wifi-region.css"]}},{url:"/wifi/region/edit/:mkey*?",config:{path:"/wifi/region",legacyInlineEdit:!0,template:"<f-wifi-region-edit></f-wifi-region-edit>",loader_resolve:["f-wifi-region-edit"]}},{url:"/wifi/wids",config:{template:"<f-wids-profile-list></f-wids-profile-list>",loader_resolve:["f-wids-profile-list"]}},{url:"/wifi/wids/edit/:mkey*?",config:{template:"<f-wids-profile></f-wids-profile>",loader_resolve:["f-wids-profile"]}}]}},422:function(module,exports){var path="/migadmin/ng/prompt/vm-license/f-vm-license-prompt.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt">\n    <div class="content">\n        <h1>{{::\'FortiGate VM License\' | lang}}</h1>\n\n        <div class="message">\n            <f-icon class="fa-loading icon-xl"></f-icon>\n            <div class="message-content">\n                {{::\'License::status_description.\' + $ctrl.SYMBOLS.LICENSE_STATUS_VM_PENDING | lang}}\n            </div>\n        </div>\n\n        <div class="warning-message" ng-if="$ctrl.showWarning">\n            <f-icon class="fa-warning"></f-icon>\n            <div class="message-content">\n                <p>{{::\'vm_pending_too_long\' | lang}}</p>\n                <button type="button" ng-click="$ctrl.showCLIConsole()">\n                    {{::\'cli_console\' | lang}}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},423:function(module,exports){var path="/migadmin/ng/system/csf/f-csf-extension-devices-info.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="flex-centered" ng-if="$ctrl.loading">\n    <f-icon class="fa-loading"></f-icon>\n</div>\n<div>\n    <div class="extension-devices-info" ng-if="!$ctrl.loading">\n        <div class="device" ng-class="{clickable: $ctrl.csfStatus.redirUrl}"\n            f-tip-target\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.csfStatus)">\n            <f-icon class="ftnt-standard-fortigate icon-xl"\n                ng-class="$ctrl.csfStatus.severity"></f-icon>\n            <span ng-if="$ctrl.csfStatus.summary.totalConnected >= 0" class="count-overlay">\n                {{ $ctrl.csfStatus.summary.totalConnected }}\n            </span>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'Security Fabric Connection\' | lang}}</td>\n                        </tr>\n                        <tr>\n                            <td>{{::\'status\' | lang}}</td>\n                            <td>\n                                <f-icon ng-class="$ctrl.csfStatus.icon"></f-icon>\n                                <span>{{$ctrl.csfStatus.langKey | lang}}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device" ng-class="{clickable: $ctrl.fazStatus.redirUrl}"\n            f-tip-target\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.fazStatus)"\n            ng-if="$ctrl.hasFazPermission">\n            <f-icon class="ftnt-fortianalyzer icon-xl"\n                ng-class="$ctrl.fazStatus.severity"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'fortianalyzer\' | lang}}</td>\n                        </tr>\n                        <tr>\n                            <td>{{::\'status\' | lang}}</td>\n                            <td>\n                                <f-icon ng-class="$ctrl.fazStatus.icon"></f-icon>\n                                <span>{{$ctrl.fazStatus.langKey | lang}}</span>\n                                <div ng-if="!$ctrl.isWidget && $ctrl.iocSupport">\n                                    <f-icon class="fa-warning"></f-icon>\n                                    <span f-lang="Configure FortiAnalyzer in order to see compromised hosts.">\n                                    </span>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr ng-if="$ctrl.fazStatus.server">\n                            <td>{{::\'Server\' | lang}}</td>\n                            <td>{{$ctrl.fazStatus.server}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device" ng-class="{clickable: $ctrl.sandboxStatus.redirUrl}"\n            f-tip-target\n            ng-if="$ctrl.hasFsaPermission"\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.sandboxStatus)">\n            <f-icon class="ftnt-fortisandbox icon-xl"\n                ng-class="$ctrl.sandboxStatus.severity"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{\'sandbox_type::\' + $ctrl.sandboxStatus.type | lang}}</td>\n                        </tr>\n                        <tr>\n                            <td>{{::\'status\' | lang}}</td>\n                            <td>\n                                <f-icon ng-class="$ctrl.sandboxStatus.icon"></f-icon>\n                                <span>{{$ctrl.sandboxStatus.langKey | lang}}</span>\n                            </td>\n                        </tr>\n                        <tr ng-if="$ctrl.sandboxStatus.server">\n                            <td>{{::\'Server\' | lang}}</td>\n                            <td>{{$ctrl.sandboxStatus.server}}</td>\n                        </tr>\n                        <tr ng-if="$ctrl.sandboxStatus.account">\n                            <td>{{::\'Account\' | lang}}</td>\n                            <td>{{$ctrl.sandboxStatus.account}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device" ng-class="{clickable: $ctrl.fmgStatus.redirUrl}"\n            f-tip-target\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.fmgStatus)">\n            <f-icon class="ftnt-fortimanager icon-xl"\n                ng-class="$ctrl.fmgStatus.severity"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'fmg\' | lang}}</td>\n                        </tr>\n                        <tr>\n                            <td>{{::\'status\' | lang}}</td>\n                            <td>\n                                <f-icon ng-class="$ctrl.fmgStatus.icon"></f-icon>\n                                <span>{{$ctrl.fmgStatus.langKey | lang}}</span>\n                            </td>\n                        </tr>\n                        <tr ng-if="$ctrl.fmgStatus.server">\n                            <td>{{::\'Server\' | lang}}</td>\n                            <td>{{$ctrl.fmgStatus.server}}</td>\n                        </tr>\n                        <tr ng-if="$ctrl.fmgStatus.mode">\n                            <td>{{::\'Mode\' | lang}}</td>\n                            <td>{{ ($ctrl.fmgStatus.mode === \'normal\' ? \'cmgmt\' : $ctrl.fmgStatus.mode) | lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device" ng-repeat="status in $ctrl.managedDeviceStatus"\n            ng-class="{clickable: status.redirUrl}"\n            f-tip-target\n            ng-if="$ctrl.hasWifiSwitchCtrlPermission"\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, status)">\n            <f-icon class="icon-xl"\n                ng-class="[status.icon, status.severity]"></f-icon>\n            <span ng-if="status.summary.totalConnected > 0" class="count-overlay">\n                {{ status.summary.totalConnected }}\n            </span>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::status.langKey | lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device"\n            ng-class="{clickable: $ctrl.fortinacStatus.redirUrl}"\n            f-tip-target\n            ng-click="$ctrl.toggleMenu($ctrl.redirPopUpMenu, $event, $ctrl.fortinacStatus)">\n        <f-icon class="icon-xl"\n            ng-class="[$ctrl.fortinacStatus.icon, $ctrl.fortinacStatus.severity]"></f-icon>\n        <span ng-if="$ctrl.fortinacStatus.summary.totalConnected > 0" class="count-overlay">\n            {{ $ctrl.fortinacStatus.summary.totalConnected }}\n        </span>\n        <div f-tip>\n            <table class="table key-value slightly-condensed">\n                <tbody>\n                    <tr class="section-header">\n                        <td colspan="2">{{::$ctrl.fortinacStatus.langKey | lang}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n        <div class="device" ng-class="{clickable: $ctrl.fctStatus.redirUrl}"\n            f-tip-target\n            ng-if="$ctrl.hasFctPermission"\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.fctStatus)">\n            <f-icon class="ftnt-forticlient icon-xl"\n                ng-class="$ctrl.fctStatus.severity"></f-icon>\n            <span ng-if="$ctrl.fctStatus.summary.totalConnected > 0" class="count-overlay">\n                {{ $ctrl.fctStatus.summary.totalConnected }}\n            </span>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'FortiClient\' | lang}}</td>\n                        </tr>\n                        <tr>\n                            <td class="v-align-top">{{::\'Vulnerabilities\' | lang}}</td>\n                            <td ng-if="!$ctrl.fctStatus.vulnerabilities.vuln_count">{{:: \'None\' | lang}}</td>\n                            <td ng-if="$ctrl.fctStatus.vulnerabilities.vuln_count">\n                                <f-vulnerability-number-bubbles counts-by-type="$ctrl.fctStatus.vulnerabilities">\n                                </f-vulnerability-number-bubbles>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n<div>\n    <div class="extension-devices-info" ng-if="!$ctrl.loading">\n        <div ng-if="$ctrl.hasFabricDevicePermission && !$ctrl.hasFabricDeviceStatus()"\n            class="device clickable"\n            f-tip-target\n            ng-click="$ctrl.toggleRedirMenu($ctrl.redirPopUpMenu, $event, $ctrl.placeholderFabricDeviceStatus)">\n            <f-icon class="icon-xl disabled ftnt-fabric-device"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'Fabric Device\'| lang}}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {{:: \'No Connected Fabric Device\' | lang}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div ng-repeat="(type, status) in $ctrl.fabricDevicesStatus"\n            class="device" ng-class="{clickable: $ctrl.isGlobal && status.redirUrl}"\n            f-tip-target\n            ng-click="$ctrl.isGlobal && $ctrl.toggleMenu($ctrl.redirPopUpMenu, $event, status)">\n            <f-icon class="icon-xl"\n                ng-class="[status.severity, status.icon, $ctrl.getDisplayOptions(\'fabricDevice\', type) ? \'\' : \'disabled\']"></f-icon>\n            <span ng-if="status.summary.totalConnected > 0" class="count-overlay">\n                {{ status.summary.totalConnected }}\n            </span>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::status.langKey | lang}}</td>\n                        </tr>\n                        <tr ng-repeat="device in status.devices">\n                            <td>\n                                <f-icon class="{{device.getIconClass()}}"></f-icon>\n                                <span>{{:: device.getLabel()}}</span>\n                            </td>\n                            <td ng-if="device.connected">\n                                <f-icon class="fa-connected"></f-icon>\n                                <span>{{:: \'connected\' | lang}}</span>\n                            </td>\n                            <td ng-if="!device.connected && device.hasPendingStatusUpdate">\n                                <f-icon class="fa-loading"></f-icon>\n                                <span>{{:: \'Loading\' | lang}}</span>\n                            </td>\n                            <td ng-if="!device.connected && !device.hasPendingStatusUpdate">\n                                <f-icon class="fa-severity-critical"></f-icon>\n                                <span>{{:: \'Failed to connect\' | lang}}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device clickable"\n            ng-if="$ctrl.hasDisplayOptions(\'sd-wan\') && $ctrl.csfStatus.summary.hasSdWan"\n            ng-click="$ctrl.toggleDisplayOptions(\'sd-wan\')"\n            f-tip-target>\n            <f-icon class="ftnt-virtual-wan-link-up icon-xl" ng-class="{\'disabled\': !$ctrl.getDisplayOptions(\'sd-wan\')}"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'SD-WAN\'| lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device clickable"\n            ng-if="$ctrl.hasDisplayOptions(\'aws\') && $ctrl.csfStatus.summary.hasAws"\n            ng-click="$ctrl.toggleDisplayOptions(\'aws\')"\n            f-tip-target>\n            <f-icon class="ftnt-aws icon-xl" ng-class="{\'disabled\': !$ctrl.getDisplayOptions(\'aws\')}"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'Amazon Web Services (AWS)\'| lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class="device clickable"\n            ng-if="$ctrl.hasDisplayOptions(\'azure\') && $ctrl.csfStatus.summary.hasAzure"\n            ng-click="$ctrl.toggleDisplayOptions(\'azure\')"\n            f-tip-target>\n            <f-icon class="ftnt-azure icon-xl" ng-class="{\'disabled\': !$ctrl.getDisplayOptions(\'azure\')}"></f-icon>\n            <div f-tip>\n                <table class="table key-value slightly-condensed">\n                    <tbody>\n                        <tr class="section-header">\n                            <td colspan="2">{{::\'Azure\'}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div f-pop-up-menu="$ctrl.redirPopUpMenu">\n    <div f-menu-item-button\n        ng-if="$ctrl.hasDisplayOptions(\'fabricDevice\') && $ctrl.isFabricDeviceStatus($ctrl.selectedStatus)"\n        click="$ctrl.toggleDisplayOptions(\'fabricDevice\', $ctrl.selectedStatus.type)">\n        <f-icon ng-class="{\'fa-enabled\': !$ctrl.getDisplayOptions(\'fabricDevice\', $ctrl.selectedStatus.type),\n                           \'fa-disabled\': $ctrl.getDisplayOptions(\'fabricDevice\', $ctrl.selectedStatus.type)}">\n        </f-icon>\n        <span>\n            {{ $ctrl.getDisplayOptions(\'fabricDevice\', $ctrl.selectedStatus.type) ? \'Hide Feature\' : \'Show Feature\' | lang}}\n        </span>\n    </div>\n    <div f-menu-item-button\n        ng-if="$ctrl.hasDisplayOptions(\'fortigate\') && $ctrl.selectedStatus === $ctrl.csfStatus"\n        click="$ctrl.toggleCsfFeature()">\n        <f-icon ng-class="{\'fa-enabled\': !$ctrl.getDisplayOptions(\'fortigate\'),\n                           \'fa-disabled\': $ctrl.getDisplayOptions(\'fortigate\')}">\n        </f-icon>\n        <span>\n            {{ $ctrl.getDisplayOptions(\'fortigate\') ? \'Hide Feature\' : \'Show Feature\' | lang}}\n        </span>\n    </div>\n    <div f-menu-item-button\n        ng-if="$ctrl.hasDisplayOptions(\'fortinac\') && $ctrl.selectedStatus.type === $ctrl.fortinacStatus.type"\n        click="$ctrl.toggleDisplayOptions($ctrl.selectedStatus.type)">\n        <f-icon ng-class="{\'fa-enabled\': !$ctrl.getDisplayOptions($ctrl.selectedStatus.type),\n                        \'fa-disabled\': $ctrl.getDisplayOptions($ctrl.selectedStatus.type)}">\n        </f-icon>\n        <span>\n            {{ $ctrl.getDisplayOptions($ctrl.selectedStatus.type) ? \'Hide Feature\' : \'Show Feature\' | lang}}\n        </span>\n    </div>\n    <div f-menu-item-button\n        ng-if="$ctrl.managedDeviceStatus.includes($ctrl.selectedStatus) && $ctrl.hasDisplayOptions($ctrl.selectedStatus.type)"\n        click="$ctrl.toggleDisplayOptions($ctrl.selectedStatus.type)">\n        <f-icon ng-class="{\'fa-enabled\': !$ctrl.getDisplayOptions($ctrl.selectedStatus.type),\n                        \'fa-disabled\': $ctrl.getDisplayOptions($ctrl.selectedStatus.type)}">\n        </f-icon>\n        <span>\n            {{ $ctrl.getDisplayOptions($ctrl.selectedStatus.type) ? \'Hide Feature\' : \'Show Feature\' | lang}}\n        </span>\n    </div>\n    <div f-menu-item-button\n        ng-if="$ctrl.showRedir()"\n        click="$ctrl.redirTo($ctrl.selectedStatus.redirUrl)">\n        <f-icon class="fa-external-link"></f-icon>\n        <span ng-if="$ctrl.selectedStatus === $ctrl.csfStatus ||\n            $ctrl.selectedStatus === $ctrl.sandboxStatus ||\n            $ctrl.isFabricDeviceStatus($ctrl.selectedStatus) ||\n            $ctrl.selectedStatus === $ctrl.placeholderFabricDeviceStatus ||\n            $ctrl.selectedStatus === $ctrl.fmgStatus">\n            {{ $ctrl.getFabricConnectorRedirLabel() }}\n        </span>\n        <span ng-if="$ctrl.selectedStatus === $ctrl.fazStatus">\n            {{ $ctrl.getFazLogRedirLabel() }}\n        </span>\n        <span ng-if="$ctrl.managedDeviceStatus.indexOf($ctrl.selectedStatus) >= 0">\n            {{::\'Show in Security Fabric > Physical Topology\' | lang}}\n        </span>\n        <span ng-if="$ctrl.fortinacStatus.type === $ctrl.selectedStatus.type">\n            {{::\'Show in Security Fabric > Physical Topology\' | lang}}\n        </span>\n        <span ng-if="$ctrl.selectedStatus === $ctrl.fctStatus">\n            {{::\'View FortiClient Monitor\' | lang}}\n        </span>\n    </div>\n</div>\n')}]),module.exports=path},427:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8),__webpack_require__(26),__webpack_require__(27),__webpack_require__(30),__webpack_require__(63)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftnt_shared,inject,notify,fLog,fWifi){const AP_PLATFORMS="/api/v2/monitor/wifi/ap_platforms",AP_META="/api/v2/monitor/wifi/meta",FIRMWARE="/api/v2/monitor/wifi/firmware",AP_HEALTH_SLIDE="F_AP_HEALTH_SLIDE",AP_UPGRADE_SLIDE="F_AP_UPGRADE_SLIDE",Omniselect=ftnt_shared.Omniselect;class ApStatistics{constructor({normalCount:normalCount,normalMax:normalMax,totalCount:totalCount,totalMax:totalMax}={}){this.setValues({normalCount:normalCount,normalMax:normalMax,totalCount:totalCount,totalMax:totalMax})}setValues({normalCount:normalCount,normalMax:normalMax,totalCount:totalCount,totalMax:totalMax}){this.normalCount=normalCount||0,this._normalMax=normalMax||0,this.totalCount=totalCount||0,this.totalMax=totalMax||0,this._remoteMax=this.totalMax-this._normalMax}get allNormalMode(){return this.normalCount>0&&0===this.remoteCount}get normalMax(){return this._normalMax-this.extraRemote}get extraRemote(){return this.remoteCount>this._remoteMax?this.remoteCount-this._remoteMax:0}get remoteMax(){return this.totalMax-this.normalCount}get remoteCount(){return this.totalCount-this.normalCount}get isMixed(){return this.totalMax!==this._normalMax&&this.totalCount!==this.normalCount&&0!==this.normalCount&&0!==this.remoteCount}get totalPercent(){return this.totalMax&&this.totalCount/this.maxDisplay*100||0}get normalPercent(){return this.normalMax&&this.normalCount/this.normalMax*100||0}get remotePercent(){return this.remoteMax&&this.remoteCount/this.remoteMax*100||0}get totalUsageLevel(){return this._getResourceUsageLevelSeverity(this.totalPercent)}get normalUsageLevel(){return this._getResourceUsageLevelSeverity(this.normalPercent)}get remoteUsageLevel(){return this._getResourceUsageLevelSeverity(this.remotePercent)}canStillAuthorize(ap){return!!ap.isRejected||("normal"===ap.mode?this.normalCount<this.normalMax:"remote"===ap.mode&&this.remoteCount<this.remoteMax)}reset(){this.normalCount=0,this.totalCount=0,this.totalMax=0,this._normalMax=0,this._remoteMax=0}}ngModule.service({apManager:class extends inject.Collectable{constructor(){super(),this.init(),Object.freeze(this.EMPTY_STAT=new ApStatistics)}init($INJECTABLE$,$rootScope,vdomState){return()=>{const _init=()=>{this.fortiapMap=new Map,this.fortiapStatMap=new Map,this.csfRevision=null,this.fortigateBuildPromises=new Map,this.fortigateBuilt=new Map};$rootScope.$on("$routeChangeSuccess",()=>{_init()}),$rootScope.$on(vdomState.VDOM_CHANGE_EVENT,()=>{_init()}),_init()}}getApPlatforms($INJECTABLE$,$http,$q){return()=>this.apPlatforms?$q.resolve(this.apPlatforms):$http.get(AP_PLATFORMS).then(apPlatforms=>this.apPlatforms=apPlatforms)}getCommonWifi($INJECTABLE$,$q){return()=>this.wifiCommon?$q.resolve(this.wifiCommon):fWifi.metaDataFactory().then(wifiCommon=>this.wifiCommon=wifiCommon)}getBuildPromisesFor(fortigates){return fortigates.map(fortigate=>this.fortigateBuildPromises.get(fortigate.serial))}build($INJECTABLE$,$http,csfTopology,$q,FortiAP,lang){const buildForFortigates=(fortigates,platforms)=>{fortigates.forEach(fortigate=>{const managedAPSourceID=fortigate.getOmniselectProxySourceID("wireless-controller.wtp"),metaURL=fortigate.createCSFURI(AP_META),firmwareURL=fortigate.createCSFURI(FIRMWARE),promise=$q.all([Omniselect.getSourceMetaData(managedAPSourceID).then(res=>res.managedAP),$http.get(metaURL).then(res=>res.data.results),$http.get(firmwareURL).then(res=>res.data.results.models)]).then(async([aps,meta,firmwareMap])=>{const{wtp_total_size:totalMax,wtp_normal_size:normalMax}=meta;let normalCount=0,totalCount=0;await fortigate.populateConnectedAccessDevices(),aps.forEach(ap=>{const platform=this.wifiCommon.wtpPlatformTypeFromSerial(ap.serial),platformData=platforms[platform],csfFortiAP=fortigate.fortiapMapping[ap.wtp_id],latestFirmware=platformData&&firmwareMap[platformData.model],fortiap=new FortiAP({monitorResponse:ap,wifiCommon:this.wifiCommon,platformData:platformData,csfFortiAP:csfFortiAP,latestFirmware:latestFirmware,parentFortigate:fortigate.serial});fortiap.isWaitingAuthorization||fortiap.isLocal||(totalCount++,fortiap.isNormalMode&&normalCount++),this.fortiapMap.set(ap.wtp_id,fortiap)}),this.fortiapStatMap.has(fortigate.serial)?this.fortiapStatMap.get(fortigate.serial).setValues({normalCount:normalCount,normalMax:normalMax,totalCount:totalCount,totalMax:totalMax}):this.fortiapStatMap.set(fortigate.serial,new ApStatistics({normalCount:normalCount,normalMax:normalMax,totalCount:totalCount,totalMax:totalMax}))});this.fortigateBuildPromises.set(fortigate.serial,promise)})},buildForNonExisting=(fortigates,platform)=>{const toBuildFGT=fortigates.filter(fortigate=>!this.fortigateBuildPromises.get(fortigate.serial));return buildForFortigates(toBuildFGT,platform),this.getBuildPromisesFor(fortigates)};return async targetFortigates=>{targetFortigates&&(Array.isArray(targetFortigates)||(targetFortigates=[targetFortigates]));const fortigates=targetFortigates||csfTopology.fortigates;this.csfRevision=csfTopology.currentRevision;try{const[platformRes]=await $q.all([this.getApPlatforms(),this.getCommonWifi()]),platforms=platformRes.data.results;let buildPromises=this.getBuildPromisesFor(fortigates);return buildPromises.every(promise=>promise)||(buildForNonExisting(fortigates,platforms),buildPromises=this.getBuildPromisesFor(fortigates)),$q.all(buildPromises).finally(()=>{fortigates.forEach(fortigate=>{this.fortigateBuildPromises.delete(fortigate.serial),this.fortigateBuilt.set(fortigate.serial,!0)})})}catch(e){const message=e.error||e.http_error||e.message||"Failed to load data.";return notify.post(lang(message),notify.LEVEL.ERROR),fLog.error(e),$q.resolve()}}}buildIfNecessary($INJECTABLE$,csfTopology,$q){return targetFortigates=>{targetFortigates&&(Array.isArray(targetFortigates)||(targetFortigates=[targetFortigates]));const fortigates=targetFortigates||csfTopology.fortigates;return csfTopology.buildIfNecessary().then(built=>{let promise=$q.resolve(),performedBuild=!1;this.fortigateBuilt.forEach(fortigate=>{csfTopology.fortigateMapping[fortigate]||this.fortigateBuilt.delete(fortigate)});const allBuilt=fortigates.every(fortigate=>this.fortigateBuilt.get(fortigate.serial)),buildPromises=this.getBuildPromisesFor(fortigates);return buildPromises.every(buildPromise=>buildPromise)?$q.all(buildPromises):(!built&&this.csfRevision&&allBuilt||(promise=this.build(fortigates),performedBuild=!0),promise.then(()=>performedBuild))})}}get(wtpID){return this.fortiapMap.get(wtpID)}getAPHealth($INJECTABLE$,$q){return wtpID=>{const ap=this.get(wtpID);return ap?ap.refresh().then(()=>ap.health):$q.reject()}}openDetailsSlide($INJECTABLE$,slide,$rootScope,csfTopology,lang){return async(wtpID,fortigate,options={})=>{const{view:view}=options;let slideConfig;fortigate?"string"==typeof fortigate&&(fortigate=csfTopology.fortigateMapping[fortigate]):fortigate=csfTopology.thisFortigate,await this.buildIfNecessary(fortigate);let ap=this.get(wtpID);try{slideConfig=slide.get(AP_HEALTH_SLIDE)}catch(e){}if(ap||(await this.build(fortigate),ap=this.get(wtpID)))if(slideConfig&&slideConfig.slide.isOpen)Object.assign(slideConfig.scope,{ap:ap,fortigate:fortigate,view:view});else{const slideScope=Object.assign($rootScope.$new(!0),{ap:ap,fortigate:fortigate,view:view});try{await slide.open(AP_HEALTH_SLIDE,{template:'<f-ap-details ap="ap" view="view" fortigate="fortigate"></f-ap-details>',parentScope:slideScope,options:{title:lang("Summary of {0}",[ap.name]).toString(),fullHeight:!0,width:1100}})}finally{slideScope.$destroy()}}else fLog.error(`Could not find data for AP ${wtpID}`)}}connectToCli($INJECTABLE$,FortiAP,cliConsole){return ap=>{let selectedAP;ap instanceof FortiAP?selectedAP=ap:"string"==typeof ap&&(selectedAP=this.get(ap)),selectedAP&&selectedAP.csfFortiAP&&selectedAP.hasValidIpv4Address&&cliConsole.open({commands:[`exec ssh admin@${ap.networkAddress.ipv4}`]})}}openUpgradeSlide($INJECTABLE$,slide,$rootScope,$q,lang,FortiAP){return aps=>{let selectedAps=[];if(!((aps=aps?Array.isArray(aps)?aps:[aps]:[]).length>0))return $q.reject();const devices=(selectedAps=aps[0]instanceof FortiAP?aps:aps.map(ap=>this.get(ap)).filter(ap=>ap)).map(ap=>({serial:ap.serial,firmwareVersion:ap.version.raw,name:ap.name})),slideScope=$rootScope.$new(!0);slideScope.devices=devices;const slideParams={template:'<f-upgradable-extension-device-list devices="::devices"                         device-type="::\'FORTI_AP\'"></f-upgradable-extension-device-list>',parentScope:slideScope,options:{title:lang("Upgrade FortiAPs"),fullHeight:!0,closeButton:!1}};return slide.open(AP_UPGRADE_SLIDE,slideParams).finally(()=>{slideScope.$destroy()})}}getAPStat(fortigateSerial){return this.fortiapStatMap.get(fortigateSerial)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},428:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(32),__webpack_require__(34),__webpack_require__(79)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,notify,formatters,date,fFirmware){const RADIO_MODES={DISABLED:"Disabled",AP:"AP",WTP_LAN:"Virtual Lan AP",MONITOR:"Monitor",SNIFFER:"Sniffer"},RADIO_FREQ={_24GHz:"24ghz",_5GHz:"5ghz"},DEFAULT_BLINK_DURATION=120,VERSION_REGEX=/\w+-v(\d+).(\d+)-build(\d+)/,MANAGED_APS="/api/v2/monitor/wifi/managed_ap",AP_LED_BLINK_URL="/api/v2/monitor/wifi/managed_ap/led-blink",AP_FIRMWARE="/api/v2/monitor/wifi/firmware",AP_HEALTH_CONSTANTS={CHANNEL_UTIL:{LOW:[0,51],MEDIUM:[51,70],HIGH:[70,100]},CLIENT_COUNT:{LOW:[0,41],MEDIUM:[41,60],HIGH:[60,Number.MAX_SAFE_INTEGER]},INTERFERING_APS:{LOW:[0,2],MEDIUM:[2,10],HIGH:[10,Number.MAX_SAFE_INTEGER]}},AP_HEALTH_RESULTS={good:{id:0,langKey:"Good",severity:"none"},fair:{id:1,langKey:"Fair",severity:"medium"},poor:{id:3,langKey:"Poor",severity:"critical"}},FORMATTERS={usage:usage=>`${usage}%`,uplink:linkSpeed=>{const gigaSpeed=linkSpeed>=1e3;return`${gigaSpeed?(linkSpeed/1e3).toFixed(1):linkSpeed} ${gigaSpeed?"Gbps":"Mbps"}`},country:(code,countryObject)=>countryObject.configured_country_name,other:other=>other},AP_HEALTH_FORMAT_MAP={channel_utilization:"usage",cpu:"usage",memory:"usage",uplink_status:"uplink",country_code:"country"};const AP_HEALTH_UTILITY={rangeToLabel:function(severityLevel,key,unit=""){const range=AP_HEALTH_CONSTANTS[key][severityLevel];switch(severityLevel){case"LOW":return`( <${range[1]}${unit} )`;case"MEDIUM":return`( ${range[0]}${unit} - ${range[1]}${unit} )`;case"HIGH":return`( >${range[0]}${unit} )`}}};ngModule.constant("AP_HEALTH_UTILITY",AP_HEALTH_UTILITY),ngModule.factory({FortiAPRadio:function(){return class{constructor({monitorResponse:monitorResponse,platformRadioInfo:platformRadioInfo,wifiCommon:wifiCommon}){this.id=monitorResponse.radio_id,this.mode=monitorResponse.mode,this.isAP=this.mode===RADIO_MODES.AP,this.isDisabled=this.mode===RADIO_MODES.DISABLED,this.isMonitor=this.mode===RADIO_MODES.MONITOR,this.isSniffer=this.mode===RADIO_MODES.SNIFFER,this.isVirtualLanAP=this.mode===RADIO_MODES.WTP_LAN,this.operatingChannel=monitorResponse.oper_chan,this.operatingPower=monitorResponse.oper_txpower,this.clientCount=monitorResponse.client_count,this.country={code:monitorResponse.country_code,name:monitorResponse.country_name},this.bandwidth={rx:{raw:monitorResponse.bandwidth_rx,formatted:formatters.metric_bits_per_second(monitorResponse.bandwidth_rx)},tx:{raw:monitorResponse.bandwidth_tx,formatted:formatters.metric_bits_per_second(monitorResponse.bandwidth_tx)}},this.interferingAps=monitorResponse.interfering_aps,this.channels=monitorResponse.channels,monitorResponse.channel_utilization_timestamp&&(this.channelUtilization=monitorResponse.channel_utilization_percent),this.radioType=monitorResponse.radio_type,this.radioFrequency=wifiCommon.getFrequencyForBand(this.radioType),this.detectInterfering=monitorResponse.detect_interfering,this.channelUtilizationEnabled=monitorResponse.channel_utilization,this.backgroundScanEnabled=monitorResponse.background_scan_enabled,this.widsSupported=platformRadioInfo.is_wids_supported,platformRadioInfo[RADIO_FREQ._24GHz]?this.platformRadioFrequency=RADIO_FREQ._24GHz:platformRadioInfo[RADIO_FREQ._5GHz]&&(this.platformRadioFrequency=RADIO_FREQ._5GHz),this.spectrumAnalysis=monitorResponse.spectrum_analysis;const ssidMode=monitorResponse.ssid_mode;this.ssid={all:"tunnel"===ssidMode||"bridge"===ssidMode,mode:ssidMode,value:monitorResponse.ssid,count:monitorResponse.ssid&&Object.keys(monitorResponse.ssid).length||0}}}},FortiAP:function(injector){return class extends injector.Collectable{constructor({monitorResponse:monitorResponse,wifiCommon:wifiCommon,platformData:platformData,csfFortiAP:csfFortiAP,latestFirmware:latestFirmware,parentFortigate:parentFortigate}){super(),this.parentFortigate=parentFortigate,this.platformData=platformData,this.wifiCommon=wifiCommon,this.csfFortiAP=csfFortiAP,this.latestFirmwareVersion=latestFirmware,this.parseMonitorResponse(monitorResponse)}parseMonitorResponse($INJECTABLE$,FortiAPRadio){return monitorResponse=>{if(this.name=monitorResponse.name,this.profile=monitorResponse.ap_profile,this.mode=monitorResponse.wtp_mode,this.isLocal=monitorResponse.is_local,this.serial=monitorResponse.serial,this.state=monitorResponse.state,this.wtpID=monitorResponse.wtp_id,this.status=monitorResponse.status,this.latestFirmware=monitorResponse.os_version,this.clientCount=monitorResponse.clients,this.cliEnabled=monitorResponse.cli_enabled,this.isWPA3Supported=monitorResponse.is_wpa3_supported,this.channelSecurity=monitorResponse.data_chan_sec,this.overrideProfile=monitorResponse.override_profile,this.spectrumAnalysisSupported=this.platformData.spectrum_analysis,this.ledBlink={enabled:monitorResponse.led_blink,unlimited:monitorResponse.led_blink_unlimited,duration:monitorResponse.led_blink_duration},this.lldp={enabled:monitorResponse.lldp_enable,list:monitorResponse.lldp},monitorResponse.os_version){const extractOSSegments=VERSION_REGEX.exec(monitorResponse.os_version);if(extractOSSegments){const segments=extractOSSegments.splice(1);this.version={raw:monitorResponse.os_version,formatted:`v${segments[0]}.${segments[1]} build${segments[2]}`,segments:segments,major:parseInt(segments[0]),minor:parseInt(segments[1]),build:parseInt(segments[2]),patch:0}}}this.uplinkType=monitorResponse.mesh_uplink,this.isMeshMode||(this.uplinkInterfaceName=monitorResponse.mesh_uplink_intf,this.uplinkSpeed=monitorResponse.mesh_uplink_intf_speed),this.boardMac=monitorResponse.board_mac,this.jointime={raw:1e3*(monitorResponse.join_time_raw||0),formatted:date.formatDateTime(1e3*(monitorResponse.join_time_raw||0))},this.region={name:monitorResponse.region,x:monitorResponse["region-x"],y:monitorResponse["region-y"]},this.networkAddress={ipv4:monitorResponse.local_ipv4_addr,ipv6:monitorResponse.local_ipv6_addr},this.hasValidIpv4Address=!!monitorResponse.local_ipv4_addr&&"0.0.0.0"!==monitorResponse.local_ipv4_addr,this.connectingFrom=monitorResponse.connecting_from,this.connectingInterface=monitorResponse.connecting_interface,this.cliEnabled=monitorResponse.cli_enabled,this.configuredCountry={code:monitorResponse.configured_country_code,name:monitorResponse.configured_country_name,conflict:monitorResponse.country_code_conflict},this.configuredRegionCode=monitorResponse.region_code,this.cpuUsage=monitorResponse.cpu_usage;const memUsed=monitorResponse.mem_total-monitorResponse.mem_free;this.memUsage=Math.round(memUsed/monitorResponse.mem_total*100)||0,this.lastFailure={errorCode:monitorResponse.last_failure_code,errorMessage:monitorResponse.last_failure};const now=Date.now(),elasped=now-new Date(monitorResponse.last_reboot_time||now).getTime();this.uptime={raw:elasped,formatted:formatters.humanizeSeconds(elasped/1e3,{short:!0})},this.radios=this.platformData&&monitorResponse.radio&&monitorResponse.radio.filter((radio,idx)=>this.platformData.radios[monitorResponse.subtype][idx]).map((radio,idx)=>new FortiAPRadio({monitorResponse:radio,wifiCommon:this.wifiCommon,platformRadioInfo:this.platformData.radios[monitorResponse.subtype][idx]}))||[];const wiredInterfacePrefixes=["lan","eth","wan"];this.uplinkStatus=(monitorResponse.wan_status||[]).map(uplinkInterface=>{const isDisabled=!uplinkInterface.link_speed_mbps,isWired=wiredInterfacePrefixes.includes(uplinkInterface.interface.substring(0,3));return Object.assign({},uplinkInterface,{isDisabled:isDisabled,isWired:isWired})}),this.getHealth(monitorResponse,this.radios)}}formatHealth(healthSource,response,lang){const formattedResult={};for(let key in healthSource){let field=healthSource[key];if("object"==typeof field)if(Array.isArray(field))field=field.map(item=>{if(item.severity){let getLabel=FORMATTERS[AP_HEALTH_FORMAT_MAP[key]];return getLabel||(getLabel=FORMATTERS.other),Object.assign(item,AP_HEALTH_RESULTS[item.severity],{label:getLabel(item.value,response)})}return this.formatHealth(item,response,lang)});else if(field.severity){let getLabel=FORMATTERS[AP_HEALTH_FORMAT_MAP[key]];getLabel||(getLabel=FORMATTERS.other),field=Object.assign(field,AP_HEALTH_RESULTS[field.severity],{label:getLabel(field.value,response)})}else field=this.formatHealth(field,response,lang);if("connection_uptime"===key){const connectionUptimeDays=(timestamp=>Math.floor(timestamp/date.MS_CONSTANTS.DAY))(1e3*field.value),label=lang(1===connectionUptimeDays?"{0} day":"{0} days",[connectionUptimeDays]);field=Object.assign(field,{connectionUptimeDays:connectionUptimeDays,label:label})}formattedResult[key]=field}return formattedResult}addRadioHealthByFreq(allRadioHealth,radios){const result={"24ghz":{severity:0,radios:[]},"5ghz":{severity:0,radios:[]}};for(let key in allRadioHealth){const radioFreq=radios[parseInt(key,10)-1].radioFrequency;if(radioFreq){const radioOverallHealth=allRadioHealth[key].overall;radioOverallHealth&&radioOverallHealth.id>=result[radioFreq].severity&&(result[radioFreq].severity=radioOverallHealth.id,result[radioFreq].overall=radioOverallHealth),result[radioFreq].radios.push(allRadioHealth[key])}}return Object.assign(allRadioHealth,result),allRadioHealth}blinkLED($INJECTABLE$,$http,lang,csfTopology){const notifyResult=result=>{result=result.data.results;let msg="Command sent successfully",level=notify.LEVEL.SUCCESS;result[this.wtpID]||(msg="Failed to send commands",level=notify.LEVEL.ERROR),notify.post(lang(msg),level)};return(action,duration)=>{const fortigate=csfTopology.fortigateMapping[this.parentFortigate];duration=duration||DEFAULT_BLINK_DURATION;const data={serials:[this.wtpID],blink:!0,duration:duration};"start"!==action&&(data.duration=0,data.blink=!1);const url=fortigate&&fortigate.createCSFURI(AP_LED_BLINK_URL)||AP_LED_BLINK_URL;return $http.post(url,data).then(notifyResult,notifyResult)}}upgradeFirmware(){this.csfFortiAP&&this.csfFortiAP.upgradeFirmware()}updateLatestFirmwareInfo($INJECTABLE$,$http){return async()=>{const firmwareMap=await $http.get(AP_FIRMWARE).then(res=>res.data.results),model=this.platformData.model;this.latestFirmwareVersion=firmwareMap.models[model]||{available:!1};const latestFirmwareVersion=Object.assign({},this.latestFirmwareVersion,{patch:0});this.version&&this.latestFirmwareVersion.available&&fFirmware.isFirmwareUpdate(this.version,latestFirmwareVersion)&&(this.latestFirmware=this.latestFirmwareVersion.version)}}get newFirmwareAvailable(){if(this.latestFirmwareVersion&&this.version){const latestFirmwareVersion=Object.assign({},this.latestFirmwareVersion,{patch:0}),result=fFirmware.isFirmwareUpdate(this.version,latestFirmwareVersion);return result&&(this.latestFirmware=this.latestFirmwareVersion.version),result}return!1}get displayIP(){return"0.0.0.0"!==this.networkAddress.ipv4?this.networkAddress.ipv4:"0.0.0.0"!==this.connectingFrom?this.connectingFrom:""}get isConnectedAuthorized(){return this.isConnected&&this.isAuthorized}get ledBlinkSupported(){return this.platformData.supports_led_blink}get vlanProbeSupported(){return this.platformData.supports_vlan_probe}get isConnected(){return"connected"===this.status}get isAuthorized(){return this.state&&"authorized"===this.state.toLowerCase()}get isWaitingAuthorization(){return this.state&&"discovered"===this.state.toLowerCase()}get isRejected(){return this.state&&"disabled"===this.state.toLowerCase()}get isLocatable(){return this.region.name&&0!==this.region.x&&0!==this.region.y}get isMeshMode(){return"mesh"===this.uplinkType}get model(){return this.platformData.platform_name}get platformType(){return this.wifiCommon.wtpPlatformTypeFromSerial(this.serial)}get isNormalMode(){return"normal"===this.mode}authorize(){if(this.csfFortiAP)return this.csfFortiAP.toggleAuthorization(!0,()=>{this.state=this.csfFortiAP.state,this.status=this.csfFortiAP.status})}deauthorize(){if(this.csfFortiAP)return this.csfFortiAP.toggleAuthorization(!1,()=>{this.state=this.csfFortiAP.state,this.status=this.csfFortiAP.status})}restart({showConfirmation:showConfirmation=!1}={}){if(this.csfFortiAP)return this.csfFortiAP.reboot(()=>{this.csfFortiAP.connectionState.toLowerCase()!==this.status.toLowerCase()&&(this.status=this.csfFortiAP.connectionState)},{showConfirmation:showConfirmation})}getHealth($INJECTABLE$,lang){return(monitorResponse,radios)=>{const health=monitorResponse.health;if(health){const radioHealth={};monitorResponse.radio.map(radio=>{radio&&radio.health&&(radioHealth[radio.radio_id]=Object.assign({},radio.health,{radio_id:radio.radio_id}))}),health.radio=radioHealth;const result=this.formatHealth(health,monitorResponse,lang);result.radio=this.addRadioHealthByFreq(result.radio,radios),this.health=result}}}refresh($INJECTABLE$,$http,csfTopology){return()=>{const url=(csfTopology.fortigateMapping[this.parentFortigate]||csfTopology.thisFortigate).createCSFURI(MANAGED_APS);return $http.get(url,{params:{incl_local:!0,wtp_id:this.wtpID}}).then(res=>{const monitorResponse=res.data.results.find(ap=>ap.wtp_id===this.wtpID);this.parseMonitorResponse(monitorResponse)})}}}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},436:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(9),__webpack_require__(26),__webpack_require__(8),__webpack_require__(31),__webpack_require__(437),__webpack_require__(438),__webpack_require__(439),__webpack_require__(440),__webpack_require__(441),__webpack_require__(442),__webpack_require__(443),__webpack_require__(444)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,angular,inject,ftnt_shared,dom){const highlighter=ftnt_shared.highlighter;function WidgetSelection($scope,injector,lang){if(injector.injectMarked(this,{$scope:$scope}),this._collect(),this.noAvailableWidgets=0===this.widgetCount,this.data.prefilledWidget){var type=this.data.prefilledWidget.type,configuration=this.data.WIDGET_CONFIGURATION[type],prefilledEntry=Object.assign({type:type,label:lang("dashboard_widget_type::"+type).toString(),values:this.data.prefilledWidget.values},configuration);this.selectWidget(prefilledEntry)}this.searchValue="",this.lastSearchValue="",this.widgetStatus="",this.searching=!1,this.dashboardLayoutType=this.data.dashboardLayoutType,this.fortigateSelectionMode=this.data.fortigateSelectionMode,this.asStandalone=this.data.asStandalone,this.slideTitle=this.asStandalone?"Add Monitor":"Add Dashboard Widget",this.expanded={$search:!0}}WidgetSelection.prototype.search=function(){const searchValue=this.searchValue.toLowerCase();searchValue!==this.lastSearchValue&&(this.lastSearchValue=searchValue,this.searching=!0,this._collect(),this.searching=!1)},WidgetSelection.prototype.highlight=function(text){const elem=dom.elem("span",{textContent:text});return this.searchValue&&highlighter.highlightMatchesInElement(elem,this.searchValue,!0),elem.outerHTML},WidgetSelection.prototype.clearSearch=function(){this.searchValue="",this.search()},WidgetSelection.prototype.addWidget=inject.mark(function(dashboardConfig){return function(type,widget,dashboard){widget=widget||{},Object.assign(widget,{type:type}),this.selectedType=null,this.typeCounts[widget.type]++,this.data.addCallback(widget,dashboard),this.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE&&this.slideContainer.slide.close()}}),WidgetSelection.prototype.withinCountLimit=function(widget){return!widget.limit||this.typeCounts[widget.type]<widget.limit},WidgetSelection.prototype.addCustomizedWidget=inject.mark(function($scope){return function(){this.form.$valid?("function"==typeof this.beforeSubmitFn&&(this.widget=this.beforeSubmitFn(angular.copy(this.widget))),this.addWidget(this.selectedType.split("::")[0],this.widget,this.dashboard)):$scope.$broadcast("validation-msg_show")}}),WidgetSelection.prototype.selectWidget=inject.mark(function(lang){return function(entry){var custom=this.data.WIDGET_CONFIGURATION[entry.type].customizeComponent;this.beforeSubmitFn=null,custom?(this.selectedType=entry.type,this.widget=entry.values||{},this.dashboard={},this.customizeComponent=`<${custom}\n                    as-standalone="$ctrl.asStandalone"\n                    dashboard="$ctrl.dashboard"\n                    widget="$ctrl.widget"></${custom}>`,this.slideContainer.slide.update({title:lang(`${this.slideTitle} - {0}`,[entry.label]).toString()})):this.addWidget(entry.type)}}),WidgetSelection.prototype.close=inject.mark(function(lang){return function(){this.selectedType&&!this.data.prefilledWidget?(this.selectedType=null,this.slideContainer.slide.update({title:lang(this.slideTitle).toString()})):this.slideContainer.slide.close()}}),WidgetSelection.prototype.getUniqueId=function(widgetLabel){return widgetLabel.replace(" ","")},WidgetSelection.prototype._collect=inject.mark(function(lang){return function(){const byCategory={},categorizedWidgets={},typeCounts={};let widgetCount=0;Object.keys(this.data.WIDGET_TYPES).forEach(key=>{const type=this.data.WIDGET_TYPES[key],configuration=this.data.WIDGET_CONFIGURATION[type];if(configuration.hidden)return;const label=configuration.label||lang(`dashboard_widget_type::${type}`).toString(),desc=lang(`dashboard_widget_desc::${type}`).toString(),searchValue=(this.searchValue||"").toLowerCase();if(!searchValue||label.toLowerCase().includes(searchValue)||desc.toLowerCase().includes(searchValue)){const category=configuration.category,entry=Object.assign({type:type},configuration,{desc:desc,label:label});byCategory[category]||(byCategory[category]={main:[],subsection:[]}),configuration.subsection?byCategory[category].subsection.push(entry):byCategory[category].main.push(entry),widgetCount++,typeCounts[type]=0}}),Object.keys(this.data.WIDGET_CATEGORIES).forEach(function(key){var category=this.data.WIDGET_CATEGORIES[key],entries=byCategory[category];entries&&(["main","subsection"].forEach(section=>{entries[section].sort(function(a,b){return a.label.localeCompare(b.label)})}),categorizedWidgets[category]=entries)}.bind(this)),this.data.currentWidgets.forEach(function(widget){typeCounts[widget.type]++}),this.categorizedWidgets=categorizedWidgets,this.typeCounts=typeCounts,this.widgetCount=widgetCount}}),WidgetSelection.prototype.toggleExpand=function(category){this.expanded=!this.expanded[category]},WidgetSelection.prototype.beforeSubmit=function(beforeSubmitFn){this.beforeSubmitFn=beforeSubmitFn},ngModule.component("fWidgetSelection",{templateUrl:__webpack_require__(840),controller:WidgetSelection,bindings:{data:"<"},require:{slideContainer:"?^fSlideContainer"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},437:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(8),__webpack_require__(94),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,ftnt_shared,FabricDevice){const WIDGET_NAME="fabric-device-widget-name",VISUALIZATION_TYPE="fabric-device-widget-visualization-type",SUPPORTED_VISUALIZATION_TYPES=FabricDevice.SUPPORTED_VISUALIZATION_TYPES;function EditFabricDeviceWidget(injector,$scope){injector.injectMarked(this,{$scope:$scope})}EditFabricDeviceWidget.prototype.$onInit=inject.mark($scope=>(function(){this.setupSelectConfig(),this.setupWatcher(),this.widget["fabric-device"]&&(this.selectedDevice={q_origin_key:this.widget["fabric-device"],datasource:"csfFabricDevices"}),this.widget[WIDGET_NAME]&&(this.selectedWidget={q_origin_key:`${this.widget[WIDGET_NAME]}::${this.widget["fabric-device"]}`,datasource:"csfFabricDeviceWidgets"}),(this.widgetSelection||this.editDashboard).beforeSubmit(()=>(this.widget["fabric-device"]=this.selectedDevice.q_origin_key,this.widget[WIDGET_NAME]=this.selectedWidget.id,this.widget)),ftnt_shared.Omniselect.getSourceData("csfFabricDevices").then(devices=>{devices.forEach(device=>{(device=device&&device.$original)&&device.hasPendingStatusUpdate&&device.pendingRequest.then(()=>{$scope.$broadcast("deviceStatusUpdated")})})})})),EditFabricDeviceWidget.prototype.setupWatcher=inject.mark($scope=>(function(){$scope.$on("deviceChanged",(event,selected)=>{this.selectedDevice&&this.selectedDevice.q_origin_key&&selected&&selected.q_origin_key&&selected.q_origin_key!==this.selectedDevice.q_origin_key&&(this.selectedWidget=null,this.widget[VISUALIZATION_TYPE]="")}),$scope.$watch("$ctrl.selectedWidget",value=>{value&&value.supported_visualization_types&&(this.widget[VISUALIZATION_TYPE]=value.supported_visualization_types[0])}),$scope.$watch(`$ctrl.widget["${VISUALIZATION_TYPE}"]`,value=>{value&&(this.widget.relativeWidth="key-value-pair"===value?1:2)})})),EditFabricDeviceWidget.prototype.setupSelectConfig=inject.mark(()=>(function(){this.selectConfig={device:{sources:"csfFabricDevices",preProcessSelected:!0,singleSelect:!0,insideSlide:!0,filterFunction:device=>device.connected},widget:{sources:"csfFabricDeviceWidgets",preProcessSelected:!0,singleSelect:!0,insideSlide:!0,meta:()=>this.selectedDevice,filterFunction:widget=>{const deviceID=this.selectedDevice&&this.selectedDevice.q_origin_key,validDevice=deviceID&&widget.q_origin_key.includes(deviceID),supported=SUPPORTED_VISUALIZATION_TYPES.some(type=>Array.isArray(widget.supported_visualization_types)&&widget.supported_visualization_types.includes(type));return validDevice&&supported}}}})),ngModule.component("fEditFabricDeviceWidget",{templateUrl:__webpack_require__(832),controller:EditFabricDeviceWidget,bindings:{widget:"="},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},438:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(8),__webpack_require__(176),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,ftnt_shared,FortiviewVisualization){class EditFortiview extends inject.Collectable{constructor($scope,fortiviewConfig){super(),this._$scope=$scope,this.fortiviewConfig=fortiviewConfig,this.timeframeOptionsLoading=!0}$onInit($INJECTABLE$,fortiviewConfig,fortiviewData,state,dashboardConfig,dashboardCommon,$q,csfTopology){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,this.type=this.widget["fortiview-type"]||this.widgetSelection.selectedType&&this.widgetSelection.selectedType.split("::")[1],parentController.beforeSubmit(()=>(this.widget["fortiview-device"]=this.automaticDevice?"":this.selectedDevice,this.widget.fortigate=this.fortigate.q_origin_key,this.widget));const widgetType=this.widget.type||this.widgetSelection.selectedType.split("::")[0],widgetConfigs=dashboardConfig.getWidgetConfig();if(this.widgetConfig=widgetConfigs[widgetType],this.widgetSelection){const originalWidgetConfig=widgetConfigs[this.widgetSelection.selectedType];this.widgetConfig.standaloneName=originalWidgetConfig.standaloneName}this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||{q_origin_key:"all",datasource:"csfFortiGates",allFortigates:!0};const[,message]=await fortiviewConfig.isFortiviewSupported(this.type);this.typeNotSupportedMessage=message,this.config=fortiviewConfig.getFortiviewConfig(this.type),this.showTimeframe=this._showTimeFrame(),this.widget["fortiview-type"]=this.type,this.visualizationOptions=this.config.visualization.options,this.visualizationOptions.includes(this.widget["fortiview-visualization"])||(this.widget["fortiview-visualization"]=this.visualizationOptions[0]);const configSupportedDevices=new Set(this.config.devices||[]),currentDevice=this.widget["fortiview-device"];this.devices=fortiviewData.getDevices(state),configSupportedDevices.size&&(this.devices=this.devices.filter(device=>configSupportedDevices.has(device))),currentDevice&&this.devices.includes(currentDevice)?(this.automaticDevice=!1,this.selectedDevice=currentDevice):(this.automaticDevice=!0,this.devices.length?this.selectedDevice=fortiviewData.getPreferredDevice(state,state.current_vdom):this.selectedDevice=null),this._startWatches(),this.loading=parentController.loading=!1}}_showTimeFrame($INJECTABLE$,fortiviewConfig){return()=>{const USER_SELECTED_TIMEFRAME=fortiviewConfig.TIMEFRAME_TYPE.USER_SELECTED;return this.config&&(!this.config.timeframeType||this.config.timeframeType===USER_SELECTED_TIMEFRAME)}}_startWatches($INJECTABLE$,fortiviewConfig,fortiviewData,state){return()=>{this._$scope.$watchGroup(["$ctrl.type.q_origin_key","$ctrl.automaticDevice","$ctrl.selectedDevice"],()=>{if(this.config&&(this.automaticDevice||this.selectedDevice)){const device=this.automaticDevice?fortiviewData.getDefaultDevice(state):this.selectedDevice;this.timeframeOptionsLoading=!0,this.showTimeframe=this._showTimeFrame(),fortiviewData.getTimeframeOptions(device).then(options=>{this.supportedTimeframeOptions=options.filter(option=>option===fortiviewData.TIME_PERIODS.REALTIME?!this.config.realtimeDisabled:!this.config.historicalDisabled),this.supportedTimeframeOptions.includes(this.widget["fortiview-timeframe"])||(this.widget["fortiview-timeframe"]=this.supportedTimeframeOptions[0]),this.timeframeOptionsLoading=!1})}}),this._$scope.$watch('$ctrl.widget["fortiview-timeframe"]',timeframe=>{this.config&&(this.compareByOptions=this.config.columns.filter(column=>!!column.sorting&&(!this.showTimeframe||(timeframe===fortiviewData.TIME_PERIODS.REALTIME?!column.historicalOnly:!column.realtimeOnly))),this.compareByOptions.find(option=>option.id===this.widget["fortiview-sort-by"])||(this.widget["fortiview-sort-by"]=this.compareByOptions[0].id))}),this._$scope.$watch('$ctrl.widget["fortiview-sort-by"]',compareBy=>{this.defaultTitle=fortiviewConfig.createDefaultWidgetTitle(this.type,compareBy)})}}}EditFortiview.prototype.VISUALIZATION_ICON={[FortiviewVisualization.TYPES.TABLE]:"fa-table",[FortiviewVisualization.TYPES.BUBBLE]:"ftnt-bubbles",[FortiviewVisualization.TYPES.COUNTRY]:"ftnt-globe"},ngModule.component("fEditFortiviewWidget",{templateUrl:__webpack_require__(833),controller:EditFortiview,require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},439:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fEditMonitorWidget",{templateUrl:__webpack_require__(834),controller:class extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,csfTopology,dashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary(),this.config=dashboardConfig.getWidgetConfig()[this.widget.type||this.widgetSelection.selectedType],this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||csfTopology.selectedFortigate,this.config.supportMutableVisualizationOptions&&!this.widget["table-visualization"]&&(this.widget["table-visualization"]=this.config.supportMutableVisualizationOptions[0]),parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&this.fortigate.serial||"",this.widget)),this.loading=parentController.loading=!1}}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},440:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(36),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,fwebUtilSelect){const GRE_TUNNEL_URL="/api/v2/cmdb/system/gre-tunnel",INTERFACE_SOURCE_ID="firewallInterfaces";ngModule.component("fEditTrafficHistoryWidget",{templateUrl:__webpack_require__(835),controller:class extends inject.Collectable{constructor(){super(),this.fortigateSettings={sources:"csfFortiGates",singleSelect:!0,preProcessSelected:!0,filterFunction:entry=>"all"!==entry.q_origin_key&&!entry.isGlobal&&entry.isFirmwareCompatible}}$onInit($INJECTABLE$,csfTopology,dashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary(),this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||csfTopology.selectedFortigate,this.config=dashboardConfig.getWidgetConfig()[this.widget.type||this.widgetSelection.selectedType],this.interfaceSettings=await this._getInterfaceSettings(),parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&this.fortigate.serial||"",this.widget)),this._setupWatches(),this.loading=parentController.loading=!1}}get interfaceObject(){return!this._interfaceObject&&this.widget.interface&&(this._interfaceObject={q_origin_key:this.widget.interface,datasource:this.firewallInterfaceDatasource}),this._interfaceObject||null}set interfaceObject(interfaceObject){this._interfaceObject=interfaceObject,this._interfaceObject?this.widget.interface=this._interfaceObject.q_origin_key:this.widget.interface=null}_updateInterfaceSettings(){return this.interfaceSettings=this._getInterfaceSettings(),this.interfaceSettingsInstance&&this.interfaceSettingsInstance.update({reProcess:!0})}_getInterfaceSettings($INJECTABLE$,$http,state){return()=>{let source=INTERFACE_SOURCE_ID;return state.getCurrentVDOMScope()===state.VDOM_SCOPE.GLOBAL&&(source=fwebUtilSelect.makeGlobalSourceID(INTERFACE_SOURCE_ID)),{sources:this.fortigate.getOmniselectProxySourceID(source),extraData:()=>$http.get(GRE_TUNNEL_URL,{csfProxy:this.fortigate}).then(r=>r.data.results,()=>[]),preProcessSelected:!0,singleSelect:!0,insideSlide:!0,filterFunction:function(intf,meta,greTunnels){const isGRETunnelIntf=greTunnels.some(tun=>tun.name===intf.name),tunnelException=intf.pppoe_interface||intf.is_ipsec_manualkey||intf.is_ipsec_static||intf.is_ipsec_ddns||isGRETunnelIntf;return!(intf.is_hardware_switch_member||intf.is_software_switch_member)&&!intf.is_sslvpn&&!intf.is_sdwan_zone&&"any"!==intf.name&&!intf.is_zone&&(!intf.is_tunnel||tunnelException)&&!intf.out_of_scope}}}}_setupWatches($INJECTABLE$,$scope){return()=>{$scope.$watch(()=>this.fortigate,(newValue,oldValue)=>{newValue&&newValue!==oldValue&&this._updateInterfaceSettings()})}}get firewallInterfaceDatasource(){return this.fortigate&&this.fortigate.getOmniselectProxySourceID(INTERFACE_SOURCE_ID)||INTERFACE_SOURCE_ID}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"="}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},441:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fEditRoutingMonitorWidget",{templateUrl:__webpack_require__(836),controller:class extends inject.Collectable{constructor(){super(),this.VIEW_TYPES=["staticdynamic","policy"]}$onInit($INJECTABLE$,csfTopology,dashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary(),this.config=dashboardConfig.getWidgetConfig()[this.widget.type||this.widgetSelection.selectedType],this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||csfTopology.selectedFortigate,this.widget["router-view-type"]||(this.widget["router-view-type"]=this.VIEW_TYPES[0]),parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&this.fortigate.serial||"",this.widget)),this.loading=parentController.loading=!1}}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},442:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(89),__webpack_require__(182)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fEditDeviceListMonitorWidget",{templateUrl:__webpack_require__(837),controller:class extends inject.Collectable{constructor(deviceViewTypes){super(),this.deviceViewTypes=deviceViewTypes}$onInit($INJECTABLE$,csfTopology,dashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary();const widgetType=this.widget.type||this.widgetSelection.selectedType;this.config=dashboardConfig.getWidgetConfig()[widgetType],this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||"all"===this.widget.fortigate&&{q_origin_key:"all"}||csfTopology.selectedFortigate,this.isForticlient=widgetType===dashboardConfig.WIDGET_TYPES.FORTICLIENT,this.listType=this.isForticlient?"fortiClientMonitor":"deviceInventory",this._setDefaultValue(),parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&(this.fortigate.allFortigates&&this.fortigate.q_origin_key||this.fortigate.serial)||"",this.widget)),this.loading=parentController.loading=!1}}_setDefaultValue($INJECTABLE$,deviceDisplaySettings,$scope){return()=>{this.isForticlient&&(this.onlineOptions=deviceDisplaySettings.options.online,this.telemetryOptions=deviceDisplaySettings.options.telemetry,this.widget["device-list-online"]||(this.widget["device-list-online"]=deviceDisplaySettings.defaultOption.online),this.widget["device-list-telemetry"]||(this.widget["device-list-telemetry"]=deviceDisplaySettings.defaultOption.telemetry),$scope.$watch(()=>this.fortigate,(newVal,oldVal)=>{newVal.q_origin_key!==oldVal.q_origin_key&&[newVal.q_origin_key,oldVal.q_origin_key].includes("all")&&(this.viewTypeOptions=this.deviceViewTypes.getOptions(this.listType,this.fortigate),this.viewTypeOptions.includes(this.widget["device-list-view-type"])||(this.widget["device-list-view-type"]=this.viewTypeOptions[0].value))})),this.viewTypeOptions=this.deviceViewTypes.getOptions(this.listType,this.fortigate),this.widget["device-list-view-type"]||(this.widget["device-list-view-type"]=this.viewTypeOptions[0].value),this.config.supportMutableVisualizationOptions&&!this.widget["table-visualization"]&&(this.widget["table-visualization"]=this.config.supportMutableVisualizationOptions[0])}}_getAllDashboards($INJECTABLE$,$http,dashboardConfig,dashboardCommon){return async()=>{const response=await $http.get(dashboardCommon.DASHBOARD_CMDB_URI);this.dashboards=response.data.results.filter(dashboard=>dashboardConfig.isSameVDOM(dashboard.vdom))}}_getSchema($INJECTABLE$,$http,dashboardCommon){return async()=>{const response=await $http.get(dashboardCommon.DASHBOARD_CMDB_URI,{params:{action:"schema"}});this.schema=response.data.results}}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},443:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(89)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fEditFirewallUserMonitorWidget",{templateUrl:__webpack_require__(838),controller:class extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,csfTopology,dashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary();const widgetType=this.widget.type||this.widgetSelection.selectedType;this.config=dashboardConfig.getWidgetConfig()[widgetType],this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||csfTopology.thisFortigate,parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&this.fortigate.serial||"",this.widget)),this.loading=parentController.loading=!1}}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},444:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(89),__webpack_require__(239)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.component("fEditWifiWidget",{templateUrl:__webpack_require__(839),controller:class extends inject.Collectable{constructor(){super(),this.BAND_SELECTION=["both","5ghz","24ghz"]}$onInit($INJECTABLE$,csfTopology,dashboardConfig,wifiDashboardConfig){return async()=>{const parentController=this.widgetSelection||this.editDashboard;this.loading=parentController.loading=!0,await csfTopology.buildIfNecessary(),this.isStandalone=parentController.dashboardLayoutType===dashboardConfig.LAYOUT_TYPE.STANDALONE,this.dashboard.csf=this.asStandalone||parentController.fortigateSelectionMode!==dashboardConfig.FORTIGATE_SELECTION_MODE.DASHBOARD?"disable":"enable",this.fortigate="enable"===this.dashboard.csf?csfTopology.selectedFortigate:csfTopology.getDevice(this.widget.fortigate)||csfTopology.selectedFortigate;const widgetType=this.widget.type||this.widgetSelection.selectedType;this.config=dashboardConfig.getWidgetConfig()[widgetType],this.wifiConfig=wifiDashboardConfig.getSettings(widgetType),this.wifiConfig.hasBandSelection&&(this.widget["wifi-band"]=this.widget["wifi-band"]||this.BAND_SELECTION[0]),parentController.beforeSubmit(()=>(this.widget.fortigate=this.fortigate&&this.fortigate.serial||"",this.widget)),this.loading=parentController.loading=!1}}},require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"=",dashboard:"=",asStandalone:"<?"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},447:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(31),__webpack_require__(41),__webpack_require__(49),__webpack_require__(27),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((inject,dom,slide,persist,notify,ftnt_shared)=>{const HTTP_INTERNAL_SERVER_ERROR=500,CFG_ER_INTERNAL=-333,PERSIST_KEY="DhcpMonitor::persist::fortigate";class DhcpMonitor extends inject.Collectable{constructor(lang,$q){super(),this.title=lang("dashboard_widget_type::dhcp").toString(),this.chartColumns=["status","interface"],this.chartTotalLabels=[lang("clients")],this.muTable={},this.viewSettings={},this.loadingPromise=$q.defer()}$onInit($INJECTABLE$,csfTopology){return async()=>{this.inSlide=this.inSlide||!1,await csfTopology.buildIfNecessary(),this.inSlide?this.viewSettings.fortigate=csfTopology.selectedFortigate:(this.modelData=this.widgetModel.getModelData(),this.viewSettings.fortigate=this.inSlide&&csfTopology.getDevice(persist.get(PERSIST_KEY))||this.dashboard.getChosenFortigate(this.modelData)),this.loadingPromise.resolve(),this.muTable.settings=this.getSettings(),await this.loadSource(),this.setupWatch()}}$onDestroy(){persist.remove(PERSIST_KEY)}setupWatch($INJECTABLE$,$scope){return()=>{$scope.$on(ftnt_shared.Omniselect.NOTIFY_SOURCE_CHANGED_MESSAGE,(event,sourceID)=>{sourceID.includes("firewall.address")&&this.loadSource({invalidateDevices:!0,invalidateAddresses:!0})}),$scope.$on("QUARANTINE_EVENTS",()=>{this.loadSource({invalidateDevices:!0})})}}updatePersist(isZoomed){this.inSlide||(isZoomed?persist.put(PERSIST_KEY,this.viewSettings.fortigate.serial):persist.remove(PERSIST_KEY,""))}get chartsOnly(){return this.dashboardWidget&&!this.dashboardWidget.isZoomed}getDataSource(datasource,fortigate){return(fortigate||this.viewSettings.fortigate).getOmniselectProxySourceID(datasource)}async loadSource({invalidateDevices:invalidateDevices,invalidateAddresses:invalidateAddresses}={}){this.muTable.source=await this.getSource({invalidateDevices:invalidateDevices,invalidateAddresses:invalidateAddresses})}getSettings($INJECTABLE$,state,lang,csfTopology){const HOST_IDENTIFIER=["vci","hostname","duid","iaid"];return()=>{const columns=[{id:"interface",langKey:"Interface",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:entry=>{const fortigate=csfTopology.fortigateMapping[entry.fortigate],formatInterface=mkey=>({q_origin_key:mkey,datasource:this.getDataSource("firewallInterfaces",fortigate)}),result=[formatInterface(entry.interface)];return entry.$bridgeSsidInterface&&result.push(formatInterface(entry.$bridgeSsidInterface.q_origin_key)),result},collectionEntryValueFunction:entry=>entry.q_origin_key,collectionEntryOnRender:(element,entry)=>{entry.is_local_bridge&&element.firstChild.prepend(dom.elem("span",null,{children:[dom.elem("f-icon",{className:"ftnt-vap-local-bridging"}),dom.elem("span",{textContent:`${lang("Bridge")}: `})]}))}},{id:"reserved",langKey:"Reserved",cellValueFunction:entry=>lang(entry.reserved?"Reserved":"Not Reserved"),cellFormatter:(entry,column,value)=>{const className=entry.reserved?"fa-enabled":"fa-disabled";return dom.elem("span",null,{children:[dom.elem("f-icon",{className:className}),dom.elem("span",{textContent:value})]})}},{id:"ip",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:entry=>{const fortigate=csfTopology.fortigateMapping[entry.fortigate];return{q_origin_key:`${entry.ip}-ipv4`,value:entry.ip,datasource:this.getDataSource("firewall.address",fortigate)}},collectionEntryValueFunction:entry=>entry.value||""},{id:"device",langKey:"device",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:entry=>{if(entry.mac){const fortigate=csfTopology.fortigateMapping[entry.fortigate];return Object.assign({},entry,{q_origin_key:entry.mac,datasource:this.getDataSource("devices",fortigate)})}},collectionEntryValueFunction:entry=>entry.hostname||entry.mac,collectionEntryFormatter:(entry,value)=>{if(value)return dom.elem("span",null,{children:[dom.elem("f-icon",{className:"ftnt-device",title:lang("unknown")}),dom.elem("span",{textContent:value})]})}},{id:"mac",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:entry=>{const fortigate=csfTopology.fortigateMapping[entry.fortigate];return{value:entry.mac,q_origin_key:`${entry.mac}-mac`,datasource:this.getDataSource("firewall.address",fortigate)}},collectionEntryValueFunction:entry=>entry.value||""},{id:"host_info",langKey:"host_info",type:"collection",cellValueFunction:function(entry){var values=[];return HOST_IDENTIFIER.forEach(function(selector){var value;if(entry[selector]){const escaped=dom.escapeHTML(entry[selector]);value=`${lang(selector).toString()}: ${escaped}`,values.push(value)}}),values}},{id:"$expire_time",langKey:"Expires",type:"date"},{id:"status",cellValueFunction:(entry,column)=>lang(entry[column.id])},{id:"hostname"}];state.featureEnabled("gui-ipv6")&&(columns.push({id:"vci",langKey:"vci"}),columns.push({id:"duid",langKey:"duid"}),columns.push({id:"iaid",langKey:"iaid"}));return{id:"dhcp_monitor_list",columns:columns,defaultColumns:["device","ip","interface","status","mac","reserved","host_info","$expire_time"]}}}getSource($INJECTABLE$,lang,DhcpMonitorSource){return async({invalidateDevices:invalidateDevices,invalidateAddresses:invalidateAddresses}={})=>{const options={firewallInterfaces:this.getDataSource("firewallInterfaces"),devices:this.getDataSource("devices"),addresses:this.getDataSource("firewall.address"),invalidateDevices:invalidateDevices,invalidateAddresses:invalidateAddresses,fortigate:this.viewSettings.fortigate};let source;if(this.inSlide)options.interface=this.interface,source=new DhcpMonitorSource;else{const key=`DhcpMonitor::${this.viewSettings.fortigate.serial}`;source=await this.dashboard.getData(key,()=>new DhcpMonitorSource,{invalidateCache:invalidateDevices||invalidateAddresses})}return source.setOptions(options),source}}reloadAfterPromise($INJECTABLE$,lang){return promise=>{promise.then(()=>{this.loadSource({invalidateDevices:!0,invalidateAddresses:!0})}),promise.catch&&promise.catch(response=>{var data=response.data;if(data.http_status===HTTP_INTERNAL_SERVER_ERROR&&data.error===CFG_ER_INTERNAL)notify.post(lang("The DHCP system is currently being reconfigured and cannot complete the request. Please refresh and try again in a few seconds."),notify.LEVEL.WARNING);else{var error=data&&(data.error||data.http_status)||response.status||response.statusText;notify.post(lang(error),notify.LEVEL.ERROR),this.loadSource()}})}}removeReservation($INJECTABLE$,lang){return lease=>{slide.confirm(lang("dhcpmonitor::delete_reservation").value).then(()=>{this.reloadAfterPromise(this._removeReservation(lease))})}}_removeReservation($INJECTABLE$,$http){return async lease=>{const baseURI=`/api/v2/cmdb/system.dhcp/server/${lease.server_mkey}/reserved-address`,reservation=(await $http.get(baseURI,{csfProxy:this.viewSettings.fortigate})).data.results.filter(function(res){return res.mac===lease.mac})[0];return $http.delete(`${baseURI}/${reservation.id}`,{csfProxy:this.viewSettings.fortigate})}}revoke($INJECTABLE$,$http,lang,$q){return entries=>{const reservedLeases=[],ipv4Addresses=[],ipv6Addresses=[];entries.forEach(function(lease){lease.reserved&&reservedLeases.push(lease),"ipv4"===lease.type?ipv4Addresses.push(lease.ip):ipv6Addresses.push(lease.ip)});const promises=[],fortigate=this.viewSettings.fortigate,confirmMessage=reservedLeases.length>0?lang("dhcpmonitor::revoke_reserved_warning").value:lang("dhcpmonitor::revoke_warning").value;slide.confirm(confirmMessage).then(()=>{if(reservedLeases.length>0&&reservedLeases.forEach(reservedLease=>{promises.push(this._removeReservation(reservedLease))}),ipv4Addresses.length>0){const uri=fortigate.createCSFURI("/api/v2/monitor/system/dhcp/revoke");promises.push($http.post(uri,{ip:ipv4Addresses}))}if(ipv6Addresses.length>0){const uri=fortigate.createCSFURI("/api/v2/monitor/system/dhcp6/revoke");promises.push($http.post(uri,{ip:ipv6Addresses}))}this.reloadAfterPromise($q.all(promises))})}}revokeAll($http,lang,$q){return()=>{slide.confirm(lang("Are you sure you want to revoke all DHCP leases?").value).then(()=>{const baseUri=this.viewSettings.fortigate.createCSFURI("/api/v2/monitor/system"),promises=[$http.post(`${baseUri}/dhcp/revoke`,null),$http.post(`${baseUri}/dhcp6/revoke`,null)];this.reloadAfterPromise($q.all(promises))})}}deleteReservation($INJECTABLE$,$http,lang,CMDB){return lease=>{slide.confirm(lang("Are you sure you want to remove this DHCP reservation?").value).then(()=>{this._removeReservation(lease).then(()=>{notify.post(lang("Reservation deleted").value,notify.LEVEL.SUCCESS),this.loadSource({invalidateDevices:!0,invalidateAddresses:!0})},error=>{CMDB.notifyFailure(error.data),this.loadSource({invalidateDevices:!0,invalidateAddresses:!0})})})}}updateReservation($INJECTABLE$,fDhcpReservationService){return lease=>{const hasMacFirewallAddress=!!lease.$mac_firewall_address,macFirewallAddressName=lease.$desired_mac_firewall_address_name;fDhcpReservationService.open(lease,!lease.reserved,hasMacFirewallAddress,macFirewallAddressName,this.viewSettings.fortigate).finally(()=>{this.loadSource({invalidateAddresses:!0,invalidateDevices:!0})})}}showInFortiView($INJECTABLE$,deviceUtils){return lease=>{const role=this.getInterfaceRole(lease.interface),vdom=this.interface&&this.interface.vdom;deviceUtils.showInFortiView(lease.ip,role,this.viewSettings.fortigate&&this.viewSettings.fortigate.q_origin_key,vdom)}}getInterfaceRole(name){return"wan"===this.muTable.source.interfaceMap[name].role?"wan":"lan_dmz"}showMatchingLogs($INJECTABLE$,deviceUtils){return lease=>{const vdom=this.interface&&this.interface.vdom;deviceUtils.showMatchingLogs(lease.ip,vdom)}}createAddress($INJECTABLE$,deviceUtils){return(lease,type)=>{let name,addr;"mac"===type?(name=lease.$desired_mac_firewall_address_name,addr=lease.mac):(name=lease.$desired_ip_firewall_address_name,addr=lease.ip),deviceUtils.createAddress({name:name,type:type,addr:addr,intf:lease.interface}).finally(()=>{this.loadSource({invalidateAddresses:!0})})}}}return function(providers,loader){return providers.$compile.component("fDhcpMonitorWidget",{bindings:{widgetModel:"<?",inSlide:"<?",interface:"<?"},templateUrl:__webpack_require__(853),controller:DhcpMonitor,require:{dashboard:"^?fSystemDashboard"}}),loader.initModules([__webpack_require__(33),__webpack_require__(855),__webpack_require__(856),__webpack_require__(448),__webpack_require__(858)])}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},450:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(0),__webpack_require__(62),__webpack_require__(178)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,BUILD,fObject){var URLS={METADATA:"/api/v2/static/log_metadata.json",ABORT_SESSION:"/api/v2/log/search/abort/:id",VIRUS_ARCHIVE:"/api/v2/log/:device/virus/archive/:checksum",IPS_ARCHIVE:"/api/v2/log/:device/ips/archive/:incidentserialno",DLP_ARCHIVE_DOWNLOAD:"/api/v2/log/:device/dlp/archive-download/:epoch",VIRUS_ARCHIVE_DOWNLOAD:"/api/v2/monitor/log/av-archive/download/:checksum",CDR_ARCHIVE_DOWNLOAD:"/api/v2/log/:device/dlp/archive-download/:analyticscksum",IPS_ARCHIVE_DOWNLOAD:"/api/v2/log/:device/ips/archive-download/:incidentserialno",POLICY_ARCHIVE_DOWNLOAD:"/api/v2/monitor/log/policy-archive/download/",DATA:"/api/v2/log/:device/:logType/:logSubType",RAW:"/api/v2/log/:device/:logType*/raw",LOG_VIEW:"/log/view/:logType",CSF_PREFIX:"/csf/:csfPath"},SYMBOLS=BUILD.SYMBOLS,LOG_DEVICE_ID_MAP={memory:SYMBOLS.LOG_PRESENT_DEVICE_MEMORY,disk:SYMBOLS.LOG_PRESENT_DEVICE_DISK,faz:SYMBOLS.LOG_PRESENT_DEVICE_FAZ,fortianalyzer:SYMBOLS.LOG_PRESENT_DEVICE_FAZ,forticloud:SYMBOLS.LOG_PRESENT_DEVICE_FDS};function logViewResource(url,property,extras,paramFilter,isArray){return null==isArray&&(isArray=!!property),function($injector,$resource,$routeParams,logParamSerializer){var defaultParams={device:"disk"},commands={get:{isArray:isArray,method:"GET",params:defaultParams,paramSerializer:logParamSerializer.bind(null,null)}};property&&(commands.getWithMeta={method:"GET",params:defaultParams,paramSerializer:logParamSerializer.bind(null,null)},commands.get.transformResponse=function(response){return angular.fromJson(response)[property]}),extras&&"function"==typeof extras&&(extras=$injector.invoke(extras,null));var result=$resource(url,{},commands);if(paramFilter){var resultGet=result.get;result.get=function(params){return params=paramFilter(params),resultGet.call(this,params)}}return extras?angular.extend(result,extras):result}}function logViewExtras($routeParams,$route,$location,ftntRoute,structure,$resource){const abortSession=$resource(URLS.ABORT_SESSION,{},{abort:{method:"POST"}}),result={NON_PAGING_MAX_ROWS:16777215,NON_PAGING_MAX_ROWS_FAZ:SYMBOLS.API_LOG_MAX_FAZ_ROWS,nonPagingMaxRows:device=>(isNaN(device)?LOG_DEVICE_ID_MAP[device]:device)===SYMBOLS.LOG_PRESENT_DEVICE_FAZ?result.NON_PAGING_MAX_ROWS_FAZ:result.NON_PAGING_MAX_ROWS,navigate(filters,logType,device){var interpParams={logType:logType,device:device},url=ftntRoute.interpolate(URLS.LOG_VIEW,interpParams);return structure.ngRouteURI(url+"?"+filters.map(f=>f.toParam()).join("&"))},download(filters,logType,device,extra,fgt){const interpParams={logType:logType,device:device},extraQuery=function(obj){if(!obj)return"";return Object.getOwnPropertyNames(obj).map(function(prop){return encodeURIComponent(prop)+"="+encodeURIComponent(obj[prop])}).join("&")}(extra),rawPath=ftntRoute.interpolate(URLS.RAW,interpParams)+"?"+filters.map(f=>f.toParam()).join("&")+(extraQuery?"&"+extraQuery:"");return fgt?fgt.createCSFURI(rawPath):rawPath},abortSession:id=>abortSession.abort({id:id},"")};return result}function logMetadataFactory($http){return function(logType){return $http.get("/"+BUILD.CONFIG.CONFIG_GUI_NO+URLS.METADATA).then(function(response){for(var metadata=response.data,types=logType.split("/");types.length;)metadata=metadata[types.shift()],types.length&&(metadata=metadata.subtypes);if(!metadata)throw new Error("Unable to resolve log metadata type: "+logType);return metadata})}}function archiveDataFactory($q,$injector,ftntRoute,logParamSerializer){const paramMaps={virus:Object.assign({filename:"filename"},ftntRoute.extractVarMap(`${URLS.CSF_PREFIX}${URLS.VIRUS_ARCHIVE}`)),ips:Object.assign({roll:"_metadata.roll",filename:"filename"},ftntRoute.extractVarMap(`${URLS.CSF_PREFIX}${URLS.IPS_ARCHIVE}`)),"app-ctrl":ftntRoute.extractVarMap(URLS.APP_ARCHIVE),cdr:{eventtype:"eventtype",service:"service",filename:"filename"},dlp:{eventid:"eventid",service:"service",roll:"_metadata.roll",vdom:"vd"},traffic:{dstip:"dstip",srcip:"srcip"}},defaults={ips:{_pcap_category:0}},res={virus:{download:function(data,params){return ftntRoute.interpolate(URLS.VIRUS_ARCHIVE_DOWNLOAD,params)}},cdr:{_fakeResourceColumns:["contentdisarmed","cdrcontent","url","action","direction","fctuid","filename","msg","vd","timestamp","analyticscksum"],get:fakeResourceGetter,download:function(data,params,fgt){var url=ftntRoute.interpolate(URLS.CDR_ARCHIVE_DOWNLOAD,params);return params.filename&&(url+="?"+logParamSerializer(paramMapFilter(paramMaps.cdr),params)),fgt?fgt.createCSFURI(url):url}},ips:{download:function(data,params,fgt){const url=ftntRoute.interpolate(URLS.IPS_ARCHIVE_DOWNLOAD,params)+"?"+logParamSerializer(paramMapFilter(paramMaps.ips),params);return fgt?fgt.createCSFURI(url):url}},dlp:{_fakeResourceColumns:["timestamp","srcip","dstip","sentbyte","rcvdbyte","service"],get:fakeResourceGetter,download:function(downloadData,params,fgt){var filename,url=URLS.DLP_ARCHIVE_DOWNLOAD;if(!params.filename){var timestamp=String(params.timestamp).replace(/[\s|:]+/g,"_"),sn=params.max_archive_sn;filename="dlp_archive-"+timestamp+(sn>0?"-"+sn:""),params=angular.extend({filename:filename},params)}return url=ftntRoute.interpolate(url,params)+"?"+logParamSerializer(paramMapFilter(paramMaps.dlp),params),fgt?fgt.createCSFURI(url):url}},traffic:{_fakeResourceColumns:["timestamp","srcip","dstip","sentbyte","rcvdbyte"],get:fakeResourceGetter,downloadPacketCapture:function(downloadData,params,fgt){var url,sessionid=params.sessionid;return"_pcap_category"in params?res.ips.download(params,null,fgt):(params=paramMapFilter(paramMaps.traffic)(params)).srcip&&params.dstip&&sessionid?(url=URLS.POLICY_ARCHIVE_DOWNLOAD+sessionid+"/?"+logParamSerializer(null,params),fgt?fgt.createCSFURI(url):url):null}}},paramFilters=Object.keys(paramMaps).reduce(function(result,key){return result[key]=paramMapFilter(paramMaps[key],defaults[key]),result},{}),result={ips:lvrFactory(URLS.IPS_ARCHIVE,"ips","results"),virus:lvrFactory(URLS.VIRUS_ARCHIVE,"virus","results",!1),csfvirus:lvrFactory(`${URLS.CSF_PREFIX}${URLS.VIRUS_ARCHIVE}`,"virus","results",!1),csfips:lvrFactory(`${URLS.CSF_PREFIX}${URLS.IPS_ARCHIVE}`,"ips","results"),dlp:res.dlp,cdr:res.cdr,traffic:res.traffic};return result["app-ctrl"]=result.ips,result;function lvrFactory(url,type,property,isArray=!0){return $injector.invoke(logViewResource(url,property,res[type],paramFilters[type],isArray))}function paramMapFilter(paramMap,defaults){return defaults=defaults||{},function(params){var i,result={};if(paramMap)for(i in paramMap){var cols=paramMap[i].split(":").filter(inParams);if(cols.length)result[i]=cols.map(colValue).join(":");else paramMap[i].split(".").length>1?result[i]=fObject.nestedGet(params,paramMap[i]):i in defaults&&(result[i]=defaults[i])}return result;function colValue(col){return params[col]}function inParams(col){return col in params}}}function fakeResourceGetter(params){var res={data:paramMapFilter(this._fakeResourceColumns.reduce(function(result,key){return result[key]=key,result},{}))(params)};return angular.extend({$promise:$q.when(res)},res)}}function logParamSerializerFactory($httpParamSerializer,ApiFilter){return function(filter,params){params=angular.copy(params);var result=filter?filter(params):params;for(var i in result)!["filter","extra"].includes(i)&&Array.isArray(result[i])?result[i]=[result[i]]:"filter"===i&&Array.isArray(result[i])&&(result[i]=result[i].map(apiFilterToString));return result=$httpParamSerializer(result);function apiFilterToString(f){return f instanceof ApiFilter?f.toString():f}}}return Object.keys(LOG_DEVICE_ID_MAP).forEach(function(k){LOG_DEVICE_ID_MAP[LOG_DEVICE_ID_MAP[k]]=k}),function(providers){providers.$provide.factory({logViewData:logViewResource(URLS.DATA,"results",logViewExtras),csfLogViewData:logViewResource(`${URLS.CSF_PREFIX}${URLS.DATA}`,"results"),logMetadata:logMetadataFactory,logArchiveData:archiveDataFactory,logParamSerializer:logParamSerializerFactory}),providers.$provide.constant("LOG_DEVICE_ID_MAP",LOG_DEVICE_ID_MAP)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},453:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(240)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function logFilterFactory(ComplexValue,ApiFilter){function LogFilter(facet,values){this.facet=facet,this.values=values}return LogFilter.prototype={facet:null,values:null,toApiFilters:function(source,tweak){var result=null,selector=this.facet.selectors[source],facet=this.facet;if(!selector)return[];this.values.some(ComplexValue.probablyComplex)&&(result=this.values.map(function(v){return v instanceof ComplexValue?v:this.facet.complexValue(v)}.bind(this)).map(cv=>cv instanceof ComplexValue?function(value){if(value.modifiers.length>1)throw new Error("Not implemented, "+`unable to create filters from complex value for column '}${selector}`+` (${value})`);if("-"===value.splitter){if(value.modifiers.length>0&&"!"!==value.modifiers[0])throw new Error("Unable to create filter combining "+`range and ${value.modifiers[0]}: ${value}`);if(2!==value.values.length)throw new Error("Unable to create range filter combining "+`${value.values.length} values: ${value}`);return[new ApiFilter(selector,value.values[0],">="),new ApiFilter(selector,value.values[1],"<=")]}if(1===value.modifiers.length){const o=function(modifier){switch(modifier){case"!":return"!=";case">":case">=":case"<":case"<=":return modifier;default:throw new Error(`Unknown modifier specified: ${modifier} for value ${value}`)}}(value.modifiers[0]);return[new ApiFilter(selector,value.values.filter(notEmpty),o)]}return[new ApiFilter(selector,value.values.filter(notEmpty))];function notEmpty(v){return v}}(cv):[new ApiFilter(selector,cv)]).reduce((flattened,flatten)=>flattened.concat(flatten),[]));return null==result&&(result=this.values.map(value=>new ApiFilter(selector,value))),result&&tweak&&(result.forEach(f=>{f.orValues.some(v=>"string"==typeof v&&v.includes("*"))&&"=="===f.operator&&["string","enum"].includes(facet.type)&&(f.operator="=@")}),this.facet.tweakFilter[source].call(this.facet,result)),result}},LogFilter}return function(providers){providers.$provide.factory({LogFilter:logFilterFactory})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},463:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){const API_ROUTER_LOOKUP="/api/v2/monitor/router/lookup";return function(CMDB,$http,state,$window){var csfPrototype={wasJoinExisting:function(){return"0.0.0.0"!==this.$original["upstream-ip"]},joinExisting:function(value){if(1!==arguments.length)return"_joinExisting"in this?this._joinExisting:"0.0.0.0"!==this["upstream-ip"];this._joinExisting=value,this._joinExisting?(this["group-name"]="",this["group-password"]="","0.0.0.0"!==this["upstream-ip"]&&"disable"!==this.$original.status||(this["upstream-ip"]=this.$systemDefaultGateway)):this._joinExisting||(this.$original["group-name"]&&(this["group-name"]=this.$original["group-name"]),this.$original["group-password"]&&(this["group-password"]=this.$original["group-password"]),this.$trustedList||this._initTrustedList())},_initTrustedList:function(){this.joinExisting()?this.$trustedList=void 0:(this.$trustedList=this["trusted-list"]||[],this.$trustedList.length||this.$trustedList.push({serial:"",action:"accept"}))},preSave:function(){if(this.joinExisting())this["trusted-list"]=void 0;else{this["upstream-ip"]="0.0.0.0";var trustedList=this.$trustedList.slice();1!==trustedList.length||trustedList[0].serial||(trustedList=[]),this["trusted-list"]=trustedList}"default"===this.managementIpOption()()&&(this["management-ip"]=""),"default"===this.managementPortOption()()&&(this["management-port"]=0)},isDefaultSyncMode:function(){return"default"===this["configuration-sync"]&&"enable"===this.status},isLocalSyncMode:function(){return"local"===this["configuration-sync"]&&"enable"===this.status},$status:function(value){if(void 0===value)return"enable"===this.status;this.status=value?"enable":"disable"},managementIpOption:function(setDefault=!0){const defaultValue=setDefault?$window.location.hostname:"";return function(value){if(1!==arguments.length)return"_managementIpOption"in this?this._managementIpOption:this["management-ip"]?"specify":"default";this._managementIpOption=value,"specify"!==value||this.$original["management-ip"]||this["management-ip"]||!defaultValue||(this["management-ip"]=defaultValue)}.bind(this)},managementPortOption:function(setDefault=!0){const defaultValue=setDefault?$window.location.port:0;return function(value){if(1!==arguments.length)return"_managementPortOption"in this?this._managementPortOption:0!==this["management-port"]?"specify":"default";"specify"===value&&0===this.$original["management-port"]&&0===this["management-port"]&&defaultValue&&(this["management-port"]=Number(defaultValue)),this._managementPortOption=value}.bind(this)},_initSystemDefaultGateway:function(routeLookupResults){let gateway="0.0.0.0";routeLookupResults.success&&(gateway=routeLookupResults.gateway),this.$systemDefaultGateway=gateway}};return[new CMDB.Model("system","csf",csfPrototype,function(entry){entry.$promise=$http.get(API_ROUTER_LOOKUP,{params:{vdom:state.management_vdom,destination:"0.0.0.0",ipv6:!1}}).then(response=>{entry._initSystemDefaultGateway(response.data.results)},function(){entry._initSystemDefaultGateway({})}).finally(function(){entry["group-name"]?entry["confirm-password"]=entry["group-password"]:entry["group-password"]="",entry._initTrustedList()})})]}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},469:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(77),__webpack_require__(73)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,TRIGGERS,ACTIONS){function factory(CMDB,$q,TriggerModel,ActionModel,DestinationModel,csfTopology){class ActionType{constructor({typeName:typeName,data:data,actionCmdb:actionCmdb,stitchName:stitchName,minInterval:minInterval}){this.name=typeName,this.isChainable=ACTIONS.isChainable(typeName),this.iconClass=ACTIONS.genActionIcon(typeName),this.checked=this.preChecked=!!data,this.data=data||actionCmdb.defaults(),this.chainable&&!Array.isArray(this.data)&&(this.data=[data]),this.hasIngredients=ACTIONS.hasIngredients(typeName),this.template=ACTIONS.genActionTemplate(typeName),data||(this.data.$promise=this.data.$promise.then(()=>{this.data["action-type"]=typeName,this.data["minimum-interval"]=minInterval,this.isChainable||(this.data.name=stitchName+"_"+typeName)})),this.isChainable&&Array.isArray(this.data)&&(this.data.$original=this.data.slice())}deleteAll(){const promises=[];return this.preChecked&&(this.isChainable?(this.data.$original||[]).forEach(chainAction=>{promises.push(chainAction.$delete().$promise)}):promises.push(this.data.$delete().$promise)),promises}cleanUpUnreferencedActions(){let promises=[];return this.preChecked&&(this.checked&&this.isChainable?(this.data.$original||[]).forEach(chainAction=>{this.data.includes(chainAction)||promises.push(chainAction.$delete().$promise)}):this.checked||(promises=promises.concat(this.deleteAll()))),promises}}function StitchModel($initPromise){$initPromise.then(function(){var statusMap={enable:{icon:"fa-status-up",lang:"enabled"},disable:{icon:"fa-status-down",lang:"disabled"}};this.$schema.$promise=this.$schema.$promise.then(function(schema){return this.$schema.children.status.options.forEach(function(opt){angular.extend(opt,statusMap[opt.name])}),schema}.bind(this))}.bind(this));var destinationNames=(this.destination||[]).map(pluckName),destinationCmdb=new CMDB("system","automation-destination",{model:DestinationModel,datasource:1}),destinationPromises={};this.$destinationSchema=destinationCmdb.schema(),destinationPromises.$schema=this.$destinationSchema.$promise,this.$destinationModel=[],this.$destination={},destinationNames.forEach(name=>{destinationPromises[name]=destinationCmdb.get(name).$promise}),destinationPromises.csfTopology=csfTopology.buildIfNecessary(),$q.all(destinationPromises).then(function(res){destinationNames.forEach(function(name){var destination=res[name],fortigates=destination.destination;"ha-cluster"===destination.type&&(fortigates=fortigates.map(ha=>{const primary=csfTopology.fortigates.find(csfFgt=>csfFgt.isHaMaster&&csfFgt.haGroupId===res[name]["ha-group-id"]&&csfFgt.csfEntry.ha_group_name===ha.serial),serial=primary?primary.serial:ha.serial;return{serial:serial,q_origin_key:serial,datasource:"csfFortiGates"}})),this.$destination[name]=destination,this.$destinationModel=this.$destinationModel.concat(fortigates)}.bind(this)),this.$destinationModel.length||(this.$destinationModel=[{q_origin_key:"all",datasource:"csfFortiGates"}])}.bind(this));var triggerName=this.trigger&&this.trigger.name,triggerCmdb=new CMDB("system","automation-trigger",{model:TriggerModel,datasource:1});triggerName?this.$trigger=triggerCmdb.get(triggerName):(this.$trigger=triggerCmdb.defaults(),this.$trigger.$promise.then(function(defaults){defaults["event-type"]="",defaults.logid=[]}));var actionNames=(this.action||[]).map(pluckName),actionCmdb=new CMDB("system","automation-action",{model:ActionModel,datasource:1});this.$actionTypeInUse={};var actionPromises={};actionNames.forEach(function(name){var action=actionCmdb.get(name);actionPromises[name]=action.$promise});var schema=actionCmdb.schema();function pluckName(entry){return entry.name}actionPromises.$schema=schema.$promise,this.$actionSchema=schema,this.$actions=[],this.$actions.$promise=$q.all(actionPromises).then(function(results){var minInterval,intervals=[];actionNames.forEach(function(name){var action=results[name],type=action["action-type"],interval=action["minimum-interval"];ACTIONS.isChainable(type)?this.$actionTypeInUse[type]=(this.$actionTypeInUse[type]||[]).concat(action):this.$actionTypeInUse[type]=action,interval&&intervals.push(interval)}.bind(this)),minInterval=intervals.length?Math.min.apply(null,intervals):0;var promises=[],types=schema.children["action-type"].options;return types.sort(function(opt1,opt2){var order=ACTIONS.ACTION_ORDER,index1=order.indexOf(opt1.name),index2=order.indexOf(opt2.name);return index1===index2?0:index1>=0&&index2>=0?index1-index2:index1>=0?-1:1}),types.forEach(function(type){var typeName=type.name,data=this.$actionTypeInUse[typeName],action=new ActionType({typeName:typeName,data:data,actionCmdb:actionCmdb,stitchName:this.name,minInterval:minInterval});this.$actions.push(action),promises.push(action.data.$promise)}.bind(this)),$q.all(promises)}.bind(this))}return StitchModel.prototype=new CMDB.ResourceModel({$save:function(skipCleanUp){var save=CMDB.ResourceModel.prototype.$save.apply(this,arguments);return save.$promise=save.$promise.then(function(){var promises={};return skipCleanUp||(promises.action=this._cleanUpUnreferencedActions(),promises.destination=this._cleanUpUnreferencedDestinations()),$q.all(promises)}.bind(this)),save},$delete:function(){var del=CMDB.ResourceModel.prototype.$delete.apply(this,arguments),$destination=this.$destination,$trigger=this.$trigger,$actions=this.$actions;return del.$promise.then(function(){var promises=[];return promises.push($trigger.$delete().$promise),Object.values($destination).forEach(function(value){value.destination.length&&promises.push(value.$delete().$promise)}),$actions.forEach(actionType=>{promises=promises.concat(actionType.deleteAll())}),$q.all(promises)}),del},_cleanUpUnreferencedActions:function(){var promises=[];return this.$actions.forEach(function(actionType){promises=promises.concat(actionType.cleanUpUnreferencedActions())}),promises},_cleanUpUnreferencedDestinations:function(){var promises=[];return this.$$original.destination.forEach(function(destination){var mkey=destination.name;this.$destination[mkey].data||promises.push(this.$destination[mkey].$delete().$promise)}.bind(this)),promises}}),StitchModel}return function(providers,loader){return providers.$provide.factory("StitchModel",factory),loader.initModules([__webpack_require__(470),__webpack_require__(965),__webpack_require__(966)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},470:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function factory(CMDB){function DestinationModel($initPromise){$initPromise.then(function(){this.destination=this.destination.map(function(entry){return{serial:entry.name,q_origin_key:entry.q_origin_key,datasource:"csfFortiGates"}})}.bind(this))}return DestinationModel.prototype=new CMDB.ResourceModel({$save:function(){var isHA="ha-cluster"===this.type;return this.destination=this.destination.map(function(entry){var name=isHA?entry.csfEntry.ha_group_name:entry.serial;return{q_origin_key:name,name:name}}),CMDB.ResourceModel.prototype.$save.apply(this,arguments)}}),DestinationModel}return function(providers){providers.$provide.factory("DestinationModel",factory)}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},471:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(1),__webpack_require__(3),__webpack_require__(0),__webpack_require__(52),__webpack_require__(32),__webpack_require__(34),__webpack_require__(30),__webpack_require__(175)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,earlyState,objectUrlsText,BUILD,fUri,fFormatters,fDateTime,fLog,FosState){const THIS_FORTIGATE_SERIAL=earlyState.serial,BETA_PATTERNS=[/^Beta \d+$/,/^Release Candidate \d+$/],STATE_URI="/api/v2/monitor/web-ui/state",CSF_URI="/api/v2/monitor/system/csf",PREFERRED_LOG_DEVICE_KEY="STATE::PREFERRED_LOG_DEVICE",EMPTY_IP="0.0.0.0";let ROOT_STATE;module.factory("State",function($q,injector){const ExtendedState=injector.CollectableExtends(FosState);class GuiFosState extends ExtendedState{constructor(stateResponse,proxyRootSerial,{fwebBuildResponse:fwebBuildResponse,objectUrlsResponse:objectUrlsResponse,fortigate:fortigate}={}){super(stateResponse,proxyRootSerial=proxyRootSerial||THIS_FORTIGATE_SERIAL,{fwebBuildResponse:fwebBuildResponse=fwebBuildResponse||BUILD,objectUrlsResponse:objectUrlsResponse=objectUrlsResponse||objectUrlsText,fortigate:fortigate}),Object.assign(this,stateResponse.results),this._postUpdate(stateResponse.snapshot_utc_response_received_time),this.$promise=$q.resolve(),this.loading=!1}_getEditUrl(config,mkey,vdom){var url,MKEY_PATTERN=/<mkey>/;return config&&(!mkey&&config.new?url=config.new:config.edit&&(url=config.edit,mkey?(mkey="string"==typeof mkey?mkey.split("#")[0]:mkey,config.mkey_url_param?url+=`?mkey=${encodeURIComponent(mkey)}`:url=url.replace(MKEY_PATTERN,encodeURIComponent(mkey))):url=url.replace(MKEY_PATTERN,"").replace(/\/{2,}/g,"/"))),vdom?fUri.setQueryValue(url,"vdom",vdom):url}getBuildInformation(){return this._isThisFortiGate()?BUILD:this._fwebBuild}getExactEditUrl(path,name,mkey,vdom){return this._getExactEditUrl(path,name,mkey,vdom).then(function(url){return vdom&&url?fUri.setQueryValue(url,"vdom",vdom):url})}_getExactEditUrl($INJECTABLE$,$http){return(path,name,mkey,vdom)=>{var uriEncodedMkey=encodeURIComponent(mkey);const params={};if(vdom&&(params.vdom=vdom),path&&!name){var pathObject=fFormatters.path_name_format(path);path=pathObject.path,name=pathObject.name}const overrideVip=vip=>$q(resolve=>{"server-load-balance"===vip.type?resolve("/ng/firewall/load-balance/virtual-server/edit/"+`${name}/${uriEncodedMkey}`):resolve(this.getEditUrl(path,name,mkey))});var overrides={"firewall.policy":policy=>{const url=this._fortigate?this._fortigate.createCSFURI("/api/v2/monitor/system/available-interfaces"):"/api/v2/monitor/system/available-interfaces";return $http.get(url,{params:params}).then(response=>{var interfaces=response.data.results,srcintf=policy.srcintf[0].name,dstintf=policy.dstintf[0].name,dstintfIsVWP=!1,srcintfIsVWP=!1;return interfaces.forEach(function(intf){intf.name===srcintf&&(srcintfIsVWP=intf.is_virtual_wire_pair_member),intf.name===dstintf&&(dstintfIsVWP=intf.is_virtual_wire_pair_member)}),srcintfIsVWP&&dstintfIsVWP?`/ng/firewall/policy/${name}/virtual-wire/`+`edit/${uriEncodedMkey}`:this.getEditUrl(path,name,mkey)})},"firewall.vip":overrideVip,"firewall.vip6":overrideVip,"firewall.vip46":overrideVip,"firewall.vip64":overrideVip};if(overrides[`${path}.${name}`]&&null!=mkey){const cmdbUrl=`/api/v2/cmdb/${path}/${name}/${uriEncodedMkey}`,url=this._fortigate?this._fortigate.createCSFURI(cmdbUrl):cmdbUrl;return $http.get(url,{params:params}).then(response=>overrides[`${path}.${name}`](response.data.results[0]))}return $q.resolve(this.getEditUrl(path,name,mkey))}}updateTheme($INJECTABLE$,$document){return theme=>{var uri,newTheme=theme||this.theme,link=$document[0].getElementById("theme");link&&newTheme!==link.getAttribute("data-theme")&&(uri=fUri.cachePath(`/css/main-${newTheme}.css`),link.setAttribute("href",uri),link.setAttribute("data-theme",newTheme),$document[0].body.setAttribute("data-theme",newTheme))}}_postUpdate(responseReceivedTime){this._isThisFortiGate()&&(responseReceivedTime=responseReceivedTime||(new Date).getTime(),this.browser_utc_offset=responseReceivedTime-this.snapshot_utc_time,this.browser_time_zone_offset=(new Date).getTimezoneOffset(),this._updateplatformError(),this.updateTheme())}refresh($INJECTABLE$,$http,$rootScope){return()=>{if(!this._isThisFortiGate())throw new Error("Cannot refresh state for downstream FortiGate");return fLog.info("Updating application state"),this.loading=!0,this.$promise=$http.get(STATE_URI).then(response=>(Object.assign(this,response.data.results),this.responseData=response.data.results,this._postUpdate(),this.loading=!1,$rootScope.$broadcast(this.LOADED_EVENT),this)),$rootScope.$broadcast(this.UPDATE_EVENT),this.$promise}}readOnlyAdmin($INJECTABLE$,$cookies){return()=>{var value=!1;return!this.admin.guest_admin&&this.centrally_managed&&(value=!$cookies.get(this.cmgmt_override_cookie_name)),value}}isGlobalAdmin(){return this.admin.global_admin}usingDefaultHostname(){return this.hostname===this.serial||this.hostname===`${this.model_name}-${this.model_number}`}isADefaultHostname(hostname){return hostname===this.serial||hostname===`${this.model_name}-${this.model_number}`}getCurrentVDOMScope(defaultScope){return this.vdom_mode?this.current_vdom===this.GLOBAL_VDOM?this.VDOM_SCOPE.GLOBAL:this.VDOM_SCOPE.VDOM:defaultScope||this.VDOM_SCOPE.GLOBAL}isGlobalVDOM(){return this.getCurrentVDOMScope(this.VDOM_SCOPE.VDOM)===this.VDOM_SCOPE.GLOBAL}isGlobalScopeAdmin(){return"global"===this.admin.profile.scope}isMultiVDOMAdmin(){return this.isGlobalScopeAdmin()||this.getVDOMs().length>1}getOperatingVDOM(){return this.current_vdom?this.current_vdom:this.admin.vdom_info[this.management_vdom]?this.management_vdom:Object.keys(this.admin.vdom_info)[0]}getVDOMs(){return this.admin.vdoms.filter(function(vdom){return vdom!==this.GLOBAL_VDOM}.bind(this))}getOperationMode(){var result=this.OPERATION_MODE.NAT,vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].transparent_mode&&(result=this.OPERATION_MODE.TRANSPARENT),result}isNgfwPolicyMode(){var vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].ngfw_mode===this.NGFW_MODE.POLICY_BASED}getVdomSslSshProfile(){var vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].default_ssl_ssh_profile}hasVdomWithNgfwPolicyMode(){return Object.keys(this.admin.vdom_info).some(function(key){return"ngfw"===this.admin.vdom_info[key].policy_mode}.bind(this))}centralNatEnabled(options){var vdom=this.getOperatingVDOM();return(options=options||{}).skipNgfwCheck?this.admin.vdom_info[vdom].central_nat_enabled:this.admin.vdom_info[vdom].central_nat_enabled||this.admin.vdom_info[vdom].ngfw_mode===this.NGFW_MODE.POLICY_BASED}featureEnabled(name,value){var vdom=value||this.getOperatingVDOM();return this.admin.vdom_info[vdom].features[name]||this.features[name]||!1}featureEnabledInAnyVDOM(name){return Object.keys(this.admin.vdom_info).some(function(key){return this.admin.vdom_info[key].features[name]}.bind(this))||this.features[name]||!1}_getPermission(accessGroup){var permission,split,group,granular;return accessGroup.indexOf("#")>=0?(group=(split=accessGroup.split("#"))[0],granular=split[1],permission="custom"===this.admin.profile[group]?this.admin.profile[`${group}-permission`][granular]:this.admin.profile[group]):permission=this.admin.profile[accessGroup],permission}_getTablePermissionValue(path,name,key){var config,permission=!1;return name&&(path=`${path}.${name}`),(config=this._objectUrls.by_path[path])&&null!=config[key]&&(permission=config[key]),permission}adminHasReadPermission(accessGroup){var permission=this._getPermission(accessGroup);return permission?0===permission.indexOf("read"):null}adminHasReadPermissionForTable(path,name){return this._getTablePermissionValue(path,name,"read_access")}adminHasWritePermission(accessGroup,ignoreReadOnly){return"read-write"===this._getPermission(accessGroup)&&(ignoreReadOnly||!this.readOnlyAdmin())}adminHasWritePermissionForTable(path,name,ignoreReadOnly){return this._getTablePermissionValue(path,name,"write_access")&&(ignoreReadOnly||!this.readOnlyAdmin())}getFortiGateTimeUTC(){return(new Date).getTime()-this.browser_utc_offset}getFortiGateLocalTime(){var MIN_TO_MS=fDateTime.MIN_TO_S*fDateTime.S_TO_MS;return this.getFortiGateTimeUTC()-this.getBrowserTZOffsetFromFortiGate()*MIN_TO_MS}fortiGateUTCToBrowserUTC(timestamp){return 1e3*timestamp+this.browser_utc_offset}getBrowserTZOffsetFromFortiGate(){return this.time_zone_offset-this.browser_time_zone_offset}isLogDeviceEnabled(device){var vdom=this.getOperatingVDOM(),vdomInfo=this.admin.vdom_info[vdom];return!!(vdomInfo&&vdomInfo.log_device_state&&vdomInfo.log_device_state[device]&&vdomInfo.log_device_state[device].is_enabled&&!1!==vdomInfo.log_device_state[device].is_loggable)}getVdomLogDeviceDefault(vdom){const vdomInfo=this.admin.vdom_info[vdom],defaultDevice=vdomInfo&&vdomInfo.log_device_default,enabledDevices=this.getEnabledLogDevices();return defaultDevice&&enabledDevices.includes(defaultDevice)?defaultDevice:enabledDevices[0]}getLogDeviceDefault(){const vdom=this.getOperatingVDOM();return this.getVdomLogDeviceDefault(vdom)}getPreferredLogDevice(){const preferredDevice=sessionStorage.getItem(PREFERRED_LOG_DEVICE_KEY);return preferredDevice&&this.getEnabledLogDevices().includes(preferredDevice)?preferredDevice:this.getLogDeviceDefault()}setPreferredLogDevice(device){device&&sessionStorage.setItem(PREFERRED_LOG_DEVICE_KEY,device)}getFirmwareLabel($INJECTABLE$,$filter){const buildNumberFilter=$filter("buildNumber");return params=>{params=params||{};var label=`${this.version} build${buildNumberFilter(this.build)}`;return params.withBuildLabel&&(label+=` (${this.getBuildInformation().PLATFORM.CONFIG_BUILD_LABEL})`),label}}inSplitTaskManagementVdom(specificVdom){const vdom=specificVdom||this.current_vdom;return this.vdom_mode===this.VDOM_MODE.SPLIT&&this.management_vdom===vdom}isVdomModeDisabled(){return this.vdom_mode===this.VDOM_MODE.NONE}inSplitTaskVdomMode(){return this.vdom_mode===this.VDOM_MODE.SPLIT}inMultiVdomMode(){return this.vdom_mode===this.VDOM_MODE.MULTI}isReleaseBuild(){return"GA"===this.getBuildInformation().PLATFORM.CONFIG_BUILD_LABEL}isCoverageBuild(){return BUILD.CONFIG.CONFIG_CODE_COVERAGE}isInterimBuild(){return!this.isReleaseBuild()&&!this.isBetaBuild()}isBetaBuild(){const buildLabel=this.getBuildInformation().PLATFORM.CONFIG_BUILD_LABEL;return BETA_PATTERNS.some(pattern=>pattern.test(buildLabel))}getFortiViewTimeframeOptions(forticloudPaid){var timeframeOptions=[this.FORTIVIEW_TIME_PERIODS.REALTIME],fazEnabled=this.getLogDeviceDefault()===this.LOG_DEVICES.FORTIANALYZER,forticloudEnabled=this.getLogDeviceDefault()===this.LOG_DEVICES.FORTICLOUD;return this.isHistoricalFortiViewSupported()&&(timeframeOptions=timeframeOptions.concat([this.FORTIVIEW_TIME_PERIODS.FIVE_MIN,this.FORTIVIEW_TIME_PERIODS.ONE_HOUR])),(this.isHistoricalFortiViewSupported()&&"low"!==this.model_level||fazEnabled||forticloudEnabled)&&timeframeOptions.push(this.FORTIVIEW_TIME_PERIODS.ONE_DAY),(fazEnabled||forticloudEnabled&&forticloudPaid||this.fortiview_weekly_data)&&timeframeOptions.push(this.FORTIVIEW_TIME_PERIODS.ONE_WEEK),timeframeOptions}get readOnlyForPage(){return ROOT_STATE._readOnlyForPage}set readOnlyForPage(newReadOnlyForPage){ROOT_STATE._readOnlyForPage=newReadOnlyForPage}get csfObjectsSyncedFromRoot(){return this.csf_enabled&&this.csf_upstream_ip!==EMPTY_IP&&"default"===this.csf_sync_mode}_isThisFortiGate(){return this.serial===THIS_FORTIGATE_SERIAL}areTablesSynced($INJECTABLE$,$http){return async tables=>{const res=await $http.get(CSF_URI);for(const ftgt of res.data.results.fgts)if(this.serial!==ftgt.serial&&ftgt.global_tables&&ftgt.object_unification&&ftgt.is_discovered&&tables.some(table=>!ftgt.global_tables[table]))return!1;return!0}}buildOutofSyncTables($INJECTABLE$,$http){return async()=>{const res=await $http.get(CSF_URI),result={fortigates:[],tables:[]};return res.data.results.fgts.forEach(ftgt=>{this.serial!==ftgt.serial&&ftgt.global_tables&&ftgt.object_unification&&ftgt.is_discovered&&!Object.values(ftgt.global_tables).every(synced=>synced)&&(result.fortigates.push(ftgt),result.tables[ftgt.serial]=Object.keys(ftgt.global_tables).filter(table=>!ftgt.global_tables[table]))}),result}}}return GuiFosState.prototype.UPDATE_EVENT="refreshState",GuiFosState.prototype.LOADED_EVENT="stateLoaded",GuiFosState}),module.factory("state",function(State){return ROOT_STATE=new State(earlyState)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},472:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(88)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module){module.factory("volatileStorage",function($cookies,$window){var have_sessionStorage="sessionStorage"in $window&&null!==$window.sessionStorage;return{get:function(key){var value;return(value=have_sessionStorage?sessionStorage.getItem(key):$cookies.get("__session_"+key))?angular.fromJson(value):value},put:function(key,value){if(value=angular.toJson(value),have_sessionStorage)try{return void sessionStorage.setItem(key,value)}catch(ex){have_sessionStorage=!1}$cookies.put("__session_"+key,value)},remove:function(key){have_sessionStorage?sessionStorage.removeItem(key):$cookies.remove("__session_"+key)},clear:function(){if(have_sessionStorage)sessionStorage.clear();else{var cookies=$cookies.getAll();Object.keys(cookies).forEach(function(key){key.startsWith("__session_")&&$cookies.remove(key)})}}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},473:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject)=>{const REPORT_LOAD_URI="/api/v2/monitor/system/security-rating",TRIGGER_URI="/api/v2/monitor/system/security-rating/trigger",STATUS_URI="/api/v2/monitor/system/security-rating/status",REPORT_POLLING_RATE=3e3,MINIMUM_NUMBER_OF_POLLS=3;module.service("reportRunner",class extends inject.Collectable{constructor(){super()}stop($INJECTABLE$,$timeout){return()=>{this.pollTimeout&&$timeout.cancel(this.pollTimeout)}}_waitForResult($INJECTABLE$,$q,$http,$timeout){return(id,reportType,returnLoadStats)=>$q(resolve=>{let pollCount=0,receivedSomeResults=!1;const poll=async()=>{const results=(await $http.get(STATUS_URI,{params:{id:id,report_type:reportType,progress:!!returnLoadStats}})).data.results;results.runtime_stats&&(receivedSomeResults=!0,"function"==typeof returnLoadStats&&returnLoadStats(results.runtime_stats)),(receivedSomeResults||pollCount>=MINIMUM_NUMBER_OF_POLLS)&&!results.is_running?resolve():(pollCount++,this.pollTimeout=$timeout(poll,REPORT_POLLING_RATE))};poll()})}loadReport($INJECTABLE$,$http){return async(id,reportType="SecurityReport",reportParams)=>{const params=Object.assign({report_type:reportType},reportParams);return id&&(params.id=id),(await $http.get(REPORT_LOAD_URI,{params:params})).data}}loadLatestResults($INJECTABLE$,$q,lang){return async(reportType,params,statsCallback)=>{if(this._onGoingPromise)return this._onGoingPromise;try{return this._onGoingPromise=this.loadReport(null,reportType),await this._onGoingPromise}catch(e){return 404===e.status?this.runAndWait(reportType,params,statsCallback):$q.reject(lang(`Failed to load ${reportType}`).toString())}finally{this._onGoingPromise=null}}}runAndWait($INJECTABLE$,$http,$q){return async(reportType,params={},statsCallback)=>{const id=(await $http.post(TRIGGER_URI,Object.assign({report_type:reportType},params))).data.results.report_id;await this._waitForResult(id,reportType,statsCallback);try{const report=await this.loadReport(id,reportType);return"function"==typeof statsCallback&&statsCallback(report.statistics),report}catch(e){return $q.reject(e)}}}runAndWaitMultiple($INJECTABLE$,$http,$q){return async(reportTypes,params={},statsCallbacks)=>{const id=(await $http.post(TRIGGER_URI,Object.assign({report_types:reportTypes},params))).data.results.report_id;await $q.all(reportTypes.map((type,i)=>this._waitForResult(id,type,statsCallbacks[i])));try{return $q.all(reportTypes.map(async(type,i)=>{const report=await this.loadReport(id,type);return"function"==typeof statsCallbacks[i]&&statsCallbacks[i](report.statistics),report}))}catch(e){return $q.reject(e)}}}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},479:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;const{FortiGate:FortiGate}=__webpack_require__(113);__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,BUILD,fLog){function NotificationRequests(injector,vdomState,$rootScope,state){injector.injectMarked(this),this._permanentlyCached=new Map,this._cache=new Map,$rootScope.$on(vdomState.VDOM_CHANGE_EVENT,function(){const fortigateCache=this._cache.get(state.serial);fortigateCache&&fortigateCache.logDeviceStatus&&this.logDeviceStatus({forceReload:!0}).then(function(){fortigateCache.fortianalyzerStatus&&this.fortianalyzerStatus({forceReload:!0})}.bind(this))}.bind(this))}NotificationRequests.prototype._getUpdatingEvent=inject.mark(function(state){return function(cacheKey,fortigate){return`notificationRequestUpdated::${fortigate&&fortigate instanceof FortiGate?fortigate.serial:state.serial}::${cacheKey}`}}),NotificationRequests.prototype._resetCacheForFortigate=inject.mark(function(state){return function(fortigate){const fgtSerial=fortigate&&fortigate instanceof FortiGate?fortigate.serial:state.serial,fortigateCache=this._cache.get(fgtSerial);fortigateCache&&Object.keys(fortigateCache).forEach(key=>{this._permanentlyCached.has(fortigate)&&this._permanentlyCached.get(fortigate).has(key)||delete fortigateCache[key]})}}),NotificationRequests.prototype._createCachedRequest=inject.mark(function($rootScope,state){return function({id:id,fn:fn,forceReload:forceReload,fortigate:fortigate}){let fgtSerial;fgtSerial=fortigate&&fortigate instanceof FortiGate?fortigate.serial:state.serial,this._cache.has(fgtSerial)||this._cache.set(fgtSerial,{id:null});const fortigateRequestCache=this._cache.get(fgtSerial);let cached=fortigateRequestCache[id];return cached&&!forceReload||(cached=fortigateRequestCache[id]=fn(),$rootScope.$broadcast(this._getUpdatingEvent(id,fortigate))),cached}}),NotificationRequests.prototype._setPermanentlyCachedForFortigate=function(id,fortigate){this._permanentlyCached.has(fortigate)||this._permanentlyCached.set(fortigate,new Set),this._permanentlyCached.get(fortigate).add(id)},NotificationRequests.prototype.watch=function({scope:scope,requestType:requestType,callback:callback,immediate:immediate=!1,fortigate:fortigate}={}){if(!scope)throw new Error("Required parameter scope not defined");if(!requestType)throw new Error("Required parameter requestType not defined");if("function"!=typeof callback)throw new Error("Required parameter callback not defined");var run=function(){if("function"!=typeof this[requestType])throw new Error('Invalid request type "'+requestType+'"');this[requestType]({fortigate:fortigate}).then(function(result){callback(result)})}.bind(this);return immediate&&run(),scope.$on(this._getUpdatingEvent(requestType,fortigate),run)},NotificationRequests.prototype.watchMultiple=inject.mark(function($q,state){return function({scope:scope,requestTypes:requestTypes,callback:callback,immediate:immediate=!1,fortigate:fortigate}={}){if(!scope)throw new Error("Required parameter scope not defined");if(!Array.isArray(requestTypes)||!requestTypes.length)throw"Required parameter requestTypes not defined";if("function"!=typeof callback)throw"Required parameter callback not defined";const areAllCachedForFortigate=_fortigate=>{const fgtSerial=_fortigate&&_fortigate.serial||state.serial,fortigateCache=this._cache.get(fgtSerial);return!!fortigateCache&&requestTypes.every(function(requestType){return fortigateCache[requestType]})},run=()=>{const promises=requestTypes.reduce((prev,requestType)=>{if("function"!=typeof this[requestType])throw new Error('Invalid request type "'+requestType+'"');return prev[requestType]=this[requestType]({fortigate:fortigate}),prev},{});return $q.all(promises).then(function(results){callback(results)})},initializeListeners=()=>requestTypes.map(requestType=>{const updatingEvent=this._getUpdatingEvent(requestType,fortigate);return scope.$on(updatingEvent,()=>{areAllCachedForFortigate(fortigate)&&run()})});return immediate?run().then(initializeListeners):initializeListeners()}}),NotificationRequests.prototype.baseNotifications=inject.mark(function($http){return function(){return this._createCachedRequest({id:"baseNotifications",fn:()=>$http.get("/api/v2/monitor/web-ui/notification").then(function(response){return response.data.results})})}}),NotificationRequests.prototype._triggerFortiGuardUpdate=inject.mark(function($http){return function(){this._fortiguardUpdateRequested||$http.post("/api/v2/monitor/system/fortiguard/update").catch(function(){fLog.error("Failed to query FortiGuard for license update.")}),this._fortiguardUpdateRequested=!0}}),NotificationRequests.prototype._aggregateFortiTokens=function(response){var result={used:0,max:0,vdoms:[]};return response.forEach(function(vdomResponse){var used=0,max=0,tokens=vdomResponse.results;Object.keys(tokens).forEach(function(key){var token=tokens[key];"mobile"===token.type&&(token.status&&"activated"===token.status.name&&(result.used++,used++),result.max++,max++)}),result.vdoms.push({name:vdomResponse.vdom,used:used,max:max})}),result},NotificationRequests.prototype.license=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"license",fn:()=>{var SYMBOLS=BUILD.SYMBOLS,TRIGGER_UPDATE_STATUSES=new Set([SYMBOLS.LICENSE_STATUS_PENDING,SYMBOLS.LICENSE_STATUS_VM_PENDING,SYMBOLS.LICENSE_STATUS_UNAVAILABLE]),CORE_LICENSES=["vm","antivirus","appctrl","ips"];const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/license/status");return $http.get(url).then(response=>{var licenses=response.data.results;return CORE_LICENSES.some(key=>{var license=licenses[key];return!!(this._isCurrentFortigate(fortigate)&&license&&TRIGGER_UPDATE_STATUSES.has(license.status))&&(this._triggerFortiGuardUpdate(),!0)}),licenses})},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.fortitoken=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"fortitoken",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/user/fortitoken");return $http.get(url,{params:{vdom:"*"}}).then(response=>{var fortitokensResponse=response.data;return this._aggregateFortiTokens(fortitokensResponse)})},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.fazLicense=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"fazLicense",fn:async()=>{const{is_enabled:enabled}=await this.fortianalyzerStatus({forceReload:forceReload,fortigate:fortigate});let licenses={};if(enabled){const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/license/fortianalyzer-status");licenses=await $http.get(url).then(response=>response.data.results)}return licenses},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.sandboxStatus=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"sandboxStatus",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/system/sandbox/status");return $http.get(url).then(function(response){return response.data.results})},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.logDeviceStatus=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"logDevicesStatus",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/log/device/state");return $http.get(url).then(function(response){return response.data.results})},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.fortianalyzerStatus=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"fortianalyzerStatus",fn:()=>this.logDeviceStatus({forceReload:forceReload,fortigate:fortigate}).then(logStatus=>{var faz=logStatus.fortianalyzer,result={is_enabled:faz.is_enabled,ip:faz.ip,overrides_global_faz:faz.overrides_global_faz};if(result.is_enabled){const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/log/fortianalyzer");return $http.get(url).then(function(response){return Object.assign(result,response.data.results)})}return result}),forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.fortianalyzerCmdb=inject.mark(function($http){return function({forceReload:forceReload=!1,fortigate:fortigate}={}){return this._createCachedRequest({id:"fortianalyzerCmdb",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/cmdb/log.fortianalyzer/setting");return $http.get(url).then(res=>res.data.results)},forceReload:forceReload,fortigate:fortigate})}}),NotificationRequests.prototype.haSyncStatus=inject.mark(function($http){return function({fortigate:fortigate}={}){return this._createCachedRequest({id:"haSyncStatus",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/system/ha-checksums");return $http.get(url).then(result=>{let haChecksums=result.data.results,masterChecksum=haChecksums&&haChecksums[0].checksum.all;return haChecksums.every(element=>element.checksum.all===masterChecksum)})},fortigate:fortigate})}}),NotificationRequests.prototype.sensorInfo=inject.mark(function($http){return function({fortigate:fortigate}={}){return this._createCachedRequest({id:"sensorInfo",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/system/sensor-info");return $http.get(url).then(function(response){return response.data.results})},fortigate:fortigate})}}),NotificationRequests.prototype.lldpNeighbors=inject.mark(function($http){return function({fortigate:fortigate}={}){return this._createCachedRequest({id:"lldpNeighbors",fn:()=>{const url=this._createCSFURIFor(fortigate,"/api/v2/monitor/network/lldp/neighbors");return $http.get(url).then(function(response){return response.data.results.filter(function(neighbor){const isFortiGate=neighbor.system_desc.startsWith("FortiGate"),isFortiWifi=neighbor.system_desc.startsWith("FortiWiFi");return(isFortiGate||isFortiWifi)&&neighbor.addresses&&neighbor.addresses.length})})},fortigate:fortigate})}}),NotificationRequests.prototype._createCSFURIFor=function(fortigate,uri){return fortigate&&fortigate instanceof FortiGate?fortigate.createCSFURI(uri):uri},NotificationRequests.prototype._isCurrentFortigate=function(fortigate){return!fortigate||fortigate instanceof FortiGate&&fortigate.isCurrent},module.service("notificationRequests",NotificationRequests)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},480:function(module,exports){var path="/migadmin/ng/structure/components/f-admin-timeout-prompt.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true">\n    <div>\n        <div class="warning-message">\n            <f-icon class="fa-exclamation-triangle"></f-icon>\n            <div class="message-content">\n                <b>{{::\'session_expires_soon_heading\' | lang}}</b>\n                {{::\'session_expires_soon_message\' | lang}}\n                <div ng-bind-html="\'session_expires_soon_count\' | lang: [$ctrl.secondsRemaining]"></div>\n            </div>\n        </div>\n    </div>\n    <dialog-footer>\n        <button class="primary" type="button" ng-click="$ctrl.extendSession()">\n            <span>{{:: \'Extend Session\' | lang}}</span>\n        </button>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},481:function(module,exports){var path="/migadmin/ng/structure/components/f-header-admin-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="info-text">\n    {{::$ctrl.state.model_name}} {{::$ctrl.state.model_number}}\n</div>\n<div class="info-text">\n    {{::$ctrl.state.getFirmwareLabel({withBuildLabel: true})}}\n</div>\n\n<div class="separator"></div>\n\n<div ng-if="$ctrl.powerControlsVisible">\n    <div f-menu-item-submenu="$ctrl.systemPopUpMenu">\n        <f-icon class="fa-cog"></f-icon>\n        <span>{{::\'system\' | lang}}</span>\n    </div>\n    <div f-pop-up-menu="$ctrl.systemPopUpMenu">\n        <div f-menu-item-button click="$ctrl.powerDevice(\'reboot\')">\n            <f-icon class="fa-repeat"></f-icon>\n            <span>{{::\'Reboot\' | lang}}</span>\n        </div>\n        <div f-menu-item-button click="$ctrl.powerDevice(\'shutdown\')">\n            <f-icon class="ftnt-shutdown"></f-icon>\n            <span>{{::\'Shutdown\' | lang}}</span>\n        </div>\n    </div>\n</div>\n\n<div ng-if="::$ctrl.configurationControlsVisible">\n    <div f-menu-item-submenu="$ctrl.configurationPopUpMenu">\n        <f-icon class="fa-file-o"></f-icon>\n        <span>{{::\'Configuration\' | lang}}</span>\n    </div>\n    <div f-pop-up-menu="$ctrl.configurationPopUpMenu">\n        <div f-menu-item-button click="$ctrl.backupConfiguration()">\n            <f-icon class="fa-file-o"></f-icon>\n            <span>{{::\'backup\' | lang}}</span>\n        </div>\n        <div ng-if="::$ctrl.configurationRestoreVisible"\n            f-menu-item-button click="$ctrl.restoreConfiguration()">\n            <f-icon class="fa-undo"></f-icon>\n            <span>{{::\'Restore\' | lang}}</span>\n        </div>\n        <div f-menu-item-button click="$ctrl.configurationRevisions()"\n             ng-if="::$ctrl.configurationRevisionsVisible">\n            <f-icon class="fa-list"></f-icon>\n            <span>{{::\'Revisions\' | lang}}</span>\n        </div>\n        <div class="separator" ng-if="::$ctrl.configurationScriptsVisible"></div>\n        <div f-menu-item-button click="$ctrl.scriptConfiguration()"\n             ng-if="::$ctrl.configurationScriptsVisible">\n            <f-icon class="fa-upload"></f-icon>\n            <span>{{::\'Scripts\' | lang}}</span>\n        </div>\n    </div>\n</div>\n\n<div class="separator" ng-if="::$ctrl.powerControlsVisible || $ctrl.configurationControlsVisible">\n</div>\n\n<div f-menu-item-button click="$ctrl.changePassword()"\n    ng-if="::!$ctrl.state.admin.pki_admin && !$ctrl.state.admin.remote_admin && !$ctrl.state.admin.sso_sp_admin">\n    <f-icon class="fa-lock"></f-icon>\n    <span>{{::\'change_passwd\' | lang}}</span>\n</div>\n<div f-menu-item-button click="$ctrl.changePassword()"\n    ng-if="::$ctrl.state.admin.remote_admin && !$ctrl.state.admin.remote_wildcard_admin">\n    <f-icon class="fa-lock"></f-icon>\n    <span>{{::\'Change Backup Password\' | lang}}</span>\n</div>\n<div f-menu-item-button click="$ctrl.logout()">\n    <f-icon class="fa-sign-out"></f-icon>\n    <span>{{::\'Logout\' | lang}}</span>\n</div>\n')}]),module.exports=path},482:function(module,exports){var path="/migadmin/ng/structure/components/f-header-central-management.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<button type="button" class="bare" f-tip-target\n    ng-if="$ctrl.isVisible()"\n    f-pop-up-menu-toggle="$ctrl.FortiManagerPopUpMenu">\n    <f-icon ng-class="{\'ftnt-cmgmt-ro-o\': $ctrl.readOnlyAdmin, \'ftnt-cmgmt-rw-o\': !$ctrl.readOnlyAdmin}"\n        ng-if="$ctrl.isCentrallyManaged">\n    </f-icon>\n    <f-icon class="ftnt-fmg-backup-mode"\n        ng-if="$ctrl.isBackupMode">\n    </f-icon>\n    <span ng-if="$ctrl.availableFortiManagerObjects && $ctrl.hasFirewallRead" class="number-bubble severity-low">\n        {{$ctrl.availableFortiManagerObjects}}\n    </span>\n    <span f-tip display-options="::delayedTooltip">{{::\'Central Management\' | lang}}</span>\n</button>\n<div f-pop-up-menu="$ctrl.FortiManagerPopUpMenu"\n     ng-if="$ctrl.isVisible()">\n    <div class="heading">\n        <span ng-if="$ctrl.isCentrallyManaged">\n            {{::\'Managed by FortiManager\' | lang}}\n        </span>\n        <span ng-if="$ctrl.isBackupMode">\n            {{::\'Configuration backup mode\' | lang}}\n        </span>\n    </div>\n    <div class="info-key-value">\n        <div>\n            <span>{{::\'fmg\' | lang}}</span>\n            <span>{{$ctrl.fortimanagerIP}}</span>\n        </div>\n        <div ng-if="$ctrl.isCentrallyManaged">\n            <span>{{::\'Login Mode\' | lang}}</span>\n            <span ng-if="$ctrl.readOnlyAdmin">\n                {{::\'Read-only\' | lang}}\n            </span>\n            <span ng-if="!$ctrl.readOnlyAdmin">\n                {{::\'Read-write\' | lang}}\n            </span>\n        </div>\n    </div>\n    <div ng-if="$ctrl.availableFortiManagerObjects && $ctrl.hasFirewallRead">\n        <div class="heading">\n            <span>\n                {{::\'FortiManager Objects\' | lang}}\n            </span>\n        </div>\n        <div class="info-key-value">\n            <div>\n                <span>{{::\'new\' | lang}}</span>\n                <span>{{$ctrl.numNew}}</span>\n            </div>\n            <div>\n                <span>{{::\'Conflicting\' | lang}}</span>\n                <span>{{$ctrl.numConflicting}}</span>\n            </div>\n            <div>\n                <span>{{::\'Local Only\' | lang}}</span>\n                <span>{{$ctrl.numOutOfSync}}</span>\n            </div>\n        </div>\n        <div f-menu-item-button class="primary"\n             click="$ctrl.viewBackupObjects()"\n             enabled="!$ctrl.slideOpen">\n            <f-icon class="ftnt-view"></f-icon>\n            {{::\'view_detail\' | lang}}\n        </div>\n    </div>\n    <div ng-if="$ctrl.canChangeLogin">\n        <div class="separator"></div>\n        <div f-menu-item-button click="$ctrl.centrallyManagedPrompt()">\n            <f-icon class="fa-sign-in"></f-icon>\n            {{::\'Change Login Mode\' | lang}}\n        </div>\n    </div>\n</div>')}]),module.exports=path},483:function(module,exports){var path="/migadmin/ng/structure/components/f-header-release-info.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<button type="button" class="bare" f-pop-up-menu-toggle="$ctrl.releaseInfoPopUpMenu"\n    ng-if="!$ctrl.structure.hideBuildLabel && !$ctrl.isGA && !$ctrl.fortigateDebugger.capturing">\n    <span>\n        {{::$ctrl.releaseLabel}}\n    <span ng-if="$ctrl.state.isInterimBuild()">\n        {{::\'build\'}}{{::$ctrl.buildNumber | buildNumber}}\n    </span>\n    </span>\n</button>\n<button type="button" class="error" f-tip-target ng-if="$ctrl.fortigateDebugger.capturing"\n    ng-click="$ctrl.stopDebugCapture()">\n    <f-icon class="fa-stop-circle-o"></f-icon>\n    <span>\n        {{$ctrl.captureTimestamp}}\n    </span>\n    <div f-tip>\n        {{::\'Click to stop debug capture\' | lang}}\n    </div>\n</button>\n<div f-pop-up-menu="$ctrl.releaseInfoPopUpMenu">\n    <div ng-if="::$ctrl.state.isCoverageBuild()">\n        <div f-menu-item-button click="$ctrl.downloadCoverage()">\n            <f-icon class="fa-download"></f-icon>\n            <span>Download Code Coverage</span>\n        </div>\n        <div f-menu-item-button click="$ctrl.resetCoverage()">\n            <f-icon class="ftnt-purge"></f-icon>\n            <span>Reset Code Coverage</span>\n        </div>\n        <div class="separator"></div>\n    </div>\n    <div ng-if="::$ctrl.state.isBetaBuild()">\n        <div class="menu-item">\n            <a class="button-style"\n               f-fortiguard-link="BETA_ANNOUNCEMENTS">\n               <f-icon class="fa-exclamation-triangle"></f-icon>\n               <span>{{::\'FortiOS Beta Announcements\' | lang}}</span>\n            </a>\n        </div>\n        <div class="menu-item">\n            <a class="button-style"\n               f-fortiguard-link="BETA_FEEDBACK">\n               <f-icon class="fa-comments-o"></f-icon>\n               <span>{{::\'Provide Feedback\' | lang}}</span>\n            </a>\n        </div>\n        <div class="menu-item">\n            <a class="button-style"\n               f-fortiguard-link="BETA_DOCUMENTATION">\n               <f-icon class="fa-external-link"></f-icon>\n               <span>{{::\'Firmware & Documentation\' | lang}}</span>\n            </a>\n        </div>\n        <div class="separator"></div>\n    </div>\n    <div ng-if="::$ctrl.state.isInterimBuild()">\n        <div f-menu-item-button ng-click="$ctrl.hideBuildLabel()">\n            <f-icon class="fa-eye-slash"></f-icon>\n            {{::\'Hide Label\' | lang}}\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},484:function(module,exports){var path="/migadmin/ng/structure/partials/f-disconnection-notice.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt unbounded masking" ng-if="$ctrl.connection.disconnected">\n    <div class="content">\n        <h1>\n            {{\'Lost Connection to {0} - {1}\' | lang: [\n                $ctrl.state.model_name,\n                $ctrl.formatDuration($ctrl.connection.disconnectedDuration)\n            ]}}\n        </h1>\n\n        <div class="message">\n            <f-icon class="fa-loading icon-xl"></f-icon>\n            <div class="message-content">\n                {{::\'Attempting to reconnect\'}}\n            </div>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},485:function(module,exports){var path="/migadmin/ng/structure/partials/f-embedded-iframe.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<iframe name="embedded-iframe" ng-class="{\'loading\': embeddedIframe.loading}"></iframe>\n<div class="loading-placeholder" ng-show="embeddedIframe.loading">\n    <f-icon class="fa-loading icon-xxxl"></f-icon>\n</div>\n')}]),module.exports=path},486:function(module,exports){var path="/migadmin/ng/structure/directives/f-firmware-upgrade.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt unbounded masking" ng-if="$ctrl.firmwareUpgrade.running">\n    <div class="content">\n        <h1>\n            <span ng-if="!$ctrl.firmwareUpgrade.image.olderThanCurrent">\n                {{::\'Upgrading to {0}\' | lang:[$ctrl.firmwareUpgrade.image.getLabel()]}}\n            </span>\n            <span ng-if="$ctrl.firmwareUpgrade.image.olderThanCurrent">\n                {{::\'Downgrading to {0}\' | lang:[$ctrl.firmwareUpgrade.image.getLabel()]}}\n            </span>\n        </h1>\n\n        <div ng-if="$ctrl.firmwareUpgrade.currentStep === $ctrl.firmwareUpgrade.STEPS.CONFIRM">\n            <div class="warning-message">\n                <f-icon class="fa-warning icon-lg"></f-icon>\n                <div class="message-content">\n                    <span ng-if="!$ctrl.firmwareUpgrade.image.olderThanCurrent">\n                        {{::\'confirm_image_upgrade\' | lang}}\n                    </span>\n                    <span ng-if="$ctrl.firmwareUpgrade.image.olderThanCurrent">\n                        {{::\'confirm_image_downgrade\' | lang}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div ng-if="$ctrl.firmwareUpgrade.currentStep === $ctrl.firmwareUpgrade.STEPS.CONFIRM_INVALID_SIGNATURE">\n            <div class="warning-message">\n                <f-icon class="fa-warning icon-lg"></f-icon>\n                <div class="message-content">\n                    <span>\n                        {{::\'confirm_image_upgrade_invalid_signature\' | lang}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div ng-if="$ctrl.firmwareUpgrade.currentStep === $ctrl.firmwareUpgrade.STEPS.BACKUP_CONFIG">\n            <div class="message">\n                <f-icon class="fa-loading icon-lg"></f-icon>\n                <div class="message-content">\n                    {{::\'Backing up your current configuration\' | lang}}\n                </div>\n            </div>\n        </div>\n        <div ng-if="[$ctrl.firmwareUpgrade.STEPS.RUN_UPGRADE, $ctrl.firmwareUpgrade.STEPS.RUN_UPGRADE_INVALID_SIGNATURE].includes($ctrl.firmwareUpgrade.currentStep) &&\n            !$ctrl.firmwareUpgrade.uploadComplete">\n            <div class="message">\n                <f-icon class="fa-loading icon-lg"></f-icon>\n                <div class="message-content">\n                    <div>{{::\'Uploading image\' | lang}}</div>\n                </div>\n            </div>\n            <div f-progress-bar="$ctrl.firmwareUpgrade.uploadPercentage" show-percentage="::true" class="fast-update">\n            </div>\n        </div>\n        <div ng-if="[$ctrl.firmwareUpgrade.STEPS.RUN_UPGRADE, $ctrl.firmwareUpgrade.STEPS.RUN_UPGRADE_INVALID_SIGNATURE].includes($ctrl.firmwareUpgrade.currentStep) &&\n            $ctrl.firmwareUpgrade.uploadComplete">\n            <div class="message">\n                <f-icon class="fa-loading icon-lg"></f-icon>\n                <div class="message-content" ng-if="$ctrl.firmwareUpgrade.image.source === \'fortiguard\'">\n                    {{::\'Downloading and installing image\' | lang}}\n                </div>\n                <div class="message-content" ng-if="$ctrl.firmwareUpgrade.image.source === \'upload\'">\n                    {{::\'Validating and installing image\' | lang}}\n                </div>\n                <div class="message-content" ng-if="$ctrl.firmwareUpgrade.image.source === \'usb\'">\n                    {{::\'Transferring image from USB and installing\' | lang}}\n                </div>\n            </div>\n        </div>\n\n        <div class="button-actions" ng-if="[$ctrl.firmwareUpgrade.STEPS.CONFIRM, $ctrl.firmwareUpgrade.STEPS.CONFIRM_INVALID_SIGNATURE].includes($ctrl.firmwareUpgrade.currentStep)">\n            <button type="button" ng-click="$ctrl.firmwareUpgrade.nextStep()">\n                {{::\'Continue\' | lang}}\n            </button>\n            <button type="button" ng-click="$ctrl.firmwareUpgrade.cancel()">\n                {{::\'Cancel\' | lang}}\n            </button>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},487:function(module,exports){var path="/migadmin/ng/structure/partials/f-shortcuts-help.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="prompt unbounded masking" ng-show="shortcutsHelp.shortcuts.showHelp">\n    <div class="content">\n        <h1>{{::\'Keyboard Shortcuts Help\' | lang}}</h1>\n\n        <div class="shortcuts-help" f-with="shortcutsHelp.bindings.view.length as viewDefined">\n            <div>\n                <h2 ng-show="viewDefined">{{::\'general\' | lang}}</h2>\n                <table class="table bordered">\n                    <thead>\n                        <tr>\n                            <th>Shortcut</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-repeat="binding in shortcutsHelp.bindings.global">\n                            <td>\n                                <span ng-repeat="label in ::binding.labels">\n                                    {{::label}}\n                                    <span class="or" ng-hide="::$last">\n                                        {{::\'or\' | lang}}\n                                    </span>\n                                </span>\n                            </td>\n                            <td>{{::binding.help | lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div ng-show="viewDefined">\n                <h2>{{::\'Current Page\' | lang}}</h2>\n                <table class="table bordered">\n                    <thead>\n                        <tr>\n                            <th>Shortcut</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-repeat="binding in shortcutsHelp.bindings.view">\n                            <td>\n                                <span ng-repeat="label in ::binding.labels">\n                                    {{::label}}\n                                    <span class="or" ng-hide="::$last">\n                                        {{::\'or\' | lang}}\n                                    </span>\n                                </span>\n                            </td>\n                            <td>{{::binding.help | lang}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n\n        <div class="button-actions">\n            <button type="button" ng-click="shortcutsHelp.shortcuts.showHelp = false">\n                {{::\'Close\' | lang}}\n            </button>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},488:function(module,exports){var path="/migadmin/ng/structure/partials/navbar.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="nav-container">\n    <div class="nav-contents">\n        <button type="button" class="primary nav-action" ng-if="navbarCtrl.structure.isFullscreen"\n            ng-click="navbarCtrl.exitFullscreenMode()">\n            <f-icon class="ftnt-full-screen"></f-icon>\n            <span>{{::\'Exit Full Screen Mode\' | lang}}</span>\n        </button>\n        <div ng-if="navbarCtrl.state.vdom_mode && navbarCtrl.state.admin.vdoms.length > 1"\n            ng-hide="navbarCtrl.loading" class="vdom-selection"\n            f-omniselect="navbarCtrl.VDOM_SELECTION_CONFIG" ng-model="navbarCtrl.vdom"\n            reload-on="navbarCtrl.state.LOADED_EVENT">\n        </div>\n        <div class="loading-container" ng-show="navbarCtrl.loading || navbarCtrl.navbar.loadingVdom">\n            <f-icon class="fa-loading icon-lg"></f-icon>\n        </div>\n\n        <ul class="root" ng-hide="navbarCtrl.navbar.loadingVdom">\n            <li class="no-matches" ng-if="navbarCtrl.navbar._searchValue && !navbarCtrl.navbar.tree.items.length">\n                {{::\'no_entries\' | lang}}\n            </li>\n            <li class="level-0" ng-if="navbarCtrl.favorites.list.length && !navbarCtrl.navbar._searchValue"\n                ng-class="{\'expanded-menu\': navbarCtrl.navbar.isExpanded(navbarCtrl.navbar.FAVORITE_MENU_NAME)}">\n                <div class="submenu">\n                    <div class="submenu-label" ng-click="navbarCtrl.navbar.entryClicked()">\n                        <f-icon class="fa-favorite menu-item-icon"></f-icon>\n                        <span>{{::\'favorites\' | lang }}</span>\n                        <span class="spacer"></span>\n                        <f-icon class="fa-angle-right" ng-class="{\n                                \'rotate-0\': !navbarCtrl.navbar.isExpanded(navbarCtrl.navbar.FAVORITE_MENU_NAME),\n                                \'rotate-90\': navbarCtrl.navbar.isExpanded(navbarCtrl.navbar.FAVORITE_MENU_NAME)\n                            }"></f-icon>\n                    </div>\n                    <ul ng-show="navbarCtrl.navbar.isExpanded(navbarCtrl.navbar.FAVORITE_MENU_NAME)"\n                        ui-sortable="navbarCtrl.favoriteSortingOptions" ng-model="navbarCtrl.favorites.list"\n                        f-vertical-collapse>\n                        <li class="level-1" ng-repeat="entry in navbarCtrl.favorites.list">\n                            <div f-navbar-menu-item="::entry" favorite-only reorderable-favorite></div>\n                        </li>\n                    </ul>\n                </div>\n            </li>\n            <li ng-repeat="entry in navbarCtrl.navbar.tree.items"\n                class="level-0"\n                ng-class="{\'expanded-menu\': navbarCtrl.navbar.isExpanded(entry.name),\n                    \'navbar-selected\': navbarCtrl.navbar.isSelected(entry)}">\n\n                <div f-navbar-menu-item="::entry"></div>\n\n                <div class="submenu" ng-if="::!entry.uri">\n                    <div class="submenu-label" ng-click="navbarCtrl.navbar.entryClicked(entry)">\n                        <f-icon class="menu-item-icon" ng-class="::entry.icon"></f-icon>\n                        <span>{{::entry.label}}</span>\n                        <span class="spacer"></span>\n                        <span class="number-bubble"\n                            f-notification-bubble navbar-entry="entry" f-tip-target>\n                        </span>\n                        <f-icon class="fa-angle-right" ng-class="{\n                                \'rotate-0\': !navbarCtrl.navbar.isExpanded(entry.name),\n                                \'rotate-90\': navbarCtrl.navbar.isExpanded(entry.name)\n                            }"></f-icon>\n                    </div>\n                    <f-navbar-menu menu="::entry" level="::1">\n                    </f-navbar-menu>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class="nav-toggle button-selected-highlight-twice very-slow"\n        ng-click="navbarCtrl.structure.showNavigation = !navbarCtrl.structure.showNavigation">\n        <f-icon class="nav-toggle-icon fa-angle-left"></f-icon>\n    </div>\n</div>\n')}]),module.exports=path},489:function(module,exports){var path="/migadmin/ng/structure/partials/navbar_menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<ul ng-show="navbarMenuCtrl.level > 1 || navbarMenuCtrl.navbar.isExpanded(navbarMenuCtrl.menu.outermostParent)"\n    f-vertical-collapse="::navbarMenuCtrl.level === 1" ng-class="{\'manual-hover\': navbarMenuCtrl.extraActions.visible}">\n    <div ng-if="::navbarMenuCtrl.navbar.hasDraggable(navbarMenuCtrl.menu.items)"\n         ui-sortable="navbarMenuCtrl.menu.sortableOptions"\n         ng-model="navbarMenuCtrl.menu.items"\n         ng-include="navbarMenuCtrl.NAVBAR_MENU_ITEMS_TEMPLATE"></div>\n    <div ng-if="::!navbarMenuCtrl.navbar.hasDraggable(navbarMenuCtrl.menu.items)"\n         ng-include="navbarMenuCtrl.NAVBAR_MENU_ITEMS_TEMPLATE"></div>\n    <div class="submenu-action" ng-if="navbarMenuCtrl.menu.sectionAction"\n        ng-click="navbarMenuCtrl.navbar.act($event, navbarMenuCtrl.menu.sectionAction.name)">\n        <f-icon ng-class="navbarMenuCtrl.menu.sectionAction.icon" f-tip>\n            {{\'navbar::action::\' + navbarMenuCtrl.menu.sectionAction.name | lang}}\n        </f-icon>\n        <f-icon class="setting-icon fa-ellipsis-v" f-tip\n            ng-class="{\'always-visible\': navbarMenuCtrl.extraActions.visible}"\n            ng-click="navbarMenuCtrl.popUpMenuToggle($event, navbarMenuCtrl.extraActions)">\n            {{::\'Actions\' | lang}}\n        </f-icon>\n        <div f-pop-up-menu="navbarMenuCtrl.extraActions">\n            <div f-menu-item-button ng-repeat="action in navbarMenuCtrl.menu.itemActions"\n                click="navbarMenuCtrl.navbar.act($event, action.name, entry)"\n                enabled="navbarMenuCtrl.navbar.enableAction(action.name, entry)">\n                <f-icon ng-class="action.icon" class="clickable"></f-icon>\n                <span>{{\'navbar::action::\' + action.name | lang}}</span>\n            </div>\n        </div>\n    </div>\n</ul>\n')}]),module.exports=path},490:function(module,exports){var path="/migadmin/ng/structure/partials/navbar_menu_item.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-class="{\n    selected: menuItemCtrl.navbar.isSelected(menuItemCtrl.entry),\n    \'nav-focused\': menuItemCtrl.isIndexedResult,\n    \'reorderable-menu-item\': menuItemCtrl.reorderableFavorite || menuItemCtrl.entry.reorderableItem\n}">\n    <a ng-href="{{::menuItemCtrl.entry.uri | ngURI}}" ng-if="::menuItemCtrl.entry.uri">\n        <div class="menu-item-icons">\n            <f-icon class="reorderable-icon ftnt-drag"\n                ng-if="(menuItemCtrl.reorderableFavorite || menuItemCtrl.entry.reorderableItem) &&\n                !menuItemCtrl.currentlyReordering">\n            </f-icon>\n            <f-icon class="menu-item-icon" ng-class="menuItemCtrl.menuItemIcon"></f-icon>\n        </div>\n        <span ng-bind-html="::menuItemCtrl.entry.htmlLabel"></span>\n        <span\n            class="number-bubble"\n            f-notification-bubble navbar-entry="menuItemCtrl.entry" f-tip-target>\n        </span>\n    </a>\n    <f-icon class="new-icon clickable ftnt-new" ng-if="menuItemCtrl.showNewIcon"\n        title="{{:: \'Feature Description\' | lang}}"\n        ng-click="menuItemCtrl.showFeature($event)">\n    </f-icon>\n    <f-icon class="setting-icon fa-ellipsis-v" f-tip ng-if="!menuItemCtrl.favoriteOnly && menuItemCtrl.entry.itemActions.length"\n        ng-class="{\'always-visible\': menuItemCtrl.actions.visible}"\n        ng-click="menuItemCtrl.popUpMenuToggle($event, menuItemCtrl.actions)">\n        {{::\'Actions\' | lang}}\n    </f-icon>\n    <f-icon class="favorite-icon" ng-if="menuItemCtrl.favoriteOnly || !menuItemCtrl.entry.itemActions.length"\n        ng-if=":: !menuItemCtrl.disableFavorite && menuItemCtrl.entry.uri && !menuItemCtrl.entry.temporary"\n        ng-class="menuItemCtrl.favoriteIcon"\n        title="{{menuItemCtrl.isFavorite ? \'Remove Favorite\' : \'Add Favorite\' | lang}}"\n        ng-click="menuItemCtrl.toggleFavorite($event)">\n    </f-icon>\n    <div f-pop-up-menu="menuItemCtrl.actions">\n        <div f-menu-item-button ng-repeat="action in menuItemCtrl.entry.itemActions"\n            enabled="menuItemCtrl.navbar.enableAction(action.name, menuItemCtrl.entry)"\n            click="menuItemCtrl.navbar.act($event, action.name, menuItemCtrl.entry)">\n            <f-icon ng-class="action.icon" class="clickable"></f-icon>\n            <span>{{\'navbar::action::\' + action.name | lang}}</span>\n        </div>\n        <div f-menu-item-button click="menuItemCtrl.toggleFavorite($event)"\n            ng-if=":: !menuItemCtrl.disableFavorite && menuItemCtrl.entry.uri && !menuItemCtrl.entry.temporary">\n            <f-icon class="favorite-icon" ng-class="menuItemCtrl.favoriteIcon"></f-icon>\n            <span>{{menuItemCtrl.isFavorite ? \'Remove Favorite\' : \'Add Favorite\' | lang}}</span>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},61:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){function NotificationItem(injector){switch(injector.injectMarked(this),this._result=this.RESULT.PENDING,this._resultCount=0,this._completed=!1,this.link="",this.type){case this.TYPES.MULTIPLE:this._messages=[];break;case this.TYPES.SUBMENU:this._message=null,this._messages=[],this._icons=[];break;case this.TYPES.SINGLE:default:this._message=null}if(!this.ID)throw new Error('"ID" not defined for notification item "'+this.constructor.name+'"');Object.defineProperty(this,"SEVERITY_LEVEL_INDEX",{get:function(){return this.SEVERITY_LEVELS_INDEXES[this.SEVERITY_LEVEL]}.bind(this)})}return NotificationItem.prototype.ID=null,NotificationItem.prototype.TYPES={SINGLE:"single",MULTIPLE:"multiple",SUBMENU:"submenu"},NotificationItem.prototype.type=NotificationItem.prototype.TYPES.SINGLE,NotificationItem.prototype.RESULT={PENDING:"pending",EXECUTION_ERROR:"executionError",FAILED:"failed",PASSED:"passed"},NotificationItem.prototype.SEVERITY_LEVELS={LOW:"low",MEDIUM:"medium",HIGH:"high",CRITICAL:"critical"},NotificationItem.prototype.SEVERITY_LEVELS_INDEXES={},Object.keys(NotificationItem.prototype.SEVERITY_LEVELS).forEach(function(key,index){var value=NotificationItem.prototype.SEVERITY_LEVELS[key];NotificationItem.prototype.SEVERITY_LEVELS_INDEXES[value]=index}),NotificationItem.prototype.SEVERITY_LEVEL=NotificationItem.prototype.SEVERITY_LEVELS.LOW,NotificationItem.prototype.setResult=function(result){this._result=result},NotificationItem.prototype.getResult=function(){return this._result},NotificationItem.prototype.setResultCount=function(resultCount){this._resultCount=resultCount},NotificationItem.prototype.getResultCount=function(){return this._resultCount},NotificationItem.prototype.setMessage=function(message){if(this.type===this.TYPES.MULTIPLE)throw new Error('Use "addMessage" for multiple notification items.');this._message=message},NotificationItem.prototype.addMessage=function(message,icon){switch(this.type){case this.TYPES.SUBMENU:this._completed&&(this._icons=[]),this._icons.push(icon);case this.TYPES.MULTIPLE:this._completed&&(this._messages=[],this._completed=!1),this._messages.push(message);break;default:throw new Error('Use "setMessage" for singular notification items.')}},NotificationItem.prototype.getMessage=function(index){var result=this._message;switch(this.type){case this.TYPES.MULTIPLE:result=this._messages[index];break;case this.TYPES.SUBMENU:void 0!==index&&(result=this._messages[index])}return result},NotificationItem.prototype.getMessagesSummary=function(){const messages=[];switch(this.type){case this.TYPES.MULTIPLE:messages.push(...this._messages);break;case this.TYPES.SUBMENU:case this.TYPES.SINGLE:default:messages.push(this._message)}return messages},NotificationItem.prototype.getIcon=function(index){if(this.type!==this.TYPES.SUBMENU)throw new Error(`Notification type '${this.type}' doesn't support icons!`);return this._icons[index]},NotificationItem.prototype.run=inject.mark(function($q){return function(){return $q.reject('"run" not implemented.')}}),NotificationItem.prototype.onClick=function(){throw new Error('"onClick" not implemented.')},NotificationItem.prototype.canClick=function(){return!0},NotificationItem.prototype.markCompleted=function(){this._completed=!0},NotificationItem}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},73:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(()=>{const TYPES={ALICLOUD_FUNCTION:"alicloud-function",AWS_LAMBDA:"aws-lambda",AZURE_FUNCTION:"azure-function",CLI_SCRIPT:"cli-script",EMAIL:"email",FOS_ALERT:"alert",GOOGLE_CLOUD_FUNCTION:"google-cloud-function",IOS_PUSH:"ios-notification",IP_BAN:"ban-ip",QUARANTINE:"quarantine",QUARANTINE_FORTICLIENT:"quarantine-forticlient",QUARANTINE_FORTINAC:"quarantine-fortinac",QUARANTINE_NSX:"quarantine-nsx",SLACK_NOTIFICATION:"slack-notification",SSID_SHUTDOWN:"disable-ssid",WEBHOOK:"webhook"},HAS_INGREDIENTS=new Set([TYPES.ALICLOUD_FUNCTION,TYPES.AWS_LAMBDA,TYPES.AZURE_FUNCTION,TYPES.CLI_SCRIPT,TYPES.EMAIL,TYPES.GOOGLE_CLOUD_FUNCTION,TYPES.QUARANTINE_NSX,TYPES.SLACK_NOTIFICATION,TYPES.WEBHOOK]),CHAINABLE_ACTIONS=[TYPES.ALICLOUD_FUNCTION,TYPES.AWS_LAMBDA,TYPES.AZURE_FUNCTION,TYPES.CLI_SCRIPT,TYPES.GOOGLE_CLOUD_FUNCTION,TYPES.SLACK_NOTIFICATION,TYPES.WEBHOOK],ACTION_TEMPLATES={[TYPES.ALICLOUD_FUNCTION]:"f-stitch-action-alicloud-function",[TYPES.AWS_LAMBDA]:"f-stitch-action-aws-lambda",[TYPES.AZURE_FUNCTION]:"f-stitch-action-azure-function",[TYPES.CLI_SCRIPT]:"f-stitch-action-cli-script",[TYPES.EMAIL]:"f-stitch-action-email",[TYPES.FOS_ALERT]:"f-stitch-action-fos-alert",[TYPES.GOOGLE_CLOUD_FUNCTION]:"f-stitch-action-google-cloud-function",[TYPES.IOS_PUSH]:"f-stitch-action-ios-push",[TYPES.IP_BAN]:"f-stitch-action-ip-ban",[TYPES.QUARANTINE]:"f-stitch-action-quarantine",[TYPES.QUARANTINE_FORTICLIENT]:"f-stitch-action-quarantine-forticlient",[TYPES.QUARANTINE_FORTINAC]:"f-stitch-action-quarantine-fortinac",[TYPES.QUARANTINE_NSX]:"f-stitch-action-quarantine-nsx",[TYPES.SLACK_NOTIFICATION]:"f-stitch-action-slack-notification",[TYPES.SSID_SHUTDOWN]:"f-stitch-action-ssid-shutdown",[TYPES.WEBHOOK]:"f-stitch-action-webhook"},ACTION_ICONS={[TYPES.ALICLOUD_FUNCTION]:"ftnt-acs",[TYPES.AWS_LAMBDA]:"ftnt-amazon",[TYPES.AZURE_FUNCTION]:"ftnt-azure",[TYPES.CLI_SCRIPT]:"fa-terminal",[TYPES.EMAIL]:"ftnt-email",[TYPES.FOS_ALERT]:"fa-notification",[TYPES.GOOGLE_CLOUD_FUNCTION]:"ftnt-gcp",[TYPES.IOS_PUSH]:"fa-device-apple",[TYPES.IP_BAN]:"fa-blocked",[TYPES.QUARANTINE]:"ftnt-standard-fortiswitch",[TYPES.QUARANTINE_FORTICLIENT]:"ftnt-forticlient",[TYPES.QUARANTINE_FORTINAC]:"ftnt-fortinac",[TYPES.QUARANTINE_NSX]:"ftnt-vmware-nsx",[TYPES.SLACK_NOTIFICATION]:"fa-slack",[TYPES.SSID_SHUTDOWN]:"ftnt-shutdown",[TYPES.WEBHOOK]:"ftnt-webhook"};return{ACTION_ORDER:[TYPES.CLI_SCRIPT,TYPES.EMAIL,TYPES.IOS_PUSH,TYPES.FOS_ALERT,TYPES.SSID_SHUTDOWN,TYPES.QUARANTINE,TYPES.QUARANTINE_FORTICLIENT,TYPES.QUARANTINE_FORTINAC,TYPES.QUARANTINE_NSX,TYPES.IP_BAN,TYPES.AWS_LAMBDA,TYPES.AZURE_FUNCTION,TYPES.GOOGLE_CLOUD_FUNCTION,TYPES.ALICLOUD_FUNCTION,TYPES.SLACK_NOTIFICATION,TYPES.WEBHOOK],TYPES:TYPES,VISIBLE_ACTIONS:[TYPES.ALICLOUD_FUNCTION,TYPES.AWS_LAMBDA,TYPES.AZURE_FUNCTION,TYPES.CLI_SCRIPT,TYPES.EMAIL,TYPES.GOOGLE_CLOUD_FUNCTION,TYPES.IOS_PUSH,TYPES.IP_BAN,TYPES.QUARANTINE,TYPES.QUARANTINE_FORTICLIENT,TYPES.QUARANTINE_FORTINAC,TYPES.QUARANTINE_NSX,TYPES.SLACK_NOTIFICATION,TYPES.WEBHOOK],USES_HTTP_HEADERS:[TYPES.ALICLOUD_FUNCTION,TYPES.AWS_LAMBDA,TYPES.AZURE_FUNCTION,TYPES.GOOGLE_CLOUD_FUNCTION,TYPES.WEBHOOK],hasIngredients:type=>HAS_INGREDIENTS.has(type),isChainable:type=>CHAINABLE_ACTIONS.includes(type),genActionIcon:type=>ACTION_ICONS[type],genActionTemplate:function(type){var tag=ACTION_TEMPLATES[type];if(tag)return`<${tag} action="action.data" disabled="$ctrl.disabled"\n                    sortable-options-default="$ctrl.sortableOptions"\n                    action-param-info="$ctrl.actionParameterSlide()"></${tag}>`}}}).apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},761:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(ngModule=>{const EMPTY_IP="0.0.0.0",API_ROUTER_LOOKUP="/api/v2/monitor/router/lookup",MGMT_IP_TYPE_OPTIONS={SPECIFY:"specify",DEFAULT:"default"},MGMT_PORT_TYPE_OPTIONS={SPECIFY:"specify",DEFAULT:"default"};ngModule.factory("createSystemCsfModel",(CMDB,injector)=>{const CMDBBaseExtendsClass=injector.CollectableExtends(CMDB.BaseModel);return disableDefaultMgmt=>{return class extends CMDBBaseExtendsClass{constructor(){super(...arguments)}$onInit(){this.MGMT_IP_TYPE_OPTIONS=MGMT_IP_TYPE_OPTIONS,this.MGMT_PORT_TYPE_OPTIONS=MGMT_PORT_TYPE_OPTIONS,this._joinExisting=null,this._managementIpType=null,this._managementPortType=null,this._allowDefaultMgmtSettings=!disableDefaultMgmt,this.$promise=this._initSystemDefaultGateway().then(()=>(this._init(),this._initTrustedList(),this._initPassword(),this))}_init($INJECTABLE$,$window){return()=>{this.editingPassword=!0,this._defaultMgmtIp=$window.location.hostname,this._defaultMgmtPort=$window.location.port}}preSave(){if(this.joinExisting)this["trusted-list"]=void 0;else{this["upstream-ip"]=EMPTY_IP,this._initTrustedList();let trustedList=(this._trustedList||[]).slice();1!==trustedList.length||trustedList[0].serial||(trustedList=[]),this["trusted-list"]=trustedList}this.managementIpType===this.MGMT_IP_TYPE_OPTIONS.DEFAULT&&(this["management-ip"]=""),this.managementPortType===this.MGMT_PORT_TYPE_OPTIONS.DEFAULT&&(this["management-port"]=0)}$save(){return this.preSave(),super.$save(...arguments)}get joinExisting(){return null!==this._joinExisting?this._joinExisting:this["upstream-ip"]!==EMPTY_IP}set joinExisting(value){if(value){this["group-name"]="",this["group-name"]="",this["group-password"]="";const originallyDisabled="disable"===this.$original.status;(this["upstream-ip"]===EMPTY_IP||originallyDisabled)&&(this["upstream-ip"]=this._systemDefaultGateway)}else this.$original["group-name"]&&(this["group-name"]=this.$original["group-name"]),this.$original["group-password"]&&(this["group-password"]=this.$original["group-password"]),this.$trustedList||this._initTrustedList();this._joinExisting=value}get managementIpType(){const{DEFAULT:DEFAULT,SPECIFY:SPECIFY}=this.MGMT_IP_TYPE_OPTIONS;return this._managementIpType||(this["management-ip"]?SPECIFY:DEFAULT)}set managementIpType(value){const{SPECIFY:SPECIFY}=this.MGMT_IP_TYPE_OPTIONS;value!==SPECIFY||this.$original["management-ip"]||this["management-ip"]||!this._defaultMgmtIp||(this["management-ip"]=this._allowDefaultMgmtSettings?this._defaultMgmtIp:""),this._managementIpType=value}get managementPortType(){const{DEFAULT:DEFAULT,SPECIFY:SPECIFY}=this.MGMT_PORT_TYPE_OPTIONS;return this._managementPortType||(this["management-port"]?SPECIFY:DEFAULT)}set managementPortType(value){const{SPECIFY:SPECIFY}=this.MGMT_PORT_TYPE_OPTIONS;value===SPECIFY&&0===this.$original["management-port"]&&0===this["management-port"]&&this._defaultMgmtPort&&(this["management-port"]=this._allowDefaultMgmtSettings?Number(this._defaultMgmtPort):0),this._managementPortType=value}_initSystemDefaultGateway($INJECTABLE$,$http,state){return()=>$http.get(API_ROUTER_LOOKUP,{params:{vdom:state.management_vdom,destination:"0.0.0.0",ipv6:!1}}).then(resp=>{const results=resp.data.results;this._systemDefaultGateway=EMPTY_IP,results.success&&(this._systemDefaultGateway=results.gateway)},()=>this._systemDefaultGateway=EMPTY_IP)}_initTrustedList(){this.joinExisting?this._trustedList=null:(this._trustedList=this["trusted-list"]||[],this._trustedList.length||this._trustedList.push({serial:"",action:"accept"}))}_initPassword(){this["group-name"]?(this.editingPassword=!1,this["confirm-password"]=this["confirm-password"]):(this["group-password"]="",this.editingPassword=!0)}}}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},77:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){const EVENT_TYPES={CONFIG_CHANGE:"config-change",EVENT_LOG:"event-log",HA_FAILOVER:"ha-failover",HIGH_CPU:"high-cpu",INCOMING_WEBHOOK:"incoming-webhook",IOC:"ioc",LICENSE_NEAR_EXPIRY:"license-near-expiry",LOW_MEMORY:"low-memory",REBOOT:"reboot",SCHEDULE:"scheduled",SECURITY_RATING_SUMMARY:"security-rating-summary",VIRUS_IPS_DB_UPDATED:"virus-ips-db-updated",FAZ_EVENT:"faz-event"},VISIBLE_EVENTS=[EVENT_TYPES.CONFIG_CHANGE,EVENT_TYPES.EVENT_LOG,EVENT_TYPES.HA_FAILOVER,EVENT_TYPES.INCOMING_WEBHOOK,EVENT_TYPES.IOC,EVENT_TYPES.LICENSE_NEAR_EXPIRY,EVENT_TYPES.REBOOT,EVENT_TYPES.SECURITY_RATING_SUMMARY,EVENT_TYPES.VIRUS_IPS_DB_UPDATED,EVENT_TYPES.FAZ_EVENT],EVENT_TYPE_ICONS={[EVENT_TYPES.REBOOT]:"fa-repeat",[EVENT_TYPES.LOW_MEMORY]:"fa-snowflake-o",[EVENT_TYPES.HIGH_CPU]:"fa-tasks",[EVENT_TYPES.LICENSE_NEAR_EXPIRY]:"fa-drivers-license-o",[EVENT_TYPES.HA_FAILOVER]:"ftnt-ha",[EVENT_TYPES.CONFIG_CHANGE]:"fa-list",[EVENT_TYPES.INCOMING_WEBHOOK]:"ftnt-webhook",[EVENT_TYPES.IOC]:"ftnt-ioc",[EVENT_TYPES.EVENT_LOG]:"ftnt-eventlog",[EVENT_TYPES.SECURITY_RATING_SUMMARY]:"ftnt-security-fabric",[EVENT_TYPES.VIRUS_IPS_DB_UPDATED]:"fa-database",[EVENT_TYPES.FAZ_EVENT]:"ftnt-fortianalyzer"},EVENT_LOGS={[EVENT_TYPES.CONFIG_CHANGE]:["LOG_ID_CONF_CHG"],[EVENT_TYPES.HA_FAILOVER]:["MESGID_VC_MOVE_MEMB_STATE"],[EVENT_TYPES.HIGH_CPU]:["LOG_ID_EVENT_SYS_CPU_USAGE"],[EVENT_TYPES.INCOMING_WEBHOOK]:["LOG_ID_INCOMING_WEBHOOK"],[EVENT_TYPES.IOC]:["LOG_ID_IOC_DETECTED"],[EVENT_TYPES.LICENSE_NEAR_EXPIRY]:["LOG_ID_AV_LIC_EXPIRE","LOG_ID_CS_LIC_EXPIRE","LOG_ID_FC_EXPIRE","LOG_ID_IPS_LIC_EXPIRE","LOG_ID_MGR_LIC_EXPIRE","LOG_ID_SPAM_LIC_EXPIRE","LOG_ID_WEB_LIC_EXPIRE"],[EVENT_TYPES.LOW_MEMORY]:["LOG_ID_ENTER_MEM_CONSERVE_MODE"],[EVENT_TYPES.REBOOT]:["LOG_ID_REBOOT"],[EVENT_TYPES.SECURITY_RATING_SUMMARY]:["LOG_ID_EVENT_SECURITY_AUDIT_FABRIC_SUMMARY"],[EVENT_TYPES.VIRUS_IPS_DB_UPDATED]:["LOG_ID_UPD_SIGN_AVIPS_DB"],[EVENT_TYPES.FAZ_EVENT]:["LOG_ID_SECURITY_EVENT_DETECTED"]},FILTERED_EVENT_LOGS=["LOG_ID_EVENT_AUTOMATION_TRIGGERED"];return{TYPES:{EVENT:"event-based",SCHEDULE:"scheduled"},EVENT_TYPES:EVENT_TYPES,EVENT_ORDER:[EVENT_TYPES.IOC,EVENT_TYPES.SECURITY_RATING_SUMMARY,EVENT_TYPES.CONFIG_CHANGE,EVENT_TYPES.REBOOT,EVENT_TYPES.HIGH_CPU,EVENT_TYPES.LICENSE_NEAR_EXPIRY,EVENT_TYPES.HA_FAILOVER,EVENT_TYPES.VIRUS_IPS_DB_UPDATED,EVENT_TYPES.LOW_MEMORY,EVENT_TYPES.EVENT_LOG,EVENT_TYPES.FAZ_EVENT,EVENT_TYPES.INCOMING_WEBHOOK],EVENT_LOGS:EVENT_LOGS,INGREDIENT_TEMPLATES:{[EVENT_TYPES.EVENT_LOG]:"f-stitch-trigger-event",[EVENT_TYPES.FAZ_EVENT]:"f-stitch-trigger-faz-event-handler",[EVENT_TYPES.INCOMING_WEBHOOK]:"f-stitch-trigger-incoming-webhook",[EVENT_TYPES.IOC]:"f-stitch-trigger-event",[EVENT_TYPES.LICENSE_NEAR_EXPIRY]:"f-stitch-trigger-event",[EVENT_TYPES.SECURITY_RATING_SUMMARY]:"f-stitch-trigger-event",[EVENT_TYPES.SCHEDULE]:"f-stitch-trigger-schedule"},VISIBLE_EVENTS:VISIBLE_EVENTS,VDOM_INVISIBLE_EVENTS:[EVENT_TYPES.SECURITY_RATING_SUMMARY],FILTERED_EVENT_LOGS:(()=>{let visibleEventLogs=[];return VISIBLE_EVENTS.filter(key=>EVENT_LOGS[key]).forEach(key=>{visibleEventLogs.push(...EVENT_LOGS[key])}),[...visibleEventLogs,...FILTERED_EVENT_LOGS]})(),genEventTypeIcon:function(type){return EVENT_TYPE_ICONS[type]}}}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},809:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("ApiFilter",function(){function ApiFilter(key,orValues,operator){this.key=key,Array.isArray(orValues)||(orValues=[orValues]),this.orValues=orValues,this.operator=operator||ApiFilter.OP.EQUAL}return ApiFilter.OP={EQUAL:"==",CONTAINS:"=@",GREATER:">",LESS:"<",GREATER_OR_EQUAL:">=",LESS_OR_EQUAL:"<=",NOT_EQUAL:"!=",NOT_CONTAINS:"!@",NOT_PREFIX:"!",CONTAINS_SUFFIX:"@"},ApiFilter.parse=function(filterParams){const OPERATOR_EXPR=/^(.*?)(=[=@]|![=@]|[><]=?)(.*?)$/;return filterParams.reduce((acc,filterValue)=>[...acc,...filterValue.split(",").map(makeFilter)],[]);function makeFilter(filterStr){const kv=OPERATOR_EXPR.exec(filterStr)||[],[key,op,value]=kv?Array.from(kv).slice(1):[],filter=key&&"string"==typeof value?new ApiFilter(key,value.split(",").map(clearDoubleQuote)):null;return filter&&(filter.operator=op),filter}function clearDoubleQuote(value){return value.replace(/(^")|("$)/g,"")}},ApiFilter.prototype={key:null,operator:null,orValues:null,filter:null,toString(){return this.orValues.map(v=>`${this.key}${this.operator}"${v}"`).join(",")},toParam(){return`filter=${encodeURIComponent(this.toString())}`}},ApiFilter})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},810:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject,shared)=>{const CLICONSOLE="cliConsole",MODE={RECORDING:"recording"};module.service("cliConsole",class extends inject.Collectable{constructor(){super(),this.MODE=MODE,this.closeConsole=(()=>Promise.resolve())}open($INJECTABLE$,$rootScope,state,slide,lang){return options=>{const vdom=state.vdom_mode?state.current_vdom||"global":"",{mode:mode}=options||{},scope=Object.assign($rootScope.$new(),{$ctrl:this,options:Object.assign({vdom:vdom},options),ready:function(){this.console.terminal.querySelectorAll(".compact-menu > button").forEach(item=>extraButtons.append(item)),this.console.resize(),mode===MODE.RECORDING&&this.console.record()}.bind(this)}),extraButtons=(0,shared.dom.elem)("div");return new Promise(done=>this.closeConsole().finally(()=>{const dlg=slide.open(CLICONSOLE,{template:'<f-console class="absolute-fill" console="$ctrl.console"\n                            mode="\'slide\'" options="::options" ready="ready()"></f-console>',parentScope:scope,options:{title:lang("jsconsole"),width:600,fullHeight:!0,buttons:mode===MODE.RECORDING,okButtonLabel:lang("Save Script"),extraHeaderContent:[extraButtons]}}).then(()=>{if(mode===MODE.RECORDING)return this.console.records},()=>{});dlg.finally(()=>{scope.$destroy()}),done(dlg),this.closeConsole=(()=>new Promise(resolve=>{try{slide.get(CLICONSOLE).slide.close().then(()=>setTimeout(resolve))}catch(e){resolve()}}))}))}}openObjectInCLI(params){const options={},{path:path,name:name,mkey:mkey,vdom:vdom}=params||{};return mkey&&(options.commands=[`config ${path.split(".").join(" ")} ${name}`,`edit ${JSON.stringify(mkey)}`,"show"]),vdom&&(options.vdom=vdom),this.open(options)}close(){this.closeConsole()}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},812:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(84),__webpack_require__(813)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BaseCsfClasses,CsfAppliance){const extendableCsfAppliance=(0,BaseCsfClasses.GuiCsfMixin)(CsfAppliance),EMPTY_IP="0.0.0.0";return class extends extendableCsfAppliance{constructor(csfEntry,parentFortigateId,path){super(csfEntry,parentFortigateId),this.path=path}get sourceID(){return"csfAppliances"}canConnectToGui(){return this.managementIP&&this.managementIP!==EMPTY_IP}connectToGui($INJECTABLE$,$window){return()=>{var url=this.getManagementURL();url&&$window.open(url,"_blank")}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},814:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(84),__webpack_require__(233)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,BaseCsfObject,CsfPendingDevice){const Omniselect=ftnt_shared.Omniselect,CMDB_CSF_URI="/api/v2/cmdb/system/csf",extendableCsfPendingDevice=(0,BaseCsfObject.GuiCsfMixin)(CsfPendingDevice);class GuiPendingDevice extends extendableCsfPendingDevice{constructor(csfEntry){super(csfEntry),this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null}get sourceID(){return"csfPendingDevices"}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfPendingDevice,"getIconClass")}canAuthorize($INJECTABLE$,csfTopology){return()=>csfTopology.isRootFortigate}canDeauthorize(){return!1}canDenyAuthorization($INJECTABLE$,csfTopology){return()=>csfTopology.isRootFortigate}canResetAuthorization(){return!1}toggleAuthorization($INJECTABLE$,$http,csfTopology){return toggle=>{const authEntry={serial:this.serial,action:toggle?"accept":"deny","ha-members":this.ha},uri=`${CMDB_CSF_URI}/trusted-list`;this.hasPendingStatusUpdate=!0;const toggleAction=toggle?"accept":"deauthorize";return $http.post(uri,authEntry).then(function(){this.action=authEntry.action,this.hasPendingStatusUpdate=!1,Omniselect.notifySourceChanged("csfPendingDevices"),this._notifyAuthorizationToggle(toggleAction,!0),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle(toggleAction,!1)}.bind(this))}}canConnectToGui(){return this.managementIP&&"0.0.0.0"!==this.managementIP}connectToGui($INJECTABLE$,$window){return()=>{$window.open(`https://${this.managementIP}`,"_blank")}}isAuthorized(){return"accept"===this.action}denyAuthorization($INJECTABLE$,$http,csfTopology){return()=>{const authEntry={serial:this.serial,action:"deny","ha-members":this.ha},uri=`${CMDB_CSF_URI}/trusted-list`;return this.hasPendingStatusUpdate=!0,$http.post(uri,authEntry).then(function(){this.action=authEntry.action,this.hasPendingStatusUpdate=!1,Omniselect.notifySourceChanged("csfPendingDevices"),this._notifyAuthorizationToggle("deny",!0),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!1)}.bind(this))}}}return GuiPendingDevice.prototype._AUTH_STATUS_LANG_MAPPING={"":"discovered",deny:"disabled",accept:"authorized"},GuiPendingDevice.prototype._AUTH_STATUS_ICON_MAPPING={"":"fa-warning",deny:"fa-disabled",accept:"fa-enabled"},GuiPendingDevice}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},815:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(84),__webpack_require__(234)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,BaseCsfObject,CsfPreauthorizedDevice){const Omniselect=ftnt_shared.Omniselect,CMDB_CSF_URI="/api/v2/cmdb/system/csf",extendableCsfPreauthorizedDevice=(0,BaseCsfObject.GuiCsfMixin)(CsfPreauthorizedDevice);return class extends extendableCsfPreauthorizedDevice{constructor(csfEntry,parentFortigateId){super(csfEntry,parentFortigateId),this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null}get sourceID(){return"csfPreauthorizedDevices"}getIconClass(){return this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfPreauthorizedDevice,"getIconClass")}isConnected($INJECTABLE$,csfTopology){return function(){return!!csfTopology.getDevice(this.serial)||!!Array.isArray(this.ha_list)&&this.ha_list.some(serial=>{const member=csfTopology.getDevice(serial);return member&&Array.isArray(member.ha)&&member.ha.some(ha=>ha.serial===this.serial)})}}toggleAuthorization($INJECTABLE$,$http,csfTopology){return toggle=>{const authEntry={action:toggle?"accept":"deny"},uri=`${CMDB_CSF_URI}/trusted-list/${this.serial}`;this.hasPendingStatusUpdate=!0;const toggleAction=toggle?"accept":"deauthorize";return $http.put(uri,authEntry).then(()=>{this.action=authEntry.action,this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle(toggleAction,!0),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),csfTopology.invalidateLastBuildIfNecessary()},()=>{this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle(toggleAction,!1)})}}canConnectToGui(){return!1}canDenyAuthorization($INJECTABLE$,csfTopology){return()=>csfTopology.isRootFortigate}canDeauthorize(){return!0}canAuthorize(){return!1}denyAuthorization($INJECTABLE$,$http,csfTopology){return()=>{const authEntry={action:"deny"},uri=`${CMDB_CSF_URI}/trusted-list/${this.serial}`;return this.hasPendingStatusUpdate=!0,$http.put(uri,authEntry).then(function(){this.action=authEntry.action,this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!0),Omniselect.notifySourceChanged("csfPreauthorizedDevices"),csfTopology.invalidateLastBuildIfNecessary()}.bind(this),function(){this.hasPendingStatusUpdate=!1,this._notifyAuthorizationToggle("deny",!1)}.bind(this))}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},816:function(module,exports,__webpack_require__){"use strict";const{fortigate:{models:{CsfGlobalFortiGate:CsfGlobalFortiGate}}}=__webpack_require__(817);module.exports=function(ftnt_shared,fLang,fDom,csfTopology){const Omniselect=ftnt_shared.Omniselect,TooltipKey=Omniselect.TooltipKey,TooltipFooterAction=Omniselect.TooltipFooterAction,translate=fLang.translate,escape=function(formatter){return function(entry,key){let updatedEntry,result;try{updatedEntry=this.getTooltipData(entry)}catch(e){updatedEntry=entry}return result=formatter?formatter.call(this,updatedEntry,key):updatedEntry[key],fDom.escapeHTML(result)}};return{csfFortiGates:{dontCache:!0,name:translate("FortiGate"),valueFunction:function(entry){return"all"===entry.q_origin_key?translate("All FortiGates"):"function"==typeof entry.getLabel?entry.getLabel():entry.serial},formatFunction:function(entry,value){var iconHtml=`<f-icon class="${entry.getIconClass?entry.getIconClass():"ftnt-standard-fortigate security-fabric-node"}"></f-icon>`,labelClass=entry.getLabelClass&&entry.getLabelClass()||"";return entry.isCurrent?`${iconHtml}<span class="${labelClass}"><strong>${value}</strong></span>`:`${iconHtml}<span class="${labelClass}">${value}</span>`},onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})},data:function(meta,sourceId){return csfTopology.buildIfNecessary().then(function(){var results=[{allFortigates:!0,q_origin_key:"all",datasource:sourceId}].concat(csfTopology.getFgts(!0,!0),csfTopology.globalFortigates);return csfTopology.upstreamSerial&&!csfTopology.globalFortigateMapping[csfTopology.upstreamSerial]&&results.push(csfTopology.upstreamFortigate),results})},tooltipData:function(entry){return entry.getCurrentResourceUsage?entry.getCurrentResourceUsage():Promise.resolve({})},solitaryEntries:{all:!0},tooltipKeys:{hostname:new TooltipKey(translate("hostname"),entry=>entry.hostname),serial:new TooltipKey(translate("sn"),entry=>entry.isHaSlave?entry.id:entry.serial),master:new TooltipKey(translate("Master"),entry=>{if(entry.isHaSlave)return entry.serial}),haMode:new TooltipKey(translate("ha_mode"),entry=>translate(entry.haMode)),haGroupName:new TooltipKey(translate("ha_group"),entry=>entry.haGroupName),modelLabel:new TooltipKey(translate("model"),entry=>entry.modelLabel),version:new TooltipKey(translate("version"),function(entry){if(entry.serial&&"function"==typeof entry.getVersionLabel)return entry.getVersionLabel()}),awsInstanceId:new TooltipKey(translate("AWS Instance ID"),function(entry){return entry.awsInstanceId||entry.state&&entry.state.aws_instance_id}),opmode:new TooltipKey(translate("Operation Mode"),function(entry){var mode;if(entry.state&&!entry.state.vdom_mode&&entry.state.admin){const state=entry.state;return mode=state.admin.vdom_info[state.management_vdom].transparent_mode?state.OPERATION_MODE.TRANSPARENT:state.OPERATION_MODE.NAT,translate(mode)}}),managementIP:new TooltipKey(translate("Management IP/FQDN"),function(entry){if("function"==typeof entry.getManagementIPLabel)return csfTopology._createAngularElement(this,entry.datasource,`${entry.id}-mgmtIp`,entry.getManagementIPLabel())}),mgmtPort:new TooltipKey(translate("Management Port"),function(entry){if("function"==typeof entry.getManagementPort){let port=entry.getManagementPort();return 443!==port?port:null}}),syncStatus:new TooltipKey(translate("Object Sync Status"),function(entry){return!(entry.csfObjectSyncEnabled&&entry.csfObjectSyncEnabled())||entry.isRoot?"":entry.areFirewallObjectsOutOfSync()?`<f-icon class="fa-warning"></f-icon>\n                            <span>${translate("Out of sync")}</span>`:`<f-icon class="fa-connected"></f-icon>\n                            <span>${translate("Synchronized")}</span>`}),ipAddress:new TooltipKey(translate("ipaddr"),entry=>entry.ipAddress),conserveMode:new TooltipKey(translate("Conserve Mode"),function(entry){return entry.state&&entry.state.conserve_mode?`<f-icon class="fa-warning"></f-icon><span>${translate("Yes")}</span>`:""}),topology:new TooltipKey("Topology",function(entry){if(!(entry.serial===csfTopology.upstreamSerial||"all"===entry.q_origin_key||entry instanceof CsfGlobalFortiGate||entry.isHaSlave))return csfTopology._createTopologyElement(this,entry)},function(){return!csfTopology.thisFortigate.state.inMultiVdomMode()},!0),cpu:new TooltipKey("CPU Usage",function(entry){if(entry.isFirmwareCompatible){const resources=this.getTooltipData(entry);if(resources&&resources.cpuUsage>=0)return ftnt_shared.formatters.resourceBarElement(resources.cpuUsage,{textHeight:!0,showPercentage:!0})}},null,!0),memory:new TooltipKey("Memory Usage",function(entry){if(entry.isFirmwareCompatible){const resources=this.getTooltipData(entry);if(resources&&resources.memoryUsage>=0)return ftnt_shared.formatters.resourceBarElement(resources.memoryUsage,{textHeight:!0,showPercentage:!0})}},null,!0),sessions:new TooltipKey("Session Count",function(entry){if(entry.isFirmwareCompatible){const resources=this.getTooltipData(entry);if(resources&&resources.sessionCount>=0)return resources.sessionCount.toLocaleString()}},null,!0)},searchKeys:{serial:!0,hostname:function(entry,searchString,searchRegex){if(entry.state)return searchRegex.test(entry.state.hostname)},managementIP:function(entry,searchString,searchRegex){var value="function"==typeof entry.getManagementIPLabel&&entry.getManagementIPLabel();if(value)return searchRegex.test(value)},modelLabel:!0,opmode:function(entry,searchString,searchRegex){var mode;if(entry.state&&!entry.state.vdom_mode&&entry.state.admin){const state=entry.state;return mode=state.admin.vdom_info[state.management_vdom].transparent_mode?state.OPERATION_MODE.TRANSPARENT:state.OPERATION_MODE.NAT,mode=translate(mode),searchRegex.test(mode)}},parent:function(entry,searchString,searchRegex){var result,intfFormatted;if(entry.parentFortigateId){var parent=csfTopology.getDevice(entry.parentFortigateId);return parent?entry.upstreamInterface?(intfFormatted=entry.upstreamInterface.isDummy?entry.name:Omniselect.formatEntry(entry.upstreamInterface,"firewallInterfaces"),result=translate("{0} via {1}",[parent.getLabel(),intfFormatted]).toString()):result=parent.getLabel():result=entry.parentFortigateId,searchRegex.test(result)}},version:function(entry,searchString,searchRegex){if(entry.serial&&"function"==typeof entry.getVersionLabel)return searchRegex.test(entry.getVersionLabel())},ipAddress:!0,awsInstanceId:!0},tooltipFooterActions:[new TooltipFooterAction({label:translate("Login"),iconClass:"fa-sign-in",visibleFunction:entry=>entry.canConnectToGui&&entry.canConnectToGui(),onClick:entry=>{entry.connectToGui&&entry.connectToGui()}}),new TooltipFooterAction({label:translate("Configure"),buttonClassFunction:entry=>{if(entry.unconfiguredSamlSp&&entry.unconfiguredSamlSp())return"warning"},iconClass:"fa-cog",visibleFunction:entry=>entry.canOpenCustomizeSlide&&entry.canOpenCustomizeSlide()&&entry.isCustomizeSlideOpened&&!entry.isCustomizeSlideOpened(),onClick:entry=>{entry.openCustomizeSlide()}})]},csfFortiAPs:{dontCache:!0,name:translate("FortiAP"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry,value){return`<f-icon class="${entry.getIconClass()}"></f-icon><span>${value}</span>`},onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})},data:function(){return csfTopology.buildIfNecessary().then(function(){const results=[];return csfTopology.fortigates.forEach(function(fortigate){fortigate.fortiaps.forEach(function(fortiap){results.push(fortiap)})}),Promise.resolve(results)})},tooltipKeys:{serial:new TooltipKey(translate("sn"),entry=>entry.serial),name:new TooltipKey(translate("name"),entry=>entry.name),status:new TooltipKey(translate("status"),function(entry){const labelLang=entry.getStatusLabel(),label=labelLang?translate(labelLang):"";return`<f-icon class="${entry.getStatusIconClass()}"></f-icon>\n                        <span>${label}</span>`}),version:new TooltipKey(translate("ver_firmware"),entry=>entry.version),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)})},searchKeys:{serial:!0,name:!0,version:!0}},csfFortiSwitches:{dontCache:!0,name:translate("FortiSwitch"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry,value){return`<f-icon class="${entry.getIconClass()}"></f-icon><span>${value}</span>`},onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})},data:function(){return csfTopology.buildIfNecessary().then(function(){let results=[];return csfTopology.fortigates.forEach(function(fortigate){results=results.concat(fortigate.fortiswitches)}),Promise.resolve(results)})},tooltipKeys:{serial:new TooltipKey(translate("sn")),name:new TooltipKey(translate("name")),status:new TooltipKey(translate("status"),function(entry){const labelLang=entry.getStatusLabel(),label=labelLang?translate(labelLang):"";return`<f-icon class="${entry.getStatusIconClass()}"></f-icon>\n                        <span>${label}</span>`}),version:new TooltipKey(translate("ver_firmware")),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)})},searchKeys:{serial:!0,name:!0,version:!0}},csfFortiNACs:{dontCache:!0,name:translate("FortiNAC"),valueFunction:entry=>entry.getLabel(),formatFunction:(entry,value)=>{return`<f-icon class="${entry.getStatusIconClass()}"></f-icon><span>${value}\n                    </span>`},onSourceDestroy:sourceLifeCycleData=>{Object.keys(sourceLifeCycleData).forEach(scopeKey=>{sourceLifeCycleData[scopeKey].$destroy()})},data:()=>csfTopology.buildIfNecessary().then(()=>csfTopology.fortinacs),tooltipKeys:{serial:new TooltipKey(translate("sn")),managementIP:new TooltipKey(translate("Management IP")),status:new TooltipKey(translate("status"),function(entry){return`<f-icon class="${entry.getStatusIconClass()}"></f-icon>\n                        <span>${translate(entry.getStatusLabel())}</span>`}),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)},function(){return!csfTopology.thisFortigate.state.inMultiVdomMode()})},searchKeys:{serial:!0,name:!0}},csfFabricDevices:{dontCache:!0,name:translate("Fabric Devices"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry){return`<f-icon class="${entry.getIconClass()}"></f-icon><span>${entry.getLabel()}</span>`},tooltipData:function(entry){return entry.pendingRequest},data:()=>{const results=[];return csfTopology.buildIfNecessary(csfTopology.BUILD_TYPES.WITH_EXTENSION_DEVICES).then(()=>(csfTopology.fortigates.forEach(fortigate=>{(fortigate.fabricDevices||[]).forEach(fabricDevice=>{fabricDevice.$original=fabricDevice,results.push(fabricDevice)})}),results))},tooltipKeys:{type:new TooltipKey(translate("Type"),escape(function(entry){return translate(entry.type||"unknown")})),connectionIP:new TooltipKey(translate("IP Address"),escape()),hostname:new TooltipKey(translate("hostname"),escape()),serial_number:new TooltipKey(translate("sn"),escape()),version:new TooltipKey(translate("version"),escape(function(entry){if("object"==typeof entry.version){var major=entry.version.major,minor=entry.version.minor,patch=entry.version.patch;if(!isNaN(major)&&!isNaN(minor)&&!isNaN(patch))return[major,minor,patch].join(".")}})),build:new TooltipKey(translate("build"),escape(function(entry){if("object"==typeof entry.build&&!isNaN(entry.build.number)){return`${entry.build.release_life_cycle?`${entry.build.release_life_cycle} `:""}build${entry.build.number}`}})),status:new TooltipKey(translate("status"),function(entry){const updatedEntry=this.getTooltipData(entry),labelLang=updatedEntry.getStatusLabel(),label=labelLang?translate(labelLang):"";return`<f-icon class="${updatedEntry.getStatusIconClass()}"></f-icon>\n                        <span>${label}</span>`}),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)})},searchKeys:{type:!0,connectionIP:!0,hostname:!0,serial_number:!0,version:!0,build:!0,status:!0}},csfAppliances:{dontCache:!0,name:translate("FortiAnalyzer"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry){return'<f-icon class="ftnt-fortianalyzer-o-no-border"></f-icon>'+`<span>${entry.getLabel()}</span>`},data:()=>csfTopology.buildIfNecessary().then(()=>csfTopology.appliances),tooltipKeys:{serial:new TooltipKey(translate("serial"),escape()),managementIP:new TooltipKey(translate("Management IP/FQDN"),escape()),mgmtPort:new TooltipKey(translate("Management Port"),escape())},searchKeys:{hostname:!0,serial_number:!0,managementIP:!0,mgmtPort:!0},tooltipFooterActions:[new TooltipFooterAction({label:translate("Login"),iconClass:"fa-sign-in",visibleFunction:entry=>entry.canConnectToGui&&entry.canConnectToGui(),onClick:entry=>{entry.connectToGui&&entry.connectToGui()}})]},csfPendingDevices:{dontCache:!0,name:translate("Fabric Device"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry,value){return`<f-icon class="ftnt-fabric-device security-fabric-node discovered"></f-icon><span>${value}</span>`},onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})},data:function(){return Promise.resolve(csfTopology.pendingDevices)},tooltipKeys:{serial:new TooltipKey(translate("sn")),managementIP:new TooltipKey(translate("Management IP")),ha:new TooltipKey(translate("HA Cluster Members"),function(entry){if(Array.isArray(entry.ha)&&entry.ha.length)return entry.ha.reduce(function(prev,serial){return`${prev}<div>${serial}</div>`},"")}),status:new TooltipKey(translate("status"),function(entry){return`<f-icon class="${entry.getStatusIconClass()}"></f-icon>\n                        <span>${entry.getStatusLabel()}</span>`}),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)},function(){return!csfTopology.thisFortigate.state.inMultiVdomMode()})},searchKeys:{serial:!0,parent:function(entry,searchString,searchRegex){var result,intfFormatted;if(entry.parentFortigateId){var parent=csfTopology.getDevice(entry.parentFortigateId);return parent?entry.upstreamInterface?(intfFormatted=Omniselect.formatEntry(entry.upstreamInterface,"firewallInterfaces"),result=translate("{0} via {1}",[parent.getLabel(),intfFormatted])):result=parent.getLabel():result=entry.parentFortigateId,searchRegex.test(result)}},managementIP:!0}},csfPreauthorizedDevices:{dontCache:!0,name:translate("Fabric Device"),valueFunction:function(entry){return entry.getLabel()},formatFunction:function(entry,value){return`<f-icon class="${entry.getIconClass()}"></f-icon><span>${value}</span>`},onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})},data:function(){return Promise.resolve(csfTopology.deviceAuthorizationList)},tooltipKeys:{serial:new TooltipKey(translate("sn")),action:new TooltipKey(translate("Action"),function(entry){const iconClass=entry.getActionIconClass(),action="accept"===entry.action?"authorized":"unauthorized";return`<f-icon class="${iconClass}"></f-icon><span>${translate(action)}</span>`}),status:new TooltipKey(translate("status"),function(entry){return`<f-icon class="${entry.getStatusIconClass()}"></f-icon>\n                        <span>${entry.getStatusLabel()}</span>`}),topology:new TooltipKey("Topology",function(entry){return csfTopology._createTopologyElement(this,entry)},function(){return!csfTopology.thisFortigate.state.inMultiVdomMode()}),ha_list:new TooltipKey(translate("HA Cluster Members"),function(entry){if(Array.isArray(entry.ha_list))return entry.ha_list.reduce(function(prev,serial){return`${prev}<div>${serial}</div>`},"")})},searchKeys:{serial:!0}}}}},825:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(27),__webpack_require__(30),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,BUILD,notify,fLog,fStructure){const DAEMON_DEBUG_URI="/api/v2/monitor/system/debug-logging/",DAEMON_DEBUG_INTERVAL_SECONDS=20,RESOURCES_URI="/api/v2/monitor/system/resource/usage?scope=global",RESOURCES_INTERVAL_SECONDS=45,CSF_STATUS_URI="/api/v2/monitor/system/csf",CMDB_META_URI="/api/v2/cmdb?action=meta",CMDB_PROFILE_URI="/api/v2/monitor/system/cmdb-profiling/",MAX_CAPTURE_DURATION_MINUTES=10,MESSAGE_ID={REGISTER:"fortigateDebuggerRegister",DEREGISTER:"fortgateDebuggerDeregister",INIT_CAPTURE:"fortigateDebuggerInitCapture",CAPTURE_STARTED:"fortigateDebuggerCaptureStarted",STOP_CAPTURE:"fortigateDebuggerStopCapture",CAPTURE_PACKAGED:"fortigateDebuggerCapturePackaged",DEVICE_INFORMATION:"fortigateDebuggerDeviceInformation",DAEMON_LOGS:"fortigateDebuggerDaemonLogs",FINAL_CAPTURE_INFO:"fortigateDebuggerFinalCaptureInformation",CREATE_LOG_ENTRY:"fortigateDebuggerCreateLogEntry"},ORIGIN=fStructure.getOrigin(),BASE_DEVICE_INFO={platform:{hostname:null,model:null,major:null,minor:null,patch:null,build:null,version:null},licenses:null};class Debugger extends inject.Collectable{constructor(){super(),this.registered=!1,this.capturing=!1,this.capturePhase=null,this.captureStartTime=null,this._messageListener=null,this._debugDaemons=null,this._daemonLogs=null,this._daemonLogsInterval=null,this._javascriptLog=null,this._javascriptLogCallbackID=null,this._startingLocation=null,this._locationChanges=null,this._locationChangeDeregister=null,this._cpuResourceUsage=null,this._memoryResourceUsage=null,this._resourceUsageInterval=null,this._lastResourceUsageSampleTime=null,this._cmdbProfilingTopN=null,this._intervalPromise=null}register($INJECTABLE$,$window,state){return()=>{this._listen(),$window.postMessage({messageID:MESSAGE_ID.REGISTER,messageContent:{hostname:state.hostname,model:state.model,modelName:state.model_name,modelNumber:state.model_number,major:BUILD.CONFIG.CONFIG_MAJOR_NUM,minor:BUILD.CONFIG.CONFIG_MINOR_NUM,patch:BUILD.CONFIG.CONFIG_PATCH_NUM,build:BUILD.CONFIG.CONFIG_BUILD_NUMBER,version:state.getFirmwareLabel(),debugSupportedDaemons:state.debug_supported_daemons}},ORIGIN),this.registered=!0}}deregister($INJECTABLE$,$window){return()=>{this.registered&&($window.postMessage({messageID:MESSAGE_ID.DEREGISTER},ORIGIN),this.capturing,$window.removeEventListener("message",this._messageListener),this._messageListener=null,this.registered=!1,this.capturing=!1,this.capturePhase=null)}}stopCapture($INJECTABLE$,$window){return async()=>{this.capturing&&(this._addLogEntry('Sending "StopCapture" message to capture'),$window.postMessage({messageID:MESSAGE_ID.STOP_CAPTURE},ORIGIN),await this._stopDaemonLogging(),await this._stopResourceLogging(),await this._collectCMDBProfilingStats(),this._stopJavascriptLogging(),this._stopLocationLogging(),this._stopCaptureInterval(),this._addLogEntry('Sending "FinalCaptureInfo" message to capture'),$window.postMessage({messageID:MESSAGE_ID.FINAL_CAPTURE_INFO,messageContent:{javascriptLog:this._javascriptLog,startingLocation:this._startingLocation,locationLog:this._locationChanges,daemonLogs:Array.from(this._daemonLogs.entries()).map(([name,entries])=>({daemonName:name,entries:entries})),cpuUsage:this._cpuResourceUsage,memoryUsage:this._memoryResourceUsage,cmdbProfilingTopN:this._cmdbProfilingTopN}},ORIGIN),this._debugDaemons=null,this._daemonLogs=null,this._cpuResourceUsage=null,this._memoryResourceUsage=null,this._lastResourceUsageSampleTime=null,this._javascriptLog=null,this._startingLocation=null,this._locationChanges=null,this._cmdbProfilingTopN=null,this.capturePhase=this.CAPTURE_PHASE.PACKAGING)}}_collectDeviceInformation($INJECTABLE$,$q,state){return()=>{const info=Object.assign({},BASE_DEVICE_INFO,{platform:{hostname:state.hostname,model:state.model,major:BUILD.CONFIG.CONFIG_MAJOR_NUM,minor:BUILD.CONFIG.CONFIG_MINOR_NUM,patch:BUILD.CONFIG.CONFIG_PATCH_NUM,build:BUILD.CONFIG.CONFIG_BUILD_NUMBER,branchPoint:BUILD.CONFIG.CONFIG_BRANCH_POINT,version:state.getFirmwareLabel({withBuildLabel:!0})},state:JSON.parse(JSON.stringify(state.responseData))}),logOnFailure=(fn,msg)=>fn(info).then(null,()=>{this._addLogEntry(`Failed to ${msg}`,{severity:"warn"})});return this._addLogEntry("Collecting device information"),$q.all([logOnFailure(this._collectLicenseInformation,"collect license information"),logOnFailure(this._collectCSFInformation,"collect csf information"),logOnFailure(this._collectTableSizes,"collect cmdb meta information"),logOnFailure(this._resetCMDBProfilingStats,"reset cmdb profiling stats")]).then(()=>info)}}_collectLicenseInformation($INJECTABLE$,notificationRequests){return info=>notificationRequests.license().then(licenses=>{info.licenses=licenses})}_collectCSFInformation($INJECTABLE$,$http){return info=>$http.get(CSF_STATUS_URI).then(response=>info.csf=response.data.results)}_collectTableSizes($INJECTABLE$,$http){return info=>$http.get(CMDB_META_URI).then(response=>{const sizes=[];for(const[path,{size:size}]of Object.entries(response.data.results))sizes.push({path:path,size:size});sizes.sort((a,b)=>b.size-a.size),info.cmdbTableSizes=sizes})}_resetCMDBProfilingStats($INJECTABLE$,$http){return()=>$http.post(`${CMDB_PROFILE_URI}/reset`)}_collectCMDBProfilingStats($INJECTABLE$,$http){return async()=>{this._addLogEntry("Retrieving CMDB profiling top N stats");try{const results=(await $http.get(`${CMDB_PROFILE_URI}/top`)).data.results;this._cmdbProfilingTopN=results.map(property=>({path:property.path,operators:property.operators.map(operator=>({name:operator.name,totalSeconds:Number(operator.total_seconds),callCount:operator.call_count}))}))}catch(e){this._addLogEntry("Failed to retrieve CMDB profiling top N stats",{severity:"error",stack:e.stack})}}}_initializeCapture($INJECTABLE$,$q,$window){return async initCaptureContent=>{this._addLogEntry("Initializing capture");this._debugDaemons=initCaptureContent.debugDaemons,this.capturing=!0,this.capturePhase=this.CAPTURE_PHASE.INITIATING;const[deviceInfo]=await $q.all([this._collectDeviceInformation(),(seconds=>new Promise(resolve=>setTimeout(resolve,1e3*seconds)))(3)]);this._addLogEntry('Sending "DeviceInformation" message to capture'),$window.postMessage({messageID:MESSAGE_ID.DEVICE_INFORMATION,messageContent:deviceInfo},ORIGIN)}}async _finishInitialization(){this._addLogEntry("Finishing capture initialization"),await this._startDaemonLogging(),this._startResourceLogging(),this._startJavascriptLogging(),this._startLocationLogging(),this.capturePhase=this.CAPTURE_PHASE.RECORDING,this.captureStartTime=Date.now(),this._startCaptureInterval()}_startDaemonLogging($INJECTABLE$,$http,$interval){return async()=>{this._addLogEntry("Starting daemon logging");try{this._daemonLogs=new Map,await $http.post(`${DAEMON_DEBUG_URI}start`,{daemons:this._debugDaemons}),this._daemonLogsInterval=$interval(()=>this._updateDaemonsLogs(),1e3*DAEMON_DEBUG_INTERVAL_SECONDS)}catch(e){this._addLogEntry("Failed to start daemon logging",{severity:"error",stack:e.stack})}}}_parseDaemonLogs(results){for(const[id,logStrings]of Object.entries(results)){const[daemon,processID]=id.split("_");let logs=this._daemonLogs.get(daemon);logs||(logs=[],this._daemonLogs.set(daemon,logs));for(const logString of logStrings){const split=logString.split("::");let timestamp,severity,functionName,lineNumber,groupID,groupLabel,message;7===split.length?[timestamp,severity,functionName,lineNumber,groupID,groupLabel,message]=split:[timestamp,severity,groupID,groupLabel,message]=split,logs.push({timestamp:Number(timestamp),severity:severity,processID:Number(processID),functionName:functionName,lineNumber:lineNumber?Number(lineNumber):void 0,groupID:groupID,groupLabel:groupLabel,message:message})}}}_updateDaemonsLogs($INJECTABLE$,$http){return async()=>{this._addLogEntry("Updating daemon logs");try{const response=await $http.post(`${DAEMON_DEBUG_URI}retrieve`);this._parseDaemonLogs(response.data.results)}catch(e){this._addLogEntry("Failed to update daemon logs",{severity:"error",stack:e.stack})}}}_stopDaemonLogging($INJECTABLE$,$http,$interval){return async()=>{this._addLogEntry("Stopping daemon logging"),$interval.cancel(this._daemonLogsInterval),this._daemonLogsInterval=null;const response=await $http.post(`${DAEMON_DEBUG_URI}stop`,{retrieve:!0});this._parseDaemonLogs(response.data.results);for(const daemonLogs of this._daemonLogs.values())daemonLogs.sort((a,b)=>a.timestamp-b.timestamp)}}_startJavascriptLogging(){this._addLogEntry("Starting javascript logging"),this._javascriptLog=[],fLog.stopBackendRecording(),this._javascriptLogCallbackID=fLog.addCallback(message=>{let severity;switch(message.level){case fLog.LOG_LEVEL.INFO:severity="info";break;case fLog.LOG_LEVEL.WARN:severity="warn";break;case fLog.LOG_LEVEL.ERROR:severity="error"}this._javascriptLog.push({timestamp:Date.now(),severity:severity,message:message.getMessage(),stack:message.getShortStack()})})}_stopJavascriptLogging(){this._addLogEntry("Stopping javascript logging"),fLog.removeCallback(this._javascriptLogCallbackID),this._javascriptLogCallbackID=null,fLog.initializeBackendRecording()}_startLocationLogging($INJECTABLE$,$rootScope,$location){return()=>{this._addLogEntry("Starting location logging"),this._startingLocation=$location.url(),this._locationChanges=[],this._locationChangeDeregister=$rootScope.$on("$locationChangeSuccess",()=>{this._locationChanges.push({timestamp:Date.now(),url:$location.url()})})}}_stopLocationLogging(){this._addLogEntry("Stopping location logging"),this._locationChangeDeregister()}_startResourceLogging($INJECTABLE$,$interval){return()=>{this._addLogEntry("Starting resource logging"),this._cpuResourceUsage=[],this._memoryResourceUsage=[],this._lastResourceUsageSampleTime=Date.now(),this._resourceUsageInterval=$interval(()=>this._retrieveLatestResourceUsage(),1e3*RESOURCES_INTERVAL_SECONDS)}}_stopResourceLogging($INJECTABLE$,$interval){return async()=>{this._addLogEntry("Stopping resource logging"),this._resourceUsageInterval&&($interval.cancel(this._resourceUsageInterval),this._resourceUsageInterval=null),await this._retrieveLatestResourceUsage()}}_retrieveLatestResourceUsage($INJECTABLE$,$http){return async()=>{const update=(entryResults,usage,startingIndex=0)=>{const values=[],valuesMap=new Map;let index=0;for(const entry of entryResults){if(index>=startingIndex){const samples=entry.historical["1-min"].values;for(const[time,value]of samples)time>this._lastResourceUsageSampleTime&&(valuesMap.has(time)?valuesMap.get(time).push(value):valuesMap.set(time,[value]))}index++}for(const[time,timeValues]of valuesMap.entries())values.push({timestamp:time,value:timeValues});return values.sort((a,b)=>a.timestamp-b.timestamp),usage.push(...values),values[values.length-1].timestamp};this._addLogEntry("Retrieving resource usage");try{const results=(await $http.get(RESOURCES_URI)).data.results,newLatestSampleTime=update(results.cpu,this._cpuResourceUsage,1);update(results.mem,this._memoryResourceUsage),this._lastResourceUsageSampleTime=newLatestSampleTime}catch(e){this._addLogEntry("Failed to retrieve resource usage",{severity:"error",stack:e.stack})}}}_listen($INJECTABLE$,$window){return()=>{this._messageListener=$window.addEventListener("message",async event=>{const data=event.data;if(event.origin===ORIGIN&&data&&data.messageID)switch(data.messageID){case MESSAGE_ID.INIT_CAPTURE:this._addLogEntry('Retrieved "InitCapture" message from capture'),this._initializeCapture(data.messageContent);break;case MESSAGE_ID.CAPTURE_STARTED:this._addLogEntry('Retrieved "CaptureStarted" message from capture'),await this._finishInitialization();break;case MESSAGE_ID.CAPTURE_PACKAGED:this._addLogEntry('Retrieved "CapturePackaged" message from capture'),this.capturing=!1,this.capturePhase=null,this.captureStartTime=null}})}}_addLogEntry($INJECTABLE$,$window){return(message,options={})=>{$window.postMessage({messageID:MESSAGE_ID.CREATE_LOG_ENTRY,messageContent:{message:message,severity:options.severity,stack:options.stack}},ORIGIN)}}_startCaptureInterval($INJECTABLE$,$interval,$rootScope,lang){return()=>{const durationLimitMS=60*MAX_CAPTURE_DURATION_MINUTES*1e3;this._intervalPromise=$interval(()=>{this.capturing&&Date.now()>this.captureStartTime+durationLimitMS&&$rootScope.$apply(()=>{const message=lang("Maximum capture duration reached").toString();notify.post(message,notify.LEVEL.WARNING),this.stopCapture()})},3e3,null,!1)}}_stopCaptureInterval($INJECTABLE$,$interval){return()=>{this._intervalPromise&&($interval.cancel(this._intervalPromise),this._intervalPromise=null)}}}Debugger.prototype.CAPTURE_PHASE={INITIATING:"initiating",RECORDING:"recording",PACKAGING:"packaging"},ngModule.service("fortigateDebugger",Debugger)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},826:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(10),__webpack_require__(0),__webpack_require__(30),__webpack_require__(49),__webpack_require__(42),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ngModule,$,BUILD,fLog,fPersist,fLocation,notify){ngModule.factory("ftntInterceptor",function($injector,$q,$rootScope,lang){const SPLIT_TASK_VF_NAME=BUILD.SYMBOLS.SPLIT_TASK_VF_NAME;var adminTimeout,connection;return $injector.has("adminTimeout")&&(adminTimeout=$injector.get("adminTimeout")),$injector.has("connection")&&(connection=$injector.get("connection")),{request:function(config){if(config.csfProxy){let fortigate;const topology=$injector.get("csfTopology");if("boolean"==typeof config.csfProxy?(fortigate=topology.selectedFortigate,fLog.warn(`Implicitly proxying request to ${fortigate.serial}.`+"This behavior is deprecated. Pass in the FortiGate explicitly")):fortigate=config.csfProxy,fortigate){let trafficVdom=config.params&&config.params.vdom;!trafficVdom&&!fortigate.isCurrent&&fortigate.state&&fortigate.state.inSplitTaskVdomMode()&&(trafficVdom=SPLIT_TASK_VF_NAME),config.url=fortigate.createCSFURI(config.url,trafficVdom)}}config.headers["X-Requested-With"]="XMLHttpRequest";var c_csrf=fPersist.getCsrfToken();return c_csrf&&(c_csrf=c_csrf.replace(/(^"|"$)/g,""),config.headers["X-CSRFTOKEN"]=c_csrf),adminTimeout&&adminTimeout.resetServerTimeout(),config},responseError:function(rejection){const isCsfProxy=rejection.config.url&&rejection.config.url.startsWith("/csf/");if(-1===rejection.status&&connection)connection.setDisconnected();else if(isCsfProxy||401!==rejection.status){if(500===rejection.status&&rejection.data&&rejection.data.schema_errors){const slide=$injector.get("slide"),url=rejection.config.url,messageHTML=lang("schema_validation_failed_msg",[url]).toString();return notify.post(messageHTML,notify.LEVEL.ERROR,null,{beforeDisplay:$elem=>{$elem[0].querySelector("a").addEventListener("click",event=>{const scope=$rootScope.$new(!0);scope.errors=rejection.data.schema_errors,slide.open({template:'<f-schema-errors errors="::errors"></f-schema-errors>',parentScope:scope,options:{title:lang("Schema Validation Errors - {0}",[url]).toString(),fullHeight:!0}}).finally(()=>scope.$destroy()),event.preventDefault()})}}),$q.resolve(rejection)}}else fLog.stopBackendRecording(),fLog.warn("$http interceptor received a 401. Redirecting to login page."),fLocation.logout();return $q.reject(rejection)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},827:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(9),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,angular,inject){function Geography(CMDB,injector){injector.injectMarked(this),this.geoIPCountries=null,this.dialCodeMaps=null}Geography.prototype.loadDialCodeData=inject.mark(function($http,$q){return function(){if(!this.dialCodeMaps)return $http.get("/api/v2/static/country_codes.json").then(function(response){var data,maps;response.data&&(this.dialCodeMaps=(data=response.data,maps={dialCode:{},countryCode:{}},Object.keys(data).forEach(function(name){var country=data[name],code=country.code,entries=country.dial_code.map(function(dialCode){return{code:code,name:name,dial_code:dialCode}});maps.countryCode[code]=entries,entries.forEach(function(entry){var shortDialCode=entry.dial_code.substring(1);maps.dialCode[shortDialCode]?maps.dialCode[shortDialCode].push(entry):maps.dialCode[shortDialCode]=[entry]})}),maps))}.bind(this));$q.resolve()}}),Geography.prototype.loadCountryCodeData=inject.mark(function(CMDB,$q){return function(){return this.geoIPCountries?$q.resolve():(this.geoIPCountries=new CMDB("system","geoip-country",{prune:!0}).fetch(),this.geoIPCountries.$promise)}}),Geography.prototype.dialCodesFromCountryCode=function(countryCode){return this.dialCodeMaps&&countryCode?("CA"===countryCode&&(countryCode="US"),(this.dialCodeMaps.countryCode[countryCode]||[]).map(function(entry){return entry.dial_code})):""},Geography.prototype.countriesFromDialCode=function(dialCode){return this.dialCodeMaps?this.dialCodeMaps.dialCode[dialCode]:null},Geography.prototype.countryFromPhoneNumber=function(number){if(this.dialCodeMaps){number&&"+"===number[0]&&(number=number.substring(1));var prefix="";return Object.keys(this.dialCodeMaps.dialCode).forEach(function(dialCode){0===number.indexOf(dialCode)&&dialCode.length>prefix.length&&(prefix=dialCode)}),this.dialCodeMaps.dialCode[prefix]||[]}return{}},Geography.prototype.geoipCountryFromCountryCode=function(countryCode){if(this.geoIPCountries){var geoipCountry={name:countryCode};return this.geoIPCountries.some(function(gc){var found=gc.id===countryCode;return found&&(geoipCountry=gc),found}),geoipCountry}return{name:countryCode}},ngModule.service("geography",Geography)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},828:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(30),__webpack_require__(31),__webpack_require__(27),__webpack_require__(829),__webpack_require__(436)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,BUILD,fLog,fDom,notify){class DashboardConfig extends inject.Collectable{constructor(navSuppression,state,fortiviewData,dashboardCommon){super(),Object.defineProperty(this,"_supportWifiDashboard",{get:()=>BUILD.PLATFORM.HAVE_CAPWAP_AC&&state.featureEnabled("gui-wireless-controller")&&!navSuppression.SUPPRESSED_CHECK.wireless_mode_wtp(),configurable:!1}),this._createDashboardConfig(),this.WIDGET_CATEGORIES=dashboardCommon.WIDGET_CATEGORIES,this.WIDGET_CATEGORY_ICONS={[this.WIDGET_CATEGORIES.FORTIVIEW]:"fa-area-chart",[this.WIDGET_CATEGORIES.SECURITY_FABRIC]:"ftnt-security-fabric",[this.WIDGET_CATEGORIES.NETWORK]:"ftnt-interface",[this.WIDGET_CATEGORIES.SYSTEM]:"fa-info-circle",[this.WIDGET_CATEGORIES.RESOURCES]:"fa-area-chart",[this.WIDGET_CATEGORIES.SECURITY]:"ftnt-firewall",[this.WIDGET_CATEGORIES.USER]:"fa-users",[this.WIDGET_CATEGORIES.WIFI]:"ftnt-wifi-controller"};const DEFAULT_TIME_PERIOD=fortiviewData.TIME_PERIODS.ONE_HOUR;this.WIDGET_DEFAULT_CONFIG={[this.WIDGET_TYPES.DEVICE_INVENTORY]:{"device-list-view-type":"hardware_vendor","table-visualization":"table"},[this.WIDGET_TYPES.FORTICLIENT]:{"device-list-online":"online","device-list-telemetry":"sending","device-list-view-type":"interface","table-visualization":"table"},[this.WIDGET_TYPES.FORTIVIEW]:{"fortiview-timeframe":DEFAULT_TIME_PERIOD}}}getWidgetDefaultConfig(type){return this.WIDGET_DEFAULT_CONFIG[type]||{}}createDefaultDashboard($INJECTABLE$,$http,state,dashboardCommon){return async name=>{const WIDGET_CONFIG=this.getWidgetConfig(),dashboard=this.DASHBOARDS[name];if(dashboard&&this.isScopeValid(dashboard.scope)){const isMainDashboard=name===this.DEFAULT_DASHBOARDS.MAIN,isStandalone=dashboard.type===this.LAYOUT_TYPE.STANDALONE;try{const widgets=[];let index=0;for(const defaultWidget of dashboard.widgets){const widget=WIDGET_CONFIG[defaultWidget.type];widget&&this.isScopeValid(widget.scope)&&this.isWidgetPermitted(widget)&&(widgets.push(Object.assign({type:defaultWidget.type,width:defaultWidget.width||widget.defaultRelativeWidth,height:defaultWidget.height||widget.defaultRelativeHeight,"x-pos":defaultWidget.xPosition||index,"y-pos":defaultWidget.yPosition},defaultWidget.config)),index++)}(widgets.length||isMainDashboard)&&await $http.post(dashboardCommon.DASHBOARD_CMDB_URI,{name:dashboard.name,"layout-type":dashboard.type,columns:dashboard.columns,scope:state.getCurrentVDOMScope(state.VDOM_SCOPE.VDOM),permanent:isMainDashboard?"enable":"disable",vdom:BUILD.PLATFORM.HAVE_VIRTUAL_DOMAIN?state.current_vdom:null,widget:widgets,csf:dashboard.csf||(isStandalone?"disable":"enable")})}catch(e){fLog.error(e)}}}}async createAllDefaultDashboards(defaultDashboards){defaultDashboards||(defaultDashboards=DashboardConfig.prototype.DEFAULT_MINIMAL_DASHBOARDS);for(const dashboard of Object.values(defaultDashboards))try{await this.createDefaultDashboard(dashboard)}catch(e){fLog.error(e)}}addStandaloneDashboard($INJECTABLE$,slide,lang,$rootScope,$http,state,dashboardCommon){return prefilledWidget=>{const WIDGET_CONFIG=this.getWidgetConfig(),filteredWidgetTypes={};Object.entries(this.WIDGET_TYPES).forEach(([key,type])=>{const widget=WIDGET_CONFIG[type];widget&&this.isScopeValid(widget.scope)&&this.isWidgetPermitted(widget)&&widget.supportStandalone&&(filteredWidgetTypes[key]=type)});const scope=$rootScope.$new(!0);scope.data={WIDGET_TYPES:filteredWidgetTypes,WIDGET_CATEGORIES:this.WIDGET_CATEGORIES,WIDGET_CATEGORY_ICONS:this.WIDGET_CATEGORY_ICONS,WIDGET_CONFIGURATION:WIDGET_CONFIG,currentWidgets:[],addCallback:async(newWidget,dashboard)=>{newWidget.id=1,newWidget.width=1,newWidget.height=1,newWidget["x-pos"]=0,newWidget["y-pos"]=0;const dashboardType=lang(`dashboard_widget_type::${newWidget.type}`).toString();try{const widgetModel=dashboardCommon.createWidgetModel(newWidget,WIDGET_CONFIG[newWidget.type]),defaultDashboard=await dashboardCommon.getDefaults();Object.assign(defaultDashboard,dashboard,{widget:[widgetModel.getModelData()],vdom:state.current_vdom,"layout-type":"standalone",csf:"disable"}),await $http.post(dashboardCommon.DASHBOARD_CMDB_URI,defaultDashboard),state.refresh()}catch(e){notify.post(lang("Failed to add {DASHBOARD_TYPE}",[dashboardType]),notify.LEVEL.ERROR)}},prefilledWidget:prefilledWidget,dashboardLayoutType:"standalone",fortigateSelectionMode:this.FORTIGATE_SELECTION_MODE.WIDGET,asStandalone:!0};return slide.open("dashboardAddWidget",{template:'<f-widget-selection data="::data"></f-widget-selection>',parentScope:scope,options:{title:lang("Add Monitor").toString(),fullHeight:!0,width:dashboardCommon.ADD_EDIT_WIDGET_SLIDE_WIDTH}}).finally(()=>{scope.$destroy()})}}editDashboard($INJECTABLE$,$location,$rootScope,$route,slide,lang,state,dashboardCommon){return(mkey,name,predefinedDashboard,noRedirect,isStandalone)=>{const target=isStandalone?"Monitor":"Dashboard",title=lang(mkey?`Edit ${target}`:`Add ${target}`).toString(),scope=$rootScope.$new();return scope.mkey=mkey,scope.data={predefinedDashboard:predefinedDashboard},slide.open("dashboardEdit",{template:'<f-dashboard-edit\n                        mkey="::mkey" data="::data"></f-dashboard-edit>',parentScope:scope,options:{title:title,fullHeight:!0}}).then(()=>{if(mkey)name&&name!==scope.data.updatedDashboard.name&&state.refresh();else if(state.refresh(),noRedirect){const message=lang("{DASHBOARD_TYPE} added successfully",[scope.data.updatedDashboard.name]);notify.post(message,notify.LEVEL.SUCCESS)}else{const id=scope.data.updatedDashboard.id;$location.url(`${dashboardCommon.DASHBOARD_URI}/${id}`)}}).finally(function(){scope.$destroy()})}}deleteAllDashboards($INJECTABLE$,$http,dashboardCommon){return async()=>{let dashboards=(await $http.get(dashboardCommon.DASHBOARD_CMDB_URI)).data.results.filter(dashboard=>this.isSameVDOM(dashboard.vdom));await Promise.all(dashboards.map(dashboard=>$http.delete(`${dashboardCommon.DASHBOARD_CMDB_URI}/${dashboard.id}`)))}}isScopeValid($INJECTABLE$,state){return scope=>{const currentScope=state.getCurrentVDOMScope();return!state.vdom_mode||(scope===this.SCOPE.BOTH||(scope===this.SCOPE.GLOBAL?currentScope===state.VDOM_SCOPE.GLOBAL:currentScope===state.VDOM_SCOPE.VDOM))}}isWidgetPermitted($INJECTABLE$,state){return widget=>widget&&widget.permissions.every(perm=>state.adminHasReadPermission(perm))}isSameVDOM($INJECTABLE$,state){return vdom=>{let same=!0;return BUILD.PLATFORM.HAVE_VIRTUAL_DOMAIN&&(same=vdom===state.current_vdom),same}}createTooltipTable($INJECTABLE$,lang){return object=>{const children=Object.keys(object).map(key=>{const value=object[key].value,iconClass=object[key].iconClass||"",tableRowChildren=[];return iconClass&&tableRowChildren.push(fDom.elem("f-icon",{className:iconClass})),tableRowChildren.push(fDom.elem("span",{textContent:value})),fDom.elem("tr",{className:"table key-value"},{children:[fDom.elem("td",{textContent:lang(key).toString()}),fDom.elem("td",null,{children:tableRowChildren})]})});return fDom.elem("table",{className:"table key-value"},{children:[fDom.elem("tbody",null,{children:children})]})}}getWidgetConfig($INJECTABLE$,state,fortiviewConfig,lang){return()=>{const ACCESS_GROUP=state.ACCESS_GROUP,mapping={};return mapping[this.WIDGET_TYPES.SYSTEM_INFO]={component:"f-system-information-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SYSTEM,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},mapping[this.WIDGET_TYPES.LICENSE_INFO]={component:"f-license-information-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SYSTEM,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},state.is_vm&&(mapping[this.WIDGET_TYPES.VM_INFO]={component:"f-vm-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),mapping[this.WIDGET_TYPES.FORTICLOUD]={component:"f-forticloud-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},state.inSplitTaskManagementVdom()||(state.featureEnabled("gui-endpoint-control")&&(mapping[this.WIDGET_TYPES.VULNERABILITY_SUMMARY]={component:"f-vulnerability-summary-widget",category:this.WIDGET_CATEGORIES.SECURITY,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.UTM_ENDPOINT_CONTROL,ACCESS_GROUP.USER_DEVICE]},mapping[this.WIDGET_TYPES.HOST_SCAN_SUMMARY]={component:"f-host-scan-summary-widget",category:this.WIDGET_CATEGORIES.SECURITY,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.UTM_ENDPOINT_CONTROL,ACCESS_GROUP.USER_DEVICE]}),mapping[this.WIDGET_TYPES.FORTIVIEW]={hidden:!0,component:"f-fortiview-widget",customizeComponent:"f-edit-fortiview-widget",category:this.WIDGET_CATEGORIES.FORTIVIEW,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.FORTIVIEW],supportStandalone:!0,supportCSF:!0,formatter:entry=>{const type=entry["fortiview-type"],compareBy=entry["fortiview-sort-by"],title=entry.title||fortiviewConfig.createDefaultWidgetTitle(type,compareBy);return`${entry.dashboard.name} - ${title}`},tooltipFormatter:entry=>this.createTooltipTable({type:{value:lang(entry.type).toString()},dashboard:{value:entry.dashboard.name},device:{value:lang(entry["fortiview-device"]||"Best Available Device").toString(),iconClass:fortiviewConfig.getDeviceIcon(entry["fortiview-device"])},"Time Period":{value:lang(entry["fortiview-timeframe"]).toString(),iconClass:"fa-clock-o"}})},Object.keys(fortiviewConfig._FORTIVIEW_CONFIG).forEach(key=>{const config=fortiviewConfig._FORTIVIEW_CONFIG[key];if(config.dashboardWidget){let labelPrefix=config.widgetLabelPrefix;null==labelPrefix&&(labelPrefix=config.widgetCategory?"top":"FortiView");const label=labelPrefix?`${lang(labelPrefix)} ${lang(config.lang)}`:lang(config.lang).toString();mapping[`${this.WIDGET_TYPES.FORTIVIEW}::${config.type}`]={component:"f-fortiview-widget",customizeComponent:"f-edit-fortiview-widget",category:config.widgetCategory||this.WIDGET_CATEGORIES.FORTIVIEW,label:label,subsection:config.deemphasized||!1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.FORTIVIEW],supportStandalone:!0,standaloneName:label}}})),mapping[this.WIDGET_TYPES.FABRIC_DEVICE]={component:"f-fabric-device-widget",customizeComponent:"f-edit-fabric-device-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.FABRIC]},state.featureEnabledInAnyVDOM("gui-antivirus")&&(mapping[this.WIDGET_TYPES.ATP_STATS]={component:"f-atp-stats-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SECURITY,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0}),mapping[this.WIDGET_TYPES.CPU_USAGE]={component:"f-cpu-usage-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},mapping[this.WIDGET_TYPES.MEMORY_USAGE]={component:"f-mem-usage-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},state.has_log_disk&&(mapping[this.WIDGET_TYPES.DISK_USAGE]={component:"f-disk-usage-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0}),mapping[this.WIDGET_TYPES.LOG_RATE]={component:"f-log-rate-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},mapping[this.WIDGET_TYPES.SESSIONS]={component:"f-sessions-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},mapping[this.WIDGET_TYPES.SESSION_RATE]={component:"f-session-rate-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.RESOURCES,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},mapping[this.WIDGET_TYPES.ADMINS]={component:"f-system-admins-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SYSTEM,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0},state.featureEnabled("gui-ips")&&state.featureEnabled("gui-dnsfilter")&&(mapping[this.WIDGET_TYPES.BOTNET_ACTIVITY]={component:"f-botnet-activity-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),mapping[this.WIDGET_TYPES.SECURITY_FABRIC]={component:"f-security-fabric-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.FABRIC]},mapping[this.WIDGET_TYPES.TRAFFIC_HISTORY]={component:"f-traffic-history-widget",customizeComponent:"f-edit-traffic-history-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.BOTH,permissions:[ACCESS_GROUP.NETWORK_CFG],supportCSF:!0},BUILD.PLATFORM.HAVE_IPMC_SENSOR&&(mapping[this.WIDGET_TYPES.SENSOR_INFO]={component:"f-sensor-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG]}),BUILD.PLATFORM.HAVE_HA&&(mapping[this.WIDGET_TYPES.HA_STATUS]={component:"f-system-ha-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SYSTEM,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:this.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM_CFG],supportCSF:!0}),state.getOperationMode()===state.OPERATION_MODE.NAT&&(mapping[this.WIDGET_TYPES.ROUTING]={component:"f-routing-monitor-widget",customizeComponent:"f-edit-routing-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.NETWORK_ROUTECFG],supportStandalone:!0,supportCSF:!0,standaloneName:"Routing Monitor"},mapping[this.WIDGET_TYPES.DHCP]={component:"f-dhcp-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.NETWORK_CFG],supportStandalone:!0,supportCSF:!0,standaloneName:"DHCP Monitor"},state.featureEnabled("gui-wan-load-balancing")&&(mapping[this.WIDGET_TYPES.VIRTUAL_WAN]={component:"f-virtual-wan-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.NETWORK_CFG],supportStandalone:!0,supportCSF:!0,standaloneName:"SD-WAN Monitor"}),state.featureEnabled("gui-load-balance")&&(mapping[this.WIDGET_TYPES.LOAD_BALANCE]={component:"f-load-balance-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.FIREWALL_OTHERS],supportStandalone:!0,supportCSF:!0,standaloneName:"Load Balance Monitor"})),state.featureEnabled("gui-email-collection")&&(mapping[this.WIDGET_TYPES.COLLECTED_EMAIL]={component:"f-collected-email-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.USER,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.USER_DEVICE],supportStandalone:!0,supportCSF:!0,standaloneName:"Collected Email monitor"}),mapping[this.WIDGET_TYPES.FORTICLIENT]={component:"f-forticlient-monitor-widget",customizeComponent:"f-edit-device-list-monitor-widget",category:this.WIDGET_CATEGORIES.USER,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.UTM_ENDPOINT_CONTROL],supportStandalone:!0,supportCSF:!0,supportMutableVisualizationOptions:["charts","table"],standaloneName:"FortiClient Monitor"},mapping[this.WIDGET_TYPES.DEVICE_INVENTORY]={component:"f-device-inventory-monitor-widget",customizeComponent:"f-edit-device-list-monitor-widget",category:this.WIDGET_CATEGORIES.USER,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.USER_DEVICE],supportStandalone:!0,supportCSF:!0,supportMutableVisualizationOptions:["charts","table"],standaloneName:"Device Inventory Monitor"},mapping[this.WIDGET_TYPES.FORTIGUARD_QUOTA]={component:"f-fortiguard-quota-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.USER,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.UTM_WF],supportStandalone:!0,supportCSF:!0,standaloneName:"FortiGuard Quota Monitor"},mapping[this.WIDGET_TYPES.IPSEC_VPN]={component:"f-ipsec-vpn-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.VPN],supportStandalone:!0,supportCSF:!0,standaloneName:"IPsec Monitor"},mapping[this.WIDGET_TYPES.SSL_VPN]={component:"f-ssl-vpn-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.NETWORK,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.VPN],supportStandalone:!0,supportCSF:!0,standaloneName:"SSL-VPN Monitor"},mapping[this.WIDGET_TYPES.FIREWALL_USER]={component:"f-firewall-user-monitor-widget",customizeComponent:"f-edit-firewall-user-monitor-widget",category:this.WIDGET_CATEGORIES.USER,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.USER_DEVICE],supportStandalone:!0,supportCSF:!0,standaloneName:"Firewall User Monitor"},mapping[this.WIDGET_TYPES.QUARANTINE]={component:"f-quarantine-monitor-widget",customizeComponent:"f-edit-monitor-widget",category:this.WIDGET_CATEGORIES.SECURITY,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.USER_DEVICE],supportStandalone:!0,supportCSF:!0,standaloneName:"Quarantine Monitor"},this._supportWifiDashboard&&(mapping[this.WIDGET_TYPES.AP_STATUS]={component:"f-managed-ap-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"FortiAP Status Monitor"},mapping[this.WIDGET_TYPES.CHANNEL_UTILIZATION]={component:"f-managed-ap-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,hasBandSelection:!0,standaloneName:"Channel Utilization Monitor"},mapping[this.WIDGET_TYPES.INTERFERING_SSIDS]={component:"f-managed-ap-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"Interfering SSIDs Monitor"},mapping[this.WIDGET_TYPES.CLIENT_SIGNAL_STRENGTH]={component:"f-wifi-client-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"Signal Strength Monitor"},mapping[this.WIDGET_TYPES.CLIENTS_BY_AP]={component:"f-wifi-client-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"FortiAP Clients Monitor"},mapping[this.WIDGET_TYPES.HISTORICAL_CLIENTS]={component:"f-historical-client-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"Historical Clients Monitor"},mapping[this.WIDGET_TYPES.WIFI_LOGIN_FAILURES]={component:"f-login-failures-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"Login Failures Monitor"},mapping[this.WIDGET_TYPES.ROGUE_AP]={component:"f-rogue-ap-widget",customizeComponent:"f-edit-wifi-widget",category:this.WIDGET_CATEGORIES.WIFI,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:this.SCOPE.VDOM,permissions:[ACCESS_GROUP.WIFI],supportStandalone:!0,supportCSF:!0,standaloneName:"Rogue APs Monitor"}),mapping}}_createDashboardConfig($INJECTABLE$,fortiviewData,lang){return()=>{const DEFAULT_FV_TIME_PERIOD=fortiviewData.TIME_PERIODS.ONE_HOUR;this.DASHBOARDS={[this.DEFAULT_DASHBOARDS.MAIN]:{name:lang("Status").toString(),scope:this.SCOPE.BOTH,type:this.LAYOUT_TYPE.RESPONSIVE,widgets:[{type:this.WIDGET_TYPES.SYSTEM_INFO},{type:this.WIDGET_TYPES.LICENSE_INFO},{type:this.WIDGET_TYPES.VM_INFO},{type:this.WIDGET_TYPES.FORTICLOUD},{type:this.WIDGET_TYPES.SECURITY_FABRIC},{type:this.WIDGET_TYPES.ADMINS},{type:this.WIDGET_TYPES.CPU_USAGE},{type:this.WIDGET_TYPES.MEMORY_USAGE},{type:this.WIDGET_TYPES.SESSIONS}]},[this.DEFAULT_DASHBOARDS.SECURITY]:{name:lang("Security").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.RESPONSIVE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,config:{"fortiview-type":"compromisedHosts","fortiview-sort-by":"verdict","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}},{type:this.WIDGET_TYPES.FORTIVIEW,config:{"fortiview-type":"threats","fortiview-sort-by":"threatLevel","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}},{type:this.WIDGET_TYPES.VULNERABILITY_SUMMARY},{type:this.WIDGET_TYPES.HOST_SCAN_SUMMARY},{type:this.WIDGET_TYPES.FORTIVIEW,config:{"fortiview-type":"endpointDevices","fortiview-sort-by":"vulnerabilities","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.NETWORK]:{name:lang("Network").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.RESPONSIVE,widgets:[{type:this.WIDGET_TYPES.ROUTING,config:{"router-view-type":"staticdynamic"}},{type:this.WIDGET_TYPES.DHCP},{type:this.WIDGET_TYPES.VIRTUAL_WAN},{type:this.WIDGET_TYPES.IPSEC_VPN},{type:this.WIDGET_TYPES.SSL_VPN}]},[this.DEFAULT_DASHBOARDS.USER_DEVICES]:{name:lang("Users & Devices").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.RESPONSIVE,widgets:[{type:this.WIDGET_TYPES.DEVICE_INVENTORY,config:{"device-list-view-type":"hardware_vendor","table-visualization":"charts"}},{type:this.WIDGET_TYPES.FORTICLIENT,config:{"device-list-online":"online","device-list-telemetry":"sending","device-list-view-type":"interface","table-visualization":"charts"}},{type:this.WIDGET_TYPES.FIREWALL_USER},{type:this.WIDGET_TYPES.QUARANTINE}]},[this.DEFAULT_DASHBOARDS.SOURCE]:{name:lang("FortiView Sources").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"source","fortiview-sort-by":"bytes","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.DESTINATION]:{name:lang("FortiView Destinations").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"destination","fortiview-sort-by":"bytes","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.APPLICATION]:{name:lang("FortiView Applications").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"application","fortiview-sort-by":"bytes","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.WEBSITE]:{name:lang("FortiView Web Sites").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"website","fortiview-sort-by":"sessions","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.THREATS]:{name:lang("FortiView Threats").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"threats","fortiview-sort-by":"threatLevel","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.COMPROMISED_HOSTS]:{name:lang("FortiView Compromised Hosts").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"compromisedHosts","fortiview-sort-by":"verdict","fortiview-timeframe":fortiviewData.TIME_PERIODS.REALTIME,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.POLICY]:{name:lang("FortiView Policies").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"policy","fortiview-sort-by":"bytes","fortiview-timeframe":DEFAULT_FV_TIME_PERIOD,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.SESSIONS]:{name:lang("FortiView Sessions").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIVIEW,xposition:0,yposition:0,width:6,height:3,config:{"fortiview-type":"sessions","fortiview-sort-by":"bytes","fortiview-timeframe":fortiviewData.TIME_PERIODS.REALTIME,"fortiview-visualization":"table"}}]},[this.DEFAULT_DASHBOARDS.DEVICE_INVENTORY]:{name:lang("Device Inventory Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.DEVICE_INVENTORY,xposition:0,yposition:0,width:6,height:3,config:{"device-list-view-type":"hardware_vendor","table-visualization":"charts"}}]},[this.DEFAULT_DASHBOARDS.ROUTING]:{name:lang("Routing Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.ROUTING,xposition:0,yposition:0,width:6,height:3,config:{"router-view-type":"staticdynamic"}}]},[this.DEFAULT_DASHBOARDS.DHCP]:{name:lang("DHCP Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.DHCP,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.VIRTUAL_WAN]:{name:lang("SD-WAN Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.VIRTUAL_WAN,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.FORTIGUARD_QUOTA]:{name:lang("FortiGuard Quota Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTIGUARD_QUOTA,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.IPSEC_VPN]:{name:lang("IPsec Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.IPSEC_VPN,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.SSL_VPN]:{name:lang("SSL-VPN Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.SSL_VPN,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.FIREWALL_USER]:{name:lang("Firewall User Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FIREWALL_USER,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.QUARANTINE]:{name:lang("Quarantine Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.QUARANTINE,xposition:0,yposition:0,width:6,height:3}]},[this.DEFAULT_DASHBOARDS.FORTICLIENT]:{name:lang("FortiClient Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.FORTICLIENT,xposition:0,yposition:0,width:6,height:3}]}},this._supportWifiDashboard&&(this.DASHBOARDS[this.DEFAULT_DASHBOARDS.WIFI_CLIENTS]={name:lang("FortiAP Clients Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.CLIENTS_BY_AP,xposition:0,yposition:0,width:6,height:3,config:{"wifi-band":"both"}}]},this.DASHBOARDS[this.DEFAULT_DASHBOARDS.ROGUE_AP]={name:lang("Rogue APs Monitor").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.STANDALONE,columns:12,widgets:[{type:this.WIDGET_TYPES.ROGUE_AP,xposition:0,yposition:0,width:6,height:3}]},this.DASHBOARDS[this.DEFAULT_DASHBOARDS.WIFI]={name:lang("wifi").toString(),scope:this.SCOPE.VDOM,type:this.LAYOUT_TYPE.RESPONSIVE,widgets:[{type:this.WIDGET_TYPES.AP_STATUS},{type:this.WIDGET_TYPES.CHANNEL_UTILIZATION,config:{"wifi-band":"both"}},{type:this.WIDGET_TYPES.CLIENTS_BY_AP,config:{"wifi-band":"both"}},{type:this.WIDGET_TYPES.CLIENT_SIGNAL_STRENGTH,config:{"wifi-band":"both"}},{type:this.WIDGET_TYPES.ROGUE_AP},{type:this.WIDGET_TYPES.HISTORICAL_CLIENTS,config:{"wifi-band":"both"}},{type:this.WIDGET_TYPES.INTERFERING_SSIDS,config:{"wifi-band":"both"}},{type:this.WIDGET_TYPES.WIFI_LOGIN_FAILURES}]})}}WIDGET_TYPES($INJECTABLE$,fortiviewConfig){const types={SYSTEM_INFO:"sysinfo",LICENSE_INFO:"licinfo",VM_INFO:"vminfo",FABRIC_DEVICE:"fabric-device",FORTICLOUD:"forticloud",FORTIVIEW:"fortiview",VULNERABILITY_SUMMARY:"vulnerability-summary",HOST_SCAN_SUMMARY:"host-scan-summary",ATP_STATS:"analytics",ADMINS:"admins",CPU_USAGE:"cpu-usage",MEMORY_USAGE:"memory-usage",LOG_RATE:"log-rate",SESSIONS:"sessions",SESSION_RATE:"session-rate",TRAFFIC_HISTORY:"tr-history",SECURITY_FABRIC:"security-fabric",DISK_USAGE:"disk-usage",SENSOR_INFO:"sensor-info",BOTNET_ACTIVITY:"botnet-activity",HA_STATUS:"ha-status",ROUTING:"routing",FORTICLIENT:"forticlient",DEVICE_INVENTORY:"device-inventory",DHCP:"dhcp",VIRTUAL_WAN:"virtual-wan",FORTIGUARD_QUOTA:"fortiguard-quota",IPSEC_VPN:"ipsec-vpn",SSL_VPN:"ssl-vpn",LOAD_BALANCE:"load-balance",FIREWALL_USER:"firewall-user",QUARANTINE:"quarantine",COLLECTED_EMAIL:"collected-email",AP_STATUS:"ap-status",CHANNEL_UTILIZATION:"channel-utilization",INTERFERING_SSIDS:"interfering-ssids",CLIENT_SIGNAL_STRENGTH:"client-signal-strength",CLIENTS_BY_AP:"clients-by-ap",HISTORICAL_CLIENTS:"historical-clients",WIFI_LOGIN_FAILURES:"wifi-login-failures",ROGUE_AP:"rogue-ap"};return Object.keys(fortiviewConfig._FORTIVIEW_CONFIG).forEach(key=>{const config=fortiviewConfig._FORTIVIEW_CONFIG[key];config.dashboardWidget&&(types[`FORTIVIEW::${config.type}`]=`${types.FORTIVIEW}::${config.type}`)}),types}}DashboardConfig.prototype.SCOPE={BOTH:"both",VDOM:"vdom",GLOBAL:"global"},DashboardConfig.prototype.LAYOUT_TYPE={RESPONSIVE:"responsive",FIXED:"fixed",STANDALONE:"standalone"},DashboardConfig.prototype.DEFAULT_DASHBOARDS={MAIN:"main",SECURITY:"security",NETWORK:"network",USER_DEVICES:"user_devices",WIFI:"wifi",SOURCE:"source",DESTINATION:"destination",APPLICATION:"application",WEBSITE:"website",EVENTS:"events",THREATS:"threats",COMPROMISED_HOSTS:"compromised_hosts",POLICY:"policy",SESSIONS:"sessions",DEVICE_INVENTORY:"device_inventory",ROUTING:"routing",DHCP:"dhcp",VIRTUAL_WAN:"virtual_wan",FORTIGUARD_QUOTA:"fortiguard_quota",IPSEC_VPN:"ipsec_vpn",SSL_VPN:"ssl_vpn",FIREWALL_USER:"firewall_user",QUARANTINE:"quaratine",FORTICLIENT:"forticlient",WIFI_CLIENTS:"wifi_clients",ROGUE_AP:"rogue_ap"},DashboardConfig.prototype.DEFAULT_EXPANDED_DASHBOARDS=[DashboardConfig.prototype.DEFAULT_DASHBOARDS.MAIN,DashboardConfig.prototype.DEFAULT_DASHBOARDS.WIFI,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SOURCE,DashboardConfig.prototype.DEFAULT_DASHBOARDS.DESTINATION,DashboardConfig.prototype.DEFAULT_DASHBOARDS.APPLICATION,DashboardConfig.prototype.DEFAULT_DASHBOARDS.WEBSITE,DashboardConfig.prototype.DEFAULT_DASHBOARDS.THREATS,DashboardConfig.prototype.DEFAULT_DASHBOARDS.COMPROMISED_HOSTS,DashboardConfig.prototype.DEFAULT_DASHBOARDS.POLICY,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SESSIONS,DashboardConfig.prototype.DEFAULT_DASHBOARDS.DEVICE_INVENTORY,DashboardConfig.prototype.DEFAULT_DASHBOARDS.ROUTING,DashboardConfig.prototype.DEFAULT_DASHBOARDS.DHCP,DashboardConfig.prototype.DEFAULT_DASHBOARDS.VIRTUAL_WAN,DashboardConfig.prototype.DEFAULT_DASHBOARDS.FORTIGUARD_QUOTA,DashboardConfig.prototype.DEFAULT_DASHBOARDS.IPSEC_VPN,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SSL_VPN,DashboardConfig.prototype.DEFAULT_DASHBOARDS.FIREWALL_USER,DashboardConfig.prototype.DEFAULT_DASHBOARDS.QUARANTINE,DashboardConfig.prototype.DEFAULT_DASHBOARDS.FORTICLIENT,DashboardConfig.prototype.DEFAULT_DASHBOARDS.WIFI_CLIENTS,DashboardConfig.prototype.DEFAULT_DASHBOARDS.ROGUE_AP],DashboardConfig.prototype.DEFAULT_MINIMAL_DASHBOARDS=[DashboardConfig.prototype.DEFAULT_DASHBOARDS.MAIN,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SECURITY,DashboardConfig.prototype.DEFAULT_DASHBOARDS.NETWORK,DashboardConfig.prototype.DEFAULT_DASHBOARDS.USER_DEVICES,DashboardConfig.prototype.DEFAULT_DASHBOARDS.WIFI,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SOURCE,DashboardConfig.prototype.DEFAULT_DASHBOARDS.DESTINATION,DashboardConfig.prototype.DEFAULT_DASHBOARDS.APPLICATION,DashboardConfig.prototype.DEFAULT_DASHBOARDS.WEBSITE,DashboardConfig.prototype.DEFAULT_DASHBOARDS.POLICY,DashboardConfig.prototype.DEFAULT_DASHBOARDS.SESSIONS],DashboardConfig.prototype.FORTIGATE_SELECTION_MODE={WIDGET:"widget",DASHBOARD:"dashboard"},ngModule.factory("dashboardConfig",DashboardConfig)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},829:function(module,exports,__webpack_require__){"use strict";const ngModule=__webpack_require__(29),angular=__webpack_require__(9),inject=__webpack_require__(26),BUILD=__webpack_require__(0),patterns=__webpack_require__(28);class DashboardEdit extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,state,$q){return()=>{const promises=[this._getAllDashboards(),this._getSchema()];this.mkey||promises.push(this._getDefaults()),this.loading=!0,this.predefined=this.data.predefinedDashboard,this.csfEnabled=state.csf_enabled,$q.all(promises).then(()=>{var i;if(this.mkey){for(i=0;i<this.dashboards.length;i++)if(this.dashboards[i].id===this.mkey){this.dashboard=this.dashboards[i];break}this.currentName=this.dashboard.name}else this.dashboard=this.defaults,BUILD.PLATFORM.HAVE_VIRTUAL_DOMAIN&&(this.dashboard.vdom=state.current_vdom);this.original=Object.assign({},this.dashboard),this.loading=!1})}}_getAllDashboards($INJECTABLE$,$http,dashboardConfig,dashboardCommon){return()=>$http.get(dashboardCommon.DASHBOARD_CMDB_URI).then(response=>{this.dashboards=response.data.results.filter(dashboard=>dashboardConfig.isSameVDOM(dashboard.vdom))})}_getSchema($INJECTABLE$,dashboardCommon){return async()=>{this.schema=await dashboardCommon.getSchema()}}_getDefaults($INJECTABLE$,dashboardCommon){return async()=>{const dashboardDefault=await dashboardCommon.getDefaults();this.defaults=Object.assign(dashboardDefault,this.predefined)}}isStandalone(){return this.dashboard&&"standalone"===this.dashboard["layout-type"]}submit($INJECTABLE$,$scope,$http,dashboardCommon){return()=>{let promise;if(!this.form.$valid)return void $scope.$broadcast("validation-msg_show");const uri=`${dashboardCommon.DASHBOARD_CMDB_URI}${this.mkey||""}`,method=this.mkey?"put":"post";return(promise=$http[method](uri,this.dashboard)).then(response=>{var dashboardCopy=angular.extend(this.dashboard,{id:response.data.mkey});delete dashboardCopy.widgets,this.data.updatedDashboard=dashboardCopy,this.slideContainer.slide.done()})}}}DashboardEdit.prototype.XSS_PATTERN=patterns.commonRegExp.XSS;ngModule.component("fDashboardEdit",{templateUrl:__webpack_require__(830),controller:DashboardEdit,bindings:{mkey:"<?",data:"=?"},require:{slideContainer:"?^fSlideContainer"}}),ngModule.directive("fUniqueDashboardName",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){var current,dashboards=[];scope.$watch(function(){return scope.$eval(attrs.dashboards)},function(value){if(value&&Array.isArray(value)){const isStandalone=scope.$eval(attrs.isStandalone);dashboards=value.filter(dashboard=>"standalone"===dashboard["layout-type"]===isStandalone),ngModel.$validate()}}),scope.$watch(function(){return scope.$eval(attrs.current)},function(value){current=value}),ngModel.$validators.fUniqueDashboardName=function(value){return!!ngModel.$isEmpty(value)||value===current||dashboards.every(function(dashboard){return dashboard.name!==value})}}}})},830:function(module,exports){var path="/migadmin/ng/system/dashboard/f-dashboard-edit.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog loading="$ctrl.loading" hide-title="::true" read-only="::false"\n    form="::$ctrl.form" submit="$ctrl.submit()">\n    <section ng-if="!$ctrl.loading">\n        <f-field error-messages="{\n            pattern: \'err_xss\',\n            fUniqueDashboardName: $ctrl.isStandalone() ? \'err_unique_monitor\' : \'err_unique_dashboard\'\n        }">\n            <field-label>{{:: \'Name\' | lang}}</field-label>\n            <field-value>\n                <input type="text" ng-model="$ctrl.dashboard.name"\n                    ng-pattern="$ctrl.XSS_PATTERN" required f-unique-dashboard-name\n                    is-standalone="$ctrl.isStandalone()" dashboards="$ctrl.dashboards" current="$ctrl.currentName"\n                    f-max-length="$ctrl.schema.children.name.size">\n            </field-value>\n        </f-field>\n        <f-field ng-if="$ctrl.predefined[\'layout-type\'] === \'standalone\'">\n            <field-label>{{:: \'widget\' | lang }}</field-label>\n            <field-value>\n                <span>\n                    {{:: \'dashboard_widget_type::\' + $ctrl.predefined.widget[0].type | lang}}\n                </span>\n            </field-value>\n        </f-field>\n    </section>\n</f-dialog>\n')}]),module.exports=path},831:function(module,exports){var path="/migadmin/ng/system/dashboard/f-common-custom-edit-fields.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-field ng-if="$ctrl.asStandalone"\n    error-messages="{pattern: \'err_xss\', fUniqueDashboardName: \'err_unique_monitor\'}">\n    <field-label>{{:: \'Name\' | lang}}</field-label>\n    <field-value>\n        <input type="text" ng-model="$ctrl.dashboard.name" is-standalone="::true"\n            ng-pattern="::$ctrl.XSS_PATTERN" required f-unique-dashboard-name\n            dashboards="$ctrl.allDashboards" f-max-length="::$ctrl.schema.children.name.size">\n    </field-value>\n</f-field>\n<f-field ng-if="$ctrl.config.supportCSF && !$ctrl.asStandalone && !$ctrl.isStandalone">\n    <field-label>\n        {{:: \'Fabric member\' | lang }}\n        <f-icon class="fa-help-info" f-tip>\n            <span>\n                {{:: \'"Default" will use the Fabric Member that is currently selected on the dashboard dropdown chooser.\' | lang }}\n            </span>\n        </f-icon>\n    </field-label>\n    <field-value>\n        <f-radio-group>\n            <input type="radio" value="enable"\n                radio-label="{{:: \'Default\'  | lang}}"\n                ng-model="$ctrl.dashboard.csf" required>\n            <input type="radio" value="disable"\n                radio-label="{{:: \'Specify\' | lang}}"\n                ng-model="$ctrl.dashboard.csf" required>\n        </f-radio-group>\n    </field-value>\n</f-field>\n<f-field ng-if="$ctrl.originalDashboardCsf !== $ctrl.dashboard.csf">\n    <field-label></field-label>\n    <field-value>\n        <div class="warning-message" ng-if="$ctrl.dashboard.csf === \'disable\'">\n            <f-icon class="fa-exclamation-triangle"></f-icon>\n            <div class="message-content">\n                {{:: \'Choosing a specific Fabric member for this widget will override the behavior for the entire dashboard. After this is done, the Fabric member selection will be on each individual widget.\' | lang }}\n            </div>\n        </div>\n        <div class="warning-message" ng-if="$ctrl.dashboard.csf === \'enable\'">\n            <f-icon class="fa-exclamation-triangle"></f-icon>\n            <div class="message-content">\n                {{:: \'Choosing "Default" will remove the Fabric member selection from every widget on this dashboard. After this is done, the Fabric member selection will move to the dashboard menu bar.\' | lang }}\n            </div>\n        </div>\n    </field-value>\n</f-field>\n<f-field ng-if="$ctrl.config.supportCSF && $ctrl.dashboard.csf !== \'enable\'">\n    <field-label f-lang="FortiGate"></field-label>\n    <field-value f-omniselect="$ctrl.setting" ng-model="$ctrl.editCtrl.fortigate" required>\n    </field-value>\n</f-field>\n')}]),module.exports=path},832:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-fabric-device-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-field>\n        <field-label>{{:: \'Device\' | lang}}</field-label>\n        <field-value f-omniselect="$ctrl.selectConfig.device" ng-model="$ctrl.selectedDevice"\n            change-event="deviceChanged"\n            re-process-on="::\'deviceStatusUpdated\'"\n            required>\n        </field-value>\n    </f-field>\n    <f-field ng-if="$ctrl.selectedDevice">\n        <field-label>{{::\'Widget name\' | lang}}</field-label>\n        <field-value f-omniselect="$ctrl.selectConfig.widget" ng-model="$ctrl.selectedWidget"\n            reload-on="::\'deviceChanged\'"\n            required>\n        </field-value>\n    </f-field>\n    <f-field ng-if="$ctrl.selectedWidget.supported_visualization_types">\n        <field-label>{{::\'Visualization type\' | lang}}</field-label>\n        <field-value>\n            <select ng-model="$ctrl.widget[\'fabric-device-widget-visualization-type\']"\n                    ng-options="type as (\'dashboard_widget_fabric_device_visualization_type::\' + type | lang) for type in\n                    $ctrl.selectedWidget.supported_visualization_types">\n            </select>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},833:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-fortiview-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.widgetConfig"\n        dashboard="::$ctrl.dashboard"\n        all-fortigates="::true"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <div ng-if="$ctrl.type && $ctrl.devices.length > 1">\n        <f-field>\n            <field-label f-lang="Data Source"></field-label>\n            <field-value>\n                <f-radio-group>\n                    <input type="radio" ng-model="$ctrl.automaticDevice" ng-value="::true"\n                        radio-label="{{::\'Best Available Device\' | lang}}">\n                    <input type="radio" ng-model="$ctrl.automaticDevice" ng-value="::false"\n                        radio-label="{{::\'Specify\' | lang}}">\n                </f-radio-group>\n            </field-value>\n        </f-field>\n        <f-field class="child" ng-if="!$ctrl.automaticDevice">\n            <field-label f-lang="Device"></field-label>\n            <field-value>\n                <select required id="timeframe" ng-model="$ctrl.selectedDevice"\n                    ng-options="::$ctrl.fortiviewConfig.DEVICE_LABELS[option] | lang for option in $ctrl.devices">\n                </select>\n            </field-value>\n        </f-field>\n    </div>\n\n    <f-field ng-if="$ctrl.showTimeframe">\n        <field-label f-lang="time_period"></field-label>\n        <field-value>\n            <select required id="timeframe" ng-model="$ctrl.widget[\'fortiview-timeframe\']"\n                ng-options="::\'fv_\' + option | lang for option in $ctrl.supportedTimeframeOptions">\n            </select>\n            <f-icon class="fa-loading" ng-if="$ctrl.timeframeOptionsLoading"></f-icon>\n        </field-value>\n    </f-field>\n\n    <f-field ng-if="$ctrl.type">\n        <field-label f-lang="Visualization"></field-label>\n        <field-value>\n            <f-radio-group>\n                <div ng-repeat="option in $ctrl.visualizationOptions">\n                    <input type="radio" ng-value="option"\n                        radio-icon="{{::$ctrl.VISUALIZATION_ICON[option]}}"\n                        radio-label="{{::\'fv_visualization_\' + option | lang}}"\n                        ng-model="$ctrl.widget[\'fortiview-visualization\']">\n                </div>\n            </f-radio-group>\n        </field-value>\n    </f-field>\n\n    <f-field ng-if="$ctrl.type">\n        <field-label f-lang="sort-by"></field-label>\n        <field-value>\n            <select id="sort-by" ng-model="$ctrl.widget[\'fortiview-sort-by\']"\n                ng-options="option.id as (option.langKey || option.id) |\n                lang for option in $ctrl.compareByOptions">\n            </select>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},834:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-monitor-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field ng-if="$ctrl.config.supportMutableVisualizationOptions">\n        <field-label f-lang="Visualization"></field-label>\n        <field-value>\n            <f-radio-group>\n                <div ng-repeat="option in $ctrl.config.supportMutableVisualizationOptions">\n                    <input type="radio" ng-value="option"\n                        radio-label="{{:: option | lang}}"\n                        ng-model="$ctrl.widget[\'table-visualization\']" required>\n                </div>\n            </f-radio-group>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},835:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-traffic-history-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field>\n        <field-label f-lang="Interface"></field-label>\n        <field-value>\n            <div f-omniselect="$ctrl.interfaceSettings"\n                ng-model="$ctrl.interfaceObject"\n                instance="$ctrl.interfaceSettingInstance"\n                required>\n            </div>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},836:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-routing-monitor-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field>\n        <field-label f-lang="View Type"></field-label>\n        <field-value>\n            <f-radio-group>\n                <div ng-repeat="option in $ctrl.VIEW_TYPES">\n                    <input type="radio" ng-value="option"\n                        radio-label="{{:: \'routingMonitorViewType::\' + option | lang}}"\n                        ng-model="$ctrl.widget[\'router-view-type\']" required>\n                </div>\n            </f-radio-group>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},837:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-device-list-monitor-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        all-fortigates="::true"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field ng-if="$ctrl.config.supportMutableVisualizationOptions">\n        <field-label f-lang="Visualization"></field-label>\n        <field-value>\n            <f-radio-group>\n                <div ng-repeat="option in $ctrl.config.supportMutableVisualizationOptions">\n                    <input type="radio" ng-value="option"\n                        radio-label="{{:: option | lang}}"\n                        ng-model="$ctrl.widget[\'table-visualization\']" required>\n                </div>\n            </f-radio-group>\n        </field-value>\n    </f-field>\n    <f-field ng-if="$ctrl.isForticlient">\n        <field-label f-lang="Telemetry"></field-label>\n        <field-value>\n            <select required id="telemetry" ng-model="$ctrl.widget[\'device-list-telemetry\']"\n                ng-options="key as value.lang | lang for (key, value) in $ctrl.telemetryOptions">\n            </select>\n        </field-value>\n    </f-field>\n    <f-field ng-if="$ctrl.isForticlient">\n        <field-label f-lang="Online"></field-label>\n        <field-value>\n            <select required id="online" ng-model="$ctrl.widget[\'device-list-online\']"\n                ng-options="key as value.lang | lang for (key, value) in $ctrl.onlineOptions">\n            </select>\n        </field-value>\n    </f-field>\n    <f-field>\n        <field-label f-lang="View type"></field-label>\n        <field-value>\n            <select required id="view_type" ng-model="$ctrl.widget[\'device-list-view-type\']"\n                ng-options="option.value as option.label | lang for option in $ctrl.viewTypeOptions">\n            </select>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},838:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-firewall-user-monitor-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field>\n        <field-label f-lang="show_fsso_logons"></field-label>\n        <field-value>\n            <span>\n                <input id="fsso_visibility"\n                    class="toggle-switch"\n                    type="checkbox"\n                    ng-true-value="::\'enable\'"\n                    ng-false-value="::\'disable\'"\n                    ng-model="$ctrl.widget[\'fsso-user-visibility\']">\n                <label for="fsso_visibility"></label>\n            </span>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},839:function(module,exports){var path="/migadmin/ng/system/dashboard/f-edit-wifi-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<section>\n    <f-common-custom-edit-fields ng-if="!$ctrl.loading"\n        as-standalone="::$ctrl.asStandalone"\n        is-standalone="::$ctrl.isStandalone"\n        config="::$ctrl.config"\n        dashboard="::$ctrl.dashboard"\n        edit-ctrl="::$ctrl">\n    </f-common-custom-edit-fields>\n    <f-field ng-if="::$ctrl.wifiConfig.hasBandSelection">\n        <field-label f-lang="band"></field-label>\n        <field-value>\n            <select ng-options="band as band | lang for band in $ctrl.BAND_SELECTION" ng-model="$ctrl.widget[\'wifi-band\']" required>\n            </select>\n        </field-value>\n    </f-field>\n</section>\n')}]),module.exports=path},84:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(26),__webpack_require__(27),__webpack_require__(43),__webpack_require__(46),__webpack_require__(232),__webpack_require__(71)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,inject,Notify,fwebUtilLang,fwebUtilStructure,collectableSuper){const MANAGED_DEVICE_LANG={STATUS:{disabled:"unauth",deauthorized:"unauth",discovered:"unauth",authorized:"authorized"},SUCCESSFUL_ACTION:{accept:"authorized",deny:"denied",deauthorize:"deauthorized"},FAILED_ACTION:{accept:"authorize",deny:"deny",deauthorize:"deauthorize"},CONNECTION_STATUS:{Idle:"idle",Disconnected:"idle",Connecting:"connecting",Connected:"connected","Image Downloading":"image_downloading","Connected Image":"connected_image"}},GuiCsfMixin=(parentClass,noInject)=>{noInject||(parentClass=inject.CollectableExtends(parentClass));return class extends parentClass{callSuperMethod(ParentClass,methodName,...args){return collectableSuper.call(this,ParentClass,methodName,...args)}get sourceID(){throw new Error("Interface method must be overridden")}get q_origin_key(){return this.id}get datasource(){return this.sourceID}canDenyAuthorization(){throw new Error("Interface method must be overridden")}canAuthorize(){throw new Error("Interface method must be overridden")}canDeauthorize(){throw new Error("Interface method must be overridden")}toggleAuthorization(){return Promise.reject("Interface method must be overridden")}denyAuthorization(){return Promise.reject("Interface method must be overridden")}canConnectToGui(){throw new Error("Interface method must be overridden")}connectToGui(){throw new Error("Interface method must be overridden")}_notifyAuthorizationToggle(action,success){var msg;success?(msg=`Successfully ${this.LANG.SUCCESSFUL_ACTION[action]} Fabric Device`,Notify.post(fwebUtilLang.translate(msg),Notify.LEVEL.SUCCESS),ftnt_shared.Omniselect.notifySourceChanged(this.sourceID),fwebUtilStructure.updateNotificationsIfActive("unauthorizedCsfDevices")):(msg=`Failed to ${this.LANG.FAILED_ACTION[action]} Fabric Device`,Notify.post(fwebUtilLang.translate(msg),Notify.LEVEL.ERROR))}get LANG(){return MANAGED_DEVICE_LANG}}};return{GuiCsfMixin:GuiCsfMixin,GuiCsfManagedDeviceMixin:parentClass=>{const baseExtended=GuiCsfMixin(parentClass);return class extends baseExtended{getStatusLabel(){let label=this.LANG.STATUS[this.authorizationState.toLowerCase()];return this.isAuthorized()&&(label=this.LANG.CONNECTION_STATUS[this.connectionState||"Disconnected"]),fwebUtilLang.translate(label)||label}connectToCli($INJECTABLE$,cliConsole){return()=>cliConsole.open({commands:[`exec ssh admin@${this.connectionIP}`],vdom:this.vdom})}get LANG(){return MANAGED_DEVICE_LANG}canReboot(){return"Connected"===this.connectionState&&this.isAuthorized()&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.WIFI)}canConnectToCli(){return this.parentFortigateId===top.state.serial&&this.connectionIP&&"0.0.0.0"!==this.connectionIP&&this.isAuthorized()}canUpgradeFirmware(){return this.parentFortigateId===top.state.serial&&this.connectionIP&&"0.0.0.0"!==this.connectionIP&&this.isAuthorized()&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.WIFI)}canAuthorize(){return!this.isAuthorized()&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.WIFI)}canDeauthorize(){return this.isAuthorized()&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.WIFI)}canDenyAuthorization(){return!1}}},VdomRevision:class{constructor(revision,vdom){this.value=[revision,vdom].join("::")}equals(other){return other&&other.value===this.value}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},840:function(module,exports){var path="/migadmin/ng/system/dashboard/f-widget-selection.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true" form="$ctrl.form" loading="$ctrl.loading">\n    <dialog-content>\n        <div class="widget-selection-container" ng-if="!$ctrl.selectedType">\n            <div class="widget-search-container">\n                <f-search-input\n                    model="$ctrl.searchValue"\n                    ng-if="!$ctrl.selectedType"\n                    on-key-up="$ctrl.search()"\n                    on-clear="$ctrl.clearSearch()"\n                    input-placeholder="\'Search\'">\n                </f-search-input>\n            </div>\n            <div class="widget-selector-container" ng-if="!$ctrl.selectedType">\n                <div class="widget-category-container" ng-if="$ctrl.widgetCount" ng-repeat="(category, sections) in $ctrl.categorizedWidgets">\n                    <div class="widget-category-title">\n                        <f-icon class="{{:: $ctrl.data.WIDGET_CATEGORY_ICONS[category] }}  icon-lg"></f-icon>\n                        <span class="widget-category-label">\n                            {{:: \'dashboard_widget_category::\' + category | lang }}\n                        </span>\n                    </div>\n                    <div>\n                        <div class="category-widgets-container">\n                            <div ng-repeat="entry in sections.main" class="widget-container">\n                                <div class="widget-header">\n                                    <button type="button" ng-click="$ctrl.selectWidget(entry)"\n                                        ng-class="{ emphasized: $ctrl.withinCountLimit(entry) }"\n                                        ng-disabled="!$ctrl.withinCountLimit(entry)"\n                                        id="{{:: $ctrl.getUniqueId(entry.label) }}">\n                                        <f-icon class="fa-plus"></f-icon>\n                                    </button>\n                                    <label for="{{:: $ctrl.getUniqueId(entry.label) }}"\n                                        ng-class="{\'light-text\': !$ctrl.withinCountLimit(entry) }"\n                                        ng-bind-html="::$ctrl.highlight(entry.label)">\n                                    </label>\n                                </div>\n                                <div class="widget-description light-text"\n                                    ng-bind-html="::$ctrl.highlight(entry.desc)">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="widget-category-subsection-title"\n                            ng-if="sections.subsection.length">\n                            <input type="checkbox" class="toggle-switch"\n                                id="{{:: category + \'::subsection::label\' }}"\n                                ng-model="$ctrl.expanded[category]" ng-if="!$ctrl.searchValue">\n                            <input type="checkbox" class="toggle-switch"\n                                id="{{:: category + \'::subsection::label\' }}"\n                                ng-model="$ctrl.expanded.$search" ng-if="$ctrl.searchValue" disabled>\n                            <label for="{{:: category + \'::subsection::label\' }}">\n                            </label>\n                            {{:: \'Show More\' | lang }}\n                        </div>\n                        <div class="category-widgets-container"\n                            ng-if="sections.subsection.length &&\n                                ($ctrl.expanded[category] || $ctrl.searchValue)">\n                            <div ng-repeat="entry in sections.subsection" class="widget-container">\n                                <div class="widget-header">\n                                    <button type="button" ng-click="$ctrl.selectWidget(entry)"\n                                        ng-class="{ emphasized: $ctrl.withinCountLimit(entry) }"\n                                        ng-disabled="!$ctrl.withinCountLimit(entry)"\n                                        id="{{:: $ctrl.getUniqueId(entry.label) }}">\n                                        <f-icon class="fa-plus"></f-icon>\n                                    </button>\n                                    <label for="{{:: $ctrl.getUniqueId(entry.label) }}"\n                                        ng-class="{\'light-text\': !$ctrl.withinCountLimit(entry) }"\n                                        ng-bind-html="::$ctrl.highlight(entry.label)">\n                                    </label>\n                                </div>\n                                <div class="widget-description light-text"\n                                    ng-bind-html="::$ctrl.highlight(entry.desc)">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="widget-no-result-container" ng-if="!$ctrl.widgetCount">\n                    <div ng-if="$ctrl.noAvailableWidgets && !$ctrl.searchValue" f-lang="No available widgets"></div>\n                    <div ng-if="$ctrl.searchValue || !$ctrl.noAvailableWidgets" f-lang="No results"></div>\n                </div>\n            </div>\n        </div>\n        <div ng-if="$ctrl.selectedType">\n            <div f-compile="::$ctrl.customizeComponent"></div>\n        </div>\n    </dialog-content>\n    <dialog-footer>\n        <button type="button" class="primary" ng-click="$ctrl.addCustomizedWidget()"\n            ng-if="$ctrl.selectedType">\n            {{::\'Add Widget\' | lang}}\n        </button>\n        <button type="button" ng-click="$ctrl.close()">\n            <span ng-if="$ctrl.selectedType && !$ctrl.data.prefilledWidget">\n                {{::\'back\' | lang}}\n            </span>\n            <span ng-if="!$ctrl.selectedType || $ctrl.data.prefilledWidget">\n                {{::\'close\' | lang}}\n            </span>\n        </button>\n    </dialog-footer>\n</f-dialog>\n\n<link rel="stylesheet" type="text/css" ng-href="{{ \'ng/system/dashboard/f-widget-selection.css\' | cache_path }}">\n')}]),module.exports=path},841:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){ngModule.factory("dashboardCommon",class extends inject.Collectable{constructor(){super(),this.DASHBOARD_URI="/system/dashboard",this.ADD_EDIT_WIDGET_SLIDE_WIDTH=1010,this.WIDGET_CATEGORIES={FORTIVIEW:"fortiview",SECURITY_FABRIC:"fabric",NETWORK:"network",SYSTEM:"system",RESOURCES:"resources",SECURITY:"security",USER:"user",WIFI:"wifi"}}getAllDashboards($INJECTABLE$,$http){return async()=>(await $http.get(this.DASHBOARD_CMDB_URI)).data.results}getDefaults($INJECTABLE$,$http){return async()=>(await $http.get(this.DASHBOARD_CMDB_URI,{params:{action:"default"}})).data.results}getSchema($INJECTABLE$,$http){return async()=>(await $http.get(this.DASHBOARD_CMDB_URI,{params:{action:"schema"}})).data.results}createWidgetModel($INJECTABLE$,DashboardWidgetModel){return(widget,configuration)=>new DashboardWidgetModel({componentTag:configuration.component,xPosition:widget["x-pos"],yPosition:widget["y-pos"],width:widget.width,height:widget.height,modelData:widget})}DASHBOARD_CMDB_URI($INJECTABLE$,state){return`/api/v2/cmdb/system/${state.admin.sso_sp_admin?"sso-admin":"admin"}/`+`${encodeURIComponent(state.admin.name)}/gui-dashboard/`}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},842:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(30),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,fLog,inject)=>{class FazStatus extends inject.Collectable{constructor(){super()}checkIocSupport($INJECTABLE$,state,license,notificationRequests){return async skipLicenseCheck=>{const logDevice=state.getLogDeviceDefault(),isFortiAnalyzer=logDevice===state.LOG_DEVICES.FORTIANALYZER,isFortiCloud=logDevice===state.LOG_DEVICES.FORTICLOUD;let supported=!1,requireFaz=!1,requireLicense=!1;if(isFortiAnalyzer)try{if(skipLicenseCheck)supported=!0;else{const status=(await notificationRequests.fazLicense()).indicators_of_compromise;(supported=license.isValidLicense(status))||(requireLicense=!0)}}catch(e){fLog.error(e),requireFaz=!0}else isFortiCloud?supported=!0:requireFaz=!0;return supported?this.STATUS.IOC_SUPPORTED:requireLicense?this.STATUS.IOC_REQUIRE_LICENSE:requireFaz?this.STATUS.IOC_REQUIRE_FAZ:void 0}}}FazStatus.prototype.FAZ_SETTING_URL="/ng/fabric-connector/edit/fortianalyzer",FazStatus.prototype.STATUS={IOC_REQUIRE_FAZ:0,IOC_REQUIRE_LICENSE:1,IOC_SUPPORTED:2},module.service("fazStatus",FazStatus)}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},843:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(88)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module){module.factory("persistentStorage",function($cookies,$window){var have_localStorage="localStorage"in $window&&null!==$window.localStorage;return{get:function(key){var value;return(value=have_localStorage?localStorage.getItem(key):$cookies.get(key))?angular.fromJson(value):value},put:function(key,value){if(value=angular.toJson(value),have_localStorage)try{return void localStorage.setItem(key,value)}catch(ex){have_localStorage=!1}$cookies.put(key,value)},remove:function(key){have_localStorage?localStorage.removeItem(key):$cookies.remove(key)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},844:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(93)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,fQuarantine){function QuarantineData(injector,$rootScope){injector.injectMarked(this),this.clearCache(),this._quarantinePromise=null,this._bannedPromise=null,$rootScope.$on("$routeChangeSuccess",()=>this.clearCache())}QuarantineData.prototype.clearCache=function(){this._quarantineCache={},this._bannedCache={}},QuarantineData.prototype.getQuarantineData=inject.mark(($q,csfTopology)=>(function(){return this._quarantinePromise||(this._quarantinePromise=csfTopology.buildIfNecessary().then(()=>{var promises={};return csfTopology.fortigates.forEach(fgt=>{this._quarantineCache[fgt.serial]?promises[fgt.serial]=$q.resolve(this._quarantineCache[fgt.serial]):promises[fgt.serial]=fQuarantine.getQuarantineData(fgt.path)}),$q.all(promises)}).then(result=>this._quarantineCache=result).finally(()=>{this._quarantinePromise=null})),this._quarantinePromise})),QuarantineData.prototype.getBannedData=inject.mark(($q,csfTopology)=>(function(){return this._bannedPromise||(this._bannedPromise=csfTopology.buildIfNecessary().then(()=>{var promises={};return csfTopology.fortigates.forEach(fgt=>{this._bannedCache[fgt.serial]?promises[fgt.serial]=$q.resolve(this._bannedCache[fgt.serial]):promises[fgt.serial]=fQuarantine.getBannedData(fgt.path)}),$q.all(promises)}).then(result=>this._bannedCache=result).finally(()=>{this._bannedPromise=null})),this._bannedPromise})),module.service("quarantineData",QuarantineData)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},845:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(445)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){function ObjectAttributes(injector){injector.injectMarked(this)}ObjectAttributes.prototype.generateTitle=inject.mark(function(lang){return function(config){var title,cmdbName=lang(config.path+"."+config.name);if(1===config.objects.length){var interpolates=[cmdbName,config.objects[0].label];title=lang("Properties of {0}: {1}",interpolates).toString()}else title=lang("Properties of {0}",[cmdbName]).toString();return title}}),ObjectAttributes.prototype.open=inject.mark(function(slide,$rootScope){return function(config){var slideConfig;try{slideConfig=slide.get("objectAttibutesSlide")}catch(e){}if(slideConfig&&slideConfig.slide.isOpen)this.update(config);else{var scope=this.slideScope=$rootScope.$new();scope.config=config;var options={title:this.generateTitle(config),okButton:!1,fullHeight:!0};1===config.objects.length&&(options.width=600),slide.open("objectAttibutesSlide",{template:'<f-object-attributes config="config"></f-object-attributes>',parentScope:scope,options:options}).finally(function(){scope.$destroy()})}}}),ObjectAttributes.prototype.update=function(config){this.slideScope&&(this.slideScope.config=config)},ngModule.service({objectAttributes:ObjectAttributes})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},846:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module){var LOGIN_URL="/login";function RebootService($q,$http,$timeout,usbDisk,adminTimeout,notification,connection,fortigateDebugger){this.$http=$http,this.$q=$q,this.$timeout=$timeout,this.defer=null,this.monitorUrl=LOGIN_URL,this.usbDisk=usbDisk,this.adminTimeout=adminTimeout,this.notification=notification,this.connection=connection,this.fortigateDebugger=fortigateDebugger}RebootService.prototype={monitor:function(triggerFunction,monitorUrl){var that=this;return this.defer&&this.fail("aborted"),null!=monitorUrl&&(this.monitorUrl=monitorUrl),this.defer=this.$q.defer(),this.startEvent(triggerFunction).then(function(){that.usbDisk.stop(),that.adminTimeout.stop(),that.notification.stop(),that.fortigateDebugger.deregister(),that.connection.disableVerification(),that.waitSystemDown()},function(){that.usbDisk.start(),that.fail("aborted")}),this.defer.promise},startEvent:function(triggerFunction){var promise=triggerFunction();if(!angular.isObject(promise)||!angular.isFunction(promise.then)){var defer=this.$q.defer();promise=defer.promise,this.$timeout(function(){defer.resolve()},0)}return promise},waitSystemDown:function(start){start=start||Date.now();var waitOrFail=function(){Date.now()-start<6e5?setTimeout(function(){this.waitSystemDown(start)}.bind(this),1e4):this.fail("timeout-down")}.bind(this);this.checkStatus(1e3,waitOrFail,()=>this.waitSystemUp())},waitSystemUp:function(start){start=start||Date.now();var waitOrFail=function(){Date.now()-start<6e5?setTimeout(function(){this.waitSystemUp(start)}.bind(this),1e4):this.fail("timeout-up")}.bind(this);this.checkStatus(1e3,this.done.bind(this),waitOrFail)},checkStatus:function(timeout,successCallback,errorCallback){this.$http.get(this.monitorUrl,{headers:{"Cache-Control":"no-cache"},timeout:timeout}).then(successCallback,errorCallback)},fail:function(msg){this.defer.reject(msg),this.defer=null},done:function(){null!=this.defer&&(this.defer.resolve(),this.defer=null)}},module.service("rebootService",RebootService)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},847:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module){return module.constant("riskConstants",{IOC_VERDICT:{COMPROMISED:4,HIGH:3,MEDIUM:2,LOW:1,SAFE:0}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},848:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,fLog){var PERMISSION_CHECK_EXEMPT=[/^\/$/,/^\/error/,/^\/prompt/,/^\/page/];class RouteMatch{constructor(route,match,searchParams){this.route=route,this.routeParams=Object.create(null),this.searchParams=Object.create(null);for(const[key,value]of searchParams.entries())this.searchParams[key]=this.routeParams[key]=decodeURIComponent(value);for(let i=1;i<match.length;i++){const key=route.keys[i-1].name;null!=match[i]&&(this.routeParams[key]=decodeURIComponent(match[i]))}}}module.provider("fosRoute",function($routeProvider){var permissionCache;angular.extend(this,$routeProvider,{when:function(path,route){var resolve=route.resolve=route.resolve||{};return path&&!function(path,pathList){var i,result=!1;for(i=0;i<pathList.length;i++)if(pathList[i].test(path)){result=!0;break}return result}(path,PERMISSION_CHECK_EXEMPT)&&(resolve.permission=function($location,$q,$http,$rootScope,$window,state,structure){var fullPath="/ng"+$location.path(),search=$location.search(),deferred=$q.defer();return $http.get("/api/v2/monitor/web-ui/permission-check",{params:{uri:fullPath},cache:permissionCache}).then(function(response){var readOnly,results=response.data.results;results.permitted?(readOnly=results.read_only||state.readOnlyAdmin(),$rootScope.ADMIN_RO=readOnly,state.readOnlyForPage=readOnly,deferred.resolve(readOnly?"ro":"rw")):(fLog.error('Insufficient permissions for "'+fullPath+'"'),null!=search.viewOnly?$window.location.href="/error/403":($location.url(structure.ngURI("/error/403")),deferred.reject()))}),deferred.promise}),$routeProvider.when(path,route),this},$get:function($cacheFactory,$rootScope,$route,state,structure){var service={enablePermissionCache:function(){permissionCache=$cacheFactory("routePermissionCache"),$rootScope.$on(state.UPDATE_EVENT,function(){permissionCache.removeAll()})},getRouteForURI:function(uri){const url=new URL(uri,location),path=structure.ngURI(url.pathname);for(const route of Object.values($route.routes)){const match=route.regexp.exec(path);if(match)return new RouteMatch(route,match,url.searchParams)}}};return service}})})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},849:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule){var DEFAULT_WEIGHT={low:5,medium:10,high:30,critical:50};function Score($q,CMDB,state){this._$q=$q,this._CMDB=CMDB,this._state=state}Score.prototype={load:function(){let promise=this._$q.resolve(DEFAULT_WEIGHT);if(this._state.featureEnabled("gui-threat-weight")){var settings=new this._CMDB("log","threat-weight",{prune:!0}).fetch({format:"status|level"});promise=settings.$promise.then(()=>"enable"===settings.status?settings.level:DEFAULT_WEIGHT,()=>DEFAULT_WEIGHT)}return promise.then(weight=>(this.WEIGHT=weight,this))},vulnerabilityScore:function(entry){var score=0;return entry.device&&entry.device.is_forticlient_endpoint&&entry.device.vuln_count&&Object.keys(this.WEIGHT).forEach(function(level){var key="vuln_count_"+level;entry.device[key]&&(score+=entry.device[key]*this.WEIGHT[level])}.bind(this)),score},severityScore:function(entry){var value=entry.severity;return this.WEIGHT[value]},allRiskScore:function(entry){return entry.getIOCVerdict()?entry.chartIocScore:this.vulnerabilityScore(entry)?entry.vulnScore:entry.threatScore?entry.threatScore:0}},ftntModule.service("score",Score)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},850:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(30),__webpack_require__(81),__webpack_require__(52),__webpack_require__(41)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule,inject,fwebLog,FwebSlideBridge,fwebUri,fwebSlide){const slideBridgeModuleImports={"ng/components/quarantine/f-quarantine-dlg":__webpack_require__(183),"ng/components/quarantine/f-ban-ip-dlg":__webpack_require__(446),"ng/system/dashboard/f-dhcp-monitor-widget":__webpack_require__(447),"ng/wifi/managed-ap/details/f-ap-details":__webpack_require__(135),"ng/firewall/policy/policy-list":__webpack_require__(190),"ng/stitch/f-stitch-list":__webpack_require__(244),"ng/system/external-resource/entry/f-system-external-resource-entry":__webpack_require__(245),"ng/system/sdn-connector/f-sdn-connector-objects-list":__webpack_require__(246),"ng/user/sso/edit/f-collector-agent-adgrp-list":__webpack_require__(137),"ng/utm/appctrl/signature/f-application-signatures":__webpack_require__(114)};function SlideBridge(injector){injector.injectMarked(this),window.top===window?this.slideBridge=new FwebSlideBridge.Host(this._onOpen):this.slideBridge=new FwebSlideBridge.Client}SlideBridge.prototype._open=inject.mark(($rootScope,slide,loader)=>(function(slideID,initModules,slideParams,scopeKeys,eventSource){const bridge=this.slideBridge,scope=slideParams.parentScope;let loadPromise=Promise.resolve();Array.isArray(initModules)&&initModules.length&&(initModules.forEach(function(m){if(!/^[-a-z._/]*$/i.test(m))throw new Error("Invalid module: "+m);if(!slideBridgeModuleImports[m])throw new Error(`Module ${m} must be `+"added into the slideBridgeModuleImports map.")}),loadPromise=new Promise(resolve=>{$rootScope.$apply(function(){loader.initModules(initModules.map(name=>slideBridgeModuleImports[name])).then(resolve)})})),slideParams.options=slideParams.options||{},slideParams.options.loadPromise=loadPromise,slide.open(slideID,slideParams).then(()=>{const result={};scopeKeys&&scopeKeys.forEach(key=>result[key]=scope[key]),bridge.resolve(eventSource,slideID,result),scope&&scope.$destroy()},error=>{bridge.reject(eventSource,slideID,error),scope&&scope.$destroy()})})),SlideBridge.prototype._onOpen=inject.mark(function(slide,$rootScope,state,fosRoute,loader,structure,csfTopology){return async function(type,data,eventSource){const slideID=data.id,bridge=this.slideBridge;try{const fortigate=data.params&&csfTopology.fortigateMapping[data.params.fortigate];if(type===this.slideBridge.TYPE.STANDARD){const slideParams=data.slideParams,scope=$rootScope.$new();let scopeKeys;return slideParams.parentScope&&(Object.assign(scope,slideParams.parentScope),scopeKeys=Object.keys(slideParams.parentScope)),slideParams.parentScope=scope,this._open(slideID,data.initModules,data.slideParams,scopeKeys,eventSource)}{const params=data.params;let uri;if(params.uri)uri=params.uri;else if(state=fortigate?fortigate.state:state,!(uri=await state.getExactEditUrl(params.path,params.name,params.mkey,params.vdom)))return fwebLog.error("Failed to determine edit URI"),void bridge.reject(eventSource,slideID);if(params.searchParams){const formattedParams=fwebUri.formatParams(params.searchParams);uri=`${uri}${uri.includes("?")?"&":"?"}${formattedParams}`}if(uri.startsWith("/ng")){const route=fosRoute.getRouteForURI(uri);if(!route)return fwebLog.error(`Failed to retrieve route config for "${uri}"`),void bridge.reject(eventSource,slideID);if(!route.route.legacyInlineEdit)return structure.openRouteAsSlide(uri).then(result=>{bridge.resolve(eventSource,slideID,result)},error=>{bridge.reject(eventSource,slideID,error)})}return fwebSlide.iframe(uri).then(result=>{bridge.resolve(eventSource,slideID,result)},error=>{bridge.reject(eventSource,slideID,error)})}}catch(err){return fwebLog.error(err),bridge.reject()}}.bind(this)}),ftntModule.service("slideBridge",SlideBridge)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},853:function(module,exports){var path="/migadmin/ng/system/dashboard/f-dhcp-monitor-widget.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable-widget\n    ng-if=":: !$ctrl.inSlide"\n    widget-title="::$ctrl.title"\n    source="$ctrl.muTable.source"\n    settings="$ctrl.muTable.settings"\n    charts-only="$ctrl.chartsOnly"\n    chart-columns="$ctrl.chartColumns"\n    chart-total-labels="::$ctrl.chartTotalLabels"\n    dashboard-widget="$ctrl.dashboardWidget"\n    widget-model="$ctrl.widgetModel"\n    context-menu="::true"\n    on-refresh="$ctrl.loadSource({invalidateDevices: true, invalidateAddresses: true})"\n    view-settings="$ctrl.viewSettings"\n    dashboard="$ctrl.dashboard"\n    model-data="$ctrl.modelData"\n    zoom-callback="$ctrl.updatePersist(isZoomed)"\n    loading-promise="::$ctrl.loadingPromise">\n    <f-dhcp-monitor-menu class="menu-bar-component"\n        dhcp-monitor="$ctrl"\n        menu="menu"\n        in-slide="::$ctrl.inSlide">\n    </f-dhcp-monitor-menu>\n</f-mutable-widget>\n<f-mutable\n    ng-if=":: $ctrl.inSlide"\n    source="$ctrl.muTable.source"\n    settings="$ctrl.muTable.settings"\n    context-menu="::true">\n    <f-dhcp-monitor-menu\n        class="menu-bar-component"\n        dhcp-monitor="$ctrl"\n        menu="menu"\n        in-slide="::$ctrl.inSlide">\n    </f-dhcp-monitor-menu>\n</f-mutable>\n')}]),module.exports=path},862:function(module,exports){var path="/migadmin/ng/log/view/f-log-view.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="qlist-view-container">\n    <div f-menu-bar ng-if="!logView.fortiview">\n        <f-log-view-menu menu="menu" log-view="logView"></f-log-view-menu>\n\n    </div>\n    <div class="log-view-container flex-row-stretch flex-grow">\n        <div class="log-view-data flex-grow">\n            <f-mutable\n                    controller="logView.muTableController"\n                    class="flex-grow"\n                    source="logView.muTable.source"\n                    settings="logView.muTable.settings"\n                    instance="logView.muTable.instance"\n                    context-menu="logView.context.hasItems || false"\n                    on-double-click="logView.showDetails(true)"\n                    ng-click="logView.clicked($event)"\n                >\n                <f-log-view-context-menu\n                        menu="menu"\n                        log-view="logView"\n                        ng-if="!menu.menuBar"\n                    ></f-log-view-context-menu>\n            </f-mutable>\n        </div>\n        <f-log-details\n            f-slide-in="logView.showDetails() && logView.logType()"\n            slide-complete="logView.muTable.instance.updateDisplay()"\n            class="flex-no-shrink"\n            hide-click="logView.showDetails(false)"\n            selected-tab="logView.detailTab"\n            entries="logView.muTableController.selectedEntries"\n            log-metadata="logView.loading.logMetadata"\n            device-id="logView.logDeviceId"\n            serial-no="logView.persist.serial_no"\n            log-type="logView.logType()"\n            log-formatters="logView.logFormatters"\n            fortigate="logView.fortigate"\n            ></f-log-details>\n    </div>\n</div>\n')}]),module.exports=path},863:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(451),__webpack_require__(66),__webpack_require__(8),__webpack_require__(31),__webpack_require__(32),__webpack_require__(111),__webpack_require__(82),__webpack_require__(30),__webpack_require__(37),__webpack_require__(452),__webpack_require__(0),__webpack_require__(112)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,byod_common,ips_common,ftntShared,fDom,fFormatters,fAvatars,fFortiguard,fLog,fIp,punycode,BUILD,fIpInfo){const SYMBOLS=BUILD.SYMBOLS,IPInfoService=fIpInfo.IPInfoService;class ColumnFormat{constructor(cellFormatter,onCellRendered,cellValueFunction=null){this.cellFormatter=cellFormatter,this.onCellRendered=onCellRendered,this.cellValueFunction=cellValueFunction}applyTo(column){column.cellFormatter=this.cellFormatter,this.onCellRendered&&(column.onCellRendered=this.onCellRendered),this.cellValueFunction&&(column.cellValueFunction=this.cellValueFunction)}static apply(fmt,column){fmt instanceof ColumnFormat?fmt.applyTo(column):column.cellFormatter=fmt}}function logFormattersFactory($filter,lang,logSecurityEvents,$sanitize){function LogFormatters(logType){this.logType=logType,this.formatters=function(logFormatters){var numberWithSignFilter=$filter("numberWithSign");function dictValueFormatter(value,dict,prefix){const cls=dict[value];let key;return prefix&&(key=lang(prefix+value)),logFormatters.iconAndText(cls,value,key)}var formatter={"_metadata.archive":function(row,column){const splitId=column.id.split("."),value=splitId.reduce((r,v)=>r[v],row);return value?fDom.elem("f-icon",{className:"fa-paperclip",title:lang("archive")}):null},pri:new ColumnFormat(function(row,column){const title=lang(`log_severity_level::${row[column.id]}`);return fFormatters.log_severity_bar_elem(row[column.id],null,title)},null,(row,column)=>lang(`log_severity_level::${row[column.id]}`)),severity:new ColumnFormat(function(row,column){const title=lang(`severity_${row[column.id]}`);return fFormatters.severity_bar_elem(row[column.id],null,title)},null,(row,column)=>lang(`severity_${row[column.id]}`)),apprisk:new ColumnFormat(function(row,column){var severity=row[column.id];return fFormatters.severity_bar_elem({low:"info",elevated:"low"}[severity]||severity,null,severity)},null,(row,column)=>lang(row[column.id])),attack:function(row,column){var ref,value=row[column.id]||lang("unknown"),id=row.attackid||0,prefix=fFortiguard.getLink(fFortiguard.LINK_TYPE.IPS);return row[column.id]||"malicious-url"!==row.eventtype||(value="malicious-url"),id&&prefix?(ref=prefix+"/"+id,formatter._refLink(value,ref)):value},eventid:function(row,column){var value=row[column.id];return value&&"waf"===row.subtype&&"waf-signature"===row.eventtype?fDom.formatWAFLabelElem(value,value):value},_refLink:function(value,href){return fDom.elem("a",{target:"_blank",href:href||value,rel:"noopener noreferrer",textContent:value})},ref:function(row,column){var value=row[column.id];return value?formatter._refLink(value):null},vulnref:function(row,column){var value=row[column.id];return formatter._refLink(value)},vuln:function(row,column){var ref,value=row[column.id],id=row.vulnid,prefix=fFortiguard.getLink(fFortiguard.LINK_TYPE.FCTVULN);return id&&prefix?(ref=prefix+"/"+id,formatter._refLink(value,ref)):value},virus:function(row,column){var ref,value=row[column.id],id=row.virusid,prefix=fFortiguard.getLink("botnet"===row.eventtype?fFortiguard.LINK_TYPE.BOTNET:fFortiguard.LINK_TYPE.AV);return id&&prefix?(ref=prefix+"/"+id,formatter._refLink(value,ref)):value},srcip:function(row,column){for(var key,target,keys=["user","unauthuser"],value=row[column.id],elems=[];(key=keys.shift())&&!row[key];);return key&&elems.push(formatter.user.cellFormatter(row,{id:key})),target=elems.length?fDom.elem("span",{textContent:" ("+value+")"}):fDom.elem("span",{textContent:value}),fDom.fragment(elems.concat([target]))},dstip:new ColumnFormat(function(row,column){const value=row[column.id],extra=row._extra,country=row.dstcountry,countryID=extra&&extra.dstcountry_id,countryCode=countryID&&fIp.getCountryCodeForID(countryID);let hostname=extra&&extra.dstip_reverse_lookup;var elems=[];countryCode&&elems.push(fDom.elem("span",{className:"country_flag country_"+countryCode,title:country}));const decodedHostname=hostname?` (${punycode.toUnicode(hostname)})`:"",encodedHostname=hostname?` (${punycode.toASCII(hostname)})`:"";return hostname=hostname?` (${hostname})`:"",elems.push(fDom.elem("span",{textContent:value+decodedHostname+(hostname!==decodedHostname?hostname:"")+(hostname!==encodedHostname?encodedHostname:"")})),elems.length?fDom.fragment(elems):null},(element,row,column)=>IPInfoService.setupTooltip({element:element,ip:row[column.id]})),hostname:function(row,column){var value=row[column.id],decoded=value&&punycode.toUnicode(value);return decoded!==value?decoded+" ("+value+")":(decoded=value&&punycode.toASCII(value))!==value?`${decoded} (${value})`:value},url:function(row,column){var value=row[column.id]||"",parts=value&&/^([^:/]+:\/\/)?([^?]+)\??(.*)$/.exec(value)||[null,"",value],scheme=parts[1]||"",domainPath=parts[2].split("/").map((c,i)=>{if(i>0)return decodeURIComponent(c);const unicode=c&&punycode.toUnicode(c);return unicode!==c?unicode:c&&punycode.toASCII(c)}),queryString=parts[3]?parts[3].split("&").map(p=>{var match=/^([^=]+)=(.*)$/.exec(p);return match?`${decodeURIComponent(match[1])}=${decodeURIComponent(match[2])}`:decodeURIComponent(p)}):[],decodedValue=`${scheme}${domainPath.join("/")}${queryString.length?"?":""}${queryString.join("&")}`;return $sanitize(value!==decodedValue?`${decodedValue} (${value})`:value)},av_details:function(row){var service=row.service&&row.service.toLowerCase();if(service){if(service.includes("smtp")&&row.to)return lang("To: {RECIPIENT}",[row.to]);if((service.includes("imap")||service.includes("pop3"))&&row.from)return lang("From: {SENDER}",[row.from]);if(service.includes("http")&&row.url)return lang("URL: {URL}",[row.url])}return row.fsaverdict?lang("Verdict: {FSAVERDICT}",[row.fsaverdict]):lang("Host: {DSTIP}",[row.dstip])},sent_rcvd:function(row){var value="";return(row.sentbyte||row.rcvdbyte)&&(value=fFormatters.metric_bytes(row.sentbyte||0)+" / "+fFormatters.metric_bytes(row.rcvdbyte||0)),value},user:new ColumnFormat((row,column)=>{var uid=row.fctuid||row.forticlient_id,endpointLog="endpoint"===row.subtype,isFortiClientUnauthuser="forticlient"===row.unauthusersource||endpointLog,unauthuser=row.unauthuser||(endpointLog?row.user:row.unauthuser);let fragment=fAvatars.userFormatFragment({key:column.id,user:endpointLog?null:row.user,unauthuser:unauthuser,uid:uid,isFortiClientUnauthuser:isFortiClientUnauthuser});return!endpointLog&&row.user?fDom.elem("span",{className:"user-info-target",dataset:{username:row.user}},{children:[fragment]}):fragment},function(element){element.querySelectorAll(".user-info-target").forEach(target=>fDom.setupUserTooltip(target))}),"msg-type":logFormatters.genColumnContent(function(column,row,dict){var val=row[column.id],ver=row.version;return dict[ver]&&(dict[ver][val]||dict[0][val])||val}),status:logFormatters.genColumnContent(function(column,row,dict){return dictValueFormatter(row[column.id],dict)}),utmaction:logFormatters.genColumnContent(function(column,row,dict){return dictValueFormatter(row[column.id],dict,"utmaction_")}),utmaction_outcome:logFormatters.genColumnContent(function(column,row,dict){return dictValueFormatter(row[column.id],dict,"utmresult_")}),action:logFormatters.genColumnContent(function(column,row,dict){var val=row[column.id],display=dict[val];return display?fDom.elem("span",{title:val,textContent:lang("Log::Action::"+val)}):null}),action_outcome:logFormatters.genColumnContent(function(column,row,dict){var display,val=row.action,cls=dict[val];if(cls&&"reset"!==row.utmaction&&"block"!==row.utmaction)return display="fa-accepted"===cls&&"start"!==val?formatter.sent_rcvd(row):lang("Log::Action::"+val),logFormatters.iconAndText(cls,val,display);{const utm_dict=logFormatters.getColumnDict("utmaction",row);return dictValueFormatter(row.utmaction,utm_dict,"utmresult_")}}),security_events:function(row){const value=logSecurityEvents.extract(row);return 0===value.length?null:fDom.fragment(value.map(function(obj){return logFormatters.formatCompositeCol(row,obj,"span")}))},countav:function(row,column){return fDom.elem("a",{href:"#",className:"threat_details",textContent:row[column.id]})},app_details:function(row,column){return logFormatters.formatCompositeCol(row,row[column.id])},checksum:function(row,column){return(row[column.id]||"").toString(16)},clouddetails:function(row){var value="";if(row.app&&-1!==row.app.indexOf("_")){var app_segments=row.app.split("_"),app_name=app_segments[app_segments.length-1];value+=app_name.replace("."," ")}return row.filename&&(value&&(value+=": "),value+=row.filename),value},crlevel:function(entry,column){const level=entry[column.id];let result="";return level&&(result=fDom.elem("span",{className:`severity-label wide severity-${level}`,textContent:lang(level)})),result},threattype:function(entry,column){const filter=entry._filters.get(column.id);if(filter){let value=filter.orValues[0];const prefixedKey=lang.getPrefixedKey("log.threat-weight::",value);return prefixedKey!==value?value=lang(prefixedKey).toString():fLog.warn(`No language entry for threat category "${value}"`),value}},threatname:function(entry,column){const filter=entry._filters.get(column.id);if(filter)return filter.orValues[0]},cfgattr:function(row,column){return fFormatters.truncate_comment_elem(row[column.id],50)},result:function(row,column){var value=row[column.id],cls={pass:"fa-enabled",fail:"fa-disabled"}[value];return cls?fDom.elem("f-icon",{className:cls}):value},cveid:ips_common.log_cve_format_elem,vendorurl:function(row,column){var url=row[column.id];return fDom.elem("a",{href:url,target:"_blank",rel:"noopener noreferrer",textContent:url})},vulnid:ips_common.vulnid_format_elem,auditscore:function(row,column){var value=Number(row[column.id]);return numberWithSignFilter(value)},auditresult:function(row){var elems=["criticalcount","mediumcount","highcount","lowcount","passedcount"].map(function(severity){return severityElem(row,{id:severity})});return fDom.fragment(elems)},auditreporttype:function(row,column){return lang(row[column.id])},policytype:function(row,column){if(row[column.id])return lang(`Firewall::policytype.${row[column.id]}`)}};return formatter.level=formatter.pri,formatter.start=formatter.rel_time,formatter.countweb=formatter.countav,formatter.countapp=formatter.countav,formatter.countips=formatter.countav,formatter.countdlp=formatter.countav,formatter.countemail=formatter.countav,formatter.criticalcount=severityElem,formatter.highcount=severityElem,formatter.mediumcount=severityElem,formatter.lowcount=severityElem,formatter.passedcount=severityElem,formatter}(this),this.genColumnContent=this.genColumnContent.bind(this)}const ID_KEY=ftntShared.Omniselect.prototype.ENTRY_ID_KEY;function severityElem(row,column){var name=column.id,severity="passedcount"===name?"none":name.split("count")[0],value=row[name];return null!=value?fDom.elem("span",{className:"number-bubble severity-"+severity,textContent:value}):null}return LogFormatters.columnDicts={dns:{status:{block:"fa-blocked",pass:"fa-accepted"}},"traffic/forward":{utmaction:{allow:"fa-accepted",block:"fa-blocked",reset:"fa-reset","traffic-shape":"action_traffic-shape"},action:{deny:"fa-blocked",accept:"fa-accepted",start:"fa-accepted",dns:"fa-accepted","ip-conn":"fa-accepted",close:"fa-accepted",timeout:"fa-accepted","server-rst":"fa-blocked","client-rst":"fa-blocked"},action_outcome:{deny:"fa-blocked",accept:"fa-accepted",start:"fa-accepted",dns:"fa-accepted","ip-conn":"fa-accepted",close:"fa-accepted",timeout:"fa-accepted"}},gtp:{"msg-type":{0:{1:"echo_request",2:"echo_response",3:"version_not_supported",16:"create_pdp_context_request",17:"create_pdp_context_response",18:"update_pdp_context_request",19:"update_pdp_context_response",20:"delete_pdp_context_request",21:"delete_pdp_context_response",255:"pdu"},1:{},2:{32:"create_session_request",33:"create_session_response",34:"modify_bearer_request",35:"modify_bearer_response",36:"delete_session_request",37:"delete_session_response",170:"release_access_bearer_request",171:"release_access_bearer_response"}},status:{prohibited:"fa-blocked","state-invalid":"fa-blocked"}},ssl:{action:{blocked:"fa-blocked",passthrough:"fa-accepted"}}},LogFormatters.columnDicts["traffic/fortiview"]=LogFormatters.columnDicts["traffic/forward"],LogFormatters.prototype={setFormatters:function(columns){columns.forEach(function(column){const numberTypes={size:"metricBytes",filesize:"metricBytes","_metadata.logid":"unformatted",logid:"unformatted",srcport:"unformatted",dstport:"unformatted"},omniselectTypes={dstintf:"firewallInterfaces",srcintf:"firewallInterfaces",app:entry=>{const datasource=null!=entry.appid&&entry.appid>=SYMBOLS.IPS_MIN_CUSTOM_RULE_ID&&entry.appid<=SYMBOLS.IPS_MAX_CUSTOM_RULE_ID?"application.custom":"application.name";return{[ID_KEY]:entry.appid||entry.app,datasource:datasource}},appcat:"application.category",srcmac:"devices",srcinetsvc:"firewall.internet-service",dstinetsvc:"firewall.internet-service",policyid:entry=>{const name="consolidated"===entry.policytype?"consolidated.policy":entry.policytype;return{[ID_KEY]:entry.policyid,datasource:`firewall.${name}`}}},fmt=this.formatters[column._metadata.id];switch(column.type){case"number":if(column.id in omniselectTypes)throw new Error(`column ${column._metadata.id} `+"is a number but also has an omniselect type");if("custom"===column.numberType||fmt===severityElem)ColumnFormat.apply(fmt,column);else{if(fmt)throw new Error("column "+column._metadata.id+" has type number but numbertype is not 'custom'. Formatter will have no effect");column.numberType=numberTypes[column.id]||column.numberType}break;case"standard":if(column.id in omniselectTypes){if(fmt)throw new Error("Cannot have a standard formatter and "+`omniselect formatter for the same column: ${column.id}`);if(column.type="omniselect",column.cellValueFunction)throw new Error("Not implemented.");const datasource=omniselectTypes[column.id];column.cellValueFunction="function"==typeof datasource?datasource:(entry,col)=>({[ID_KEY]:entry[col.id],datasource:datasource}),column.omniselectAllowFallback=!0,column.collectionEntryValueFunction=(entry=>entry[ID_KEY])}else fmt&&ColumnFormat.apply(fmt,column);break;default:if(fmt)throw new Error("column "+column._metadata.id+" has type "+column.type+" but also has a formatter")}}.bind(this))},getColumns:function(){return this.columns},formatCompositeCol:function(row,obj,tag){var elems=[];if(tag=tag||"f-icon",obj){var cls=obj.cls,key=obj.key,suffix=obj.suffix;cls&&elems.push(fDom.elem(tag,{className:cls})),key in this.formatters?(elems.push(this.formatters[key](row,{id:key})),suffix&&elems.push(fDom.elem("span",{textContent:lang(suffix)}))):(suffix=suffix?" "+lang(suffix):"",elems.push(fDom.elem("span",{textContent:row[key]+suffix})))}return fDom.fragment(elems)},getColumnDict:function(col){var log_dict=LogFormatters.columnDicts[this.logType];return log_dict&&log_dict[col]},genColumnContent:function(callback){return function(row,column){var dict,name=column.id;return(dict=this.getColumnDict(name,row))?callback(column,row,dict):row[name]}.bind(this)},langPrefixFormat:function(prefix,value){return lang(lang.getPrefixedKey(prefix,value))},iconAndText:function(cls,val,text){return void 0===text&&(text=lang(val)),cls?fDom.fragment([fDom.elem("f-icon",{className:cls}),fDom.elem("span",{title:val,textContent:text})]):val}},LogFormatters}return function(providers,loader){return providers.$provide.factory("LogFormatters",logFormattersFactory),loader.initModules([__webpack_require__(864)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},864:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){class LogSecurityEvents{extract(row){const threatMap={countav:{cls:"ftnt-profile-antivirus",key:"countav",label:"AV"},countweb:{cls:"ftnt-profile-webfilter",key:"countweb",label:"WEB"},countapp:{cls:"ftnt-profile-application",key:"countapp",label:"APP"},countips:{cls:"ftnt-profile-ips",key:"countips",label:"IPS"},countdlp:{cls:"ftnt-profile-dlp",key:"countdlp",label:"DLP"},countemail:{cls:"ftnt-profile-emailfilter",key:"countemail",label:"EMAIL"},countdns:{cls:"ftnt-profile-dnsfilter",key:"countdns",label:"DNS"}};return["countav","countweb","countapp","countips","countdlp","countemail","countdns"].filter(c=>c in row).map(c=>threatMap[c])}}return function(providers){providers.$provide.service("logSecurityEvents",LogSecurityEvents)}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},865:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular){class LogViewMenu{constructor($scope,csfTopology){$scope.$watchCollection("{ logView: logViewMenu.logView }",function(scopeVars){angular.extend($scope,scopeVars)}),$scope.$watch(()=>csfTopology.selectedFortigate,fortigate=>{!fortigate||this.fortigate&&fortigate===this.fortigate||(this.fortigate=fortigate)})}}function fLogViewMenu(){return{restrict:"E",scope:{menu:"=",logView:"="},bindToController:!0,controllerAs:"logViewMenu",controller:LogViewMenu,templateUrl:__webpack_require__(866)}}return(providers,loader)=>(providers.$compile.directive({fLogViewMenu:fLogViewMenu}),loader.initModules([__webpack_require__(33)]))}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},866:function(module,exports){var path="/migadmin/ng/log/view/f-log-view-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items">\n    <div f-menu-item-button click="logView.refresh()" title="{{\'refresh\' | lang }}">\n        <f-icon class="fa-refresh"></f-icon>\n    </div>\n    <div f-menu-item-button click="logView.downloadRaw()" title="{{\'downlog\' | lang}}">\n        <f-icon class="fa-download"></f-icon>\n    </div>\n</div>\n<div class="center-menu-items">\n    <div f-faceted-search facets="logView.facets" model="logView.facetModel"\n        options="logView.fsOptions">\n    </div>\n</div>\n<div class="right-menu-items"\n        f-with="logView.haMembers as haMembers">\n    <div f-menu-item-submenu="logViewMenu.logTypeMenu" ng-if="::logView.logTypeSubtypes">\n        <f-icon class="fa-bar-chart"></f-icon>\n        <span>{{::\'log_access_\' + logView.logTypeCategory() + \'_\' + logView.logTypeSubtype | lang}}</span>\n    </div>\n    <div f-pop-up-menu="logViewMenu.logTypeMenu" ng-if="::logView.logTypeSubtypes">\n        <div f-menu-item-button ng-repeat="logTypeSubtype in ::logView.logTypeSubtypes"\n            ng-if="logView.isLogTypeSubtypeVisible(logTypeSubtype)"\n            click="logView.changeLogTypeSubtype(logTypeSubtype)"\n            selected="logView.logTypeSubtype === logTypeSubtype">\n            {{::\'log_access_\' + logView.logTypeCategory() + \'_\' + logTypeSubtype | lang}}\n        </div>\n    </div>\n    <log-source-information device="logView.logDevice" on-device-change="logView.updateDevice(device)"></log-source-information>\n    <div f-menu-item-toggle="logView.showDetails()" click="logView.showDetails($toggleSelected)">\n        <f-icon class="fa-columns"></f-icon><span f-lang="Details"></span>\n    </div>\n    <f-csf-fortigate-chooser ng-if="::logViewMenu.menu.menuBar" with-ha="::true"\n        disable-entry-function="logView.csfEntryDisable"></f-csf-fortigate-chooser>\n</div>\n')}]),module.exports=path},867:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(62)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fObjects){function logViewContextFactory(state,$resource,SearchFacet){const COLUMN_ID_KEY_EXTRA_MAPPER={user:["unauthuser"]};return class{constructor(logView,muTable,$scope){this.logView=logView,this.muTable=muTable,this.$scope=$scope,this.popupColumnFilters=[],this.hasItems=!1,this.watchEntries(),this.watchPopup()}watchEntries(){this.$scope.$watch(()=>this.muTable&&this.muTable.selectedEntries,entries=>this._updateEntries(entries))}_updateEntries(entries){entries&&(this.hasItems=!!this.popupColumnFilters.length&&this.popupColumnFilters.every(f=>f.length))}_getExtraKey(entry,id){if(COLUMN_ID_KEY_EXTRA_MAPPER[id])for(let extraId of COLUMN_ID_KEY_EXTRA_MAPPER[id]){const key=fObjects.nestedGet(entry,extraId);if(key)return{key:key,id:extraId}}}watchPopup(){this.$scope.$watchCollection(()=>this.muTable&&!this.logView.filterConfig&&{id:this.muTable.selectedColumnId,value:this.muTable.selectedColumnValue,entry:this.muTable.selectedEntries&&this.muTable.selectedEntries[0]},selection=>{var facet=null,result=null,complex=!this.logView.embeddedType,id=selection&&selection.id,key=id&&selection.entry&&fObjects.nestedGet(selection.entry,selection.id);!key&&id&&selection.entry&&(result=this._getExtraKey(selection.entry,id))&&({key:key,id:id}=result),selection&&id&&(selection.value||complex)&&(facet=this.logView.facetBySelector("history",id)),key=key||"*",facet?(this.popupColumnFilters=facet.contextFilters(null==selection.value?key:new SearchFacet.ValueOption(key,(selection.value||"*").toString()),complex,selection.entry),this.popupColumnFacet=facet):(this.popupColumnFacet=null,this.popupColumnFilters=[]),this.muTable&&this._updateEntries(this.muTable.selectedEntries)})}addContextFilter(valueOption){this.logView.addToFacetModel(this.popupColumnFacet,valueOption)}}}return function(providers){providers.$provide.factory("LogViewContext",logViewContextFactory)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},868:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){class LogViewContextMenu{get context(){return this.logView&&this.logView.context}}function fLogViewContextMenu(){return{restrict:"E",scope:{menu:"=",logView:"="},bindToController:!0,controllerAs:"logViewMenu",controller:LogViewContextMenu,templateUrl:__webpack_require__(869)}}return function(providers,loader){return providers.$compile.directive({fLogViewContextMenu:fLogViewContextMenu}),loader.initModules([__webpack_require__(870),__webpack_require__(881)])}}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},869:function(module,exports){var path="/migadmin/ng/log/view/f-log-view-context-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div>\n    <div class="heading" ng-if="logViewMenu.context.popupColumnFacet">\n        {{ \'Filter by {Column}:\' | lang:[logViewMenu.context.popupColumnFacet.langName()] }}\n    </div>\n    <div ng-repeat="group in logViewMenu.context.popupColumnFilters">\n        <div f-menu-item-button ng-repeat="filter in group"\n                click="logViewMenu.context.addContextFilter(filter)">\n            {{filter.value || (\'None\' | lang)}}\n            <span class="info-text" ng-if="filter.value === \'! *\'">\n                ({{:: \'Empty value\' | lang }})\n            </span>\n            <span class="info-text" ng-if="filter.value === \'*\'">\n                ({{:: \'Non empty value\' | lang }})\n            </span>\n        </div>\n        <div class="separator" ng-if="!$last"></div>\n    </div>\n</div>\n')}]),module.exports=path},870:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(32),__webpack_require__(26),__webpack_require__(34),__webpack_require__(80),__webpack_require__(8),__webpack_require__(177)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,formatters,inject,datetime,sort,ftnt_shared){const DATE_FORMAT="yyyy/mm/dd hh:mm:ss".split(" ")[0];function TimeSpan(){for(var args=Array.prototype.slice.call(arguments);args.length<7;)args.unshift(0);var TSDate=Date.bind.apply(Date,[null].concat(args));this.value=new TSDate}TimeSpan.prototype.zeroDate=new Date(0,0,0,0,0,0,0),TimeSpan.prototype.getTime=function(){return this.value.getTime()-this.zeroDate.getTime()};class ParseDateTimeException extends Error{constructor(...args){super(...args)}}function parseDateTime(value){var hours=/([\d]{2}):([\d]{2}):(\d{2})$/.exec(String(value).trim()),date=function(value){if("yyyy/mm/dd"!==DATE_FORMAT)throw new Error("Unexpected date format");var parts=/^(\d{2}(?:\d{2})?)\/(\d{1,2})\/(\d{1,2})/.exec(String(value).trim());if(!parts)throw new ParseDateTimeException(`Unable to parse a date from ${value}`);return new Date(parseInt(parts[1]),parseInt(parts[2])-1,parseInt(parts[3]))}(value);if(hours)hours=new Date(0,0,0,hours[1],hours[2],hours[3]).getTime()-new Date(0,0,0,0,0,0).getTime();else if(""!==value.replace(/^[^\s]+\s*/,"").trim())throw new ParseDateTimeException("Invalid date");return null!=date?new Date((date?date.getTime():0)+(hours||0)):null}function LoggingFacets(injector){injector.injectMarked(this)}return LoggingFacets.prototype={facets:null,highlight:null,addFacet:function(selector){var columns=[{id:selector,_metadata:{lang_key:selector}}].map(this._addColumnExtras),result=this.logColumnFacets(columns,this.highlight);return this.facets.addFacets(result),result[0]},bySelector:function(facets,source){return facets=facets||this.facets,source=source||"history",facets._bySource=facets._bySource||{},facets._bySource[source]=facets._bySource[source]||facets.reduce(function(index,facet){var value=facet.selectors[source];value&&(index[value]=facet);facet.alias&&(index[facet.alias]=facet);return index},{}),facets._bySource[source]},LOG_FACET_DEFS:inject.mark((SearchFacet,ComplexValue,lang)=>{const actionOutcomeValues=function(){var prefix="Log::ActionOutcome::";return[new SearchFacet.ValueOption("accept",lang(prefix+"all_accept")),new SearchFacet.ValueOption("deny",lang(prefix+"all_deny"))]};return[{id:"action_outcome",name:"result",selectors:{history:"action_outcome"},contextFilters:function(){return[actionOutcomeValues()]},getValues:actionOutcomeValues,tweakFilter:{history:function(filter){filter.forEach(f=>{"action_outcome"===f.key&&(f.key="result")})}},type:"string",modifiers:[],meta:{logTypes:["traffic/forward"]}},{id:"unauthuser",name:"unauthuser",selectors:{history:"unauthuser"},type:"string",modifiers:["!",","],complexValue:function(value,convert){if(null===value)return value;var isComplex=value instanceof ComplexValue;return!isComplex&&convert&&(value=new ComplexValue(value)),(isComplex||convert)&&(value=value.withModifiers(this.modifiers)),value},meta:{logTypes:["traffic/forward","traffic/local","traffic/sniffer","virus","emailfilter","dlp","webfilter","ips","anomaly","app-ctrl","dns","ssh","filefilter"]}},{id:"centralnatid",name:"centralnatid",selectors:{history:"centralnatid"},type:"uint32",modifiers:["!",","],complexValue:function(value,convert){if(null===value)return value;var isComplex=value instanceof ComplexValue;return!isComplex&&convert&&(value=new ComplexValue(value)),(isComplex||convert)&&(value=value.withModifiers(this.modifiers)),value},meta:{logTypes:["traffic/forward"]}}]}),initFacets:inject.mark(function(SearchFacet,Facets){return function(logType,logDeviceId,columns,highlight){let facets=new Facets({logType:logType,logDeviceId:logDeviceId});facets.facetDefs=facets.facetDefs.concat(this.LOG_FACET_DEFS);let result=facets.facetDefs.filter(function(facetDef){return facetDef.meta&&(!0===facetDef.meta.logTypes||(facetDef.meta.logTypes||[]).indexOf(logType)>-1)}).map(function(facetDef){return new SearchFacet(angular.extend({highlight:highlight},facetDef))}),selectors=new Set(result.map(function(facet){return facet.selectors.history}).concat(result.map(r=>r.name)));this._bySource=null,this.facets=facets,this.highlight=highlight,columns=(columns||[]).filter(function(selectors){var notInSelectors=function(selectors){return function(column){return!selectors.has(column.id)}}(selectors);return function(column){return!1!==column._metadata.flags.filter&&notInSelectors(column)}}(selectors)).map(this._addColumnExtras);var extraFacets=this.logColumnFacets(columns,this.highlight);return result=result.concat(extraFacets),facets.addFacets(result),result}}),purgeState:function(){this.highlight=null,this.facets=null},_columnExtraDefs:inject.mark(function(ComplexValue){return function(){var noRangeSplitter={facetDef:{modifiers:["!",","],complexValue:function(value,convert){if(null===value)return value;var isComplex=value instanceof ComplexValue;return!isComplex&&convert&&(value=new ComplexValue(value)),(isComplex||convert)&&(value=value.withModifiers(this.modifiers)),value}}};return{noRangeSplitter:noRangeSplitter,noRangeWithOr:{facetDef:{modifiers:["!",",","OR"],complexValue:noRangeSplitter.facetDef.complexValue}}}}}),_addColumnExtras:inject.mark(function($q,$sce,$sanitize,Facets,ComplexValue,SearchFacet){return function(column){var extraDefs=this._columnExtraDefs(),extras={"_metadata.logid":{facetDef:{modifiers:["!"],tweakFilter:{history:function(filters){const opMap={"==":"=@","!=":"!@"};filters.forEach(f=>{if(f.orValues=f.orValues.map(v=>"*"+("000000"+v).substr(-6)),!(f.operator in opMap))throw new Error(`unsupported operator ${f.operator} for filter field ${f.id}`);f.operator=opMap[f.operator]})}}}},level:{addDescription:function(value){return value.description=$sce.trustAsHtml(formatters.log_severity_bar(value.key)),value},facetDef:extraDefs.noRangeWithOr.facetDef},action:{langPrefix:"Log::Action::",facetDef:extraDefs.noRangeSplitter.facetDef,sortValues:function(a,b){return a.localeCompare(b)}},proto:{facetDef:{populate:function(entries){var inherited=SearchFacet.prototype.populate.apply(this,arguments);return this._entriesMap=$q.when(entries).then(function(entries){return entries.reduce(function(em,entry){return em.true[entry.protocol]=entry.proto,em.false[entry.proto]=String(entry.protocol).toUpperCase(),em},{true:{},false:{}})}),$q.all([inherited,this._entriesMap]).then(function(promises){return promises[0]})},lookup:function(key,reverse){if(this._entriesMap)return this._entriesMap.then(function(em){return em[!!reverse][key]})}}},app:{facetDef:{hint:"See Also: Service"}},host:{facetDef:{hint:"Search source or destination IP"}},policyid:extraDefs.noRangeWithOr,poluuid:extraDefs.noRangeWithOr,utmref:extraDefs.noRangeSplitter,url:extraDefs.noRangeSplitter,cveid:extraDefs.noRangeSplitter,user:extraDefs.noRangeSplitter,vpntunnel:extraDefs.noRangeSplitter,catdesc:extraDefs.noRangeSplitter,dlpextra:extraDefs.noRangeSplitter,filtername:extraDefs.noRangeSplitter,filename:extraDefs.noRangeSplitter,filtertype:extraDefs.noRangeSplitter}[column.id];return extras&&(column._metadata=Object.assign({},extras,column._metadata)),column}}),getValuesGen:function(column,values){var complexValues;return values=(values||column._metadata.values).map(this.langOptionValueGen(column)),column._metadata.addDescription&&values.forEach(column._metadata.addDescription.bind(column)),function getValues(entries){var existence;if(complexValues||(complexValues=values.map(function(value){return value.key=this.complexValue(value.key,!0).getSimple(),value}.bind(this))),entries){if(!Array.isArray(entries))return entries.then(getValues);existence=entries.reduce(function(result,entry){return result[entry[column.id]]=!0,result},{}),complexValues.forEach(function(value){value.highlight=function(){return this.key in existence}})}return column._metadata.sortValues&&complexValues.sort(column._metadata.sortValues),complexValues}},langOptionValueGen:inject.mark(function(SearchFacet,lang){return function(column){var prefix=column.langPrefix||column._metadata.langPrefix||"";return function(key){return Array.isArray(key)?new SearchFacet.ValueOption(key[0],key[1]):column.plainValues?new SearchFacet.ValueOption(key,key):new SearchFacet.ValueOption(key,lang(prefix+key))}}}),logColumnFacets:inject.mark(function(SearchFacet,lang){return function(columns,highlight){var extraDefs=this._columnExtraDefs(),types={ip_host:{type:"ip",modifiers:["!",",","-"],sort:sort.ipAddr},timestamp:this.genericConfigDateTime(),enum:this.facets.enumFacet({getValues:this.getValuesGen}),string:{modifiers:["!",","],complexValue:extraDefs.noRangeSplitter.facetDef.complexValue},integer:{sort:function(a,b){return parseFloat(a)-parseFloat(b)}}},overrides={eventtype:{plainValues:!0},action:{sort:function(a,b){return ftnt_shared.util.fastLocaleCompare(a?lang("Log::Action::"+a.key.value):"",b?lang("Log::Action::"+b.key.value):"")}}},facets=this;return columns.map(function(column){if(!column.id||!column._metadata.lang_key&&!column._metadata.title)throw new Error("Column must have an id and metadata must have a lang_key or title: "+JSON.stringify(column));var prop,cm=column._metadata,f={id:"_"+column.id,name:cm.lang_key||cm.title,selectors:{history:column.id},highlight:highlight,type:cm.filter_type||cm.type};if(f.type in types){var type=types[f.type];for(prop in type)f[prop]=type[prop]}column.id in overrides&&(column=Object.assign({},column),cm=column._metadata=Object.assign({},column._metadata,overrides[column.id]));"sort"in cm?f.sort=cm.sort:"enum"===cm.type&&(f.sort=function(a,b){return a=cm.values.indexOf(a.key.value),b=cm.values.indexOf(b.key.value),a-b});"alias"in cm&&(f.alias=cm.alias);if("facetDef"in cm)for(prop in cm.facetDef)f[prop]=cm.facetDef[prop];f.getValues===facets.getValuesGen&&(f.getValues=facets.getValuesGen(column));return new SearchFacet(f)})}}),genericConfigDateTime:inject.mark(function(SearchFacet,ComplexValue,lang){return function(){return{modifiers:[">=","<=","-"],valuePlaceholder:"yyyy/mm/dd hh:mm:ss",parse:function(value){if(null==(value=parseDateTime(value)))throw new ParseDateTimeException;return value&&value instanceof Date&&value.getTime()},format:function(date){if(null==date||""===date)return date;const ts=parseInt(date,10);return ts?datetime.formatDateTime(new Date(ts)):date},lookup:function(key,reverse){if(null==key)return key;if(key instanceof ComplexValue&&!reverse)return key.formatted(this);if(!reverse)return datetime.formatDateTime(new Date(key));try{return parseDateTime(key)}catch(ex){if(ex instanceof ParseDateTimeException&&"string"==typeof key&&/^[0-9]+/.test(key))return parseInt(key,10)}},getValues:function(){return this.$values||(this.$values=[gtvo("Last 5 minutes",new TimeSpan(5,0,0)),gtvo("Last hour",new TimeSpan(1,0,0,0)),gtvo("Last 24 hours",new TimeSpan(1,0,0,0,0))])},contextFilters:function(key){return[[mvo(">=",key,this),mvo("<=",key,this)],this.getValues(),[gtvo("5 minutes before",new TimeSpan(5,0,0),key),gtvo("1 hour before",new TimeSpan(1,0,0,0),key),gtvo("24 hours before",new TimeSpan(1,0,0,0,0),key)],[gtvo("5 minutes after",new TimeSpan(-5,0,0),key),gtvo("1 hour after",new TimeSpan(-1,0,0,0),key),gtvo("24 hours after",new TimeSpan(-1,0,0,0,0),key)]]},genRelevanceFn:function(){return function(){return 1}}};function mvo(modifier,key,facet){key instanceof SearchFacet.ValueOption&&(key=key.key);var value=ComplexValue.build([key],[modifier]);return new SearchFacet.ValueOption(value,value.formatted(facet))}function gtvo(label,timeSpan,reference){reference instanceof SearchFacet.ValueOption&&(reference=reference.key);var before="",after="",ts=timeSpan.getTime();void 0===reference?(before=">= ",reference=(new Date).getTime()):ts<0?before=reference+" - ":ts>0&&(after=" - "+reference);var rDate=new Date(reference),ms=reference-ts,cv=new ComplexValue(before+Math.round(ms)+after),vo=new SearchFacet.ValueOption(cv,lang(label,[datetime.formatDateTime(rDate)]));return vo.formatted=function(fn){return this.key.formatted(fn)},vo}}})},function(providers,loader){var result=loader.initModules([__webpack_require__(871),__webpack_require__(240)]);return providers.$provide.service("loggingFacets",LoggingFacets),result}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},871:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(167),__webpack_require__(80),__webpack_require__(240),__webpack_require__(88),__webpack_require__(231)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,util_logs,sort){function facetsFactory(injector,SearchFacet,lang,csfTopology,ApiFilter,LogFilter){function Facets({csfState:csfState,logType:logType,logDeviceId:logDeviceId,excludeCommon:excludeCommon}={}){this.csfState=csfState,this.logDeviceId=logDeviceId,this.facets=[];var partialBind={constructFacets:["facets"],_makeFacetValues:["facetsModel"],makeApiFilters:["facetsModel","extraFilters","tweak"],makeQlistFilters:["facetsModel","extraFilters","period"],fromApiFilters:["filters","source"],enumFacet:["facetDef"],genPolicyTypeGetter:[]};for(var fn in partialBind)this[fn]=injector.partial(this[fn],this,partialBind[fn]);var policyTypesMap={policy:{idName:"policyid",unsupportedLogTypes:["traffic/local","traffic/multicast","traffic/sniffer"]},policy46:{idName:"policyid",unsupportedLogTypes:["traffic/local","traffic/multicast","traffic/sniffer"]},policy64:{idName:"policyid",unsupportedLogTypes:["traffic/local","traffic/multicast","traffic/sniffer"]},sniffer:{idName:"id",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/multicast"]},"security-policy":{idName:"policyid",unsupportedLogTypes:["traffic/local","traffic/multicast","traffic/snitter"]},"proxy-policy":{idName:"policyid",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/multicast","traffic/sniffer"]},"DoS-policy":{idName:"policyid",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/multicast","traffic/sniffer"]},"DoS-policy6":{idName:"policyid",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/multicast","traffic/sniffer"]},"local-in-policy":{idName:"policyid",unsupportedLogTypes:["traffic/forward","traffic/multicast","traffic/sniffer"]},"local-in-policy6":{idName:"policyid",unsupportedLogTypes:["traffic/forward","traffic/multicast","traffic/sniffer"]},"multicast-policy":{idName:"id",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/sniffer"]},"multicast-policy6":{idName:"id",unsupportedLogTypes:["traffic/forward","traffic/local","traffic/sniffer"]}};this.supportedPolicyTypesMap=Object.keys(policyTypesMap).reduce(function(supportedTypes,policyType){var typeEntry=policyTypesMap[policyType];logType&&typeEntry.unsupportedLogTypes.includes(logType)||(supportedTypes[policyType]=typeEntry.idName);return supportedTypes},{});var policyTypeFacet={id:"policytype",name:"Policy Type",selectors:{monitor_api:"policytype",session:"policytype",history:"policytype"},sort:SearchFacet.NO_SORT,getValues:this.genPolicyTypeGetter(),getKey:this.getPolicyTypeKey,contextFilters:function(key,complex,selectedEntry){return SearchFacet.prototype.contextFilters.call(this,key,complex,selectedEntry,"-")},meta:{segments:["source","session","application","destination","country","threat","web-category","web-domain","policy","interface-srcintf","interface-dstintf"],logTypes:!0}};this.facetDefs=[{id:"source",name:"Source",selectors:{monitor_api:"srcaddr",history:"srcip"},sort:sort.ipAddr,type:"ip",modifiers:["!",",","-"]},{id:"destination",name:"Destination IP",selectors:{monitor_api:"dstaddr",history:"dstip"},sort:sort.ipAddr,type:"ip",modifiers:["!",",","-"]},this.enumFacet(policyTypeFacet)],excludeCommon||(this.facets=this.constructFacets(this.facetDefs))}return Facets.prototype={_byId:null,byId:function(id){if(id){var result=this.byId()[id];if(!result)throw new Error("Unable to find facet by id: "+id);return result}return this._byId||(this._byId=this.facets.reduce(function(index,facet){return index[facet.id]=facet,index},{})),this._byId},bySource:function(source){return this.facets.reduce(function(index,facet){return index[facet.selectors[source]]=facet,index},{})},addFacets:function(facets){this.facets.push.apply(this.facets,facets),this._byId=null,this._bySelector=null},_bySelector:null,bySelector:function(source,selector){if(selector)return this.bySelector(source)[selector];if(this._bySelector=this._bySelector||{},!this._bySelector[source]){var bs=this.facets.reduce(function(index,facet){var value=facet.selectors[source];value&&(index[value]=facet);facet.alias&&(index[facet.alias]=facet);return index},{});this._bySelector[source]=bs}return this._bySelector[source]},constructFacets:function(SearchFacet,facets){return facets.map(function(facet){return facet instanceof SearchFacet||(facet=new SearchFacet(facet)),facet})},qlistFiltersToFacetsModel:function(filters,source){var facetsBySelector=this.bySelector(source);return filters.reduce(function(model,filter){var facet=facetsBySelector[filter.id];facet&&(model[facet.id]=filter.value);return model},{})},_sortLogFilterIds:function(a,b){var result,keys=["threattype","threatname","appid"],indexes_a=keys.indexOf(a),indexes_b=keys.indexOf(b);return 3===(result=(indexes_a>-1?1:0)+(indexes_b>-1?2:0))?indexes_a-indexes_b:[0,-1,1][result]||0},_makeFacetValues:function(ComplexValue,facetsModel){var valueMap,facets=this.byId();return Object.keys(facetsModel).reduce((valueMap=facetsModel,function(result,id){var facet=facets[id],afs=valueMap[id].map(function(value){return{facet:facet,value:value}});return facet&&result.push.apply(result,afs),result}),[])},makeApiFilters:function(ComplexValue,facetsModel,extraFilters,tweak){var facets=this.byId(),sortFn=this._sortLogFilterIds;return[...Object.entries(facetsModel).map(function([id,value]){return new LogFilter(facets[id],value)}).sort(function(a,b){return sortFn(a.facet.selectors.history,b.facet.selectors.history)}).map(function(lf){return lf.toApiFilters("history",tweak)}).reduce(function(a,b){return a.concat(b)},[]),...extraFilters||[]]},makeQlistFilters:function(ComplexValue,facetsModel,extraFilters,period){var filters=this._makeFacetValues(facetsModel).reduce(function(result,fv){var selector=fv.facet.selectors.history,filter={id:selector,logic:{is:{},search:"string"},value:null},type=fv.facet.type;if(ComplexValue.probablyComplex(fv.value)){var value=fv.value instanceof ComplexValue?fv.value:fv.facet.complexValue(fv.value);value instanceof ComplexValue&&(filter.value=[],function(value,filter){var modifierLogic={"!":"NOT","<":"RANGE",">":"RANGE","<=":"RANGE",">=":"RANGE"};filter.value=filter.value.concat(value.values),value.modifiers.length&&(filter.logic.modifiers=value.modifiers.slice());for(var i=0,len=value.modifiers.length;i<len;++i){var m=value.modifiers[i];m in modifierLogic&&(filter.logic[modifierLogic[m]]=1);var number=Number(filter.value[0]),isNumber=!isNaN(number),isInt=isNumber&&parseInt(number,10)===number,adjust=0;["<",">"].indexOf(m)>-1&&(adjust=isInt?1:Number.MIN_VALUE,"<"===m&&(adjust*=-1),filter.value[0]=String(number+adjust)),[">=",">"].indexOf(m)>-1?filter.value.push(""):["<=","<"].indexOf(m)>-1&&filter.value.unshift("")}filter.logic.search="string",value.splitter&&(filter.logic.splitter=value.splitter,"-"===value.splitter&&(filter.logic.RANGE=1))}(value,filter))}null===filter.value&&(filter.value=[String(fv.value)]);type&&(filter.logic.is[type]=!0);if(selector){var extra=fv.facet.tweakFilter.history.call(fv.facet,filter);result.push(filter),Array.isArray(extra)?result=result.concat(extra):extra&&result.push(extra)}return result.sort(function(a,b){return sortFn(a.id,b.id)})},[]),sortFn=this._sortLogFilterIds;return extraFilters&&(filters.push.apply(filters,extraFilters),filters.sort(function(a,b){return("rel_time"===a.id?-1:0)-("rel_time"===b.id?-1:0)})),period&&filters.unshift(util_logs.timeSpanFilter(period)),function(filters){var other,other_index,f,index=filters.length,keys=filters.map(function(filter){return(filter||{}).id});for(;index--;)if(f=filters[index],(other_index=keys.indexOf(f.id))!==index){if(other=filters[other_index],f.logic.RANGE||other.logic.RANGE)continue;if(f.logic.NOT&&!other.logic.NOT)other.logic.NOT=0,other.value=other.value.filter(filterNotInCurrent);else if(!f.logic.NOT&&other.logic.NOT)other.logic.NOT=0,other.value=f.value.filter(filterNotInOther);else if(f.logic.NOT&&other.logic.NOT)other.value=f.value.filter(filterInOther);else{var to_append=f.value.filter(filterNotInOther);other.value.push.apply(other.value,to_append)}filters.splice(index,1)}function filterNotInOther(v){return!(v in other.value)}function filterInOther(v){return v in other.value}function filterNotInCurrent(v){return!(v in f.value)}}(filters),filters},fromApiFilters:function(ComplexValue,filters,source){var bySource=this.bySource(source);return filters.reduce(function(model,filter){var facet=bySource[filter.key];facet&&(facet.id in model||(model[facet.id]=[]),model[facet.id]=model[facet.id].concat(function(filter){if(filter.operator!==ApiFilter.OP.EQUAL){const modifiers=filter.operator.startsWith(ApiFilter.OP.NOT_PREFIX)?["!"]:[];if((filter.operator.startsWith(ApiFilter.OP.GREATER)||filter.operator.startsWith(ApiFilter.OP.LESS))&&modifiers.push(filter.operator),filter.operator.endsWith(ApiFilter.OP.CONTAINS_SUFFIX))throw new Error("Contains not supported by ComplexValue");return[new ComplexValue.build(filter.orValues,modifiers)]}return filter.orValues}(filter)));return model},{})},enumFacet:function(SearchFacet,ComplexValue,facetDef){var defaultDef={modifiers:["!",","],complexValue:function(value,convert){if(value){var isComplex=value instanceof ComplexValue;!isComplex&&convert&&(value=new ComplexValue(value)),(isComplex||convert)&&(value=value.withModifiers(this.modifiers))}return value},allowUserInput:!1,lookup:function(key,reverse){var values=this.getValues(),cv=this.complexValue.bind(this),option=values.find(function(option){return reverse?String(option.value)===String(key):option.key instanceof ComplexValue?option.key.equals(cv(key,!0)):option.key===key});return option?reverse?option.key:option.value:key},format:function(value){return this.lookup(value)}};return Object.assign(angular.copy(defaultDef),angular.copy(facetDef||{}))},_policies:{},genPolicyTypeGetter:function(lang,SearchFacet){return function(){return Object.keys(this.supportedPolicyTypesMap).map(function(policyType){return new SearchFacet.ValueOption(policyType,lang("Firewall::policytype."+policyType))})}.bind(this)},getPolicyTypeKey:function(entry,source){return entry[this.selectors[source]]||"policy"}},Facets.CsfState=function(initialFortigate){this.currentFortigate=csfTopology.fortigateMapping[initialFortigate]},Facets.CsfState.prototype.setCurrentFortiGate=function(fortigateSerial){this.currentFortigate=csfTopology.fortigateMapping[fortigateSerial]},Facets}return function(providers,loader){return providers.$provide.factory("Facets",facetsFactory),loader.initModules([__webpack_require__(453)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},88:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(130),__webpack_require__(10),__webpack_require__(225),__webpack_require__(27),__webpack_require__(177),__webpack_require__(178),__webpack_require__(230)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,fCmdb,$,CMDB_JS,notify){return module.factory("CMDB",function($http,$q,$injector,$rootScope,$log,$cacheFactory,loader,ftntCopy,ftntRoute,lang){function thisError(object){return new loader.FOSError("Use new keyword to create "+object)}function CMDBError(response,message,config){var CFG_ERR={cmdb_no_permissions:CMDBError.NO_PERMISSIONS};if(!(this instanceof CMDBError))throw thisError("CMDBError");var responseType=typeof response;if(this.message="",response&&["string","object"].includes(responseType))if("string"===responseType)message=response,response=void 0;else if("number"==typeof response.error)loader.FOSError.call(this,response.error);else if("number"==typeof response.status)loader.FOSError.call(this,response.status);else if("http_status"in response)angular.extend(this,response),response=null;else{var err_no=CFG_ERR[response.error];void 0!==err_no?loader.FOSError.call(this,err_no):(this.err_no=null,this.message=response.error||this.message)}else message="Error creating CMDBError: Expected response argument to be an object or string, got "+(JSON.stringify(response)||responseType),response=void 0;this.response=response,message&&(this.message&&(this.message+="\n"),this.message+=message),response&&response.message&&(this.message&&(this.message+="\n"),this.message+="("+response.message+")"),this.config=config}function response_filter(response){var cmdb_response=response.data;return response.data?cmdb_response&&"success"===cmdb_response.status?"GET"===response.config.method?cmdb_response.results:cmdb_response:$q.reject(new CMDB.Error(cmdb_response)):$q.reject(new CMDB.Error(response,"Response data is "+response.data))}function mkey_valid(mkey){return"string"==typeof mkey?!!mkey:"number"==typeof mkey?mkey%1==0&&mkey<=4294967295&&mkey>=0:mkey instanceof $q}CMDBError.prototype=Object.create(Error.prototype),CMDBError.prototype.name="CMDBError",CMDBError.prototype.constructor=CMDBError,CMDBError.NO_PERMISSIONS=loader.FOSError.NO_PERMISSIONS;var COMPLEX_OBJECTS=new Set(["alertemail.setting","authentication.setting","ftp-proxy.explicit","ips.global","log.disk.setting","log.eventfilter","log.fortianalyzer.override-setting","log.fortianalyzer.setting","log.fortianalyzer-cloud.override-setting","log.fortianalyzer-cloud.setting","log.fortiguard.override-setting","log.fortiguard.setting","log.gui-display","log.memory.setting","log.null-device.setting","log.setting","log.syslogd.override-setting","log.syslogd.setting","log.threat-weight","nsx.setting","report.setting","router.bgp","router.multicast","router.ospf","router.rip","switch-controller.quarantine","system.auto-install","system.autoupdate.push-update","system.autoupdate.schedule","system.central-management","system.csf","system.dedicated-mgmt","system.dns","system.elbc","system.email-server","system.fortiguard","system.fortisandbox","system.gi-gk","system.global","system.ha","system.modem","system.nat64","system.ntp","system.password-policy","system.password-policy-guest-admin","system.ptp","system.resource-limits","system.saml","system.settings","system.snmp.sysinfo","system.sdwan","system.vdom-dns","user.setting","user.quarantine","vpn.l2tp","vpn.ocvpn","vpn.ssl.settings","wanopt.settings","wanopt.webcache","web-proxy.explicit","web-proxy.global","wireless-controller.global","wireless-controller.setting"]),FallbackResource=newResourceClass(null);function CMDB(path_or_cmdb_or_prefs,name_or_prefs,preferences){if(!(this instanceof CMDB))throw thisError("CMDB instance.");var path,name;if(1===arguments.length||path_or_cmdb_or_prefs instanceof CMDB){var extraPreferences=null;"object"==typeof name_or_prefs&&(extraPreferences=name_or_prefs),(preferences=path_or_cmdb_or_prefs)instanceof CMDB&&(preferences=angular.copy(preferences.parameters),Object.assign(preferences,extraPreferences))}else path=path_or_cmdb_or_prefs,name=name_or_prefs;var parameters={cache:!1,path:path,name:name},instance=this;this.parameters=angular.extend(parameters,preferences),["fetch","defaults","schema","_cached_schema"].forEach(function(fn){instance[fn]=instance[fn].bind(instance)}),this._shortcuts=this._get_shortcuts(),this._models=angular.extend({},CMDB._models)}function ResourceBase(){}function newResourceClass(model){function Resource(data,cmdb,model,promise){this.$cmdb=cmdb.parameters,this.$$cmdb=cmdb,Object.defineProperty(this,"$$cmdb",{enumerable:!1}),Resource.init(this,data,model,promise)}return Resource.init=function(resource,data,model,promise){var $cmdb=resource.$cmdb,$$cmdb=resource.$$cmdb,$promise=resource.$promise,$schema=resource.$schema;angular.copy(data||{},resource),resource.$promise=$promise,resource.$cmdb=$cmdb,resource.$$cmdb=$$cmdb,resource.$schema=$schema,resource.$$original=data,resource.$original=data,model&&(promise=promise.then(function(){return resource}),model.prototype instanceof CMDBResourceModel?$injector.invoke(model,resource,{$initPromise:promise}):model.enhance&&model.enhance(resource,promise))},model&&model.prototype instanceof CMDBResourceModel?(Resource.prototype=Object.create(model.prototype),Resource.constructor=Resource):Resource.prototype=model?new CMDBResourceModel(model.prototype):new ResourceBase,Resource}function CMDBUnion(){if(!this)throw thisError("CMDBUnion");var args;args=1===arguments.length?arguments[0]:$.makeArray(arguments),this.tables=args}function CMDBResourceModel(protoSpec){for(var prop in protoSpec){var desc=Object.getOwnPropertyDescriptor(protoSpec,prop);Object.defineProperty(this,prop,desc)}}CMDB.INVALID_MKEY=null,CMDB.PRUNE_RECURSIVE={__prune_array_items__:!1},CMDB.prototype={_get_mkey:function(entry){if(this._is_complex_object())return $q.when(CMDB.INVALID_MKEY);var result=entry.$mkey;return mkey_valid(result)||(result=entry.q_origin_key),mkey_valid(result)||(result=(entry.$schema||this._cached_schema()).$promise.then(function(schema){var result=entry[schema.mkey];return mkey_valid(result)||(result=CMDB.INVALID_MKEY),result})),$q.when(result)},_get_shortcuts:function(){return{$delete:CMDB.ResourceModel.prototype.$delete,$save:CMDB.ResourceModel.prototype.$save,$move:CMDB.ResourceModel.prototype.$move}},_set_mkey:function(entry,value){function resolve(schema){if(!mkey_valid(value))throw $log.error("Mkey supplied to _set_mkey is invalid",entry,value,schema),new CMDBError("mkey is invalid: "+value);return entry.$mkey=entry[schema.mkey]=value,"q_origin_key"in entry&&(entry.q_origin_key=value),value}var schema=entry.$schema||this._cached_schema();return schema.$resolved?(resolve(schema),null):schema.$promise.then(resolve)},fetch:function(preferences){return this._fetch(preferences)},_fetch:function(preferences,returnSingle){var parameters={with_meta:!0},isArray=!this._is_complex_object(),cmdb=this;parameters=this._params(parameters,preferences);var model=this._get_model(parameters);return this._request(parameters,"GET",isArray,returnSingle,function(entry,resource){model&&model.prototype&&model.prototype instanceof BaseModel||(delete entry.$save,delete entry.$move,delete entry.$delete,delete entry.$defaults,entry.$save=entry.$save||cmdb._shortcuts.$save.bind(entry),entry.$move=entry.$move||cmdb._shortcuts.$move.bind(entry),entry.$delete=entry.$delete||cmdb._shortcuts.$delete.bind(entry),entry.$defaults=entry.$defaults||cmdb.defaults),entry.$schema=cmdb._cached_schema(),cmdb._get_mkey(entry).then(function(mkey){entry.$mkey=mkey}),resource&&(resource.$defaults=resource.$defaults||entry.$defaults,resource.$schema=entry.$schema)},model)},_is_complex_object:function(){var path_name=[this.parameters.path,this.parameters.name,this.parameters.child_path].filter(Boolean).join(".");return COMPLEX_OBJECTS.has(path_name)},_update_mkey_from_result:function(value){var complex=this._is_complex_object();return function(result){var mkey=result.mkey;return value.$new&&(value.$new=!1),complex||this._set_mkey(value,mkey),fCmdb.record_cmdb_edit(this.parameters.path,this.parameters.name,mkey),result}.bind(this)},edit:function(mkey,value,preferences){var result,parameters={json:value,shortcuts:!1};if(this._is_complex_object()||(this.parameters.child_path?parameters.child_mkey=mkey:parameters.mkey=mkey),Array.isArray(value))throw new CMDBError("Unable to edit multiple objects with a single request.\nPlease use CMDB.batch with multiple edit calls.");if(parameters=this._params(parameters,preferences),mkey===CMDB.INVALID_MKEY&&!this._is_complex_object())throw new CMDBError("Entry cannot be saved with no mkey because it is not a complex object.");return(result=this._request(parameters,"PUT")).$promise.then(function(){fCmdb.record_cmdb_edit(this.parameters.path,this.parameters.name,mkey)}.bind(this)),result.$promise=result.$promise.then(this._update_mkey_from_result(value)),result},append:function(value,preferences){var result,parameters={json:value,shortcuts:!1};if(Array.isArray(value))throw new Error("Unable to append multiple objects with a single request.\nPlease use CMDB.batch with multiple edit calls.");return parameters=this._params(parameters,preferences,!1),(result=this._request(parameters,"POST")).$promise=result.$promise.then(this._update_mkey_from_result(value)),result},get:function(mkey,preferences){var parameters={mkey:mkey,with_meta:!0};return preferences=angular.extend(parameters,preferences),this._fetch(preferences,!0)},del:function(mkey,preferences){var parameters={mkey:mkey,shortcuts:!1};return parameters=this._params(parameters,preferences),this._request(parameters,"DELETE")},move:function(mkey_or_entry,destination,insert_before,preferences){var model=this._params({},preferences).model,Resource=model?model.Resource:FallbackResource;destination instanceof Resource&&(destination=this._get_mkey(destination));var entry=mkey_or_entry instanceof Resource?mkey_or_entry:null,parameters={mkey:entry?this._get_mkey(entry):mkey_or_entry,url_params:{action:"move",before:insert_before?destination:void 0,after:insert_before?void 0:destination},shortcuts:!1};return parameters=this._params(parameters,preferences),this._request(parameters,"PUT")},defaults:function(preferences){var parameters={action:"default",cache:!0,with_meta:!0},cmdb=this;return parameters=this._params(parameters,preferences),this._request(parameters,"GET",null,null,function(entry,resource){entry.$save=entry.$save||cmdb._shortcuts.$save.bind(entry),entry.$delete=entry.$delete||function(prefs){if(!1===entry.$new)return cmdb._shortcuts.$delete.call(entry,prefs);throw new CMDBError("Cannot delete unsaved entries")},entry.$defaults=entry.$defaults||cmdb.defaults,entry.$new=!0,(resource||entry).$schema=cmdb._cached_schema()},this._get_model(parameters))},schema:function(preferences){var parameters={action:"schema",cache:!0},cmdb=this;parameters=this._params(parameters,preferences);var result,model=this._get_model(parameters);return model&&(model.prototype instanceof CMDBResourceModel||model.prototype instanceof BaseModel)&&(delete parameters.model,model=null),result=this._request(parameters,"GET",!1),model&&model.enhance_schema&&(result.$promise=result.$promise.then(function(){return model.enhance_schema(result,cmdb),result})),result},_cached_schema_resource:null,_cached_schema:function(){var result=this._cached_schema_resource;return result||(result=this._cached_schema_resource=this.schema()),result},_get_model:function(parameters){return void 0!==(parameters=parameters||this.parameters).model?parameters.model:this._models[parameters.path+"."+parameters.name]},_request:function(parameters,method,isArray,returnSingle,shortcuts,model){model&&!model.Resource&&(model.prototype&&model.prototype instanceof BaseModel?model.Resource=model:model.Resource=newResourceClass(model));var json_data,cmdb=this,do_prune=parameters.prune,new_original=null,action=parameters.action,orig_parameters=parameters,Resource=model?model.Resource:FallbackResource;if(isArray=!!isArray,!1===parameters.shortcuts&&(shortcuts=null),parameters.model&&(model=parameters.model).enhance_schema)throw new CMDBError("enhance_schema not implemented for model overrides! (FIXME)");"GET"!==method&&(model=null),delete parameters.model,delete parameters.shortcuts,delete parameters.prune,parameters.url_params&&(parameters.url_params=$q.all(parameters.url_params).then(function(url_params){return parameters.url_params=url_params,url_params}));var result_promise=$q.all(parameters).then(function(parameters){["with_meta","skip","datasource"].forEach(function(k){k in parameters&&(parameters[k]=parameters[k]?1:0)}),!parameters.children&&parameters.child_path&&(parameters.child_mkey&&(parameters.child_mkey=String(parameters.child_mkey).replace(/\//g,encodeURIComponent("/"))),parameters.children=[parameters.child_path,parameters.child_mkey].filter(Boolean).join("/"),delete parameters.child_path,delete parameters.child_mkey);var result_promise,cache_id,cache,url,params,urlParams,result,http_params={method:method,url:(url="/api/v2/cmdb/:path/:name/:mkey?/:children?*",params=parameters,urlParams=ftntRoute.extractVars(url),result=ftntRoute.interpolate(url,params),urlParams.forEach(function(key){delete params[key]}),result),cache:parameters.cache||!1,responseType:"json",csfProxy:parameters.csfProxy},url_params=parameters.url_params;if(delete parameters.url_params,http_params.cache=parameters.cache||!1,delete parameters.cache,delete parameters.csfProxy,"GET"===method)http_params.params=url_params||parameters;else{if(parameters.json){if(json_data=parameters.json,new_original=parameters.json=ftntCopy.fastCopy(parameters.json),do_prune&&parameters.json){var recurse=do_prune===CMDB.PRUNE_RECURSIVE,original=parameters.json.$original;parameters.json=function prune(recurse,original,entry){if(angular.isArray(entry))return CMDB.PRUNE_RECURSIVE.__prune_array_items__?entry.map(function pruneItem(item,i){return original?function prune(recurse,original,entry){if(angular.isArray(entry))return CMDB.PRUNE_RECURSIVE.__prune_array_items__?entry.map(pruneItem):entry;var result={};return angular.forEach(entry,function(value,key){"$"===key.substr(0,1)||angular.equals(original[key],value)||(recurse&&null!==value&&"object"==typeof value&&"object"==typeof original[key]?result[key]=prune(recurse,original[key],value):result[key]=value)}),result;function pruneItem(item,i){return original?prune(recurse,original[i]||{},item):item}}(recurse,original[i]||{},item):item}):entry;var result={};return angular.forEach(entry,function(value,key){"$"===key.substr(0,1)||angular.equals(original[key],value)||(recurse&&null!==value&&"object"==typeof value&&"object"==typeof original[key]?result[key]=prune(recurse,original[key],value):result[key]=value)}),result;function pruneItem(item,i){return original?prune(recurse,original[i]||{},item):item}}(recurse,original,parameters.json)}http_params.data=ftntCopy.strip$Properties(parameters.json),delete parameters.json}http_params.params=Object.assign({},url_params,parameters)}return orig_parameters.ng_cache&&"GET"===method&&(cache_id=angular.toJson(orig_parameters),result_promise=(cache=CMDB._get_cache()).get(cache_id)),result_promise||(result_promise=$http(http_params),cache&&cache.put(cache_id,result_promise)),result_promise}),result=isArray&&!returnSingle?[]:new Resource(null,cmdb);return result.$resolved=!1,result.$promise=result_promise.then(response_filter).then(function(data){var newPromise,newPromises=[];if(angular.isArray(data)!==isArray){var error=new CMDBError({data:data,parameters:parameters},"CMDB Configuration Error. Expected result to be an "+(isArray?"Array":"Object")+" but got an "+(isArray?"Object":"Array"));return $q.reject(error)}if(isArray&&!returnSingle){result.length=0;for(var i=0,len=data.length;i<len;++i)if(model&&model.prototype&&model.prototype instanceof BaseModel){const instance=new model(data[i],cmdb);model.init(instance,data[i],result.$promise),result.push(assignMkey(instance)),instance.$promise&&newPromises.push(instance.$promise)}else model&&model.prototype&&CMDBResourceModel.putPrototype(model,data[i]),result.push(assignMkey(new Resource(data[i],cmdb,model,result.$promise)));result.filter=function(){var filteredArray=Array.prototype.filter.apply(this,arguments);return["$defaults","$promise","$resolved","$schema","filter"].forEach(function(key){filteredArray[key]=this[key]}.bind(this)),filteredArray},newPromises.length&&(newPromise=$q.all(newPromises).then(()=>result))}else{var promise=result.$promise;if(isArray&&returnSingle){if(0===data.length)return reject(new CMDBError({data:data,parameters:parameters},"Entry not found"));data=data[0]}result.$promise=void 0,model&&model.prototype&&model.prototype instanceof BaseModel?Resource.init(result,data,promise):(model&&model.prototype&&CMDBResourceModel.putPrototype(model,data,!0),Resource.init(result,data,model,promise)),newPromise=result.$promise,result.$promise=promise,assignMkey(result)}return result.$resolved=!0,"GET"!==method&&new_original&&json_data&&(json_data.$original=new_original),newPromise||result;function assignMkey(resource){return data&&"schema"!==action&&"GET"===method&&cmdb._get_mkey(resource).then(function(mkey){resource.$mkey=mkey}),resource}},reject),shortcuts&&!result.$resolved&&function(shortcuts,resource){var keys,dummy={},entries=angular.isArray(resource)?resource:[resource];shortcuts(dummy,resource),keys=Object.keys(dummy),resource.$promise.then(function(resource){for(var i=0,len=entries.length;i<len;++i)shortcuts(entries[i]);return resource},function(error){for(var i=0,len=entries.length;i<len;++i)keys.forEach(make_error_fn);return error;function make_error_fn(shortcut){entries[i][shortcut]=function(){throw new CMDBError(error,"Can't "+shortcut+" entry is invalid.")}}}),model&&model.prototype&&model.prototype instanceof BaseModel||keys.forEach(function(shortcut){function not_resolved(){throw new CMDBError("Unable to call shortcut, "+shortcut+": resource is not resolved",null,this)}if(angular.isFunction(dummy[shortcut]))for(var i=0,len=entries.length;i<len;++i)entries[i][shortcut]=not_resolved})}(shortcuts,result),result;function reject(response){return response instanceof CMDBError?response.config=parameters:response=new CMDBError(response.data),result.$resolved=!0,$q.reject(response)}},_params:function(parameters,preferences){var result=angular.extend({},this.parameters);return angular.extend(result,parameters),angular.extend(result,preferences)}},CMDBUnion.prototype={fetch:function(){var result=[],promises=this.tables.map(function(table){return table.fetch().$promise});return result.$promise=$q.all(promises).then(function(datas){result.length=0;for(var i=0,len=datas.length;i<len;++i)result.splice.apply(result,[result.length,0].concat(datas[i]));return result.$resolved=!0,result},function(error){return result.$resolved=!0,$q.reject(error)}),result.$resolved=!1,result}},CMDBResourceModel.putPrototype=function(Model,entry,copy){if(Model.prototype){var is_fn=angular.isFunction(Model.prototype),ctor=Model.Resource;if(is_fn&&entry){var new_proto=Model.prototype(entry);copy?angular.copy(new_proto,ctor.prototype):ctor.prototype=new_proto}}},CMDBResourceModel.Resource=null,CMDBResourceModel.prototype={$save:function(preferences){var result,cmdb=this.$$cmdb,_shortcuts=cmdb._shortcuts,complex=cmdb._is_complex_object(),mkey=this.$new?CMDB.INVALID_MKEY:cmdb._get_mkey(this);if(complex||this.$new||mkey_valid(mkey))return!complex&&mkey instanceof $q&&(mkey=mkey.then(function(mkey){return mkey_valid(mkey)||throw_invalid_mkey(),mkey})),result=!complex&&this.$new?cmdb.append(this,preferences):cmdb.edit(mkey,this,preferences),delete this.$delete,delete this.$move,this.$delete||(this.$delete=_shortcuts.$delete.bind(this)),this.$move||(this.$move=_shortcuts.$move.bind(this)),result;function throw_invalid_mkey(){throw new CMDBError("Cannot save defaults without valid mkey or id")}throw_invalid_mkey()},$move:function(destination,insert_before,preferences){if(this.$$cmdb._is_complex_object())throw new CMDBError("Cannot move a complex object");return this.$$cmdb.move(this,destination,insert_before,preferences)},$delete:function(preferences){var entry=this,cmdb=this.$$cmdb;function error_fn(){throw error}var result,error=new CMDBError("Entry has been deleted ");if(!mkey_valid(entry.$mkey))throw new CMDBError(cmdb._is_complex_object()?"Unable to delete Complex Objects":"Entry cannot be deleted. mkey is invalid: "+String(entry.$mkey));return(result=cmdb.del(entry.$mkey,preferences)).$promise=result.$promise.then(function(result){return angular.copy({$promise:$q.reject(error),$resolved:!0,$delete:error_fn,$get:error_fn},entry),entry.$mkey=CMDB.INVALID_MKEY,result}),result}};class BaseModel{constructor(data,cmdb){if(!arguments.length)throw new Error("Arguments are not passed to BaseModel. Please use call super(...arguments) in "+this.constructor.name);this.$cmdb=cmdb.parameters,this.$$cmdb=cmdb,Object.defineProperty(this,"$$cmdb",{enumerable:!1})}$onInit(){}static init(resource,data,promise){var $cmdb=resource.$cmdb,$$cmdb=resource.$$cmdb,$promise=resource.$promise,$schema=resource.$schema;angular.copy(data||{},resource),resource.$promise=$promise,resource.$cmdb=$cmdb,resource.$$cmdb=$$cmdb,resource.$schema=$schema,resource.$$original=data,resource.$original=data,promise&&(resource.$resolved=!0,promise=promise.then(()=>resource),resource.$onInit(promise))}}function CMDB_get_cache(){return CMDB._cache||(CMDB._cache=$cacheFactory("CMDB",{number:15}))}return BaseModel.Resource=null,["$save","$move","$delete"].forEach(key=>{BaseModel.prototype[key]=function(){if(!this.$resolved)throw new CMDBError("Unable to call shortcut, "+key+": resource is not resolved",null,this);return CMDBResourceModel.prototype[key].apply(this,arguments)}}),$rootScope.$on("$routeChangeStart",function(){CMDB._models={},CMDB_get_cache().removeAll()}),angular.extend(CMDB,{_models:{},Union:CMDBUnion,Error:CMDBError,ResourceModel:CMDBResourceModel,BaseModel:BaseModel,batch:function(){function reject(error){return deferred.reject(error)}var operations=$.isArray(arguments[0])?arguments[0]:$.makeArray(arguments),collect=[],deferred=$q.defer();return function resolve(result){if(arguments.length>0){collect.push(result);var progress=collect.length/(collect.length+operations.length);deferred.notify({successful:collect,last:result,progress:progress})}if(operations.length){var operation=operations.shift();if(!angular.isFunction(operation))return $q.reject(new CMDBError("Batch operation is not a function "+operation));operation().$promise.then(resolve,reject)}else deferred.resolve(collect);return result}(),deferred.promise},columnFormatPrefs:function(columns,prefs,with_meta){var result=prefs||{};return result.format=columns.join("|"),result.with_meta=!!with_meta,result},_get_cache:CMDB_get_cache,notifyFailure:function(error){return CMDB_JS.notify_failure(error.response||error)},notifyFailureMessage:function(lang_key,level){var fn=CMDB_JS.notify_failure_message(lang_key,level);return function(error){return fn(error.response||error)}},notifySuccess:function(){notify.post(lang("Settings Saved Successfully").toString(),notify.LEVEL.SUCCESS)},Model:function CMDBModel(path,name,prototype,enhance,enhance_schema){if(!(this instanceof CMDBModel))throw thisError("CMDBError");this.path=path,this.name=name,this.prototype=prototype,this.enhance=enhance,this.enhance_schema=enhance_schema,this.Resource=newResourceClass(this)},model:function(){for(var i=0,len=arguments.length;i<len;++i){var models=$injector.invoke(arguments[i]);angular.isArray(models)||(models=[models]);for(var m=0,len2=models.length;m<len2;++m){var model=models[m];CMDB._models[model.path+"."+model.name]=model}}}}),CMDB})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},883:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(0),__webpack_require__(26),__webpack_require__(34),__webpack_require__(32),__webpack_require__(62),__webpack_require__(31),__webpack_require__(38),__webpack_require__(8),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,BUILD,inject,fDatetime,fFormatters,fObjects,fDom,fIcon,ftntShared,fLog){var DETAIL_SECTIONS_CONFIG="/ng/log/view/detail-sections.json";function fLogDetails(){return{retrict:"E",scope:{logMetadata:"=",selectedTab:"=",hideClick:"&",entries:"=",deviceId:"=",serialNo:"<",logType:"=",logFormatters:"=",fortigate:"<"},bindToController:!0,controllerAs:"logDetails",controller:LogDetails,templateUrl:__webpack_require__(884)}}function LogDetails($scope,$element,$resource,injector){var $content;injector.injectMarked(this,{$scope:$scope,$element:$element}),this._sectionConfig=$resource(DETAIL_SECTIONS_CONFIG).get(),this.updateData=this.updateData.bind(this),this._sectionConfig.$promise.then(function(){$scope.$watchCollection("logDetails.entries",this.updateData),$scope.$watch("logDetails.logMetadata",mdPromise=>{this.columns=null,mdPromise&&mdPromise.then(metadata=>{this.columns=metadata.columns,this.updateData()})}),$scope.$watch(function(){return Section.expandedState(this.sections)}.bind(this),this.saveExpandedSections,!0),$scope.$watch(function(){var s=this.archive&&this.archive.sections;return s&&Section.expandedState(s,null,"expandDump")}.bind(this),function(){$scope.$broadcast("qtip_hide")},!0)}.bind(this)),$scope.$watch("logDetails.selectedTab",function(){$content&&$content.off("scroll.log-details"),$scope.$evalAsync(function(){($content=$element.find(".content")).on("scroll.log-details",function(event){this.scrollTop=event.target.scrollTop}.bind(this)),this.scrollTop=$content.scrollTop()}.bind(this))}.bind(this))}function SectionButton(icon,title,url,text,clickHandler){this.icon=icon,this.title=title,this.url=url,this.text=text,this.clickHandler=clickHandler||angular.noop}function Section(name,config,logDetails,logFormatters,entry){this.title=name,this.data=config.map(Datum.extract(logDetails,logFormatters,entry)).filter(function(d){return!!d}),this.empty=!(this.sections&&this.sections.length||this.data&&this.data.length)}function Datum(name,value,icon,html){this.name=name,this.value=value,this.icon=icon,"function"==typeof html?this.getHtml=html:"string"==typeof html?this.html=html:this.htmlElement=html}LogDetails.prototype={entries:null,sections:null,_sectionConfig:null,securityEvents:null,securityEventTypeCount:0,getSectionConfig:function(){var result={},topLevelCols=this._sectionConfig[this.logType]||[],entryCols=Object.keys(this.entry);for(var sectionKey in this._sectionConfig){var section=this._sectionConfig[sectionKey];"$"!==sectionKey[0]&&Array.isArray(section)&&(result[sectionKey]=section)}var logTypeSection=this._sectionConfig.$logType;if(logTypeSection&&this.logType in logTypeSection){var _isNot=function(value){return function(other){return value!==other}};logTypeSection[this.logType].forEach(function(removeThis){for(var sectionKey in result)Array.isArray(result[sectionKey])&&(result[sectionKey]=result[sectionKey].filter(_isNot(removeThis)))}),result[this.logType]=topLevelCols.concat(logTypeSection[this.logType])}return result.other=entryCols.filter(function(col){for(var sectionKey in result){var section=result[sectionKey];if(Array.isArray(section)&&section.indexOf(col)>=0)return!1}return["_metadata","timestamp"].indexOf(col)<0}),"endpoint_events"===this.logType&&(result.source=result.source.concat(result.destination),delete result.destination),result},updateData:function(){this.entries&&this.columns&&(this.entries&&this.entries.length?(this.entry=this.entries[0],this._makeSections(),this._makeTabs()):this.sections=[],this.tabs&&-1===this.tabs.indexOf(this.selectedTab)&&(this.selectedTab=this.tabs[0]))},_makeSections:function(){var sectionConfig=this.getSectionConfig();this.sections=Object.keys(sectionConfig).filter(function(key){return key.length&&"$"!==key[0]}).map(Section.extract(sectionConfig,this,this.logFormatters)).filter(function(section){return section.data&&section.data.length>0}),this.expandSections(this.sections)},_getSecurityEventCountTabName:function(threatCountName){const map={av:"virus",web:"webfilter",app:"app-ctrl",email:"emailfilter"},code=threatCountName.replace(/^count/,"");return code in map?map[code]:code},_getSecurityEventDetails:inject.mark(function($q,ApiFilter,logViewData,csfLogViewData,logSecurityEvents,logMetadata,lang,LOG_DEVICE_ID_MAP){return function(){const security_events=this.entry&&this.entry.utmref&&logSecurityEvents.extract(this.entry);var result={};return this.deviceId!==LOG_DEVICE_ID_MAP.forticloud&&security_events&&Array.isArray(security_events)&&(result=security_events.reduce(function(result,threat){const filter=[new ApiFilter("utmref",this.entry.utmref)],logType=this._getSecurityEventCountTabName(threat.key),dataParams={filter:filter,logType:logType,rows:logViewData.nonPagingMaxRows(this.deviceId),device:LOG_DEVICE_ID_MAP[this.deviceId],serial_no:this.fortigate.id},logData=this.fortigate.isCurrent?logViewData:csfLogViewData;this.fortigate.isCurrent||(dataParams.csfPath=this.fortigate.path),this.fortigate.isHaSlave&&this.deviceId!==LOG_DEVICE_ID_MAP.faz&&(dataParams.is_ha_member=!0);var res=result[logType]={data:logData.get(dataParams),logMetadata:logMetadata(logType),sections:null,expanded:!0};return $q.all({data:res.data.$promise,metadata:res.logMetadata}).then(response=>{var selectors=Object.keys(response.metadata.columns);if(response.metadata.filters)throw new Error("UTM logs are not expected to have metadata filters");res.title="Log::threat."+logType,res.columns=fObjects.makeSet(selectors).difference(this.columns.map(c=>c.id)),res.sections=res.data.map(function(entry){this.entry=entry;var section=new Section(new lang.Translated(entry._metadata["#"]),res.columns,this,this.logFormatters,entry);return section.collapsable=!1,section.empty?null:section}.bind(this)).filter(s=>!!s),res.buttons=[new SectionButton("fa-list","view_log",logViewData.navigate.bind(null,filter,logType,dataParams.device)),new SectionButton("fa-download","downlog",logViewData.download.bind(null,filter,logType,dataParams.device,null,this.fortigate))]},err=>{res.title=err.status?lang.getPrefixedKey("Log::Details::",err.status):"Error",fLog.error(`error fetching ${err.config.url}: ${err.statusText}`)}),result}.bind(this),{})),this.securityEventsLoading=!0,$q.all(Object.keys(result).map(k=>result[k].data.$promise)).then(()=>this.securityEventsLoading=!1),result}}),_getDeviceName:function(){var S=BUILD.SYMBOLS;switch(this.deviceId){case S.LOG_PRESENT_DEVICE_FAZ:return"fortianalyzer";case S.LOG_PRESENT_DEVICE_MEMORY:return"memory";case S.LOG_PRESENT_DEVICE_DISK:default:return"disk"}},_getArchive:inject.mark(function(logArchiveData,LOG_DEVICE_ID_MAP,lang){const resources=logArchiveData,csfSrcLogName=new Set(["ips","virus"]),fcdNonUnsupportedLogName=new Set(["ips","dlp"]);return function(){var result=null;if(this.entry._metadata.archive){var logName=this.logType.replace(/^(traffic)\/.*$/,"$1");if(this.entry.subtype&&this.entry.subtype!==logName&&this.entry.subtype in resources&&(logName=this.entry.subtype),"virus"===logName&&"content-disarm"===this.entry.eventtype&&(logName="cdr"),this.deviceId===LOG_DEVICE_ID_MAP.forticloud&&fcdNonUnsupportedLogName.has(logName)||!(logName in resources))return!1;const prefix=!this.fortigate.isCurrent&&csfSrcLogName.has(logName)?"csf":"",resource=resources[`${prefix}${logName}`],params=angular.extend({deviceId:this.deviceId,device:this._getDeviceName()},this.entry);this.fortigate.isCurrent||(params.csfPath=this.fortigate.path),(result=resource.get(params)).$promise=result.$promise.then(function(res){var data=res.data||res,arrayData=Array.isArray(data);if(res.error)result.error=res.err_no,result.sections=[];else{var sections=arrayData?data:[data];result.name=data.name||lang("Log::Archive::title."+logName),result.sections=sections.map(function(sectionData){var cols=Object.keys(sectionData).filter(exclude((res.hide_columns||[]).concat(["name","data","$promise","$resolved"]))),lf=this.logFormatters;"timestamp"in sectionData&&(cols=["$tsDate","$tsTime"].concat(cols.filter(exclude(["timestamp"]))));const columnConfig=cols.map(c=>({id:c}));var result=new Section("",cols,this,lf,sectionData,columnConfig);return result.dump=sectionData.data,result.name=sectionData.name,result}.bind(this))}var downloadData=arrayData?this.entry:data,downloadTitle=res.data&&res.data.name||params.filename?lang("Download {filename}",[params.filename]):"download";result.buttons=[downloadData&&new SectionButton("fa-download",downloadTitle,resource.download&&resource.download.bind(null,downloadData,params,this.fortigate),"Archived File"),resource.downloadPacketCapture&&new SectionButton("ftnt-packet-download",lang("Download packet capture"),resource.downloadPacketCapture.bind(null,downloadData,params,this.fortigate),"packet_capture")].filter(function(b){return b&&b.url&&b.url()})}.bind(this))}return result;function exclude(arr){return function(name){return-1===arr.indexOf(name)}}}}),_makeTabs:function(){this.tabs=[],this.securityEvents=this._getSecurityEventDetails(),this.archive=this._getArchive(),this.securityEventsTypeCount=Object.keys(this.securityEvents).length,this.securityEventsTypeCount&&this.tabs.push("security"),this.archive&&this.tabs.push("archive"),this.tabs.unshift("details"),this.selectedTab=this.selectedTab||"details"},persistKey:function(path){return"LogView."+this.logType+".details."+path},expandSections:inject.mark(function(persistentStorage){return function(){if(this.sections){var state=persistentStorage.get(this.persistKey("expandedSections"))||{other:!1};Section.expandedState(this.sections,state)}}}),saveExpandedSections:inject.mark(function(persistentStorage){return function(){var pk=this.persistKey("expandedSections"),state=persistentStorage.get(pk)||{};state=angular.merge(state,Section.expandedState(this.sections)),persistentStorage.put(pk,state)}})},SectionButton.prototype={icon:null,title:null,url:null,text:""},Section.extract=function(sectionConfig,logDetails,logFormatters,entry){return function(sectionName){return new Section(sectionName,sectionConfig[sectionName],logDetails,logFormatters,entry)}},Section.expandedState=function(sections,state,key){if(key=key||"expand",sections){if(!state)return sections.reduce(function(result,section){return result[section.title||section.dump]=section[key],result},{});sections.forEach(function(section){section.title in state&&(section[key]=state[section.title])})}},Section.prototype={data:null,title:null,expand:!0,collapsable:!0,expandDump:!0,empty:!0,dump:null,dumpTipOptions:{style:{classes:"dump-tip"},position:{my:"bottom right",at:"bottom right",adjust:{x:9,y:0},effect:!1},show:{},hide:{target:!1,inactive:5e3}}};var byteFormat={format:fFormatters.metric_bytes},noFormat={format:null},deviceIconFormat={format:function(value){if(value){const deviceCategory=fIcon.getDeviceIconCategory({os_name:value});return`<f-icon class="${fIcon.iconClass(fIcon.ICON_TYPE.DEVICE_CATEGORY,deviceCategory)}"></f-icon><span>${value}</span>`}}};return Datum.columnDetailMap={date:{id:"_metadata.timestamp",lang:"date",format:function(value){return fDatetime.formatDate(new Date(value))}},time:{id:"_metadata.timestamp",lang:"time",format:function(value){return fDatetime.formatTime(new Date(value))}},$tsDate:{id:"timestamp",lang:"date",format:value=>fDatetime.formatDate(new Date(value))},$tsTime:{id:"timestamp",lang:"time",format:value=>fDatetime.formatTime(new Date(value))},srcip:noFormat,srcmac:noFormat,dstip:noFormat,countapp:noFormat,countav:noFormat,countdlp:noFormat,countemail:noFormat,countips:noFormat,countwaf:noFormat,countweb:noFormat,lanin:byteFormat,lanout:byteFormat,wanin:byteFormat,wanout:byteFormat,rcvdbyte:byteFormat,sentbyte:byteFormat,shaperdroprecvdbyte:byteFormat,shaperdropsentbyte:byteFormat,shaperipdropbyte:byteFormat,osname:deviceIconFormat,trandisp:{prefix:"Log::Details::column::trandisp.",skipValues:["noop"]},duration:{format:function(value){return value+"s"}}},Datum.dontDuplicate={srcmac:"mastersrcmac",transip:"srcip",transport:"srcport",tranip:"dstip",tranport:"dstport"},Datum.extract=function(logDetails,logFormatters,entry){const ID_KEY=ftntShared.Omniselect.prototype.ENTRY_ID_KEY;return function(name){var detail=Datum.columnDetailMap[name],detailOverride=!!detail;detailOverride||(detail={id:name});var column=logDetails.columns.find(function(detail){return function(column){return column.id===detail.id}}(detail)),html=null;if(!(entry=entry||logDetails.entry))return null;if(!column&&name in entry&&"_"!==name[0]&&(column={id:name}),!column&&detail.id in entry&&detailOverride&&(column={id:detail.id}),!column||function(column,entry){var dd=Datum.dontDuplicate,sel=column.id;return sel in dd&&entry[sel]===entry[dd[sel]]}(column,entry)||function(column,detail,entry){var value=entry[column.id];return detail&&detail.skipValues&&-1!==detail.skipValues.indexOf(value)}(column,detail,entry))return null;{const columnMetadata=column._metadata||column,langKey=detail.lang||("lang_key"in columnMetadata?columnMetadata.lang_key:column.id);let value=column.cellValueFunction?column.cellValueFunction(entry,column):entry[column.id],prefix=detail.prefix||columnMetadata&&columnMetadata.langPrefix;if(prefix&&value&&(value=logFormatters.langPrefixFormat(prefix,value)),null!==detail.format)if(detail.format)angular.isFunction(detail.format)?html=detail.format(value,entry):detail.format in logFormatters.formatters&&(html=logFormat(detail.format,column,entry));else if("omniselect"===column.type&&"object"==typeof value)try{html=ftntShared.Omniselect.processedFormatEntrySync(value)}catch(ex){html=fDom.elem("span"),ftntShared.Omniselect.processedFormatEntry(value).then(formatted=>{html.innerHTML=formatted},()=>html.textContent=value[ID_KEY])}else column&&column.id in logFormatters.formatters&&(html=logFormat(column.id,column,entry));return value||0===value||html?new Datum(langKey,value,column.icon,html):null}};function logFormat(formatterName,column,entry){var formatter=logFormatters.formatters[formatterName];return"cellFormatter"in formatter&&(formatter=formatter.cellFormatter),formatter(entry,column)}},Datum.prototype={name:null,value:null,icon:null,html:null,getHtml:null},function(providers,loader){return providers.$compile.directive({fLogDetails:fLogDetails}),loader.initModules([__webpack_require__(885),__webpack_require__(450)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},884:function(module,exports){var path="/migadmin/ng/log/view/f-log-details.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="title-bar flex-space-between flex-no-shrink">\n    <div>\n        <h1 f-lang="Log Details"></h1>\n    </div>\n    <button type="button" class="bare" ng-click="logDetails.hideClick()">\n        <f-icon class="fa-dismiss" title="{{:: \'Hide\' | lang }}"></f-icon>\n    </button>\n</div>\n<f-radio-group ng-if="logDetails.tabs.length > 1" class="full-width">\n    <input type="radio"\n        ng-model="logDetails.selectedTab"\n        radio-label="{{:: tab | langPrefixed:\'Log::tab.\' }}"\n        value="{{:: tab }}"\n        ng-repeat="tab in logDetails.tabs">\n</f-radio-group>\n<div ng-if="!logDetails.selectedTab"\n    class="info-message">\n    <f-icon class="fa-info-circle"></f-icon>\n    <div\n        class="message-content"\n        f-lang="Select a log entry to see details."\n    ></div>\n</div>\n<div class="content flex-grow" ng-if="logDetails.selectedTab === \'details\'">\n    <f-log-detail-section ng-repeat="section in logDetails.sections" section="section"\n        datum-name-prefixes="[\'Log::Details::column.\', \'Log::column.\']">\n    </f-log-detail-section>\n</div>\n<div class="content flex-grow containing-block"\n        ng-if="logDetails.selectedTab === \'security\'">\n    <div ng-if="logDetails.securityEventsLoading" class="flex-centered absolute-fill">\n        <f-icon class="fa-loading icon-xxl"></f-icon>\n    </div>\n    <div ng-repeat="(threat, securityEventsData) in logDetails.securityEvents">\n        <div class="section-title no-pin-top flex-space-between">\n            <div class="flex-row-stretch">\n                <input type="checkbox" class="visual-toggle flush-left"\n                    id="log-detail-threat-collapse-{{:: $id }}"\n                    ng-model="securityEventsData.expanded"\n                    ng-if-start="logDetails.threatTypeCount > 1"\n                    >\n                <label ng-if-end for="log-detail-threat-collapse-{{:: $id }}"></label>\n                <h2>{{ securityEventsData.title | lang }}</h2>\n            </div>\n            <div>\n                <button ng-repeat-start="button in securityEventsData.buttons"\n                    ng-click="button.action"\n                    ng-if="button.action"\n                    title="{{:: button.title | lang }}">\n                    <f-icon ng-class="button.icon"></f-icon>\n                </button>\n                <a ng-repeat-end class="button-style"\n                    title="{{:: button.title | lang }}"\n                    ng-if="button.url"\n                    ng-href="{{:: button.url() }}">\n                    <f-icon ng-class="button.icon"></f-icon>\n                </a>\n            </div>\n        </div>\n        <section\n            ng-show="!securityEventsData || securityEventsData.expanded"\n            f-vertical-collapse>\n            <f-log-detail-section\n                datum-name-prefixes="[\'Log::Details::column.\', \'Log::column.\']"\n                ng-repeat="section in securityEventsData.sections"\n                section="section"\n                show-title="securityEventsData.sections.length > 1"\n                >\n            </f-log-detail-section>\n        </section>\n    </div>\n</div>\n<div class="content" ng-if="logDetails.selectedTab === \'archive\'"\n        f-virtual-scroll="logDetails.archive.sections" items="10">\n    <div class="flex-space-between section-title no-pin-top"\n            ng-if="logDetails.archive.name">\n        <h2>{{ logDetails.archive.name }}</h2>\n        <div ng-if="logDetails.archive.buttons">\n            <a ng-repeat="button in logDetails.archive.buttons"\n                class="button-style"\n                ng-href="{{:: button.url() }}"\n                ng-click="button.action && button.action($event)"\n                title="{{:: button.title }}">\n                <f-icon ng-class="button.icon"></f-icon>\n                <span>{{:: button.text | lang }}</span>\n            </a>\n        </div>\n\n    </div>\n    <div ng-if="logDetails.archive.error" class="error-message">\n        <f-icon class="fa-error"></f-icon>\n        <div class="message-content">\n            {{:: logDetails.archive.error | lang }}\n        </div>\n    </div>\n    <div f-virtual-scroll-before class="dummy-section"\n        ng-class="!section.expandDump && \'collapsed\'"\n        ng-repeat="section in $VSSliceBefore track by $index"\n        >\n    </div>\n    <f-log-detail-section\n        f-virtual-scroll-visible\n        ng-repeat="section in $VSSliceVisible track by $index"\n        datum-name-prefixes="[\'Log::Archive::column.\', \'Log::Details::column.\', \'Log::column.\']"\n        section="section" show-title="false">\n    </f-log-detail-section>\n        <div f-virtual-scroll-after class="dummy-section"\n        ng-class="!section.expandDump && \'collapsed\'"\n        ng-repeat="section in $VSSliceAfter track by $index"\n        >\n    </div>\n</div>')}]),module.exports=path},885:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function fLogDetailSection($timeout,slide,lang){return{retrict:"E",scope:{titleButtons:"=",showTitle:"&",section:"=",datumNamePrefixes:"="},templateUrl:__webpack_require__(886),link:function(scope,elem){var timeout,scrollEventName="scroll.detail-section-"+scope.$id;elem.scrollParent().on(scrollEventName,function(){$timeout.cancel(timeout),timeout=$timeout(function(){scope.scrollTop=this.scrollTop}.bind(this))}),scope.$on("$destroy",function(){elem.off(scrollEventName)}),scope.previewDump=function(dump){return dump.map(function(byte){return function(byte){return((byte=byte.toString(16)).length<2?"0":"")+byte}(byte)}).join(" ")},scope.viewDump=function(dump){var childScope=Object.assign(scope.$new(),{bytes:dump});return slide.open({template:'<f-log-detail-byte-dump bytes="bytes"></f-log-detail-byte-dump>',parentScope:childScope,options:{fullHeight:!0,width:700,title:lang("Packet Data")}}).finally(function(){childScope.$destroy()})}}}}return function(providers,loader){return providers.$compile.directive({fLogDetailSection:fLogDetailSection}),loader.initModules([__webpack_require__(887),__webpack_require__(889)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},886:function(module,exports){var path="/migadmin/ng/log/view/f-log-detail-section.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<label class="section-title no-pin-top" ng-if="showTitle() !== false">\n    <input type="checkbox" class="visual-toggle flush-left"\n        id="log-detail-section-{{:: $id }}-{{:: $index }}"\n        ng-model="section.expand" ng-if-start="section.collapsable">\n    <label for="log-detail-section-{{:: $id }}-{{:: $index }}" ng-if-end></label>\n    <h3>{{:: section.title | langPrefixed:\'Log::section.\' }}</h3>\n</label>\n<section ng-if="section.data" ng-show="section.expand" f-vertical-collapse>\n    <table>\n        <tbody>\n            <tr ng-repeat="datum in section.data"\n                ng-show="!datum.getValue || (datum.getValue() != null && datum.getValue() !== \'\')"\n                f-log-detail-datum="datum" name-prefixes="datumNamePrefixes"></tr>\n        </tbody>\n    </table>\n</section>\n<section ng-if="section.dump">\n    <div ng-if="section.dump" class="flex-space-between">\n        <label>\n            <input type="checkbox" class="visual-toggle flush-left"\n                id="log-detail-section-{{:: $id }}-{{:: $index }}"\n                ng-model="section.expandDump">\n            <label for="log-detail-section-{{:: $id }}-{{:: $index }}"></label>\n            <span f-lang="Contents"></span>\n        </label>\n        <a href="javascript:void 0" ng-click="viewDump(section.dump)"><f-icon class="fa-expand"></f-icon></a>\n    </div>\n    <section ng-show="section.expand && section.expandDump" class="log-view-dump"\n            f-vertical-collapse>\n        <div class="dump"><a href="javascript: void 0" ng-click="viewDump(section.dump)">{{ previewDump(section.dump) }}</a></div>\n    </section>\n</section>\n')}]),module.exports=path},887:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function fLogDetailDatum(){return{retrict:"A",scope:{datum:"=fLogDetailDatum",namePrefixes:"="},templateUrl:__webpack_require__(888)}}return function(providers){providers.$compile.directive({fLogDetailDatum:fLogDetailDatum})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},888:function(module,exports){var path="/migadmin/ng/log/view/f-log-detail-datum.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<td class="datum-name" data-name="{{ datum.name }}">\n    <f-icon class="{{:: datum.icon }}" ng-if="datum.icon"></f-icon>\n    <span ng-if="datum.name">{{:: datum.name | langPrefixed:namePrefixes }}</span>\n</td>\n<td class="datum-value">\n    <span ng-if=":: !datum.html && !datum.htmlElement">\n        {{::datum.value}}\n    </span>\n    <span ng-if="::datum.html" ng-bind-html="::datum.getHtml ? data.getHtml() : datum.html | toTrustedHtml"></span>\n    <span ng-if="::datum.htmlElement" f-html-content="::datum.htmlElement"></span>\n</td>\n')}]),module.exports=path},889:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){var LINE_LENGTH=16,fLogDetailByteDump={templateUrl:__webpack_require__(890),controller:LogDetailByteDump,bindings:{bytes:"<"},require:{fSlideContainer:"^^"}};function LogDetailByteDump($scope){$scope.$watch("$ctrl.bytes",function(bytes){this.lines=[];for(var count=0;bytes.length;){var lineBytes=bytes.slice(0,LINE_LENGTH),line={offset:hexByte(count*LINE_LENGTH),ascii:lineBytes.map(asciiByte),hex:lineBytes.map(hexByte)};this.lines.push(line),bytes=bytes.slice(LINE_LENGTH,bytes.length),++count}function hexByte(byte){return((byte=byte.toString(16)).length<2?"0":"")+byte}function asciiByte(b){var c=String.fromCharCode(b);return c<" "?String.fromCharCode(b+9216):b>"~".charCodeAt(0)?{"":"␡"}[c]||"▯":c}}.bind(this))}return LogDetailByteDump.prototype={close:function(){this.fSlideContainer.slide.close()},rowStyle:function(index){return{"grid-row":++index+" / "+index}}},function(providers){providers.$compile.component("fLogDetailByteDump",fLogDetailByteDump)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},89:function(module,exports,__webpack_require__){"use strict";const ngModule=__webpack_require__(29),inject=__webpack_require__(26);ngModule.component("fCommonCustomEditFields",{controller:class extends inject.Collectable{$onInit($INJECTABLE$,dashboardConfig,dashboardCommon,$q,lang){return async()=>{if(this.originalDashboardCsf=this.dashboard.csf,this.setting={sources:"csfFortiGates",singleSelect:!0,preProcessSelected:!0,filterFunction:entry=>this.allFortigates&&"all"===entry.q_origin_key||"all"!==entry.q_origin_key&&!entry.isGlobal&&entry.isFirmwareCompatible},this.asStandalone){const results=await $q.all({allDashboards:dashboardCommon.getAllDashboards(),schema:dashboardCommon.getSchema()});this.allDashboards=(results.allDashboards||[]).filter(dashboard=>dashboardConfig.isSameVDOM(dashboard.vdom)),this.schema=results.schema,!this.dashboard.name&&this.config.standaloneName&&(this.dashboard.name=lang(this.config.standaloneName).toString()||this.config.label)}}}},templateUrl:__webpack_require__(831),bindings:{asStandalone:"<",isStandalone:"<",config:"<",dashboard:"=",allFortigates:"<?",editCtrl:"<"}})},890:function(module,exports){var path="/migadmin/ng/log/view/f-log-detail-byte-dump.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="byte-dump-grid">\x3c!-- no whitespace because it messes up safari\n    --\x3e<div ng-repeat="line in $ctrl.lines" ng-style="$ctrl.rowStyle($index)" class="line-offset">{{line.offset}}</div\n    ><div ng-repeat="line in $ctrl.lines" ng-style="$ctrl.rowStyle($index)" class="line-ascii"\n        ><span class="line-ascii-monospace" ng-repeat="ascii in line.ascii track by $index">{{ascii}}</span\n    ></div\n    ><div ng-repeat="line in $ctrl.lines" ng-style="$ctrl.rowStyle($index)" class="line-hex"\n        ><span class="line-hex-monospace" ng-repeat="hex in line.hex track by $index">{{hex}} \x3c!--extra space for copy-paste--\x3e</span\n    ></div\n></div>\n<div class="flex-centered flex-no-shrink"><button type="button" ng-click="$ctrl.close()" f-lang="close"></button></div>\n')}]),module.exports=path},892:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(9),__webpack_require__(27),__webpack_require__(30),__webpack_require__(41)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntShared,angular,Notify,fLog,fSlide){const StreamableSource=ftntShared.MuTable.StreamableSource;function LogSourceFactory($timeout,ApiFilter,logViewData,csfLogViewData,injector,lang){class ClientSession{constructor(id){this.id=id,this.serial=++ClientSession.lastSerial,this.closed=!1,this._requests=[]}addRequest(promise){return promise=(promise=promise.then(response=>(null==this.id&&null!=response.session_id&&(this.id=response.session_id),response))).finally(()=>this._requests=this._requests.filter(p=>p!==promise)),this._requests.push(promise),promise}close(){this.closed||(this.closed=!0,Promise.all(this._requests).finally(()=>null!=this.id&&logViewData.abortSession(this.id)))}toJSON(){return JSON.stringify(Object.assign({},this,{_requests:void 0}))}}ClientSession.lastSerial=0;class LogSource extends(injector.CollectableExtends(StreamableSource)){constructor($scope,baseQuery,preloadPromises){super(),this._disposed=!1,this.FETCH_SIZE=500,this._preloadPromises=preloadPromises,this._unbindDestroy=$scope.$on("$destroy",this.dispose.bind(this)),this.baseQuery=baseQuery.then(query=>(this._useServerSidePaging(query)||(this.FETCH_SIZE=logViewData.nonPagingMaxRows(query.device)),query))}_useServerSidePaging(query){if(query.filter&&!query.filter.every(f=>f instanceof ApiFilter))throw new Error("All filters must be ApiFilter instances");return query.filter&&!query.filter.some(f=>"utmref"===f.key)}onFetchEntries(){}dispose(){this._disposed=!0,this.session&&this.session.close(),this._unbindDestroy(),this.requeryTimeout&&$timeout.cancel(this.requeryTimeout)}async fetchEntries(startIndex,endIndex){var query=Object.assign({},await this.baseQuery,{start:startIndex,rows:endIndex-startIndex});this.session&&(query.session_id=this.session.id);try{const response=await this.getContent(query,!1);return this._disposed||this.onFetchEntries(response.results,startIndex,endIndex),response.results}catch(ex){if(this._disposed)return[];throw ex}}async getContent(query){this.session=new ClientSession;const clientSession=this.session;if(await this._preloadPromises.logMetadata,query){const filter=query.filter&&query.filter.slice();delete(query=Object.assign({},query)).filter,query=angular.copy(query),filter&&(query.filter=filter)}const response=await this._fetchRows(r=>100===r.completed||r.results.length>=r.rows||!r.session_id,query,clientSession);return 100!==response.completed&&response.session_id&&null!=response.total_lines?this.setCount(response.total_lines+1):this.setCount(response.total_lines),response}async _fetchRows(completed,query,clientSession){const logData=query.csfPath?csfLogViewData:logViewData;let stalledQueryCount=0,response=null,promise=null,done=!1,fullRequest=!1,lastCompleted=0,lastNotify=0,startTime=Date.now();do{if(this._disposed)throw new Error("Unable to fetch log data, log source has already been disposed");if(promise=logData.getWithMeta(query).$promise,response=await clientSession.addRequest(promise),clientSession.closed)throw fLog.warn(`Client session closed during fetch: ${JSON.stringify(clientSession)}`),new Error("Client session closed");if(clientSession&&null!=clientSession.id&&clientSession.id!==response.session_id)throw new Error("Response session_id was not expected to change");if(!(done=done||completed(response))){const curTime=Date.now();if(!fullRequest&&curTime-startTime>25e3)try{const msg=lang("Search {PERCENT}% complete ({NUM} logs found). Do you want to stop searching and view matching logs?",[response.completed,response.results.length]);return await fSlide.confirm(msg,null,{title:lang("warning").toString()}),this.dispose(),response}catch(err){fullRequest=!0}stalledQueryCount>=10&&(curTime-lastNotify>1e4&&(Notify.post(lang("Request is proceeding slowly: {0}% complete.",[response.completed]),Notify.LEVEL.WARNING,1e4),lastNotify=curTime),stalledQueryCount=10);const delay=Math.pow(stalledQueryCount,4);lastCompleted===response.completed&&++stalledQueryCount,lastCompleted=response.completed,query.session_id=response.session_id,this.requeryTimeout=$timeout(delay),await this.requeryTimeout}}while(!done);return response}}return LogSource.prototype.REFRESHABLE=!1,LogSource}return function(providers){providers.$provide.factory("LogSource",LogSourceFactory)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},94:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(67),__webpack_require__(84),__webpack_require__(31),__webpack_require__(236)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,fosCommonSymbols,BaseCsfObject,fdom,FabricDevice){const{DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=fosCommonSymbols,CsfFabricDevice=FabricDevice,extendableCsfFabricDevice=(0,BaseCsfObject.GuiCsfMixin)(CsfFabricDevice),FABRIC_DEVICE_STATUS_URI="api/fabric/device/status",FABRIC_DEVICE_URI="/api/v2/monitor/system/fabric-device",SUPPORTED_VISUALIZATION_TYPES=["bar-chart","key-value-pair","time-line-chart","pie-chart","table"];return class extends extendableCsfFabricDevice{constructor(csfEntry,parentFortigateId,path){super(csfEntry,{},parentFortigateId,""),this.path=path,this.widgetMapping={},this.widgets=[],this.hasPendingStatusUpdate=!1,this.bcTreeParentId=null,this.pendingRequest=null}get sourceID(){return"csfFabricDevices"}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData,$injector){const instance=$injector.instantiate(this,{csfEntry:instanceJSONData.csfEntry,parentFortigateId:instanceJSONData.parentFortigateId,path:instanceJSONData.path});return delete instanceJSONData.q_origin_key,Object.assign(instance,instanceJSONData),instance}static get SUPPORTED_VISUALIZATION_TYPES(){return SUPPORTED_VISUALIZATION_TYPES}getStatus($INJECTABLE$,$http,$q){return()=>{if(this.pendingRequest&&this.pendingRequest.$$state&&!this.pendingRequest.$$state.status)return this.pendingRequest;this.hasPendingStatusUpdate=!0;let url=`${FABRIC_DEVICE_URI}/select/${this.serial}/${FABRIC_DEVICE_STATUS_URI}`;return this.path&&(url=/csf/+this.path+url),this.pendingRequest=$http.get(url).then(response=>{const respData=response.data.results.response,success=response.data.results.success,httpCode=response.data.results.http_code;if(!success||!respData)return 401===httpCode&&(this.invalidToken=!0),$q.reject();this.connected=!0,this.type=(respData.device_type||"").toLowerCase(),this.serial_number=respData.serial,this.version=respData.version,this.model=respData.model,this.hostname=respData.hostname,this.build=respData.build,this.supportedApiVersions=respData.supported_api_versions}).catch(()=>{this.connected=!1}).then(()=>(this.hasPendingStatusUpdate=!1,this)),this.pendingRequest}}getWidgetList($INJECTABLE$,$http,state){return()=>{if(this.widgetListPromise&&this.widgets.length)return this.widgetListPromise;let url=`${FABRIC_DEVICE_URI}/widget?mkey=${this.serial}`;return this.path&&(url=/csf/+this.path+url),this.widgetListPromise=$http.get(url).then(response=>{var respData=response.data.results.response,success=response.data.results.success,httpCode=response.data.results.http_code;if(success&&respData){var data=respData&&respData.data||[],langMap=respData.meta&&respData.meta.language||{};return data.forEach(widget=>{widget.q_origin_key=`${widget.id}::${this.id}`,widget.datasource="csfFabricDeviceWidgets",widget.device=this,widget.getUnescapedLabel=(()=>{var key=widget.lang_key;return(langMap[state.language_code]||langMap.en||{})[key]||key}),widget.getLabel=(()=>fdom.escapeHTML(widget.getUnescapedLabel())),this.widgetMapping[widget.q_origin_key]=widget}),this.widgets=data,data}401===httpCode&&(this.invalidToken=!0)},angular.noop)}}getIconClass(){return!this.connected&&this.hasPendingStatusUpdate?"fa-loading":this.callSuperMethod(extendableCsfFabricDevice,"getIconClass")}getStatusIconClass(){return!this.connected&&this.hasPendingStatusUpdate?"fa-loading":this.connected?"fa-connected":"fa-warning"}canAuthorize(){return!1}canConnectToGui(){return!1}canDeauthorize(){return!1}canDenyAuthorization(){return!1}getStatusLabel($INJECTABLE$,lang){return()=>{let msg;return msg=this.connected?"connected":this.invalidToken?"Invalid access token":"Failed to connect",lang(msg).toString()}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},964:function(module,exports){var path="/migadmin/ng/stitch/f-stitch-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable\n    source="$ctrl.muTable.source"\n    settings="$ctrl.muTable.options"\n    instance="$ctrl.muTable.instance"\n    context-menu="::true">\n    <f-stitch-list-menu\n        selected-entries="$ctrl.muTable.ctrl.selectedEntries"\n        menu="menu"\n        class="menu-bar-component">\n    </f-stitch-list-menu>\n</f-mutable>\n')}]),module.exports=path},965:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(77)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(TRIGGERS){function factory(CMDB,lang,state){function TriggerModel($initPromise){$initPromise.then(function(){this.$schema.$promise=this.$schema.$promise.then(function(schema){return this.$schema.children["event-type"].options.forEach(function(opt){opt.lang=lang("fabric_automation::trigger::event-type."+opt.name),opt.iconClass=TRIGGERS.genEventTypeIcon(opt.name)}),this.$schema.children["event-type"].options.sort(function(opt1,opt2){var order=TRIGGERS.EVENT_ORDER,index1=order.indexOf(opt1.name),index2=order.indexOf(opt2.name);return index1===index2?0:index1>=0&&index2>=0?index1-index2:index1>=0?-1:1}),this.$schema.children["trigger-type"].options.forEach(function(opt){opt.lang="fabric_automation::trigger::trigger-type."+opt.name,opt.iconClass="scheduled"===opt.name?"ftnt-schedule-trigger":"ftnt-event-trigger"}),this.$schema.children["trigger-frequency"].options.forEach(function(opt){opt.lang="fabric_automation::trigger::trigger-frequency."+opt.name}),this.$schema.children["license-type"].options.forEach(function(opt){opt.lang="fabric_automation::trigger::license-type."+opt.name}),this.$schema.children["ioc-level"].options.forEach(function(opt){opt.lang="fabric_automation::trigger::ioc-level."+opt.name}),this.$schema.children["report-type"].options.forEach(function(opt){opt.lang=opt.name}),schema}.bind(this))}.bind(this)),this["trigger-type"]===TRIGGERS.TYPES.SCHEDULE&&(this["event-type"]=TRIGGERS.EVENT_TYPES.SCHEDULE),this["trigger-weekday"]||(this["trigger-weekday"]="sunday"),this["event-type"]===TRIGGERS.EVENT_TYPES.EVENT_LOG&&this.logid?this.$logidSelectValue=[{q_origin_key:this.logid,datasource:"log.event"}]:this.$logidSelectValue=[],this.multiVdom=state.inMultiVdomMode()}return TriggerModel.prototype=new CMDB.ResourceModel({$fazSeverityEnabled(value){if(void 0===value)return void 0===this.$fazSeverityToggleState&&(this.$fazSeverityToggleState=!!this["faz-event-severity"]),this.$fazSeverityToggleState;this.$fazSeverityToggleState=value},$fazTagEnabled(value){if(void 0===value)return void 0===this.$fazTagToggleState&&(this.$fazTagToggleState=!!this.$tags),this.$fazTagToggleState;this.$fazTagToggleState=value},$save(){return Array.isArray(this.$logidSelectValue)&&this.$logidSelectValue.length&&(this.logid=this.$logidSelectValue[0]),this["event-type"]===TRIGGERS.EVENT_TYPES.FAZ_EVENT&&(this.$fazSeverityEnabled()||(this["faz-event-severity"]=""),this.$handler&&(this["faz-event-name"]=this.$handler.q_origin_key),this["faz-event-tags"]=this.$fazTagEnabled()&&this.$tags?this.$tags.q_origin_key:""),CMDB.ResourceModel.prototype.$save.apply(this,arguments)},$isVisible(type){const isMatch=this.$$original&&this.$$original["event-type"]===type,isVisible=TRIGGERS.VISIBLE_EVENTS.includes(type)&&!(this.multiVdom&&TRIGGERS.VDOM_INVISIBLE_EVENTS.includes(type));return isMatch||isVisible}}),TriggerModel}return function(providers){providers.$provide.factory("TriggerModel",factory)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},966:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(77),__webpack_require__(73)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(TRIGGERS,ACTIONS){function factory(CMDB){function ActionModel($initPromise){if($initPromise.then(function(){this.$schema.$promise=this.$schema.$promise.then(function(schema){return this.$schema.children["action-type"].options.forEach(function(opt){opt.lang="fabric_automation::action::action-type."+opt.name}),schema}.bind(this))}.bind(this)),this["email-to"].length||(this["email-to"]=[{name:""}]),this["action-type"]===ACTIONS.TYPES.QUARANTINE_NSX){const securityTag=this["security-tag"];this.$specifyNsxServer=!!this["sdn-connector"].length,this.$securityTagSelectValue=securityTag&&[{q_origin_key:securityTag,name:securityTag,datasource:"nsxSecurityTags"}]}else this.$securityTagSelectValue=[]}return ActionModel.prototype=new CMDB.ResourceModel({$preSave:function(){ACTIONS.USES_HTTP_HEADERS.includes(this["action-type"])&&(this.headers=this.headers.reduce(function(headers,entry){var name,value;return entry.name&&entry.value&&(name=entry.name.trim(),value=entry.value.trim(),name&&value&&headers.push({header:name+":"+value})),headers},[])),this["action-type"]===ACTIONS.TYPES.QUARANTINE_NSX&&(this["security-tag"]=this.$securityTagSelectValue[0],this.$specifyNsxServer||(this["sdn-connector"]=[])),this["action-type"]===ACTIONS.TYPES.CLI_SCRIPT&&(this.required="enable")},$save:function(){return CMDB.ResourceModel.prototype.$save.apply(this,arguments)},get $protocol(){return this.protocol||this.$schema.children.protocol.options[0].name},set $protocol(value){"http"===value&&443===this.port?this.port=80:"https"===value&&80===this.port&&(this.port=443),this.protocol=value},$isApplicable:function(trigger){if(trigger){var triggerType=trigger["trigger-type"],eventType=trigger["event-type"],TYPES=[];return TYPES=triggerType!==TRIGGERS.TYPES.EVENT||eventType!==TRIGGERS.EVENT_TYPES.IOC&&eventType!==TRIGGERS.EVENT_TYPES.INCOMING_WEBHOOK?[ACTIONS.TYPES.ALICLOUD_FUNCTION,ACTIONS.TYPES.AWS_LAMBDA,ACTIONS.TYPES.AZURE_FUNCTION,ACTIONS.TYPES.CLI_SCRIPT,ACTIONS.TYPES.EMAIL,ACTIONS.TYPES.FOS_ALERT,ACTIONS.TYPES.GOOGLE_CLOUD_FUNCTION,ACTIONS.TYPES.IOS_PUSH,ACTIONS.TYPES.SLACK_NOTIFICATION,ACTIONS.TYPES.WEBHOOK]:[ACTIONS.TYPES.ALICLOUD_FUNCTION,ACTIONS.TYPES.AWS_LAMBDA,ACTIONS.TYPES.AZURE_FUNCTION,ACTIONS.TYPES.CLI_SCRIPT,ACTIONS.TYPES.EMAIL,ACTIONS.TYPES.FOS_ALERT,ACTIONS.TYPES.GOOGLE_CLOUD_FUNCTION,ACTIONS.TYPES.IOS_PUSH,ACTIONS.TYPES.IP_BAN,ACTIONS.TYPES.QUARANTINE,ACTIONS.TYPES.QUARANTINE_FORTICLIENT,ACTIONS.TYPES.QUARANTINE_FORTINAC,ACTIONS.TYPES.QUARANTINE_NSX,ACTIONS.TYPES.SLACK_NOTIFICATION,ACTIONS.TYPES.WEBHOOK],this["action-type"]&&TYPES.includes(this["action-type"])}return!1},$isVisible:function(type){return!this.$new||ACTIONS.VISIBLE_ACTIONS.includes(type)}}),ActionModel}return function(providers){providers.$provide.factory("ActionModel",factory)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},967:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(34),__webpack_require__(27),__webpack_require__(77)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((inject,fDatetime,notify,TRIGGERS)=>{const fStitchListMenu={controller:StitchListMenu,templateUrl:__webpack_require__(968),bindings:{menu:"<"}};function StitchListMenu(injector,$scope){injector.injectMarked(this,{$scope:$scope})}return StitchListMenu.prototype={delete:inject.mark(($q,$route,lang)=>(function(){const error=notify.LEVEL.ERROR,success=notify.LEVEL.SUCCESS,entries=this.menu.entries||[];return $q.all(entries.map(entry=>entry.$delete().$promise)).then(()=>notify.post(lang("Automation stitch(es) deleted successfully."),success),()=>notify.post(lang("Failed to delete automation stitch(es)."),error)).finally(()=>$route.reload())})),canEdit:inject.mark(state=>(function(){return!state.csf_enabled||"0.0.0.0"===state.csf_upstream_ip})),canDelete:function(){return this.canEdit()},canCreate:function(){return this.canEdit()&&!this.menu.inSlideContext},toggleStatus:inject.mark(($q,lang)=>(function(status){const promises=[];this.menu.rowInstances.forEach(row=>{if(row.entry.status!==status){const oldStatus=row.entry.status;row.entry.status=status;const $promise=row.entry.$save(!0).$promise;row.updateEntry($promise.then(()=>({status:status}),()=>row.entry.status=oldStatus)),promises.push($promise)}}),$q.all(promises).then(()=>{notify.post(lang("Your changes have been saved"),notify.LEVEL.SUCCESS)},()=>{notify.post(lang("Failed to save changes"),notify.LEVEL.ERROR)})})),canToggleStatus:function(status){return this.menu.entries&&this.menu.entries.every(entry=>entry.status!==status)},testStitch:inject.mark($http=>(function(){const stitch=this.menu.lastSelectedEntry;$http.post("/api/v2/monitor/system/automation-stitch/test",{mkey:stitch.q_origin_key}).then(()=>{notify.post("Successfully triggered automation stitch",notify.LEVEL.SUCCESS)},()=>{notify.post("Error triggering automation stitch",notify.LEVEL.ERROR)})})),canTestStitch:function(){const entry=this.menu.lastSelectedEntry;return this.menu.entries&&1===this.menu.entries.length&&entry.$trigger&&entry.$trigger["event-type"]!==TRIGGERS.EVENT_TYPES.EVENT_LOG&&entry.$trigger["event-type"]!==TRIGGERS.EVENT_TYPES.FAZ_EVENT&&"enable"===entry.status}},$providers=>$providers.$compile.component("fStitchListMenu",fStitchListMenu)}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},968:function(module,exports){var path="/migadmin/ng/stitch/f-stitch-list-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items">\n    \x3c!-- Status Pop-up Menu Options --\x3e\n    <div\n        f-menu-item-submenu="$ctrl.statusMenu"\n        enabled="$ctrl.menu.entries.length"\n        ng-if="!$root.ADMIN_RO && $ctrl.canEdit() && $ctrl.menu.popUpMenu">\n        {{ ::\'Status\' | lang }}\n    </div>\n    <div\n        f-pop-up-menu="$ctrl.statusMenu"\n        ng-if="!root.ADMIN_RO && $ctrl.canEdit() && $ctrl.menu.popUpMenu">\n        <div\n            f-menu-item-button click="$ctrl.toggleStatus(\'enable\')"\n            enabled="$ctrl.canToggleStatus(\'enable\')">\n            <f-icon class="fa-enabled"></f-icon>\n            <span>{{ ::\'enable\' | lang }}</span>\n        </div>\n        <div\n            f-menu-item-button click="$ctrl.toggleStatus(\'disable\')"\n            enabled="$ctrl.canToggleStatus(\'disable\')">\n            <f-icon class="fa-disabled"></f-icon>\n            <span>{{ ::\'disable\' | lang }}</span>\n        </div>\n    </div>\n    <div\n        f-menu-item-button enabled="$ctrl.canTestStitch()"\n        click="$ctrl.testStitch()"\n        ng-if="$ctrl.menu.popUpMenu">\n        <f-icon class="fa-play"></f-icon>\n        <span f-lang="Test Automation Stitch"></span>\n    </div>\n\n    <div f-menu-item-create ng-if="$ctrl.canCreate()"></div>\n    <div f-menu-item ng-if="!$root.ADMIN_RO && $ctrl.menu.menuBar && !$ctrl.canCreate() && !$ctrl.menu.inSlideContext" >\n        <div f-menu-item-button enabled="false" f-tip-target>\n            <f-icon class="fa-plus"></f-icon>\n            {{:: \'Create New\' | lang }}\n            <div f-tip enabled="!$ctrl.canCreate()"\n                title="{{:: \'Automation stitch can only be created by the root FortiGate in the Security Fabric\' | lang}}"></div>\n        </div>\n    </div>\n    <div f-menu-item-edit view-only="!$ctrl.canEdit()" ng-if="!$ctrl.menu.inSlideContext"></div>\n    <div f-menu-item-delete ng-if="$ctrl.canDelete()" delete-entries="$ctrl.delete(menu)"></div>\n</div>\n<div class="center-menu-items">\n    <f-mutable-search></f-mutable-search>\n</div>\n')}]),module.exports=path},969:function(module,exports){var path="/migadmin/ng/system/external-resource/entry/f-system-external-resource-entry.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="flex-column absolute-fill">\n    <div ng-if="::$ctrl.entries.overflow">\n        <div class="error-message">\n            <f-icon class="fa-error"></f-icon>\n            <div class="message-content">\n                {{ \'System::ExternalResource::file.overflow {MAXIMUM}\' | lang:[$ctrl.numberFilter($ctrl.entries.valid_count)] }}\n            </div>\n        </div>\n    </div>\n    <div class="flex-grow containing-block">\n        <f-mutable source="$ctrl.source" settings="$ctrl.settings"\n            context-menu="::true">\n            <div class="center-menu-items no-separator" ng-if="::menu.menuBar">\n                <f-mutable-search></f-mutable-search>\n            </div>\n            <div class="right-menu-items" ng-if="::menu.menuBar">\n                <div class="info-text info-text-centered"\n                    ng-if="[\'unavailable\', \'failed_open\'].includes($ctrl.entries.resource_file_status)">\n                    <f-icon class="fa-warning"></f-icon>\n                    <span>\n                        {{ $ctrl.entries.resource_file_status | langPrefixed:\'System::ExternalResource::file.\' }}\n                    </span>\n                </div>\n                <div class="info-text info-text-centered"\n                    ng-if="$ctrl.entries.resource_file_status === \'downloaded\'">\n                    <span>\n                        <span class="number-bubble">\n                            {{:: $ctrl.entries.valid_count | number }}\n                        </span>\n                        <span f-lang="Valid"></span>\n                    </span>\n                    <span ng-if="::$ctrl.entries.invalid_count">\n                        <span class="number-bubble severity-critical">\n                            {{:: $ctrl.entries.invalid_count | number }}\n                        </span>\n                        <span f-lang="Invalid"></span>\n                    </span>\n                </div>\n            </div>\n        </f-mutable>\n    </div>\n</div>\n')}]),module.exports=path},970:function(module,exports){var path="/migadmin/ng/system/sdn-connector/f-sdn-connector-objects-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable\n    source="$ctrl.muTable.source"\n    settings="$ctrl.muTable.settings"\n    context-menu="::false">\n    <div class="center-menu-items no-separator" ng-if="menu.menuBar">\n        <f-mutable-search></f-mutable-search>\n    </div>\n    <div class="right-menu-items" ng-if="menu.menuBar">\n        <div class="radio-buttons">\n            <div f-menu-item-button\n                 ng-repeat="view in ::$ctrl.views"\n                 selected="view === $ctrl.selectedView"\n                 enabled="$ctrl.views.length === 1 || $ctrl.viewsAllowed[view]"\n                 f-tip-target\n                 click="$ctrl.selectedView = view">\n                <span>\n                    {{:: \'FabricConnector::object-list::views.\' + view | lang }}\n                    <span ng-if="$ctrl.views.length > 1 && !$ctrl.viewsAllowed[view]">\n                        <f-icon class="fa-help-info"></f-icon>\n                        <span f-tip>\n                            {{:: \'This view is unavailable. Please check access permissions on the connector.\' | lang}}\n                        </span>\n                    </span>\n                </span>\n            </div>\n        </div>\n    </div>\n</f-mutable>\n')}]),module.exports=path},977:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(27),__webpack_require__(29),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,Notify,module,fStructure){function PasswordService($window,$rootScope,slide,lang){this.$rootScope=$rootScope,this.slide=slide,this.lang=lang,angular.element($window).on("message",function(event){var e=event.originalEvent||event,data=e.data,origin=fStructure.getOrigin();e.origin===origin&&data.messageType===this.OPEN_DIALOG_EVENT&&this.openPasswordDialog()}.bind(this))}function PasswordPolicyService(CMDB,$q){this.getAllPolicies=function(){if(!this.promise){var ADMIN_POLICY=new CMDB("system","password-policy"),GUEST_ADMIN_POLICY=new CMDB("system","password-policy-guest-admin");this.policies={admin:ADMIN_POLICY.fetch(),"guest-admin":GUEST_ADMIN_POLICY.fetch()},this.promise=$q.all([this.policies.admin.$promise,this.policies["guest-admin"].$promise]).finally(function(){this.promise=null}.bind(this))}return this.promise}}PasswordService.prototype.OPEN_DIALOG_EVENT="openPasswordDialog",PasswordService.prototype.openPasswordDialog=function(admin){var scope=this.$rootScope.$new();scope.admin=admin,this.slide.open("passwordChange",{template:'<f-password-change admin="admin"></f-password-change>',data:{},parentScope:scope,options:{title:this.lang("Edit Password").toString(),okButtonLabel:this.lang("confirm").toString(),fullHeight:!0}}).finally(()=>scope.$destroy())},PasswordPolicyService.prototype.purgeState=function(){this.policies={}},module.service("passwordService",PasswordService),module.service("passwordPolicyService",PasswordPolicyService)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},978:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,inject,fLog){function VDOMState(injector){injector.injectMarked(this)}VDOMState.prototype.VDOM_CHANGE_EVENT="vdomChanged",VDOMState.prototype.setCurrent=inject.mark(function($rootScope,state,structure,$location,navSuppressionDeps){return function(vdom){var result=!0;return vdom!==state.current_vdom&&(navSuppressionDeps._dependenciesCache.removeAll(),navSuppressionDeps.update(),state.admin.vdoms.indexOf(vdom)>=0?(structure.setVDOMCookie(vdom),state.current_vdom=vdom):($location.url(structure.ngURI("/error/403")),fLog.error('Invalid VDOM specified for the current admin: "'+vdom+'"'),state.current_vdom=state.initial_vdom,result=!1)),result&&$rootScope.$broadcast(this.VDOM_CHANGE_EVENT),result}}),module.service("vdomState",VDOMState)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},979:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(29),__webpack_require__(0),__webpack_require__(30),__webpack_require__(34)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,ngFtnt,BUILD,fLog,fDatetime){const COUNTRY_CODES=__webpack_require__(980),REGION_CODES=__webpack_require__(981),STATUSES=BUILD.SYMBOLS;function License(injector){injector.injectMarked(this)}function LicenseRegions(injector){injector.injectMarked(this),this.countries=[],this.canada=[],this.usa=[],this.canadaCode=null,this.usaCode=null,this._buildCountryList(),this.resellersCache={},this.resellers=[]}License.prototype.getLicenses=inject.mark(($http,notificationRequests)=>(function(fortigate){return fortigate&&!fortigate.isCurrent?$http.get(fortigate.createCSFURI("/api/v2/monitor/license/status")).then(response=>response.data.results):notificationRequests.license()})),License.prototype.getSeverityLevel=function(status){var level;switch(status){case STATUSES.LICENSE_STATUS_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EVAL_EXPIRED:case STATUSES.LICENSE_STATUS_VM_INVALID:case STATUSES.LICENSE_STATUS_NOT_REGISTERED:case STATUSES.LICENSE_STATUS_CLOUD_ERROR:level="severity-critical";break;case STATUSES.LICENSE_STATUS_NO_LICENSE:case STATUSES.LICENSE_STATUS_EXPIRES_SOON:case STATUSES.LICENSE_STATUS_LICENSED_EXHAUSTED:case STATUSES.LICENSE_STATUS_FREE_LICENSE_EXHAUSTED:case STATUSES.LICENSE_STATUS_CLOUD_LOGGED_OUT:case STATUSES.LICENSE_STATUS_VM_EVAL:case STATUSES.LICENSE_STATUS_VM_EXPIRES_SOON:case STATUSES.LICENSE_STATUS_VM_VALIDATION_OVERDUE:level="severity-high";break;default:level=""}return level},License.prototype.getStatusIcon=function(status){var icon;switch(status){case STATUSES.LICENSE_STATUS_REGISTERED:case STATUSES.LICENSE_STATUS_LICENSED:case STATUSES.LICENSE_STATUS_VM_VALID:case STATUSES.LICENSE_STATUS_FREE_LICENSE:case STATUSES.LICENSE_STATUS_CLOUD_LOGGED_IN:icon="fa-enabled";break;case STATUSES.LICENSE_STATUS_NOT_REGISTERED:case STATUSES.LICENSE_STATUS_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EVAL_EXPIRED:case STATUSES.LICENSE_STATUS_VM_INVALID:case STATUSES.LICENSE_STATUS_CLOUD_ERROR:icon="fa-severity-critical";break;case STATUSES.LICENSE_STATUS_NO_LICENSE:case STATUSES.LICENSE_STATUS_LICENSED_EXHAUSTED:case STATUSES.LICENSE_STATUS_FREE_LICENSE_EXHAUSTED:case STATUSES.LICENSE_STATUS_CLOUD_LOGGED_OUT:case STATUSES.LICENSE_STATUS_EXPIRES_SOON:case STATUSES.LICENSE_STATUS_VM_EVAL:case STATUSES.LICENSE_STATUS_VM_EXPIRES_SOON:case STATUSES.LICENSE_STATUS_VM_VALIDATION_OVERDUE:icon="fa-severity-high";break;case STATUSES.LICENSE_STATUS_PENDING:case STATUSES.LICENSE_STATUS_VM_PENDING:case STATUSES.LICENSE_STATUS_CLOUD_CONFIRM_EMAIL:case STATUSES.LICENSE_STATUS_CLOUD_LOGIN_IN_PROGRESS:icon="fa-loading";break;case STATUSES.LICENSE_STATUS_NO_SUPPORT:icon="fa-exempt";break;default:icon="fa-unknown"}return icon},License.prototype.isNoLicense=function(license){return[STATUSES.LICENSE_STATUS_NO_LICENSE].indexOf(license.status)>=0},License.prototype.isValidLicense=function(license){return[STATUSES.LICENSE_STATUS_LICENSED,STATUSES.LICENSE_STATUS_EXPIRES_SOON,STATUSES.LICENSE_STATUS_FREE_LICENSE].indexOf(license.status)>=0},License.prototype.isExpiringLicense=function(license){return[STATUSES.LICENSE_STATUS_EXPIRED,STATUSES.LICENSE_STATUS_EXPIRES_SOON].indexOf(license.status)>=0},License.prototype.isUpgradeableLicense=function(license){var IMPLICIT_UPGRADEABLE=[STATUSES.LICENSE_STATUS_FREE_LICENSE,STATUSES.LICENSE_STATUS_FREE_LICENSE_EXHAUSTED],EXPLICIT_UPGRADEABLE=[STATUSES.LICENSE_STATUS_LICENSED,STATUSES.LICENSE_STATUS_LICENSED_EXHAUSTED],result=!1,canUpgrade=license.can_upgrade;return license.status?IMPLICIT_UPGRADEABLE.indexOf(license.status)>=0?result=!1!==canUpgrade:EXPLICIT_UPGRADEABLE.indexOf(license.status)>=0&&(result=!0===canUpgrade):result=!0===canUpgrade,result},License.prototype.getFortiCareSupportLangKey=function(key){return{enhanced:"ENHC",comprehensive:"COMP"}[key]||key},License.prototype.getExpiresLabelForStatus=inject.mark(function(lang){return function(status){var key=this._isExpiredStatus(status)?"expired_on":"expires_on";return lang(key)}}),License.prototype.getInlineExpiresLabelForStatus=inject.mark(function(lang){return function(status,expiry,{skipDateModification:skipDateModification=!1}={}){var key=this._isExpiredStatus(status)?"expired on {0}":"expires on {0}";return lang(key,[this.formatExpiryDate(expiry,{skipDateModification:skipDateModification})])}}),License.prototype.formatExpiryDate=inject.mark(function($filter){var dateFilter=$filter("fDate");return function(expiry,{skipDateModification:skipDateModification=!1}={}){return dateFilter(skipDateModification?1e3*expiry:this._getModifiedExpiryDate(expiry))}}),License.prototype._getModifiedExpiryDate=inject.mark(function(state){return function(expiry){const offset="system"===state.date_format_device?state.getBrowserTZOffsetFromFortiGate()*fDatetime.MIN_TO_MS:0;return this._toEndOfDay((time=>1e3*time-fDatetime.MS_CONSTANTS.DAY)(expiry),offset)}}),License.prototype._toEndOfDay=function(datetime,localtimeOffset=0){let dateObj=new Date(datetime-localtimeOffset);return dateObj.setHours(23,58,0),dateObj.getTime()+localtimeOffset},License.prototype._isExpiredStatus=function(status){var result;switch(status){case STATUSES.LICENSE_STATUS_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EXPIRED:case STATUSES.LICENSE_STATUS_VM_EVAL_EXPIRED:case STATUSES.LICENSE_STATUS_FREE_LICENSE:result=!0;break;default:result=!1}return result},LicenseRegions.prototype.getCountryList=function(){return this.countries},LicenseRegions.prototype._buildCountryList=function(){this.countries=COUNTRY_CODES,this.canada=REGION_CODES.canada,this.usa=REGION_CODES.usa,this.countries.forEach(country=>{"Canada"===country.name?this.canadaCode=country.code:"United States"===country.name&&(this.usaCode=country.code)})},LicenseRegions.prototype.getIndustryOrgInfo=inject.mark(function($http){return function(){return $http.get("/api/v2/monitor/license/forticare-org-list").then(function(response){var data=response.data.results;this.industries=data.industry,this.orgSizes=data.org_size,this.industries.forEach(function(industry){industry.translated=this.translateIndustry(industry)}.bind(this))}.bind(this),function(){fLog.error("Failed to retrieve industry/organization size information.")})}}),LicenseRegions.prototype.translateIndustry=inject.mark(function(lang){return function(industry){industry=industry instanceof Object?industry.name:industry;var translated=lang("FortiCare::industry."+industry);return translated.trusted?translated.toString():industry}}),LicenseRegions.prototype.getResellersList=inject.mark(function($http,$q){return function(country){return this.resellersCache[country]?(this.resellers=this.resellersCache[country],$q.resolve(this.resellers)):$http.get("/api/v2/monitor/license/forticare-resellers?country_code="+country).then(function(response){var resellers=response.data.results.resellers;return this.resellers=resellers,this.resellersCache[country]=resellers,resellers}.bind(this))}}),ngFtnt.service({license:License,licenseRegions:LicenseRegions})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},980:function(module){module.exports=[{code:4,name:"Afghanistan"},{code:8,name:"Albania"},{code:12,name:"Algeria"},{code:16,name:"American Samoa"},{code:20,name:"Andorra"},{code:24,name:"Angola"},{code:660,name:"Anguilla"},{code:10,name:"Antarctica"},{code:28,name:"Antigua And Barbuda"},{code:32,name:"Argentina"},{code:51,name:"Armenia"},{code:533,name:"Aruba"},{code:36,name:"Australia"},{code:40,name:"Austria"},{code:31,name:"Azerbaijan"},{code:44,name:"Bahamas"},{code:48,name:"Bahrain"},{code:50,name:"Bangladesh"},{code:52,name:"Barbados"},{code:112,name:"Belarus"},{code:56,name:"Belgium"},{code:84,name:"Belize"},{code:204,name:"Benin"},{code:60,name:"Bermuda"},{code:64,name:"Bhutan"},{code:68,name:"Bolivia"},{code:70,name:"Bosnia And Herzegovina"},{code:72,name:"Botswana"},{code:74,name:"Bouvet Island"},{code:76,name:"Brazil"},{code:86,name:"British Indian Ocean Territory"},{code:96,name:"Brunei Darussalam"},{code:100,name:"Bulgaria"},{code:854,name:"Burkina Faso"},{code:108,name:"Burundi"},{code:116,name:"Cambodia"},{code:120,name:"Cameroon"},{code:124,name:"Canada"},{code:132,name:"Cape Verde"},{code:136,name:"Cayman Islands"},{code:140,name:"Central African Republic"},{code:148,name:"Chad"},{code:152,name:"Chile"},{code:156,name:"China (Excl Hkg,Macau)"},{code:162,name:"Christmas Island"},{code:166,name:"Cocos (Keeling) Islands"},{code:170,name:"Colombia"},{code:174,name:"Comoros"},{code:178,name:"Congo"},{code:184,name:"Cook Islands"},{code:188,name:"Costa Rica"},{code:384,name:"Cote D'Ivoire"},{code:191,name:"Croatia (Local Name: Hrvatska)"},{code:192,name:"Cuba"},{code:196,name:"Cyprus"},{code:203,name:"Czech Republic"},{code:208,name:"Denmark"},{code:262,name:"Djibouti"},{code:212,name:"Dominica"},{code:214,name:"Dominican Republic"},{code:626,name:"East Timor"},{code:218,name:"Ecuador"},{code:818,name:"Egypt"},{code:222,name:"El Salvador"},{code:226,name:"Equatorial Guinea"},{code:232,name:"Eritrea"},{code:233,name:"Estonia"},{code:210,name:"Ethiopia"},{code:238,name:"Falkland Islands (Malvinas)"},{code:234,name:"Faroe Islands"},{code:242,name:"Fiji"},{code:246,name:"Finland"},{code:250,name:"France"},{code:254,name:"French Guiana"},{code:258,name:"French Polynesia"},{code:260,name:"French Southern Territories"},{code:266,name:"Gabon"},{code:270,name:"Gambia"},{code:268,name:"Georgia"},{code:276,name:"Germany"},{code:288,name:"Ghana"},{code:292,name:"Gibraltar"},{code:300,name:"Greece"},{code:304,name:"Greenland"},{code:308,name:"Grenada"},{code:312,name:"Guadeloupe"},{code:316,name:"Guam"},{code:320,name:"Guatemala"},{code:324,name:"Guinea"},{code:624,name:"Guinea-Bissau"},{code:328,name:"Guyana"},{code:332,name:"Haiti"},{code:334,name:"Heard Island &Amp; Mcdonald Islands"},{code:340,name:"Honduras"},{code:344,name:"Hong Kong"},{code:348,name:"Hungary"},{code:352,name:"Iceland"},{code:356,name:"India"},{code:360,name:"Indonesia"},{code:364,name:"Iran, Islamic Republic Of"},{code:368,name:"Iraq"},{code:372,name:"Ireland"},{code:376,name:"Israel"},{code:380,name:"Italy"},{code:388,name:"Jamaica"},{code:392,name:"Japan"},{code:400,name:"Jordan"},{code:398,name:"Kazakhstan"},{code:404,name:"Kenya"},{code:296,name:"Kiribati"},{code:408,name:"Korea(North), Democratic People'S Republic Of"},{code:410,name:"Korea(South), Republic Of"},{code:414,name:"Kuwait"},{code:417,name:"Kyrgyzstan"},{code:418,name:"Lao People'S Democratic Republic"},{code:428,name:"Latvia"},{code:422,name:"Lebanon"},{code:426,name:"Lesotho"},{code:430,name:"Liberia"},{code:434,name:"Libyan Arab Jamahiriya"},{code:438,name:"Liechtenstein"},{code:440,name:"Lithuania"},{code:442,name:"Luxembourg"},{code:446,name:"Macau"},{code:807,name:"Macedonia, The Former Yugoslav Republic Of"},{code:450,name:"Madagascar"},{code:454,name:"Malawi"},{code:458,name:"Malaysia"},{code:462,name:"Maldives"},{code:466,name:"Mali"},{code:470,name:"Malta"},{code:584,name:"Marshall Islands"},{code:474,name:"Martinique"},{code:478,name:"Mauritania"},{code:480,name:"Mauritius"},{code:175,name:"Mayotte"},{code:484,name:"Mexico"},{code:583,name:"Micronesia, Federated States Of"},{code:498,name:"Moldova, Republic Of"},{code:492,name:"Monaco"},{code:496,name:"Mongolia"},{code:500,name:"Montserrat"},{code:504,name:"Morocco"},{code:508,name:"Mozambique"},{code:104,name:"Myanmar"},{code:516,name:"Namibia"},{code:520,name:"Nauru"},{code:524,name:"Nepal"},{code:528,name:"Netherlands"},{code:530,name:"Netherlands Antilles"},{code:540,name:"New Caledonia"},{code:554,name:"New Zealand"},{code:558,name:"Nicaragua"},{code:562,name:"Niger"},{code:566,name:"Nigeria"},{code:570,name:"Niue"},{code:574,name:"Norfolk Island"},{code:580,name:"Northern Mariana Islands"},{code:578,name:"Norway"},{code:512,name:"Oman"},{code:586,name:"Pakistan"},{code:585,name:"Palau"},{code:591,name:"Panama"},{code:598,name:"Papua New Guinea"},{code:600,name:"Paraguay"},{code:604,name:"Peru"},{code:608,name:"Philippines"},{code:612,name:"Pitcairn"},{code:616,name:"Poland"},{code:620,name:"Portugal"},{code:630,name:"Puerto Rico"},{code:634,name:"Qatar"},{code:638,name:"Reunion"},{code:642,name:"Romania"},{code:643,name:"Russian Federation"},{code:646,name:"Rwanda"},{code:659,name:"Saint Kitts And Nevis"},{code:662,name:"Saint Lucia"},{code:670,name:"Saint Vincent And The Grenadines"},{code:882,name:"Samoa"},{code:674,name:"San Marino"},{code:678,name:"Sao Tome And Principe"},{code:682,name:"Saudi Arabia"},{code:686,name:"Senegal"},{code:690,name:"Seychelles"},{code:694,name:"Sierra Leone"},{code:702,name:"Singapore"},{code:703,name:"Slovakia (Slovak Republic)"},{code:705,name:"Slovenia"},{code:90,name:"Solomon Islands"},{code:706,name:"Somalia"},{code:710,name:"South Africa"},{code:724,name:"Spain"},{code:144,name:"Sri Lanka"},{code:654,name:"Saint Helena"},{code:666,name:"Saint Pierre And Miquelon"},{code:736,name:"Sudan"},{code:740,name:"Suriname"},{code:744,name:"Svalbard And Jan Mayen Islands"},{code:748,name:"Swaziland"},{code:752,name:"Sweden"},{code:756,name:"Switzerland"},{code:760,name:"Syrian Arab Republic"},{code:158,name:"Taiwan"},{code:762,name:"Tajikistan"},{code:834,name:"Tanzania, United Republic Of"},{code:764,name:"Thailand"},{code:768,name:"Togo"},{code:772,name:"Tokelau"},{code:776,name:"Tonga"},{code:780,name:"Trinidad And Tobago"},{code:788,name:"Tunisia"},{code:792,name:"Turkey"},{code:795,name:"Turkmenistan"},{code:796,name:"Turks And Caicos Islands"},{code:798,name:"Tuvalu"},{code:800,name:"Uganda"},{code:804,name:"Ukraine"},{code:784,name:"United Arab Emirates"},{code:826,name:"United Kingdom"},{code:840,name:"United States"},{code:581,name:"United States Minor Outlying Islands"},{code:858,name:"Uruguay"},{code:860,name:"Uzbekistan"},{code:548,name:"Vanuatu"},{code:336,name:"Vatican City State (Holy See)"},{code:862,name:"Venezuela"},{code:704,name:"Viet Nam"},{code:92,name:"Virgin Islands (British)"},{code:850,name:"Virgin Islands (U.S.)"},{code:876,name:"Wallis And Futuna Islands"},{code:732,name:"Western Sahara"},{code:887,name:"Yemen"},{code:891,name:"Serbia And Montenegro"},{code:180,name:"Zaire"},{code:894,name:"Zambia"},{code:716,name:"Zimbabwe"}]},981:function(module){module.exports={canada:[{code:"AB",name:"Alberta"},{code:"BC",name:"British Columbia"},{code:"MB",name:"Manitoba"},{code:"NB",name:"New Brunswick"},{code:"NL",name:"Newfoundland and Labrador"},{code:"NT",name:"Northwest Territories"},{code:"NS",name:"Nova Scotia"},{code:"NU",name:"Nunavut"},{code:"ON",name:"Ontario"},{code:"PE",name:"Prince Edward Island"},{code:"QC",name:"Quebec"},{code:"SK",name:"Saskatchewan"},{code:"YT",name:"Yukon"}],usa:[{code:"AL",name:"Alabama"},{code:"AK",name:"Alaska"},{code:"AS",name:"American Samoa"},{code:"AZ",name:"Arizona"},{code:"AR",name:"Arkansas"},{code:"CA",name:"California"},{code:"CO",name:"Colorado"},{code:"CT",name:"Connecticut"},{code:"DE",name:"Delaware"},{code:"DC",name:"District of Columbia"},{code:"FM",name:"Federated States of Micronesia"},{code:"FL",name:"Florida"},{code:"GA",name:"Georgia"},{code:"GU",name:"Guam"},{code:"HI",name:"Hawaii"},{code:"ID",name:"Idaho"},{code:"IL",name:"Illinois"},{code:"IN",name:"Indiana"},{code:"IA",name:"Iowa"},{code:"KS",name:"Kansas"},{code:"KY",name:"Kentucky"},{code:"LA",name:"Louisiana"},{code:"ME",name:"Maine"},{code:"MH",name:"Marshall Islands"},{code:"MD",name:"Maryland"},{code:"MA",name:"Massachusetts"},{code:"MI",name:"Michigan"},{code:"MN",name:"Minnesota"},{code:"MS",name:"Mississippi"},{code:"MO",name:"Missouri"},{code:"MT",name:"Montana"},{code:"NE",name:"Nebraska"},{code:"NV",name:"Nevada"},{code:"NH",name:"New Hampshire"},{code:"NJ",name:"New Jersey"},{code:"NM",name:"New Mexico"},{code:"NY",name:"New York"},{code:"NC",name:"North Carolina"},{code:"ND",name:"North Dakota"},{code:"MP",name:"Northern Mariana Islands"},{code:"OH",name:"Ohio"},{code:"OK",name:"Oklahoma"},{code:"OR",name:"Oregon"},{code:"PW",name:"Palau"},{code:"PA",name:"Pennsylvania"},{code:"PR",name:"Puerto Rico"},{code:"RI",name:"Rhode Island"},{code:"SC",name:"South Carolina"},{code:"SD",name:"South Dakota"},{code:"TN",name:"Tennessee"},{code:"TX",name:"Texas"},{code:"UT",name:"Utah"},{code:"VT",name:"Vermont"},{code:"VI",name:"Virgin Islands"},{code:"VA",name:"Virginia"},{code:"WA",name:"Washington"},{code:"WV",name:"West Virginia"},{code:"WI",name:"Wisconsin"},{code:"WY",name:"Wyoming"}]}},982:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(9),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject,angular,BUILD)=>{function Registration(injector){injector.injectMarked(this),this.MODALS={FORTICLOUD:"F_FORTICLOUD_MODAL",FORTICARE:"F_FORTICARE_MODAL",VDOM_LICENSE:"F_VDOM_LICENSE_MODAL",FORTICARE_LICENSE:"F_FORTICARE_LICENSE_MODAL",FORTICLOUD_MIGRATE:"F_FORTICLOUD_MIGRATE_MODAL",FORTICLOUD_ACCOUNT_TITLE_TRANSFER:"F_FORTICLOUD_ACCOUNT_TITLE_TRANSFER_MODAL"}}Registration.prototype.csfTitle=function(title,fortigate){return fortigate?`${fortigate.getLabel()}: ${title}`:title},Registration.prototype.openFortiCloud=inject.mark((slide,notificationRequests,$q,lang,$rootScope,csfTopology)=>(async function(fortigate){const LOGGED_IN=BUILD.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_IN,LOGGED_OUT=BUILD.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_OUT,REGISTERED=BUILD.SYMBOLS.LICENSE_STATUS_REGISTERED,LICENSE_STATUS_NO_SUPPORT=BUILD.SYMBOLS.LICENSE_STATUS_NO_SUPPORT;let forticloudState=LOGGED_OUT;fortigate||(fortigate=csfTopology.thisFortigate);const licenses=await notificationRequests.license({fortigate:fortigate}),openFortiCloud=()=>{let scope=$rootScope.$new(!0),title="";if((forticloudState=licenses.forticloud.status)===LOGGED_OUT)title=lang("Activate FortiGate Cloud").toString();else{if(forticloudState!==LOGGED_IN)return $q.reject();title=lang("FortiGate Cloud Logout").toString()}return scope.fortigate=fortigate,slide.open(this.MODALS.FORTICLOUD,{template:'<f-registration-forticloud fortigate="::fortigate">\n                        </f-registration-forticloud>',parentScope:scope,options:{title:this.csfTitle(title,fortigate),fullHeight:!0}}).finally(function(){scope.$destroy()})};let processPromise;if(forticloudState=licenses.forticloud.status,licenses.forticare.status!==LICENSE_STATUS_NO_SUPPORT&&licenses.forticare.status!==REGISTERED&&forticloudState===LOGGED_OUT){processPromise=this.openFortiCare(fortigate,!0);var{submitFortiCloud:submitFortiCloud}=await processPromise}return submitFortiCloud?processPromise:openFortiCloud()})),Registration.prototype.openFortiCare=inject.mark((slide,lang,$rootScope,csfTopology)=>(function(fortigate,fgtCloudRequest=!1){let title=lang("FortiCare Registration").toString(),scope=$rootScope.$new(!0);return fortigate||(fortigate=csfTopology.thisFortigate),scope.fortigate=fortigate,scope.fgtCloudRequest=fgtCloudRequest,slide.open(this.MODALS.FORTICARE,{template:'<f-registration-forticare fortigate="::fortigate"\n                        forticloud-request="::fgtCloudRequest"></f-registration-forticare>',parentScope:scope,options:{title:this.csfTitle(title,fortigate),fullHeight:!0}}).finally(function(){scope.$destroy()})})),Registration.prototype.openVdomLicense=inject.mark((slide,lang,$rootScope,csfTopology)=>(function(fortigate){let title=lang("Enter VDOM License Key").toString(),scope=$rootScope.$new(!0);return fortigate||(fortigate=csfTopology.thisFortigate),scope.fortigate=fortigate,slide.open(this.MODALS.VDOM_LICENSE,{template:'<f-registration-vdom-license fortigate="::fortigate">\n                       </f-registration-vdom-license>',parentScope:scope,options:{title:this.csfTitle(title,fortigate),fullHeight:!0}}).finally(function(){scope.$destroy()})})),Registration.prototype.openFortiCareLicense=inject.mark((slide,lang,$rootScope,csfTopology)=>(function(fortigate){let title=lang("Enter Registration Code").toString(),scope=$rootScope.$new(!0);return fortigate||(fortigate=csfTopology.thisFortigate),scope.fortigate=fortigate,slide.open(this.MODALS.FORTICARE_LICENSE,{template:'<f-registration-forticare-license fortigate="::fortigate">\n                       </f-registration-forticare-license>',parentScope:scope,options:{title:this.csfTitle(title,fortigate),fullHeight:!0}}).finally(function(){scope.$destroy()})})),Registration.prototype.openFortiCloudMigrate=inject.mark((slide,lang,$rootScope,csfTopology)=>(function(fortigate){let title=lang("FortiGate Cloud Migration"),scope=$rootScope.$new(!0);return fortigate||(fortigate=csfTopology.thisFortigate),scope.fortigate=fortigate,slide.open(this.MODALS.FORTICLOUD_MIGRATE,{template:'<f-registration-forticloud-migrate fortigate="::fortigate">\n                       </f-registration-forticloud-migrate>',parentScope:scope,options:{title:title,fullHeight:!0}}).finally(function(){scope.$destroy()})})),Registration.prototype.openFortiCloudAccountTitleTransfer=inject.mark((slide,lang,$rootScope,csfTopology)=>(async function(fortigate){let title=lang("FortinetService::type.forticloud_account_title_transfer").toString(),scope=$rootScope.$new(!0);fortigate||(fortigate=csfTopology.thisFortigate),scope.fortigate=fortigate;try{await slide.open(this.MODALS.FORTICLOUD_ACCOUNT_TITLE_TRANSFER,{template:'<f-registration-forticloud-account-title-transfer\n                                fortigate="::fortigate">\n                           </f-registration-forticloud-account-title-transfer>',parentScope:scope,options:{title:title,fullHeight:!0}})}finally{scope.$destroy()}})),module.service("registration",Registration)}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},983:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(28),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ngModule,inject,BUILD,patterns,Notify)=>{ngModule.component("fCustomizeFortigate",{controller:class extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,CMDB,csfTopology,state,createSystemCsfModel){return async function(){const that=this;if(!(this.fortigate&&this.fortigate.canOpenCustomizeSlide&&this.fortigate.canOpenCustomizeSlide()))throw new Error("Only use this in root FortiGate");this.isCurrent=csfTopology.thisFortigate===this.fortigate,this.patterns=patterns.commonRegExp,this.loading=!0,this.sysGlobal=new CMDB("system","global",{csfProxy:this.fortigate}).fetch(),this.csf=new CMDB("system","csf",{model:createSystemCsfModel(!this.isCurrent),csfProxy:this.fortigate,prune:1}).fetch(),this.fetchSaml(),this.selectSources={adminProfile:{sources:this.fortigate.getOmniselectProxySourceID("system.accprofile"),preProcessSelected:!0,singleSelect:!0,filterFunction:function(profile){return that.saml.$original["default-profile"].name===profile.name||(profile.name===BUILD.SYMBOLS.SUPER_ADMIN_PROFILE?state.admin.super_admin:state.checkPermission(profile)&&profile.name!==BUILD.SYMBOLS.HA_ADMIN_ACC_PROFILE)}}};try{await this.sysGlobal.$promise,await this.csf.$promise,await this.saml.$promise}finally{this.loading=!1}}}fetchSaml($INJECTABLE$,CMDB,createSamlModel){return function(){this.saml=new CMDB("system","saml",{csfProxy:this.fortigate,datasource:1,prune:1,model:createSamlModel(this.fortigate)}).fetch()}}submit($INJECTABLE$,lang,$scope,$q){return async function(){try{this.preSaveSysGlobal(),await this.sysGlobal.$save().$promise,this.postSaveSysGlobal(),this.preSaveCsf(),await this.csf.$save().$promise,this.postSaveCsf();const posted=[];$scope.$broadcast("submit",posted),await $q.all(posted)}catch(e){throw Notify.post(lang("Failed to save settings"),Notify.LEVEL.ERROR),new Error}Notify.post(lang("Settings updated successfully"),Notify.LEVEL.SUCCESS)}}preSaveSysGlobal(){this.changedHostname=this.sysGlobal.$original.hostname!==this.sysGlobal.hostname}preSaveCsf(){this.csf.preSave(),this.changedMgmtIp=this.csf.$original["management-ip"]!==this.csf["management-ip"],this.changedMgmtPort=this.csf.$original["management-port"]!==this.csf["management-port"]}postSaveSysGlobal($INJECTABLE$,state){return function(){this.fortigate.hostname=this.sysGlobal.hostname,this.changedHostname&&(this.fortigate.hostname=this.sysGlobal.hostname,this.isCurrent&&state.refresh())}}postSaveCsf(){this.changedMgmtIp&&(this.fortigate.managementIP=this.csf["management-ip"]),this.changedMgmtPort&&(this.fortigate.mgmtPort=this.csf["management-port"]),(this.changedMgmtIp||this.changedMgmtPort)&&this.fortigate.clearCsfSettingsCache()}},bindings:{fortigate:"="},templateUrl:__webpack_require__(984)})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},984:function(module,exports){var path="/migadmin/ng/system/csf/f-customize-fortigate.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="true" loading="$ctrl.loading" valid-submit="$ctrl.submit()" form="$ctrl.form">\n    <section>\n        <f-field>\n            <field-label f-lang="FortiGate"></field-label>\n            <field-value>\n                <f-omniselect-entry entry="$ctrl.fortigate"></f-omniselect-entry>\n            </field-value>\n        </f-field>\n        <f-field error-messages="{pattern: \'err_char2\'}">\n            <field-label f-lang="Host name"></field-label>\n            <field-value>\n                <input ng-model="$ctrl.sysGlobal.hostname"\n                    ng-required="$ctrl.sysGlobal.$original.hostname"\n                    ng-pattern="$ctrl.patterns.FGT_HOSTNAME">\n            </field-value>\n        </f-field>\n        <f-saml-fields\n            ng-if="$ctrl.csf.status === \'enable\'"\n            class="field-container"\n            saml="$ctrl.saml"\n            csf="$ctrl.csf"\n            fetch-saml="$ctrl.fetchSaml()"\n            form="$ctrl.form"\n            fortigate="$ctrl.fortigate">\n        </f-saml-fields>\n    </section>\n</f-dialog>\n')}]),module.exports=path},985:function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){var RESOURCE_CATEGORIES=[{categoryResources:[{name:"session"}]},{categoryHeader:"policy_objects",categoryResources:[{name:"firewall-policy"},{name:"firewall-address"},{name:"firewall-addrgrp"},{name:"custom-service"},{name:"service-group"},{name:"onetime-schedule"},{name:"recurring-schedule"}]},{categoryHeader:"user_and_device",categoryResources:[{name:"user"},{name:"user-group"},{name:"proxy",langKey:"Concurrent Explicit Proxy Users"}]},{categoryHeader:"vpn",categoryResources:[{name:"sslvpn"},{name:"ipsec-phase1"},{name:"ipsec-phase2"},{name:"ipsec-phase1-interface"},{name:"ipsec-phase2-interface"},{name:"dialup-tunnel"}]},{categoryHeader:"Log & Report",categoryResources:[{name:"log-disk-quota",unit:"mb"}]}];function VdomResources(injector,$scope){injector.injectMarked(this,{$scope:$scope}),this.setup(),this.loadData(),this.MAX_FOR_NO_LIMIT=parseInt("FFFFFFFF",16)}VdomResources.prototype.setup=inject.mark(function(state){return function(){this.options.loading=!0,this.options.saveFunction=this.save,this.isGlobal="global"===this.options.vdom,this.isGlobal?this.maximumLabel="def_max":this.maximumLabel="Global Maximum",this.colspan=this.isGlobal?4:5,this.resources={},this.resourceCategories=state.inSplitTaskManagementVdom(this.options.vdom)?this.filterRootVdomResource():RESOURCE_CATEGORIES}}),VdomResources.prototype.filterRootVdomResource=function(){return RESOURCE_CATEGORIES.filter(entry=>"Log & Report"===entry.categoryHeader||!entry.categoryHeader)},VdomResources.prototype.getMinValue=function(resource){var resourceObject=this.resources[resource];if(resourceObject)return resourceObject.current_usage>=resourceObject.min_custom_value?resourceObject.current_usage:resourceObject.min_custom_value},VdomResources.prototype.setupMaxValues=function(){Object.keys(this.resources).forEach(function(resource){var resourceObject=this.resources[resource];0===resourceObject.custom_max&&(resourceObject.custom_max=""),0===resourceObject.guaranteed&&(resourceObject.guaranteed=""),resourceObject.custom_max!==resourceObject.max_custom_value&&resourceObject.custom_max&&(resourceObject.editMode=!0)}.bind(this))},VdomResources.prototype.resetAfterToggle=function(resource){this.resources[resource].editMode||this.resetResource(resource)},VdomResources.prototype.resetResource=function(resource,resetGuaranteed){this.resources[resource].custom_max="",this.resources[resource].editMode=!1,!this.isGlobal&&resetGuaranteed&&(this.resources[resource].guaranteed="")},VdomResources.prototype.resetAll=function(){Object.keys(this.resources).forEach(function(resource){this.resetResource(resource,!0)}.bind(this))},VdomResources.prototype.loadData=inject.mark(function($http){return function(){var promise;if(this.isGlobal)promise=$http.get("/api/v2/monitor/system/global-resources");else{var url="/api/v2/monitor/system/vdom-resource?vdom="+this.options.vdom;promise=$http.get(url)}promise.then(function(results){this.resources=results.data.results,this.isGlobal||(delete this.resources.cpu,delete this.resources.memory,delete this.resources.setup_rate,delete this.resources.is_deletable),this.setupMaxValues(),this.options.loading=!1}.bind(this))}}),VdomResources.prototype.save=inject.mark(function(CMDB){return function(){var cmdbData={};return Object.keys(this.resources).forEach(function(resource){var resourceObject=this.resources[resource];this.isGlobal?(resourceObject.custom_max===this.MAX_FOR_NO_LIMIT&&0===resourceObject.global_max&&this.resetResource(resource),cmdbData[resource]=resourceObject.custom_max):(resourceObject.custom_max!==resourceObject.max_custom_value&&resourceObject.custom_max?cmdbData[resource]=resourceObject.custom_max:cmdbData[resource]=0,resourceObject.guaranteed&&resourceObject.guaranteed>0?cmdbData[resource]+=" "+resourceObject.guaranteed:cmdbData[resource]+=" 0")}.bind(this)),this.isGlobal?new CMDB("system","resource-limits").edit(null,cmdbData).$promise.then(this.loadData):new CMDB("system","vdom-property").edit(this.options.vdom,cmdbData).$promise}}),ngModule.component("fVdomResources",{templateUrl:__webpack_require__(986),controller:VdomResources,bindings:{options:"="}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},986:function(module,exports){var path="/migadmin/ng/system/vdom/resources/f-vdom-resources.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-bar class="menu-table-border">\n    <div class="left-menu-items">\n        <div f-menu-item-button click="$ctrl.resetAll()">\n            <f-icon class="fa-reset"></f-icon>\n            <span>{{:: \'Reset All\' | lang}}</span>\n        </div>\n    </div>\n</div>\n<table class="table bordered full-width">\n    <thead>\n        <tr>\n            <th>{{:: \'res\' | lang}}</th>\n            <th>{{:: \'Current Usage\' | lang}}</th>\n            <th>{{:: $ctrl.maximumLabel | lang}}</th>\n            <th>{{:: \'Override Maximum\' | lang}}</th>\n            <th ng-if="!$ctrl.isGlobal">{{:: \'guar\' | lang}}</th>\n        </tr>\n    </thead>\n    <tbody ng-repeat="category in ::$ctrl.resourceCategories">\n        <tr class="section-header" ng-if="::category.categoryHeader">\n            <td colspan="{{ $ctrl.colspan }}">{{:: category.categoryHeader | lang}}</td>\n        </tr>\n        <tr class="child"\n            ng-repeat="resource in ::category.categoryResources"\n            ng-dblclick="::$ctrl.resources[resource.name].editMode = true">\n            <td>\n                {{:: (resource.langKey ? resource.langKey : resource.name) | lang}}\n                <span ng-if="::resource.unit">({{:: resource.unit | lang}})</span>\n            </td>\n            <td>\n                <div class="resource-bar-wrapper">\n                    <div class="resource-bar-content">\n                        <div f-resource-bar="$ctrl.resources[resource.name].usage_percent"\n                         show-percentage="true"></div>\n                    </div>\n                    <div class="resource-bar-label">\n                        ({{$ctrl.resources[resource.name].current_usage}})\n                    </div>\n                </div>\n            </td>\n            <td class="max-column">\n                <div class="default-max-wrapper">\n                    <div ng-if="$ctrl.resources[resource.name].global_max">\n                        {{$ctrl.resources[resource.name].global_max}}\n                    </div>\n                    <div ng-if="!$ctrl.resources[resource.name].global_max">\n                        {{:: $ctrl.MAX_FOR_NO_LIMIT }}\n                    </div>\n                    <span ng-if="::resource.unit">({{:: resource.unit | lang}})</span>\n                </div>\n            </td>\n            <td class="custom-max-column">\n                <div class="inline-field validation-container">\n                    <div class="override-wrapper">\n                        <div class="toggle-switch-wrapper">\n                            <label>\n                                <input type="checkbox" class="toggle-switch"\n                                       id="override-default-{{::resource.name}}"\n                                       ng-model="$ctrl.resources[resource.name].editMode"\n                                       ng-click="$ctrl.resetAfterToggle(resource.name)">\n                                <label for="override-default-{{::resource.name}}"></label>\n                            </label>\n                        </div>\n                        <div ng-class="{invisible: !$ctrl.resources[resource.name].editMode}">\n                            <input type="number"\n                                   class="resource-input-field"\n                                   f-validation-message f-validation-outside\n                                   min="{{$ctrl.getMinValue(resource.name)}}"\n                                   max="{{$ctrl.resources[resource.name].max_custom_value || $ctrl.MAX_FOR_NO_LIMIT}}"\n                                   ng-model="$ctrl.resources[resource.name].custom_max"\n                                   ng-model-options="{updateOn: \'blur\'}">\n                        </div>\n                    </div>\n                    <div class="validation-msg error"></div>\n                </div>\n            </td>\n            <td class="guaranteed-column" ng-if="!$ctrl.isGlobal">\n                <div class="inline-field validation-container">\n                    <div class="guaranteed-wrapper">\n                        <input type="number"\n                               class="guaranteed-input-field"\n                               f-validation-message f-validation-outside\n                               min="{{$ctrl.resources[resource.name].min_guaranteed_value}}"\n                               max="{{$ctrl.resources[resource.name].custom_max ||\n                                      $ctrl.resources[resource.name].max_guaranteed_value || null}}"\n                               ng-model="$ctrl.resources[resource.name].guaranteed">\n                    </div>\n                    <div class="validation-msg error"></div>\n                </div>\n            </td>\n        </tr>\n    </tbody>\n</table>\n')}]),module.exports=path}}]);