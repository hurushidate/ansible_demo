(window.webpackJsonp=window.webpackJsonp||[]).push([[35],[,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(108),__webpack_require__(30),__webpack_require__(639),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(util,log,dialog,BUILD){"use strict";return window.fweb={util:util,log:log,dialog:dialog,BUILD:BUILD,CONFIG_GUI_NO:BUILD.CONFIG.CONFIG_GUI_NO,DEBUG:BUILD.CONFIG.CONFIG_DEBUG}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";const MUST_PROVIDE=[],services=new Map;module.exports={provide(provided){const provideSet=new Set(MUST_PROVIDE),missing=MUST_PROVIDE.filter(key=>!(key in provided)),undef=MUST_PROVIDE.filter(key=>!provided[key]),extra=Object.keys(provided).filter(key=>!provideSet.has(key));if(missing.length)throw new Error(`service(s) are missing: must provide ${missing.join(", ")}`);if(undef.length&&console.warn(`service(s) not set: ${undef.join(", ")}`),extra.length)throw new Error(`Unknown services have been provided: ${extra.join(", ")}`);MUST_PROVIDE.forEach(key=>services.set(key,provided[key]))}},Object.defineProperties(module.exports,MUST_PROVIDE.reduce((pd,key)=>(pd[key]={get(){if(services.has(key))return services.get(key);throw new Error(`Service has not yet been provided: ${key}`)}},pd),{}))},,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){(function(global){(function(){var $jscomp=$jscomp||{};$jscomp.scope={},$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""},$jscomp.ASSUME_ES5=!1,$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:void 0!==global&&null!=global?global:a},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(a,b,c,d){if(b){for(c=$jscomp.global,a=a.split("."),d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={}),c=c[e]}(b=b(d=c[a=a[a.length-1]]))!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}},$jscomp.polyfill("String.prototype.repeat",function(a){return a||function(a){var b=$jscomp.checkStringArgs(this,null,"repeat");if(0>a||1342177279<a)throw new RangeError("Invalid count value");a|=0;for(var d="";a;)1&a&&(d+=b),(a>>>=1)&&(b+=b);return d}},"es6-impl","es3"),$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}},$jscomp.polyfill("Array.prototype.findIndex",function(a){return a||function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6-impl","es3"),$jscomp.polyfill("String.prototype.startsWith",function(a){return a||function(a,c){var b=$jscomp.checkStringArgs(this,a,"startsWith");a+="";var e=b.length,f=a.length;c=Math.max(0,Math.min(0|c,b.length));for(var g=0;g<f&&c<e;)if(b[c++]!=a[g++])return!1;return g>=f}},"es6-impl","es3"),$jscomp.polyfill("String.prototype.endsWith",function(a){return a||function(a,c){var b=$jscomp.checkStringArgs(this,a,"endsWith");a+="",void 0===c&&(c=b.length),c=Math.max(0,Math.min(0|c,b.length));for(var e=a.length;0<e&&0<c;)if(b[--c]!=a[--e])return!1;return 0>=e}},"es6-impl","es3");var COMPILED=!0,goog=goog||{};goog.global=this,goog.isDef=function(a){return void 0!==a},goog.isString=function(a){return"string"==typeof a},goog.isBoolean=function(a){return"boolean"==typeof a},goog.isNumber=function(a){return"number"==typeof a},goog.exportPath_=function(a,b,c){a=a.split("."),c=c||goog.global,a[0]in c||!c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}},goog.define=function(a,b){COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&void 0===goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,a)?b=goog.global.CLOSURE_UNCOMPILED_DEFINES[a]:goog.global.CLOSURE_DEFINES&&void 0===goog.global.CLOSURE_DEFINES.nodeType&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,a)&&(b=goog.global.CLOSURE_DEFINES[a])),goog.exportPath_(a,b)},goog.DEBUG=!0,goog.LOCALE="en",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide can not be used within a goog.module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)},goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=a,!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}},goog.module.get=function(a){return goog.module.getInternal_(a)},goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a];if(!goog.implicitNamespaces_[a])return null!=(a=goog.getObjectByName(a))?a:null}return null},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."))},goog.forwardDeclare=function(a){},COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0}),goog.getObjectByName=function(a,b){a=a.split("."),b=b||goog.global;for(var c;c=a.shift();){if(!goog.isDefAndNotNull(b[c]))return null;b=b[c]}return b},goog.globalize=function(a,b){for(var c in b=b||goog.global,a)b[c]=a[c]},goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e;a=a.replace(/\\/g,"/");var f=goog.dependencies_;d&&"boolean"!=typeof d||(d=d?{module:"goog"}:{});for(var g=0;e=b[g];g++)f.nameToPath[e]=a,f.loadFlags[a]=d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0}},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)},goog.require=function(a){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(a),goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(!b)throw a="goog.require could not find: "+a,goog.logToConsole_(a),Error(a);goog.writeScripts_(b)}return null}},goog.basePath="",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error("unimplemented abstract method")},goog.addSingletonGetter=function(a){a.instance_=void 0,a.getInstance=function(){return a.instance_?a.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a),a.instance_=new a)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.TRANSPILE="detect",goog.TRANSPILER="transpile.js",goog.DEPENDENCIES_ENABLED&&(goog.dependencies_={loadFlags:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;for(b=(a=b?[b]:a.getElementsByTagName("SCRIPT")).length-1;0<=b;--b){var c=a[b].src,d=-1==(d=c.lastIndexOf("?"))?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(a,b)&&(goog.dependencies_.written[a]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.oldIeWaiting_=!1,goog.importProcessedScript_=function(a,b,c){goog.importScript_("",'goog.retrieveAndExec_("'+a+'", '+b+", "+c+");")},goog.queuedModules_=[],goog.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(b+"\n//# sourceURL="+a+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+b+"\n;return exports});\n//# sourceURL="+a+"\n"},goog.loadQueuedModules_=function(){var a=goog.queuedModules_.length;if(0<a){var b=goog.queuedModules_;goog.queuedModules_=[];for(var c=0;c<a;c++)goog.maybeProcessDeferredPath_(b[c])}goog.oldIeWaiting_=!1},goog.maybeProcessDeferredDep_=function(a){goog.isDeferredModule_(a)&&goog.allDepsAreAvailable_(a)&&(a=goog.getPathFromDeps_(a),goog.maybeProcessDeferredPath_(goog.basePath+a))},goog.isDeferredModule_=function(a){var b=(a=goog.getPathFromDeps_(a))&&goog.dependencies_.loadFlags[a]||{},c=b.lang||"es3";return!(!a||"goog"!=b.module&&!goog.needsTranspile_(c))&&goog.basePath+a in goog.dependencies_.deferred},goog.allDepsAreAvailable_=function(a){if((a=goog.getPathFromDeps_(a))&&a in goog.dependencies_.requires)for(var b in goog.dependencies_.requires[a])if(!goog.isProvided_(b)&&!goog.isDeferredModule_(b))return!1;return!0},goog.maybeProcessDeferredPath_=function(a){if(a in goog.dependencies_.deferred){var b=goog.dependencies_.deferred[a];delete goog.dependencies_.deferred[a],goog.globalEval(b)}},goog.loadModuleFromUrl=function(a){goog.retrieveAndExec_(a,!0,!1)},goog.writeScriptSrcNode_=function(a){goog.global.document.write('<script type="text/javascript" src="'+a+'"><\/script>')},goog.appendScriptSrcNode_=function(a){var b=goog.global.document,c=b.createElement("script");c.type="text/javascript",c.src=a,c.defer=!1,c.async=!1,b.head.appendChild(c)},goog.writeScriptTag_=function(a,b){if(goog.inHtmlDocument_()){var c=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&"complete"==c.readyState){if(/\bdeps.js$/.test(a))return!1;throw Error('Cannot write "'+a+'" after document load')}return void 0===b?goog.IS_OLD_IE_?(goog.oldIeWaiting_=!0,b=" onreadystatechange='goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ",c.write('<script type="text/javascript" src="'+a+'"'+b+"><\/script>")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(a):goog.writeScriptSrcNode_(a):c.write('<script type="text/javascript">'+goog.protectScriptTag_(b)+"<\/script>"),!0}return!1},goog.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/gi,"\\x3c/$1")},goog.needsTranspile_=function(a){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(goog.requiresTranspilation_||(goog.requiresTranspilation_=goog.createRequiresTranspilation_()),a in goog.requiresTranspilation_)return goog.requiresTranspilation_[a];throw Error("Unknown language mode: "+a)},goog.requiresTranspilation_=null,goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(a,b){return"complete"==a.readyState&&goog.lastNonModuleScriptIndex_==b&&goog.loadQueuedModules_(),!0},goog.writeScripts_=function(a){var c=[],d={},e=goog.dependencies_;!function b(a){if(!(a in e.written||a in e.visited)){if(e.visited[a]=!0,a in e.requires)for(var f in e.requires[a])if(!goog.isProvided_(f)){if(!(f in e.nameToPath))throw Error("Undefined nameToPath for "+f);b(e.nameToPath[f])}a in d||(d[a]=!0,c.push(a))}}(a);for(var f=0;f<c.length;f++)a=c[f],goog.dependencies_.written[a]=!0;var g=goog.moduleLoaderState_;for(goog.moduleLoaderState_=null,f=0;f<c.length;f++){if(!(a=c[f]))throw goog.moduleLoaderState_=g,Error("Undefined script input");var h=e.loadFlags[a]||{},k=goog.needsTranspile_(h.lang||"es3");"goog"==h.module||k?goog.importProcessedScript_(goog.basePath+a,"goog"==h.module,k):goog.importScript_(goog.basePath+a)}goog.moduleLoaderState_=g},goog.getPathFromDeps_=function(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+"deps.js")),goog.hasBadLetScoping=null,goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(b){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping},goog.workaroundSafari10EvalBug=function(a){return"(function(){"+a+"\n;})();\n"},goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{if(goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1},goog.isFunction(a))var c=a.call(void 0,{});else{if(!goog.isString(a))throw Error("Invalid module definition");goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a)}var d=goog.moduleLoaderState_.moduleName;if(!goog.isString(d)||!d)throw Error('Invalid module name "'+d+'"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]=c}finally{goog.moduleLoaderState_=b}},goog.loadModuleFromSource_=function(a){return eval(a),{}},goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")},goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;return b.open("get",a,!1),b.send(),0==b.status||200==b.status?b.responseText:null}catch(c){return null}},goog.retrieveAndExec_=function(a,b,c){if(!COMPILED){var d=a;a=goog.normalizePath_(a);var e=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,f=goog.loadFileSync_(a);if(null==f)throw Error('Load of "'+a+'" failed');c&&(f=goog.transpile_.call(goog.global,f,a)),f=b?goog.wrapModule_(a,f):f+"\n//# sourceURL="+a,goog.IS_OLD_IE_&&goog.oldIeWaiting_?(goog.dependencies_.deferred[d]=f,goog.queuedModules_.push(d)):e(a,f)}},goog.transpile_=function(a,b){var c=goog.global.$jscomp;c||(goog.global.$jscomp=c={});var d=c.transpile;if(!d){var e=goog.basePath+goog.TRANSPILER,f=goog.loadFileSync_(e);if(f){if(eval(f+"\n//# sourceURL="+e),goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile,c=goog.global.$jscomp,d=c.transpile}}return d||(d=c.transpile=function(a,b){return goog.logToConsole_(b+" requires transpilation but no transpiler was found."),a}),d(a,b)},goog.typeOf=function(a){var b=typeof a;if("object"==b){if(!a)return"null";if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&void 0!==a.splice&&void 0!==a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||void 0!==a.call&&void 0!==a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else if("function"==b&&void 0===a.call)return"object";return b},goog.isNull=function(a){return null===a},goog.isDefAndNotNull=function(a){return null!=a},goog.isArray=function(a){return"array"==goog.typeOf(a)},goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length},goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear},goog.isFunction=function(a){return"function"==goog.typeOf(a)},goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b},goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]},goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}},goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(a){if("object"==(b=goog.typeOf(a))||"array"==b){if(a.clone)return a.clone();var c,b="array"==b?[]:{};for(c in a)b[c]=goog.cloneObject(a[c]);return b}return a},goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)},goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(c,d),a.apply(b,c)}}return function(){return a.apply(b,arguments)}},goog.bind=function(a,b,c){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();return b.push.apply(b,arguments),a.apply(this,b)}},goog.mixin=function(a,b){for(var c in b)a[c]=b[c]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else{if(!goog.global.eval)throw Error("goog.globalEval not available");if(null==goog.evalWorksForGlobals_)if(goog.global.eval("var _evalTest_ = 1;"),void 0!==goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript",c.defer=!1,c.appendChild(b.createTextNode(a)),b.body.appendChild(c),b.body.removeChild(c)}}},goog.evalWorksForGlobals_=null,goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};return a=b?a+"-"+d(b):d(a),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a},goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a,goog.cssNameMappingStyle_=b},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(a,b){return b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a})),a},goog.getMsgWithFallback=function(a,b){return a},goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)},goog.exportProperty=function(a,b,c){a[b]=c},goog.inherits=function(a,b){function c(){}c.prototype=b.prototype,a.superClass_=b.prototype,a.prototype=new c,a.prototype.constructor=a,a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}},goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}for(e=Array(arguments.length-2),f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor;g;g=g.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name")},goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a goog.module.");a.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;return c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),c=goog.defineClass.createSealingConstructor_(c,a),a&&goog.inherits(c,a),delete b.constructor,delete b.statics,goog.defineClass.applyProperties_(c.prototype,b),null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d)),c},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;return b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_],this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b),b};return d},goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])},goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)},goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable",goog.createRequiresTranspilation_=function(){function a(a,b){d?c[a]=!0:b()?c[a]=!1:d=c[a]=!0}function b(a){try{return!!eval(a)}catch(g){return!1}}var c={es3:!1},d=!1,e=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";return a("es5",function(){return b("[1,].length==1")}),a("es6",function(){var a=e.match(/Edge\/(\d+)(\.\d)*/i);return!(a&&15>Number(a[1]))&&b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')}),a("es6-impl",function(){return!0}),a("es7",function(){return b("2 ** 2 == 4")}),a("es8",function(){return b("async () => 1, true")}),c},goog.math={},goog.math.Integer=function(a,b){this.bits_=[],this.sign_=b;for(var c=!0,d=a.length-1;0<=d;d--){var e=0|a[d];c&&e==b||(this.bits_[d]=e,c=!1)}},goog.math.Integer.IntCache_={},goog.math.Integer.fromInt=function(a){if(-128<=a&&128>a){var b=goog.math.Integer.IntCache_[a];if(b)return b}return b=new goog.math.Integer([0|a],0>a?-1:0),-128<=a&&128>a&&(goog.math.Integer.IntCache_[a]=b),b},goog.math.Integer.fromNumber=function(a){if(isNaN(a)||!isFinite(a))return goog.math.Integer.ZERO;if(0>a)return goog.math.Integer.fromNumber(-a).negate();for(var b=[],c=1,d=0;a>=c;d++)b[d]=a/c|0,c*=goog.math.Integer.TWO_PWR_32_DBL_;return new goog.math.Integer(b,0)},goog.math.Integer.fromBits=function(a){return new goog.math.Integer(a,-2147483648&a[a.length-1]?-1:0)},goog.math.Integer.fromString=function(a,b){if(0==a.length)throw Error("number format error: empty string");if(2>(b=b||10)||36<b)throw Error("radix out of range: "+b);if("-"==a.charAt(0))return goog.math.Integer.fromString(a.substring(1),b).negate();if(0<=a.indexOf("-"))throw Error('number format error: interior "-" character');for(var c=goog.math.Integer.fromNumber(Math.pow(b,8)),d=goog.math.Integer.ZERO,e=0;e<a.length;e+=8){var f=Math.min(8,a.length-e),g=parseInt(a.substring(e,e+f),b);8>f?(f=goog.math.Integer.fromNumber(Math.pow(b,f)),d=d.multiply(f).add(goog.math.Integer.fromNumber(g))):d=(d=d.multiply(c)).add(goog.math.Integer.fromNumber(g))}return d},goog.math.Integer.TWO_PWR_32_DBL_=4294967296,goog.math.Integer.ZERO=goog.math.Integer.fromInt(0),goog.math.Integer.ONE=goog.math.Integer.fromInt(1),goog.math.Integer.TWO_PWR_24_=goog.math.Integer.fromInt(16777216),goog.math.Integer.prototype.toInt=function(){return 0<this.bits_.length?this.bits_[0]:this.sign_},goog.math.Integer.prototype.toNumber=function(){if(this.isNegative())return-this.negate().toNumber();for(var a=0,b=1,c=0;c<this.bits_.length;c++)a+=this.getBitsUnsigned(c)*b,b*=goog.math.Integer.TWO_PWR_32_DBL_;return a},goog.math.Integer.prototype.toString=function(a){if(2>(a=a||10)||36<a)throw Error("radix out of range: "+a);if(this.isZero())return"0";if(this.isNegative())return"-"+this.negate().toString(a);for(var b=goog.math.Integer.fromNumber(Math.pow(a,6)),c=this,d="";;){var e=c.divide(b),f=(c.subtract(e.multiply(b)).toInt()>>>0).toString(a);if((c=e).isZero())return f+d;for(;6>f.length;)f="0"+f;d=""+f+d}},goog.math.Integer.prototype.getBits=function(a){return 0>a?0:a<this.bits_.length?this.bits_[a]:this.sign_},goog.math.Integer.prototype.getBitsUnsigned=function(a){return 0<=(a=this.getBits(a))?a:goog.math.Integer.TWO_PWR_32_DBL_+a},goog.math.Integer.prototype.getSign=function(){return this.sign_},goog.math.Integer.prototype.isZero=function(){if(0!=this.sign_)return!1;for(var a=0;a<this.bits_.length;a++)if(0!=this.bits_[a])return!1;return!0},goog.math.Integer.prototype.isNegative=function(){return-1==this.sign_},goog.math.Integer.prototype.isOdd=function(){return 0==this.bits_.length&&-1==this.sign_||0<this.bits_.length&&0!=(1&this.bits_[0])},goog.math.Integer.prototype.equals=function(a){if(this.sign_!=a.sign_)return!1;for(var b=Math.max(this.bits_.length,a.bits_.length),c=0;c<b;c++)if(this.getBits(c)!=a.getBits(c))return!1;return!0},goog.math.Integer.prototype.notEquals=function(a){return!this.equals(a)},goog.math.Integer.prototype.greaterThan=function(a){return 0<this.compare(a)},goog.math.Integer.prototype.greaterThanOrEqual=function(a){return 0<=this.compare(a)},goog.math.Integer.prototype.lessThan=function(a){return 0>this.compare(a)},goog.math.Integer.prototype.lessThanOrEqual=function(a){return 0>=this.compare(a)},goog.math.Integer.prototype.compare=function(a){return(a=this.subtract(a)).isNegative()?-1:a.isZero()?0:1},goog.math.Integer.prototype.shorten=function(a){var b=a-1>>5;a=(a-1)%32;for(var c=[],d=0;d<b;d++)c[d]=this.getBits(d);d=31==a?4294967295:(1<<a+1)-1;var e=this.getBits(b)&d;return e&1<<a?(c[b]=e|4294967295-d,new goog.math.Integer(c,-1)):(c[b]=e,new goog.math.Integer(c,0))},goog.math.Integer.prototype.negate=function(){return this.not().add(goog.math.Integer.ONE)},goog.math.Integer.prototype.add=function(a){for(var b=Math.max(this.bits_.length,a.bits_.length),c=[],d=0,e=0;e<=b;e++){var f=this.getBits(e)>>>16,g=65535&this.getBits(e),h=a.getBits(e)>>>16;d=(f=((g=d+g+(65535&a.getBits(e)))>>>16)+f+h)>>>16,g=65535&g,f=65535&f;c[e]=f<<16|g}return goog.math.Integer.fromBits(c)},goog.math.Integer.prototype.subtract=function(a){return this.add(a.negate())},goog.math.Integer.prototype.multiply=function(a){if(this.isZero()||a.isZero())return goog.math.Integer.ZERO;if(this.isNegative())return a.isNegative()?this.negate().multiply(a.negate()):this.negate().multiply(a).negate();if(a.isNegative())return this.multiply(a.negate()).negate();if(this.lessThan(goog.math.Integer.TWO_PWR_24_)&&a.lessThan(goog.math.Integer.TWO_PWR_24_))return goog.math.Integer.fromNumber(this.toNumber()*a.toNumber());for(var b=this.bits_.length+a.bits_.length,c=[],d=0;d<2*b;d++)c[d]=0;for(d=0;d<this.bits_.length;d++)for(var e=0;e<a.bits_.length;e++){var f=this.getBits(d)>>>16,g=65535&this.getBits(d),h=a.getBits(e)>>>16,k=65535&a.getBits(e);c[2*d+2*e]+=g*k,goog.math.Integer.carry16_(c,2*d+2*e),c[2*d+2*e+1]+=f*k,goog.math.Integer.carry16_(c,2*d+2*e+1),c[2*d+2*e+1]+=g*h,goog.math.Integer.carry16_(c,2*d+2*e+1),c[2*d+2*e+2]+=f*h,goog.math.Integer.carry16_(c,2*d+2*e+2)}for(d=0;d<b;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=b;d<2*b;d++)c[d]=0;return new goog.math.Integer(c,0)},goog.math.Integer.carry16_=function(a,b){for(;(65535&a[b])!=a[b];)a[b+1]+=a[b]>>>16,a[b]&=65535,b++},goog.math.Integer.prototype.slowDivide_=function(a){if(this.isNegative()||a.isNegative())throw Error("slowDivide_ only works with positive integers.");for(var b=goog.math.Integer.ONE;a.lessThanOrEqual(this);)b=b.shiftLeft(1),a=a.shiftLeft(1);var c=b.shiftRight(1),d=a.shiftRight(1);for(a=a.shiftRight(2),b=b.shiftRight(2);!a.isZero();){var e=d.add(a);e.lessThanOrEqual(this)&&(c=c.add(b),d=e),a=a.shiftRight(1),b=b.shiftRight(1)}return c},goog.math.Integer.prototype.divide=function(a){if(a.isZero())throw Error("division by zero");if(this.isZero())return goog.math.Integer.ZERO;if(this.isNegative())return a.isNegative()?this.negate().divide(a.negate()):this.negate().divide(a).negate();if(a.isNegative())return this.divide(a.negate()).negate();if(30<this.bits_.length)return this.slowDivide_(a);for(var b=goog.math.Integer.ZERO,c=this;c.greaterThanOrEqual(a);){for(var d=Math.max(1,Math.floor(c.toNumber()/a.toNumber())),e=48>=(e=Math.ceil(Math.log(d)/Math.LN2))?1:Math.pow(2,e-48),f=goog.math.Integer.fromNumber(d),g=f.multiply(a);g.isNegative()||g.greaterThan(c);)d-=e,g=(f=goog.math.Integer.fromNumber(d)).multiply(a);f.isZero()&&(f=goog.math.Integer.ONE),b=b.add(f),c=c.subtract(g)}return b},goog.math.Integer.prototype.modulo=function(a){return this.subtract(this.divide(a).multiply(a))},goog.math.Integer.prototype.not=function(){for(var a=this.bits_.length,b=[],c=0;c<a;c++)b[c]=~this.bits_[c];return new goog.math.Integer(b,~this.sign_)},goog.math.Integer.prototype.and=function(a){for(var b=Math.max(this.bits_.length,a.bits_.length),c=[],d=0;d<b;d++)c[d]=this.getBits(d)&a.getBits(d);return new goog.math.Integer(c,this.sign_&a.sign_)},goog.math.Integer.prototype.or=function(a){for(var b=Math.max(this.bits_.length,a.bits_.length),c=[],d=0;d<b;d++)c[d]=this.getBits(d)|a.getBits(d);return new goog.math.Integer(c,this.sign_|a.sign_)},goog.math.Integer.prototype.xor=function(a){for(var b=Math.max(this.bits_.length,a.bits_.length),c=[],d=0;d<b;d++)c[d]=this.getBits(d)^a.getBits(d);return new goog.math.Integer(c,this.sign_^a.sign_)},goog.math.Integer.prototype.shiftLeft=function(a){var b=a>>5;a%=32;for(var c=this.bits_.length+b+(0<a?1:0),d=[],e=0;e<c;e++)d[e]=0<a?this.getBits(e-b)<<a|this.getBits(e-b-1)>>>32-a:this.getBits(e-b);return new goog.math.Integer(d,this.sign_)},goog.math.Integer.prototype.shiftRight=function(a){var b=a>>5;a%=32;for(var c=this.bits_.length-b,d=[],e=0;e<c;e++)d[e]=0<a?this.getBits(e+b)>>>a|this.getBits(e+b+1)<<32-a:this.getBits(e+b);return new goog.math.Integer(d,this.sign_)},goog.reflect={},goog.reflect.object=function(a,b){return b},goog.reflect.objectProperty=function(a,b){return a},goog.reflect.sinkValue=function(a){return goog.reflect.sinkValue[" "](a),a},goog.reflect.sinkValue[" "]=goog.nullFunction,goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return!1},goog.reflect.cache=function(a,b,c,d){return d=d?d(b):b,Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)},goog.object={},goog.object.is=function(a,b){return a===b?0!==a||1/a==1/b:a!=a&&b!=b},goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)},goog.object.filter=function(a,b,c){var e,d={};for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d},goog.object.map=function(a,b,c){var e,d={};for(e in a)d[e]=b.call(c,a[e],e,a);return d},goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1},goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0},goog.object.getCount=function(a){var c,b=0;for(c in a)b++;return b},goog.object.getAnyKey=function(a){for(var b in a)return b},goog.object.getAnyValue=function(a){for(var b in a)return a[b]},goog.object.contains=function(a,b){return goog.object.containsValue(a,b)},goog.object.getValues=function(a){var d,b=[],c=0;for(d in a)b[c++]=a[d];return b},goog.object.getKeys=function(a){var d,b=[],c=0;for(d in a)b[c++]=d;return b},goog.object.getValueByKeys=function(a,b){for(var d=(c=goog.isArrayLike(b))?b:arguments,c=c?0:1;c<d.length&&(a=a[d[c]],goog.isDef(a));c++);return a},goog.object.containsKey=function(a,b){return null!==a&&b in a},goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1},goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d},goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]},goog.object.isEmpty=function(a){for(var b in a)return!1;return!0},goog.object.clear=function(a){for(var b in a)delete a[b]},goog.object.remove=function(a,b){var c;return(c=b in a)&&delete a[b],c},goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)},goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c},goog.object.set=function(a,b,c){a[b]=c},goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c},goog.object.setWithReturnValueIfNotSet=function(a,b,c){return b in a?a[b]:(c=c(),a[b]=c)},goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0},goog.object.clone=function(a){var c,b={};for(c in a)b[c]=a[c];return b},goog.object.unsafeClone=function(a){if("object"==(b=goog.typeOf(a))||"array"==b){if(goog.isFunction(a.clone))return a.clone();var c,b="array"==b?[]:{};for(c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a},goog.object.transpose=function(a){var c,b={};for(c in a)b[a[c]]=c;return b},goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){for(c in d=arguments[e])a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}},goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c},goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c},goog.object.createImmutableView=function(a){var b=a;return Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b)),b},goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)},goog.object.getAllPropertyNames=function(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);for(var d={};a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){for(var e=Object.getOwnPropertyNames(a),f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return goog.object.getKeys(d)},goog.string={},goog.string.DETECT_DOUBLE_ESCAPING=!1,goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1,goog.string.Unicode={NBSP:" "},goog.string.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)},goog.string.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c},goog.string.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(0,b.length))},goog.string.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))},goog.string.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()},goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")},goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")},goog.string.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)},goog.string.isEmptyString=function(a){return 0==a.length},goog.string.isEmpty=goog.string.isEmptyOrWhitespace,goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))},goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe,goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)},goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)},goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)},goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)},goog.string.isSpace=function(a){return" "==a},goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||""<=a&&"�">=a},goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")},goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")},goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")},goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")},goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")},goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")},goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")},goog.string.caseInsensitiveCompare=function(a,b){return(a=String(a).toLowerCase())<(b=String(b).toLowerCase())?-1:a==b?0:1},goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1},goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)},goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)},goog.string.numerateCompare=goog.string.floatAwareCompare,goog.string.urlEncode=function(a){return encodeURIComponent(String(a))},goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))},goog.string.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")},goog.string.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;"),goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));else{if(!goog.string.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.AMP_RE_,"&amp;")),-1!=a.indexOf("<")&&(a=a.replace(goog.string.LT_RE_,"&lt;")),-1!=a.indexOf(">")&&(a=a.replace(goog.string.GT_RE_,"&gt;")),-1!=a.indexOf('"')&&(a=a.replace(goog.string.QUOT_RE_,"&quot;")),-1!=a.indexOf("'")&&(a=a.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;")),-1!=a.indexOf("\0")&&(a=a.replace(goog.string.NULL_RE_,"&#0;")),goog.string.DETECT_DOUBLE_ESCAPING&&-1!=a.indexOf("e")&&(a=a.replace(goog.string.E_RE_,"&#101;"))}return a},goog.string.AMP_RE_=/&/g,goog.string.LT_RE_=/</g,goog.string.GT_RE_=/>/g,goog.string.QUOT_RE_=/"/g,goog.string.SINGLE_QUOTE_RE_=/'/g,goog.string.NULL_RE_=/\x00/g,goog.string.E_RE_=/e/g,goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/,goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a},goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a},goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'},d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var e=c[a];return e||("#"==b.charAt(0)&&(b=Number("0"+b.substr(1)),isNaN(b)||(e=String.fromCharCode(b))),e||(d.innerHTML=a+" ",e=d.firstChild.nodeValue.slice(0,-1)),c[a]=e)})},goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case"amp":return"&";case"lt":return"<";case"gt":return">";case"quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?a:String.fromCharCode(c)}})},goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g,goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)},goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)},goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a},goog.string.truncate=function(a,b,c){return c&&(a=goog.string.unescapeEntities(a)),a.length>b&&(a=a.substring(0,b-3)+"..."),c&&(a=goog.string.htmlEscape(a)),a},goog.string.truncateMiddle=function(a,b,c,d){if(c&&(a=goog.string.unescapeEntities(a)),d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));return c&&(a=goog.string.htmlEscape(a)),a},goog.string.specialEscapeChars_={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"},goog.string.jsEscapeCache_={"'":"\\'"},goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}return b.push('"'),b.join("")},goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")},goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else 256>b?(c="\\x",(16>b||256<b)&&(c+="0")):(c="\\u",4096>b&&(c+="0")),c+=b.toString(16).toUpperCase();return goog.string.jsEscapeCache_[a]=c},goog.string.contains=function(a,b){return-1!=a.indexOf(b)},goog.string.caseInsensitiveContains=function(a,b){return goog.string.contains(a.toLowerCase(),b.toLowerCase())},goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0},goog.string.removeAt=function(a,b,c){var d=a;return 0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c)),d},goog.string.remove=function(a,b){return a.replace(b,"")},goog.string.removeAll=function(a,b){return b=new RegExp(goog.string.regExpEscape(b),"g"),a.replace(b,"")},goog.string.replaceAll=function(a,b,c){return b=new RegExp(goog.string.regExpEscape(b),"g"),a.replace(b,c.replace(/\$/g,"$$$$"))},goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)},goog.string.padNumber=function(a,b,c){return-1==(c=(a=goog.isDef(c)?a.toFixed(c):String(a)).indexOf("."))&&(c=a.length),goog.string.repeat("0",Math.max(0,b-c))+a},goog.string.makeSafe=function(a){return null==a?"":String(a)},goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")},goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)},goog.string.compareVersions=function(a,b){var c=0;a=goog.string.trim(String(a)).split("."),b=goog.string.trim(String(b)).split(".");for(var d=Math.max(a.length,b.length),e=0;0==c&&e<d;e++){var f=a[e]||"",g=b[e]||"";do{if(f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""],g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""],0==f[0].length&&0==g[0].length)break;c=0==f[1].length?0:parseInt(f[1],10);var h=0==g[1].length?0:parseInt(g[1],10);c=goog.string.compareElements_(c,h)||goog.string.compareElements_(0==f[2].length,0==g[2].length)||goog.string.compareElements_(f[2],g[2]),f=f[3],g=g[3]}while(0==c)}return c},goog.string.compareElements_=function(a,b){return a<b?-1:a>b?1:0},goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b},goog.string.uniqueStringCounter_=2147483648*Math.random()|0,goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++},goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b},goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)},goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)},goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})},goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()},goog.string.toTitleCase=function(a,b){return b=goog.isString(b)?goog.string.regExpEscape(b):"\\s",a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(a,b,e){return b+e.toUpperCase()})},goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()},goog.string.parseInt=function(a){return isFinite(a)&&(a=String(a)),goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN},goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;return a.length&&d.push(a.join(b)),d},goog.string.lastComponent=function(a,b){if(!b)return a;"string"==typeof b&&(b=[b]);for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)},goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]},goog.dom={},goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12},goog.debug={},goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a)),this.reportErrorToServer=!0},goog.inherits(goog.debug.Error,Error),goog.debug.Error.prototype.name="CustomError",goog.asserts={},goog.asserts.ENABLE_ASSERTS=goog.DEBUG,goog.asserts.AssertionError=function(a,b){b.unshift(a),goog.debug.Error.call(this,goog.string.subs.apply(null,b)),b.shift(),this.messagePattern=a},goog.inherits(goog.asserts.AssertionError,goog.debug.Error),goog.asserts.AssertionError.prototype.name="AssertionError",goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a},goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER,goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]),goog.asserts.errorHandler_(a)},goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)},goog.asserts.assert=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))},goog.asserts.assertNumber=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertString=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertFunction=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertObject=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertArray=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertBoolean=function(a,b,c){return goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertElement=function(a,b,c){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2)),a},goog.asserts.assertInstanceof=function(a,b,c,d){return!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3)),a},goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")},goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a},goog.array={},goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE,goog.array.ASSUME_NATIVE_FUNCTIONS=!1,goog.array.peek=function(a){return a[a.length-1]},goog.array.last=goog.array.peek,goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){if(c=null==c?0:0>c?Math.max(0,a.length+c):c,goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){if(0>(c=null==c?a.length-1:c)&&(c=Math.max(0,a.length+c)),goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1},goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length),Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},goog.array.forEachRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(d=d-1;0<=d;--d)d in e&&b.call(c,e[d],d,a)},goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e},goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){return goog.asserts.assert(null!=a.length),d&&(b=goog.bind(b,d)),Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;return goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)}),e},goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){return goog.asserts.assert(null!=a.length),goog.asserts.assert(null!=b),d&&(b=goog.bind(b,d)),Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;return goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)}),e},goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1},goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){return goog.asserts.assert(null!=a.length),Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0},goog.array.count=function(a,b,c){var d=0;return goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c),d},goog.array.find=function(a,b,c){return 0>(b=goog.array.findIndex(a,b,c))?null:goog.isString(a)?a.charAt(b):a[b]},goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1},goog.array.findRight=function(a,b,c){return 0>(b=goog.array.findIndexRight(a,b,c))?null:goog.isString(a)?a.charAt(b):a[b]},goog.array.findIndexRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(d=d-1;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1},goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)},goog.array.isEmpty=function(a){return 0==a.length},goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0},goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)},goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)},goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)},goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)},goog.array.remove=function(a,b){var c;return(c=0<=(b=goog.array.indexOf(a,b)))&&goog.array.removeAt(a,b),c},goog.array.removeLast=function(a,b){return 0<=(b=goog.array.lastIndexOf(a,b))&&(goog.array.removeAt(a,b),!0)},goog.array.removeAt=function(a,b){return goog.asserts.assert(null!=a.length),1==Array.prototype.splice.call(a,b,1).length},goog.array.removeIf=function(a,b,c){return 0<=(b=goog.array.findIndex(a,b,c))&&(goog.array.removeAt(a,b),!0)},goog.array.removeAllIf=function(a,b,c){var d=0;return goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++}),d},goog.array.concat=function(a){return Array.prototype.concat.apply([],arguments)},goog.array.join=function(a){return Array.prototype.concat.apply([],arguments)},goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]},goog.array.clone=goog.array.toArray,goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}},goog.array.splice=function(a,b,c,d){return goog.asserts.assert(null!=a.length),Array.prototype.splice.apply(a,goog.array.slice(arguments,1))},goog.array.slice=function(a,b,c){return goog.asserts.assert(null!=a.length),2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)},goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e},goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)},goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)},goog.array.binarySearch_=function(a,b,c,d,e){for(var h,f=0,g=a.length;f<g;){var k=f+g>>1,l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f},goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)},goog.array.stableSort=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||goog.array.defaultCompare;for(goog.array.sort(c,function(a,b){return e(a.value,b.value)||a.index-b.index}),d=0;d<a.length;d++)a[d]=c[d].value},goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})},goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)},goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0},goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0},goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)},goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0},goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)},goog.array.defaultCompareEquality=function(a,b){return a===b},goog.array.binaryInsert=function(a,b,c){return 0>(c=goog.array.binarySearch(a,b,c))&&(goog.array.insertAt(a,b,-(c+1)),!0)},goog.array.binaryRemove=function(a,b,c){return 0<=(b=goog.array.binarySearch(a,b,c))&&goog.array.removeAt(a,b)},goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d},goog.array.toObject=function(a,b,c){var d={};return goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e}),d},goog.array.range=function(a,b,c){var d=[],e=0,f=a;if(void 0!==b&&(e=a,f=b),0>(c=c||1)*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d},goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c},goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192)for(var f=goog.array.slice(d,e,e+8192),g=(f=goog.array.flatten.apply(null,f),0);g<f.length;g++)b.push(f[g]);else b.push(d)}return b},goog.array.rotate=function(a,b){return goog.asserts.assert(null!=a.length),a.length&&(0<(b%=a.length)?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b))),a},goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length),goog.asserts.assert(0<=c&&c<a.length),b=Array.prototype.splice.call(a,b,1),Array.prototype.splice.call(a,c,0,b[0])},goog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b},goog.array.shuffle=function(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d],a[d]=e}},goog.array.copyByIndex=function(a,b){var c=[];return goog.array.forEach(b,function(b){c.push(a[b])}),c},goog.array.concatMap=function(a,b,c){return goog.array.concat.apply([],goog.array.map(a,b,c))},goog.net={},goog.net.IpAddress=function(a,b){this.ip_=a,this.version_=b},goog.net.IpAddress.prototype.getVersion=function(){return this.version_},goog.net.IpAddress.prototype.equals=function(a){return this.version_==a.getVersion()&&this.ip_.equals(a.toInteger())},goog.net.IpAddress.prototype.toInteger=function(){return goog.object.clone(this.ip_)},goog.net.IpAddress.prototype.toUriString=goog.abstractMethod,goog.net.IpAddress.prototype.toString=goog.abstractMethod,goog.net.IpAddress.prototype.isSiteLocal=goog.abstractMethod,goog.net.IpAddress.prototype.isLinkLocal=goog.abstractMethod,goog.net.IpAddress.fromString=function(a){try{return-1!=a.indexOf(":")?new goog.net.Ipv6Address(a):new goog.net.Ipv4Address(a)}catch(b){return null}},goog.net.IpAddress.fromUriString=function(a){try{return goog.string.startsWith(a,"[")&&goog.string.endsWith(a,"]")?new goog.net.Ipv6Address(a.substring(1,a.length-1)):new goog.net.Ipv4Address(a)}catch(b){return null}},goog.net.Ipv4Address=function(a){this.ipStr_=null;var b=goog.math.Integer.ZERO;if(a instanceof goog.math.Integer){if(0!=a.getSign()||a.lessThan(goog.math.Integer.ZERO)||a.greaterThan(goog.net.Ipv4Address.MAX_ADDRESS_))throw Error("The address does not look like an IPv4.");b=goog.object.clone(a)}else{if(!goog.net.Ipv4Address.REGEX_.test(a))throw Error(a+" does not look like an IPv4 address.");var c=a.split(".");if(4!=c.length)throw Error(a+" does not look like an IPv4 address.");for(var d=0;d<c.length;d++){var e=goog.string.toNumber(c[d]);if(isNaN(e)||0>e||255<e||1!=c[d].length&&goog.string.startsWith(c[d],"0"))throw Error("In "+a+", octet "+d+" is not valid");e=goog.math.Integer.fromNumber(e),b=b.shiftLeft(8).or(e)}}goog.net.IpAddress.call(this,b,4)},goog.inherits(goog.net.Ipv4Address,goog.net.IpAddress),goog.net.Ipv4Address.REGEX_=/^[0-9.]*$/,goog.net.Ipv4Address.MAX_NETMASK_LENGTH=32,goog.net.Ipv4Address.MAX_ADDRESS_=goog.math.Integer.ONE.shiftLeft(goog.net.Ipv4Address.MAX_NETMASK_LENGTH).subtract(goog.math.Integer.ONE),goog.net.Ipv4Address.prototype.toString=function(){if(this.ipStr_)return this.ipStr_;for(var a=this.ip_.getBitsUnsigned(0),b=[],c=3;0<=c;c--)b[c]=String(255&a),a>>>=8;return this.ipStr_=b.join(".")},goog.net.Ipv4Address.prototype.toUriString=function(){return this.toString()},goog.net.Ipv4Address.prototype.isSiteLocal=function(){var a=this.ip_.toInt();return 10==(a>>>24&255)||172==(a>>>24&255)&&16==(a>>>16&240)||192==(a>>>24&255)&&168==(a>>>16&255)},goog.net.Ipv4Address.prototype.isLinkLocal=function(){var a=this.ip_.toInt();return 169==(a>>>24&255)&&254==(a>>>16&255)},goog.net.Ipv6Address=function(a){this.ipStr_=null;var b=goog.math.Integer.ZERO;if(a instanceof goog.math.Integer){if(0!=a.getSign()||a.lessThan(goog.math.Integer.ZERO)||a.greaterThan(goog.net.Ipv6Address.MAX_ADDRESS_))throw Error("The address does not look like a valid IPv6.");b=goog.object.clone(a)}else{if(!goog.net.Ipv6Address.REGEX_.test(a))throw Error(a+" is not a valid IPv6 address.");var c=a.split(":");-1!=c[c.length-1].indexOf(".")&&(a=goog.net.Ipv6Address.dottedQuadtoHextets_(c[c.length-1]),goog.array.removeAt(c,c.length-1),goog.array.extend(c,a),a=c.join(":"));var d=a.split("::");if(2<d.length||1==d.length&&8!=c.length)throw Error(a+" is not a valid IPv6 address.");if(8!=(c=1<d.length?goog.net.Ipv6Address.explode_(d):c).length)throw Error(a+" is not a valid IPv6 address");for(d=0;d<c.length;d++){var e=goog.math.Integer.fromString(c[d],16);if(e.lessThan(goog.math.Integer.ZERO)||e.greaterThan(goog.net.Ipv6Address.MAX_HEXTET_VALUE_))throw Error(c[d]+" in "+a+" is not a valid hextet.");b=b.shiftLeft(16).or(e)}}goog.net.IpAddress.call(this,b,6)},goog.inherits(goog.net.Ipv6Address,goog.net.IpAddress),goog.net.Ipv6Address.REGEX_=/^([a-fA-F0-9]*:){2}[a-fA-F0-9:.]*$/,goog.net.Ipv6Address.MAX_NETMASK_LENGTH=128,goog.net.Ipv6Address.MAX_HEXTET_VALUE_=goog.math.Integer.fromInt(65535),goog.net.Ipv6Address.MAX_ADDRESS_=goog.math.Integer.ONE.shiftLeft(goog.net.Ipv6Address.MAX_NETMASK_LENGTH).subtract(goog.math.Integer.ONE),goog.net.Ipv6Address.prototype.toString=function(){if(this.ipStr_)return this.ipStr_;for(var a=[],b=3;0<=b;b--){var c=this.ip_.getBitsUnsigned(b),d=65535&c;a.push((c>>>16).toString(16)),a.push(d.toString(16))}return a=goog.net.Ipv6Address.compress_(a),this.ipStr_=a.join(":")},goog.net.Ipv6Address.prototype.toUriString=function(){return"["+this.toString()+"]"},goog.net.Ipv6Address.prototype.isSiteLocal=function(){return 64768==(this.ip_.getBitsUnsigned(3)>>>16&65280)},goog.net.Ipv6Address.prototype.isLinkLocal=function(){return 65152==(this.ip_.getBitsUnsigned(3)>>>16&65472)},goog.net.Ipv6Address.explode_=function(a){var b=a[0].split(":");a=a[1].split(":"),1==b.length&&""==b[0]&&(b=[]),1==a.length&&""==a[0]&&(a=[]);var c=8-(b.length+a.length);return 1>c?[]:goog.array.join(b,goog.array.repeat("0",c),a)},goog.net.Ipv6Address.compress_=function(a){for(var b=-1,c=-1,d=0,e=0,f=0;f<a.length;f++)"0"==a[f]?(-1==c&&(c=f),++e>d&&(d=e,b=c)):(c=-1,e=0);return 0<d&&(b+d==a.length&&a.push(""),a.splice(b,d,""),0==b&&(a=[""].concat(a))),a},goog.net.Ipv6Address.dottedQuadtoHextets_=function(a){a=new goog.net.Ipv4Address(a).toInteger().getBitsUnsigned(0);var b=[];return b.push((a>>>16&65535).toString(16)),b.push((65535&a).toString(16)),b},goog.net.Ipv6Address.prototype.isMappedIpv4Address=function(){return 0==this.ip_.getBitsUnsigned(3)&&0==this.ip_.getBitsUnsigned(2)&&65535==this.ip_.getBitsUnsigned(1)},goog.net.Ipv6Address.prototype.getMappedIpv4Address=function(){if(!this.isMappedIpv4Address())return null;var a=new goog.math.Integer([this.ip_.getBitsUnsigned(0)],0);return new goog.net.Ipv4Address(a)},this.goog=goog}).call(this)}).call(this,__webpack_require__(228))},,function(module,exports,__webpack_require__){"use strict";const isTop=window.top===window,isViewOnly=/(\?viewOnly|&viewOnly)/.test(window.location.search);if(isTop||isViewOnly){const angular=__webpack_require__(9),app=__webpack_require__(746);__webpack_require__(1154);const $html=angular.element(document.documentElement);angular.bootstrap($html,[app.name])}else window.addEventListener("load",function(){window.setTimeout(function(){var body=document.getElementsByTagName("body")[0];body.className="",body.innerHTML='<div class="error-message">Cannot embed page without the "viewOnly" search parameter</div>'},4e3)})},,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared){"use strict";var Notify=top.Notify?top.Notify:ftnt_shared.notify;return"Notify"in window||top==window||(window.Notify=Notify),Notify}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared){"use strict";var module={};module.commonRegExp={IP_SUBNET:ftnt_shared.IpMask.IPV4_SUBNET_EXPR,IP_AND_SUBNET:ftnt_shared.IpMask.IPV4_AND_SUBNET_EXPR,SUBNET:/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/((((254|252|248|240|224|192|128|0)\.0\.0\.0)|(255\.(254|252|248|240|224|192|128|0)\.0\.0)|(255\.255\.(254|252|248|240|224|192|128|0)\.0)|(255\.255\.255\.(255|254|252|248|240|224|192|128|0))|(3[0-2]|2[0-9]|1[0-9]|[0-9])))$/,XSS:/^[^<>()#'"]*$/,IP_HOST:ftnt_shared.IpMask.IPV4_ADDR_EXPR,IP_MASK:/^(((255|254|252|248|240|224|192|128|0)\.0\.0\.0)|(255\.(255|254|252|248|240|224|192|128)\.0\.0)|(255\.255\.(255|254|252|248|240|224|192|128)\.0)|(255\.255\.255\.(255|254|252|248|240|224|192|128|0)))$/,WILDCARD_MASK:/^(((255|127|63|31|15|7|3|1|0)\.255\.255\.255)|(0\.(255|127|63|31|15|7|3|1|0)\.255\.255)|(0\.0\.(255|127|63|31|15|7|3|1|0)\.255)|(0\.0\.0\.(255|127|63|31|15|7|3|1|0)))$/,IP_RANGE:ftnt_shared.IpMask.IPV4_RANGE,IP_RANGE_PACKET_CAPTURE:/^(([01]?\d\d?|2[0-4]\d|25[0-5]).){3}([01]?\d\d?|2[0-4]\d|25[0-5])-(([01]?\d\d?|2[0-4]\d|25[0-5]).){3}([01]?\d\d?|2[0-4]\d|25[0-5])$/,IP_RANGE_SPACES:ftnt_shared.IpMask.IPV4_RANGE_SPACES,IP_RANGE2:/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}\[(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])-(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\]/,IP_RANGE_L2TP:/^(((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){2})((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.)(25[0-4]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[1-9])-\1((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.)((25[0-4]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]))$/,IP_WILDCARD:/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}\*$/,IP6_HOST:ftnt_shared.IpMask.IPV6_HOST,IP6_HOST_NOT0:/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/,IP6_SUBNET:ftnt_shared.IpMask.IPV6_SUBNET,DOMAIN_NAME:/^([a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]\.){1,126}[a-zA-Z0-9]{1,63}$/,RATING_URL:/^((https?|s?ftp):\/\/)?(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|\/|\?)*)?$/i,MAC_ADDRESS:/^[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}$/,MULTICAST_IP_HOST:/^(2(2[4-9]|3[0-9]))\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,MULTICAST_IP_RANGE:/^(2(2[4-9]|3[0-9]))\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])-(2(2[4-9]|3[0-9]))\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,NAME_NODOLLAR:/^[^<>#()"'$][^<>#()"']*$|^$/,FQDN:/^([a-zA-Z0-9\-_]{1,63}\.?)+$/,FGT_FQDN:/(^([a-zA-Z0-9\-_]{1,63}\.?)+$)|([\*\?])/,FGT_HOSTNAME:/^[a-zA-Z0-9\-_]{1,35}$/,FGT_DNS_NAME:/^([a-zA-Z0-9\-_]{1,63}\.?)+$/,FGT_DNS_ENTRY_HOSTNAME:/^([a-zA-Z0-9\-_]{1,63}\.?)+|^@$/,FGT_DNS_ZONE_CONTACT:/^([a-zA-Z0-9\-_]{1,63}\.?)+(@)?([a-zA-Z0-9\-_]{1,63}\.?)+$/,NPU_VDLINK:/^npu\d+[-_]vlink$/,NPU_VDLINK_INTF:/^npu\d+[-_]vlink\d$/,INTERFACE_NAME:/^[^<>()#'":%]*$/,EMS_SERIAL_NUMBER:/^FCTEMS[0-9A-Z]{2}[0-9]{2}[0-9A-Z][0-9A-HJ-NP-Z]{5}$/,INTEGER:/^\d+$/,INTEGER_RANGE:/^\d+-\d+$/,HEX_CHARS:/\b(0x)?[0-9a-fA-F]+\b$/,URL_OPTIONAL_SCHEMA:/^((https?|s?ftp):\/\/)?(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|\/|\?)*)?$/,GLOBAL_PROFILE_NAME:/^g-.+$/,VDOM_PROFILE_NAME:/^(?!g-)/},module.re_escape=function(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},module.isEmptyMac=function(mac){return!mac||"00:00:00:00:00:00"===mac};var htmlStringOuter=function(self,target,inner){var _ref,current_substr,str_index,texts,targetlen=target.length,attr_re=/(?:title)=(?:"([^"\\]*(\\.[^"\\]*)*)"|\'([^\'\\]*(\\.[^\'\\]*)*)\')/g;if(self.indexOf("<")>=0&&target.indexOf("<")<0){for(var i=0,ii=(texts=self.split(/<.+?>/g)).length;i<ii&&(current_substr=texts[i],1);i++)if((str_index=current_substr.indexOf(target))>=0&&!1===inner(current_substr,str_index,targetlen))return;for(;null!=(_ref=attr_re.exec(self));)if((str_index=(current_substr=_ref[1]||_ref[3]||"").indexOf(target))>=0&&!1===inner(current_substr,str_index,targetlen))return}else(str_index=self.indexOf(target))>=0&&inner(self,str_index,targetlen)};return module.htmlStringContains=function(self,target){var matched=!1;return htmlStringOuter(self,target,function(){return matched=!0,!1}),matched},module.htmlStringSearch=function(self,target){var results=[];return htmlStringOuter(self,target,function(matchsource,index,matchlen){var result=[index,index+matchlen];result.source=matchsource,results.push(result)}),results},module.URL_STATUS={VALID:"url_status::VALID",SCHEMA_REQUIRED:"url_status::SCHEMA_REQUIRED",INVALID_SCHEMA:"url_status::INVALID_SCHEMA",PORT_NOT_NUMBER:"url_status::PORT_NOT_NUMBER",INVALID_IP6:"url_status::INVALID_IP6",INVALID_URL:"url_status::INVALID_URL"},module.validateUrl=function(url,requireSchema,pathOnly,allowedSchemas){var components,schema,authority,hasSchema,hasAuthority,hasPath,ip6,authorities,ip;if(!url)return module.URL_STATUS.VALID;if(!(components=url.split(/^(([^:\/?#]*):\/\/)?([^\/?#]*)?([^?#]*)(\?([^#]*))?(#(.*))?/)))return module.URL_STATUS.INVALID_URL;if(hasSchema=void 0!==(schema=components[2]),hasAuthority=void 0!==(authority=components[3]),hasPath=void 0!==components[4],requireSchema&&!hasSchema)return module.URL_STATUS.SCHEMA_REQUIRED;if(hasSchema&&!function(schema){return schema&&(allowedSchemas||["https","http"]).includes(schema.toLowerCase())}(schema))return module.URL_STATUS.INVALID_SCHEMA;if(hasAuthority){if(!(authorities=/(^\[([^\]]*)\]|^([^:]*))((:([0-9]+$)|$))/.exec(authority)))return module.URL_STATUS.PORT_NOT_NUMBER;if((ip6=authorities[2])&&(ip=ip6,!module.commonRegExp.IP6_HOST.test(ip)))return module.URL_STATUS.INVALID_IP6}return hasPath&&(ip6||pathOnly&&!hasAuthority)?/(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?/.test(url)?module.URL_STATUS.VALID:module.URL_STATUS.INVALID_URL:/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(url)?module.URL_STATUS.VALID:module.URL_STATUS.INVALID_URL},module.phoneNumberInputMask="?999-999-999999999",module.checkURL=(url=>{let valid="localhost"===url||module.commonRegExp.IP_HOST.test(url)||module.commonRegExp.IP6_HOST.test(url.slice(1,-1))&&"["===url.charAt(0)&&"]"===url.charAt(url.length-1);return valid||function(url){const components=url.split(/^(([^:/?#]*):\/\/)?([^/?#]*)?([^?#]*)(\?([^#]*))?(#(.*))?/),pathRegex=/(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?/,hasSchema=void 0!==components[2],hasAuthority=void 0!==components[3],hasPath=void 0!==components[4];if(hasSchema&&0!==["https","http"].indexOf(components[2].toLowerCase()))return!1;if(!hasAuthority&&hasPath)return pathRegex.test(url);return/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!$&'()*+,;=]|:|@)|\/|\?)*)?$/i.test(url)}(url)}),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular){return angular.module("ftnt",["ftnt-gui"])}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(10),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,$,BUILD){"use strict";if(top.fweb&&top.fweb.log)return top.fweb.log;var log=ftnt_shared.log,recording=!1,callbackID=0;return BUILD.CONFIG.CONFIG_DEBUG&&log.setLogLevel(ftnt_shared.log.LOG_LEVEL.INFO),log.initializeBackendRecording=function(){var queuedMessages=[],debouncedLog=ftnt_shared.util.debounce(1e3,function(){var messages;recording&&(messages=queuedMessages.map(function(message){var levelString;switch(message.level){case log.LOG_LEVEL.INFO:levelString="info";break;case log.LOG_LEVEL.WARN:levelString="warn";break;case log.LOG_LEVEL.ERROR:levelString="error"}return{level:levelString,message:message.getMessage(),stack:message.getShortStack()}}),$.post("/api/v2/monitor/system/debug",JSON.stringify({messages:messages})),queuedMessages=[])});callbackID=log.addCallback(function(message){queuedMessages.push(message),debouncedLog()}),recording=!0},log.stopBackendRecording=function(){log.removeCallback(callbackID),recording=!1},log}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(30),__webpack_require__(42),__webpack_require__(36),__webpack_require__(52),__webpack_require__(38),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fwebLog,fweb_location,fweb_select,fweb_uri,fweb_icon,ftnt_shared){"use strict";const Omniselect=ftnt_shared.Omniselect;var module={};module.elem=ftnt_shared.dom.elem,module.fragment=ftnt_shared.dom.fragment,module.getURIParamOnce=function(param){var alreadyChecked=fweb_location.get_cache("domURLParamOnce",{});return alreadyChecked[param]?void 0:(alreadyChecked[param]=!0,fweb_uri.urlParams()[param])},module.try_JSON_parse=function(x){try{return JSON.parse(x)}catch(e){}},module.serializeForm=function($form){var SINGULAR_VALUE={enable:!0,disable:!0},serialized={};return $form.serializeArray().forEach(function(field){var current=serialized[field.name];current&&!SINGULAR_VALUE[field.value]?(Array.isArray(current)||(serialized[field.name]=current=[current]),current.push(field.value)):serialized[field.name]=field.value}),serialized},module.showWaitWhile=function(promise){var $div=$('<div class="wait-while-loading"><div class="flexbox_center"><div class="loading_image"></div></div></div>'),$overlay=$('<div class="wait-while-loading-overlay"></div>');$div.appendTo("body"),$overlay.appendTo("body"),promise["function"==typeof promise.always?"always":"finally"](function(){$div.remove(),$overlay.remove()})},module.renderTemplate=function(template,context){return template.replace(/\{\{\s*([_$\w]+)\s*\}\}/g,function(match,key){if(!(key in context))throw new Error("renderTemplate tried to sub "+match+" but there is no matching member "+key+"in the context");return void 0===context[key]||null===context[key]?"":context[key]})},module.escapeHTML=ftnt_shared.dom.escapeHTML;var COMPARE_BAR=module.COMPARE_BAR={COLORS:ftnt_shared.formatters.COMPARE_BAR_COLOR};COMPARE_BAR.COLOR_SETTINGS={STANDARD:[COMPARE_BAR.COLORS.OCEAN_GREEN,COMPARE_BAR.COLORS.GREEN],BLOCKED_ALLOWED:[COMPARE_BAR.COLORS.RED,COMPARE_BAR.COLORS.GREEN],ERROR:[COMPARE_BAR.COLORS.BRIGHT_RED,COMPARE_BAR.COLORS.RED]};var compare_bar=module.compare_bar=function(params){var max=params.max;"function"==typeof max&&(max=max());var caption,summed=params.values.reduce(function(previous,current){return previous+current}),width=(summed/max*100).toFixed(0),colors=params.colors||COMPARE_BAR.COLOR_SETTINGS.STANDARD;caption=params.format_fn?params.format_fn.apply(params,[summed,params.values]):ftnt_shared.formatters.metricBytes(summed);var inner_style="width: "+width+"%;";summed||(inner_style+=" display: none;");var tooltip,html='<div class="compare-bar-container '+(params.class||"")+'">';if(params.lang_keys){var i,len=params.values.length,value_format=params.value_format||ftnt_shared.formatters.number;for(tooltip='<div class="f-qtip" style="display: none;"><table class="table key-value"><tbody>',i=0;i<len;i++)tooltip+="<tr><td>"+$.getInfo(params.lang_keys[i])+"</td><td>"+value_format(params.values[i]||0)+"</td></tr>";tooltip+="</tbody></table></div>"}return html+='<div class="compare-bar-caption">'+caption+"</div>",html+='<div class="compare-bar-outer'+(tooltip?" f-qtip-target":"")+'">',html+=tooltip||"",html+='<div class="compare-bar-inner" style="'+inner_style+'">',params.values.forEach(function(value,index){var valueClass="compare-bar-value",style="background-color: "+colors[index]+";";index===params.values.length-1?valueClass+=" grow":style+=" width: "+(value/summed*100).toFixed(0)+"%;",html+='<div class="'+valueClass+'" style="'+style+'"></div>'}),html+="</div></div></div>"};return module.create_compare_bar_qlist_formatter=function(max,format_fn,keys,colors,lang_keys,value_format){return function($td,column,row){1===(keys=keys||[void 0]).length&&void 0===keys[0]&&(keys[0]=column.selector);var values=keys.map(function(key){return row[key]});return compare_bar({max:"function"==typeof max?max(column.selector,row):max,format_fn:format_fn,values:values,colors:colors,class:column.class||"",row:row,lang_keys:lang_keys||keys,value_format:value_format})}},module.create_compare_bar_on_tooltip=function(entry,params){var values=(params.keys||[]).map(function(key){return entry[key]||0}),max=values.reduce(function(current,previous){return current+previous},0);if((params.keys||[]).some(function(key){return null!=entry[key]}))return module.compare_bar({max:max,values:values,colors:params.colors,format_fn:params.format_fn,class:"caption-align-left"})},module.clearTextSelection=function(){var selection;(selection="function"==typeof window.getSelection?window.getSelection():document.selection)&&("function"==typeof selection.empty?selection.empty():"function"==typeof selection.removeAllRanges&&selection.removeAllRanges())},module.mask_content=function($content,enable,mask_html){mask_html=mask_html||'<f-icon class="fa-loading"></f-icon>',enable?$content.addClass("masked-content").append('<div class="content-mask flex-centered">'+mask_html+"</div>"):$content.removeClass("masked-content").find(".content-mask").remove()},module.addStyle=function(src,reload){var exists;if($('link[type="text/css"]').each(function(){var $this=$(this);if(exists=$this.attr("href")===src)return reload&&$this.remove(),!1}),!exists||reload){var style=document.createElement("link");$(style).attr("type","text/css"),$(style).attr("rel","stylesheet"),$(style).attr("href",src),$("head")[0].appendChild(style)}},module.formatObject=function(params){var object,formatted,$element=$(params.element),mkey=params.mkey||$element.data("mkey"),datasource=params.datasource||$element.data("datasource"),csfPath=params.csfPath||$element.data("csf-path");csfPath&&(datasource=fweb_select.getCSFProxySourceID(datasource,csfPath)),object={q_origin_key:mkey,datasource:datasource};try{formatted=Omniselect.processedFormatEntrySync(object),$element.html(formatted)}catch(e){$element.html('<f-icon class="fa-loading"></f-icon>'),Omniselect.processedFormatEntry(object).then(function(html){$element.html(html)},function(){$element.html("")})}},module.setupObjectTooltip=function(params){var tooltip,$element=$(params.element),mkey=params.mkey||$element.data("mkey"),datasource=params.datasource||$element.data("datasource");if(mkey&&datasource){var csfPath=params.csfPath||$element.data("csf-path"),tooltipHint=null==params.tooltipHint||params.tooltipHint,$content=$('<div><f-icon class="fa-loading"></f-icon><span>'+$.getInfo("Loading")+"</span></div>"),alreadyRendered=!1,lastSearchValue=null,displayOptions={showDelay:!0};displayOptions.fixed="boolean"!=typeof params.tooltipFixed||params.tooltipFixed;var omniselectSource=Omniselect.prototype.SOURCES[datasource],shouldCacheTooltip=!omniselectSource.dontCache&&(!omniselectSource.tooltipData||omniselectSource.cacheTooltipData);return csfPath&&(datasource=fweb_select.getCSFProxySourceID(datasource,csfPath)),tooltipHint&&$element.addClass("tooltip-hint"),$element.ftip({content:$content,options:displayOptions,manualCleanup:params.manualCleanup,targetWindow:params.targetWindow,onShow:function(){var args=[{q_origin_key:mkey,datasource:datasource},null],searchValue=params.searchValue||null;alreadyRendered&&!(lastSearchValue!==searchValue)||(searchValue&&args.push(searchValue),Omniselect.processedFormatEntryTooltip.apply(Omniselect,args).then(function(element){displayOptions.padContent=!1,tooltip.setDisplayOptions(displayOptions),$content.empty().append(element)},function(error){var text=params.failureText||$.getInfo("Failed to retrieve info");$content.html('<f-icon class="fa-warning"></f-icon><span>'+text+"</span>"),fwebLog.error("Failed to render tooltip: ",error)}),shouldCacheTooltip&&(alreadyRendered=!0)),lastSearchValue=searchValue},onHide:function(){shouldCacheTooltip||$content.empty().append(module.elem("f-icon",{className:"fa-loading"}))}}),tooltip=$element.ftip("getInstance")}fwebLog.warn("datasource or mkey not provided and not available from element data.")},module.create_icon_element=function(icon,params){var is_app_icon=icon.includes("app_icon")||icon.includes("isdb_icon"),is_profile_icon=icon.includes("ftnt-profile"),size=params&&params.iconSize||"small",iconElement=module.elem("span");return is_app_icon?(iconElement.className="app-icon-container "+size,iconElement.appendChild(module.elem("span",{className:["app-icon",icon,size].join(" ")}))):is_profile_icon?iconElement.className=icon:iconElement=module.elem("f-icon",{className:icon}),iconElement},module.create_icon_html=function(icon,params){var result=module.create_icon_element(icon,params);return result?result.outerHTML:""},module.formatApplicationLabel=function(){return module.elem("span",{},{children:[module.formatApplicationLabelElement.apply(null,arguments)]}).innerHTML},module.formatApplicationLabelElement=function(id,name){var label=module.elem("span",{className:"fortiguard-resource app-label",dataset:{id:id}});if(id){let icon=module.create_icon_element(-1===id?"fa-cloud":"app_icon app"+id);label.appendChild(icon)}return label.appendChild(module.elem("span",{textContent:name,className:id>0?"tooltip-hint":""})),label},module.formatWebFilterLabel=function(id,name){var html="";return html+='<span class="fortiguard-resource web-filter-category" ',html+='data-id="'+id+'">'+module.escapeHTML(name)+"</span>"},module.formatApplicationCategoryLabelElem=function(id,name){return"unknown"===name&&(name=$.getInfo(name)),module.elem("span",{className:"fortiguard-resource app-category",textContent:name,dataset:{id:id,name:name}})},module.formatApplicationCategoryLabel=function(id,name){var elem=module.formatApplicationCategoryLabelElem(id,name);return elem?elem.outerHTML:""},module.formatWAFLabelElem=function(id,name){return module.elem("span",{className:"fortiguard-resource waf-signature",dataset:{id:id,name:name},textContent:name})},module.formatWAFLabel=function(id,name){var elem=module.formatWAFLabelElem(id,name);return elem?elem.outerHTML:""},module.genIconElement=function(iconType,iconKey,options){options=options||{};const iconParams={attributes:{class:fweb_icon.iconClass(iconType,iconKey)||options.fallbackIconClass}};options.iconTitle&&(iconParams.attributes.title=options.iconTitle);const children=[module.elem("f-icon",null,iconParams)];if(options.label){const labelProps={textContent:options.label};let labelParams;options.labelTitle&&(labelParams={attributes:{title:options.labelTitle}}),children.push(module.elem("span",labelProps,labelParams))}return module.elem("span",null,{children:children})},module.setupApplicationTooltip=function(target){var $target=$(target);return module.setupObjectTooltip({element:$target,mkey:$target.data("id"),datasource:"application.name",failureText:$.getInfo("No application information"),tooltipHint:!1,tooltipFixed:!0})},module.setupWebFilterTooltip=function(target){var $target=$(target);return module.setupObjectTooltip({element:$target,mkey:$target.data("id"),datasource:"webfilter.ftgd-cat",failureText:$.getInfo("No category information")})},module.setupApplicationCategoryTooltip=function(target){var $target=$(target);if(-1!==parseInt($target.data("id"),10))return module.setupObjectTooltip({element:$target,mkey:$target.data("id"),datasource:"application.category",failureText:$.getInfo("No category information")});var catName=$target.data("name");Omniselect.getSourceData("application.category").then(function(data){var categoryData=data.filter(function(obj){return obj.name===catName})[0];if(categoryData)return $target.data("id",categoryData.id),module.setupObjectTooltip({element:$target,mkey:categoryData.id,datasource:"application.category",failureText:$.getInfo("No category information")})})},module.setupWAFTooltip=function(target){var $target=$(target);return module.setupObjectTooltip({element:$target,mkey:$target.data("id"),datasource:"waf.signature",failureText:$.getInfo("No application information")})},module.setupUserTooltip=function(target){var $target=$(target);module.setupObjectTooltip({element:$target,mkey:$target.data("username"),datasource:"user.info",failureText:$.getInfo("No user information")})},module.formatFortiGuardAnchorLink=function(params){var context={type:params.type,path:module.escapeHTML(params.path),label:params.trustLabelAsHtml?params.label||"":module.escapeHTML(params.label||""),cls:params.cls||""};return module.renderTemplate('<a class="{{ cls}} fortiguard-link" target="_blank" data-link-type="{{ type }}" data-link-path="{{ path }}" rel="noopener noreferrer">{{ label }}</a>',context)},module.createIPv6Tags=function(portions,templateEntry){var formatSegmentLabel=function(segment,predefinedValueName){var labels=[segment.name];return labels.push(" ("+("any"===segment.type?$.getInfo("any"):segment.value)+")"),predefinedValueName&&labels.push(" ("+predefinedValueName+")"),labels.join("")},portionMap={prefix:function(entry){return{color:"grey",title:$.getInfo("IPv6 subnet prefix"),label:entry["meta.subnet-prefix"]||entry.ip6}},"subnet-segment":function(entry){return entry["subnet-segment"].map(function(segment){return{color:"blue",title:$.getInfo("subnet segment")+" "+(segment.bits||segment["meta.bits"])+"bits",label:"address6"===entry.q_name?formatSegmentLabel(segment,segment["meta.value-name"]):segment.name+" ("+segment.bits+")"}})},host:function(entry){return{color:"orange",title:$.getInfo("host address"),label:"any"===entry["host-type"]?$.getInfo("any"):entry.host}}};return portions.reduce(function(tagArray,portion){return portionMap[portion]&&(tagArray=tagArray.concat(portionMap[portion](templateEntry))),tagArray},[])},module.colorLabels=function(tags){return'<div class="color-labels">'+tags.map(function(tag){return module.renderTemplate('<span class="{{ color }}" title="{{ title }}">{{ label }}</span>',tag)}).join("")+"</div>"},module.renderIPv6Template=function(portions,templateEntry){const tags=module.createIPv6Tags(portions,templateEntry);return module.colorLabels(tags)},module.colorLabelsCollection=(tags=>{return tags.map(tag=>{const children=[module.elem("span",{className:tag.color,title:tag.title,textContent:tag.label})];return module.elem("div",{className:"color-labels"},{children:children})})}),module.renderIPv6TemplateCollection=((portions,templateEntry)=>{const tags=module.createIPv6Tags(portions,templateEntry);return module.colorLabelsCollection(tags)}),module.createIconWithLabel=function(className,label){return module.elem("span",null,{children:[module.elem("f-icon",{className:className}),module.elem("span",{textContent:label})]})},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(31),__webpack_require__(38),__webpack_require__(43),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fweb_dom,utilIcon,lang,ftnt_shared){"use strict";const elem=ftnt_shared.dom.elem,{translate:translate}=lang;var module={};return module.metric_bytes=ftnt_shared.formatters.metricBytes,module.binary_bytes=ftnt_shared.formatters.binaryBytes,module.metric_bytes_per_second=ftnt_shared.formatters.metricBytesPerSecond,module.metric_bits_per_second=ftnt_shared.formatters.metricBitsPerSecond,module.number=ftnt_shared.formatters.number,module.humanizeSeconds=ftnt_shared.dateTime.humanizeSeconds,module.bytes_to_bits=function(number){return 8*number},module.bits_to_bytes=function(number){return Math.floor(number/8)},module.bytes_to_kbits=function(number){return.008*number},module.percentage=function(number,max,decimal_places){return(max>0?100*number/max:0).toFixed(void 0!==decimal_places?decimal_places:1)+"%"},module.milliseconds=function(ms){return ms+"ms"},module.create_whois_lookup_anchor=function(){return elem("span",{},{children:[module.create_whois_lookup_anchor_elem.apply(null,arguments)].filter(function(element){return element})})},module.create_whois_lookup_anchor_elem=function(address,whois_lookup_url){return elem("a",{className:"whois-lookup-address show-on-hover show-on-select",href:whois_lookup_url+address,target:"_blank",rel:"noopener noreferrer"},{children:[elem("f-icon",{className:"fa-external-link icon-sm",title:$.getInfo("WHOIS Information for",[address])})]})},module.vdom_icon_class=function(vdom_name,state){state=state||top.state;const icon_key=utilIcon.genVdomIconKey(vdom_name,state);return utilIcon.iconClass(utilIcon.ICON_TYPE.VDOM,icon_key)||"ftnt-vdom"},module.vdom_format_fn=function(td,col,entry){var vdom_name=entry[col.selector],state=top.state,icon_key=utilIcon.genVdomIconKey(vdom_name,state);return icon_key?utilIcon.formatIcon(utilIcon.ICON_TYPE.VDOM,icon_key,{label:vdom_name}):""},module.server_format_fn=function(td,col,entry){var type=entry[col.selector]||"",name=type?$.getInfo("Server::type."+type):"";return name?utilIcon.formatIcon(utilIcon.ICON_TYPE.SERVER_TYPE,type,{fallBackIconClass:"fa-server",label:name}):name},module.certificate_format_fn=function(range,label,options){var html=top.state.vdom_mode&&"global"===range?utilIcon.genIcon("fa-globe",null,$.getInfo("Global Certificate, available on all VDOMs")):"";return options&&options.type&&(html+=utilIcon.formatIcon(utilIcon.ICON_TYPE.CERTIFICATE,options.type,{iconTitle:options.iconTitle})),html+=label?"<span>"+label+"</span>":""},module.ldap_icon_class=function(dn){if(dn){var attr=dn.substr(0,dn.indexOf("=")).toLowerCase(),iconClass=utilIcon.iconClass(utilIcon.ICON_TYPE.LDAP_ATTRIBUTE_TYPE,attr);if(iconClass)return iconClass}return""},module.path_name_format=function(path_name){var split=path_name.split("."),last_index=split.length-1;return{path:split.slice(0,last_index).join("."),name:split[last_index]}},module.truncate_string=function(str,len){var truncate_length=len||32,trunc_str=str;return str&&str.length>truncate_length&&(trunc_str=str.substr(0,truncate_length-"…".length)+"…"),trunc_str},module.truncate_comment=function(comment,len,cls){var result=module.truncate_comment_elem(comment,len,cls);return result?result.outerHTML:""},module.truncate_comment_elem=function(comment,len,cls){if(void 0!==comment){var trunc_comment=module.truncate_string(comment,len);return ftnt_shared.dom.elem("span",{title:comment,className:cls,textContent:trunc_comment})}return null},module.ellipsify_comment_elem=function(comment,cls){return void 0!==comment?ftnt_shared.dom.elem("div",{className:"table-overflow-ellipsis"},{children:[ftnt_shared.dom.elem("div",{className:"overflow-block"},{children:[ftnt_shared.dom.elem("span",{title:comment,textContent:comment,className:cls})]})]}):""},module.ellipsify_comment=function(comment,cls){var result=module.ellipsify_comment_elem(comment,cls);return result?result.outerHTML:""},module.popularity_rating=function(rating){var numStars=parseInt(rating,10);return isNaN(numStars)?"":'<div class="popularity-level level-'+numStars+'"></div>'},module.popularity_rating_elem=function(rating){const numStars=parseInt(rating,10);if(!isNaN(numStars)&&numStars>=0&&numStars<=5)return fweb_dom.elem("div",{className:`popularity-level level-${numStars}`})},module.severity_bar=function(){return elem("span",{},{children:[module.severity_bar_elem.apply(null,arguments)].filter(function(element){return element})}).innerHTML},module.severity_bar_elem=function(severity,size,title){if(title=$.getInfo(title||severity),!(severity="info"===severity?"none":severity)||"string"!=typeof severity||!["none","low","medium","high","critical"].includes(severity))return null;var barClasses="severity-bar "+(size?[severity,size]:[severity]).join(" "),cells=Array(5).fill().map(function(){return elem("div",{className:"severity-bar-cell"})});return elem("div",{className:barClasses},{children:[elem("div",{className:"severity-bar-cells",title:title},{children:cells})]})},module.log_severity_bar_elem=function(severity,size,title){if("string"!=typeof severity||!severity||["debug","information","notice","warning","error","critical","alert","emergency"].indexOf(severity.toLowerCase())<0)return null;var extraClasses=[severity];size&&extraClasses.push(size);var i,cells=[],cell=ftnt_shared.dom.elem("div",{className:"log-severity-bar-cell"});for(i=0;i<7;++i)cells.push(cell.cloneNode());return ftnt_shared.dom.elem("div",{className:"log-severity-bar "+extraClasses.join(" ")},{children:[ftnt_shared.dom.elem("div",{className:"log-severity-bar-cells",title:$.getInfo(title||severity)},{children:cells})]})},module.log_severity_bar=function(severity,size,title){var result=module.log_severity_bar_elem(severity,size,title);return result?result.outerHTML:""},module.signal_strength_bar=ftnt_shared.formatters.signalStrengthBar,module.vulnerability_number_bubbles=function(vulnCountsByType){var result;return vulnCountsByType&&vulnCountsByType.vuln_count&&(result="",["critical","high","medium","low"].forEach(function(level){var count=Number(vulnCountsByType["vuln_count_"+level]);count&&(result+='<span class="number-bubble severity-'+level+'" style="margin-right: .3em;">'+count+"</span>")})),result},module.string_interpolate=function(format,params){return String(format).replace(/\{(\d+)\}/g,function(m,i){return String(params[i])})},module.wattage=function(watts,decimal_places){return(watts/1e3).toFixed(decimal_places||2)+"W"},module.sentence_case=function(value){return String(value).toLowerCase().replace(/(?:^|\.\s+)(\w)/g,function(match){return match.toUpperCase()})},module.parseIntToMultipleFormats=function(value,size){const toPaddedString=(number,radix,targetLength)=>{return`${2===radix?"0b":"0x"}${number.toString(radix).padStart(targetLength,"0")}`},decimalNumber=Number(value);let binaryStr,hexStr;return Number.isInteger(value)?(binaryStr=toPaddedString(decimalNumber,2,size),size%4==0&&(hexStr=toPaddedString(decimalNumber,16,size/4))):Number.isNaN(decimalNumber)||((str=>str.startsWith("0b")||str.startsWith("0B"))(value)?(binaryStr=value,size%4==0&&(hexStr=toPaddedString(decimalNumber,16,size/4))):(str=>str.startsWith("0x")||str.startsWith("0X"))(value)&&(binaryStr=toPaddedString(decimalNumber,2,size),hexStr=value)),{binaryStr:binaryStr,hexStr:hexStr,decimalNumber:decimalNumber}},module.allowaccess_format_fn=function(values,adminHttpsRedirect){const colors={telnet:"red",snmp:"orange",fgfm:"blue","radius-acct":"blue","probe-response":"blue",capwap:"blue",fabric:"blue",default:"grey"},HTTP_NO_REDIRECT="http-no-admin-https-redirect";return colors[HTTP_NO_REDIRECT]="red",`<div class="color-labels">${values.map(function(value){let html="";if(value){const accessClass="http"!==value||adminHttpsRedirect?value:HTTP_NO_REDIRECT,labelColor=colors[accessClass]||colors.default,label=$.getInfo(`Interface::allowaccess.${value}`);html=`<span class="${labelColor}">${label}</span>`}return html}).join("")}</div>`},module.allowaccess_format_dom_fn=function(values,adminHttpsRedirect){const colors={telnet:"red",snmp:"orange",fgfm:"blue","radius-acct":"blue","probe-response":"blue",capwap:"blue",fortiheartbeat:"blue",default:"grey"},HTTP_NO_REDIRECT="http-no-admin-https-redirect";colors[HTTP_NO_REDIRECT]="red";const tags=values.map(function(value){let dom;if(value){const accessClass="http"!==value||adminHttpsRedirect?value:HTTP_NO_REDIRECT,labelColor=colors[accessClass]||colors.default,label=$.getInfo(`Interface::allowaccess.${value}`);dom=elem("span",{className:labelColor,textContent:label})}return dom});return elem("div",{className:"color-labels"},{children:tags})},module.ordinal_indicator=function(number){var j=number%10,k=number%100;return 1===j&&11!==k?number+"st":2===j&&12!==k?number+"nd":3===j&&13!==k?number+"rd":Math.round(number)+"th"},module.boolean_formatter_fn=function(params){return params=Object.assign({trueLang:"enabled",trueIcon:"fa-enabled",falseLang:"disabled",falseIcon:"fa-disabled"},params),function(entry,column){var enabled="enable"===entry[column.id]||!0===entry[column.id],className=enabled?params.trueIcon:params.falseIcon,textContent=lang.translate(enabled?params.trueLang:params.falseLang);return elem("span",null,{children:[elem("f-icon",{className:className}),elem("span",{textContent:textContent})]})}},module.ipsec_tunnel_type=function(wizardType,vdom){const iconClass=wizardType?`ftnt-ipsec-vpn-${wizardType}`:"ftnt-ipsec-aggregate",typeStr="custom"===wizardType?$.getInfo("Custom"):wizardType&&$.getInfo(wizardType)||$.getInfo("IPsec Aggregate"),iconStr=utilIcon.genIcon(iconClass,typeStr);return wizardType&&"custom"!==wizardType?`<a href="/ng/vpn/ipsec/template/${wizardType}${vdom?`?vdom=${vdom}`:""}">${iconStr} </a>`:iconStr},module.ipsec_tunnel_user=function(userName){if(userName)return utilIcon.formatIcon(utilIcon.ICON_TYPE.USER,"authenticated",{label:userName,iconTitle:userName})},module.nColumnListFormat=function(entries,n,formatFn){var html;return formatFn=formatFn||function(entry){return entry},entries.length&&(ftnt_shared.browser.responsive.isSmall()?(html='<div class="flex-row-centered flex-wrap">',entries.forEach(function(entry){html+="<div>"+formatFn(entry)+"</div>"}),html+="</div>"):(html='<table class="table condensed"><tbody>',entries.forEach(function(entry,index){index%n==0&&(0!==index&&(html+="</tr>"),html+="<tr>"),html+="<td>"+formatFn(entry)+"</td>"}),html+="</tr></tbody></table>")),html},module.severityTagsFormatter=function(tags=[],className=""){if(tags.length>0)return fweb_dom.elem("div",{className:className},{children:tags.map(tag=>fweb_dom.elem("div",{className:`severity-label severity-${tag.level}`,textContent:translate(tag.reason)}))})},module.countryIconFormatter=function(countryCode,label=""){return fweb_dom.elem("span",null,{children:[fweb_dom.elem("span",{className:`country_flag country_${countryCode}`}),fweb_dom.elem("span",{textContent:label})]})},module.interfaceWithFswFapInfo=function(initialFormat,deviceEntry,interfaceVlanId){let formatted=initialFormat||"";if(deviceEntry.fortiap_id){formatted=`${formatted} ${`<div>(${'<f-icon class="ftnt-fortiap-marketing\n                security-fabric-node"></f-icon>'} ${deviceEntry.fortiap_name||deviceEntry.fortiap_id})</div>`}`}else if(deviceEntry.fortiswitch_id&&deviceEntry.fortiswitch_vlan_id===interfaceVlanId){formatted=`${formatted} ${`<div>(${'<f-icon class="ftnt-standard-fortiswitch\n                security-fabric-node"></f-icon>'} ${deviceEntry.fortiswitch_name||deviceEntry.fortiswitch_id}:${deviceEntry.fortiswitch_port_name})</div>`}`}return formatted},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(134)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,FortiGateClasses){const{CsfFortiGate:CsfFortiGate}=FortiGateClasses;class CSFFortigateChooser extends inject.Collectable{constructor(state){super(),this.state=state,this.treeNodes=[]}$onInit($INJECTABLE$,$scope,csfTopology){const getTreeNode=()=>{return csfTopology.spanningTreeNodes.filter(node=>((node,withHa)=>{const entry=node.node;return entry instanceof CsfFortiGate&&!(!withHa&&entry.isHaSlave)&&entry.isFirmwareCompatible})(node,this.withHa)).filter(node=>node.node.isConnected())};return async()=>{getTreeNode().forEach(node=>{node.$trackBy=null}),await csfTopology.buildIfNecessary(),this.allFortigate={allFortigates:!0,q_origin_key:"all",id:"all",datasource:"csfFortiGates",getIconClass:()=>"ftnt-standard-fortigate security-fabric-node",getLabel:()=>"All Fortigates"},this.selectedFortigate=this.fortigate||csfTopology.selectedFortigate,this.selectedFortigate.isHaSlave&&!this.withHa&&(this.selectedFortigate=csfTopology.getDevice(this.selectedFortigate.serial),this.selectedFortigate.isUpstreamFgt&&(this.selectedFortigate=csfTopology.thisFortigate)),$scope.$watchCollection(()=>{const changedNodes=[];return getTreeNode().forEach((node,index)=>{const newTrack=this.trackBy(node,index);node.$trackBy!==newTrack&&changedNodes.push({node:node,index:index}),node.$trackBy=newTrack}),changedNodes},changedNodes=>{changedNodes&&changedNodes.length&&(this.treeNodes=getTreeNode(),this.treeMap=this.treeNodes.reduce((prev,node)=>(prev[node.id]=node,prev),{}),changedNodes.forEach(({node:node,index:index})=>{this.treeNodes.splice(index,1,Object.assign({},node))}))}),$scope.$watch("$ctrl.selectedFortigate",(newFgt,oldFgt)=>{newFgt&&newFgt!==oldFgt&&(this.local||(csfTopology.selectedFortigate=newFgt),this.fortigate=newFgt),!newFgt&&oldFgt&&(this.selectedFortigate=oldFgt)})}}isEnabled(){return this.treeNodes.length>1}isLast(ancestorId,index){for(let i=index+1;i<this.treeNodes.length;++i){if(this.treeNodes[i].parent===this.treeMap[ancestorId].node)return!1}return!0}onClick(fgt){this.selectedFortigate=fgt,this.csfTreePopUpMenu.hide(!0)}trackBy(treeNode,$index){const fgt=treeNode.node;return`${fgt.getLabel()}#${fgt.getIconClass()}#${$index}`}doesFgtChildExist(node){const parentNodeId=node.isHaSlave?node.ha[0].id:node.id;return this.treeMap[parentNodeId].children.filter(child=>this.treeMap[child]&&!this.treeMap[child].node.isHaSlave).length}isCurrent(fgt){return this.selectedFortigate.id===fgt.id}}return function(providers){providers.$compile.component("fCsfFortigateChooser",{controller:CSFFortigateChooser,bindings:{fortigate:"=?",allFortigates:"<?",disableEntryFunction:"<?",local:"<?",withHa:"<?"},templateUrl:__webpack_require__(854)})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(43),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(lang,ftnt_shared){"use strict";var module={};top.state&&ftnt_shared.dateTime.setDateFormat(top.state.date_format);const DATE_FORMAT_DEVICE_BROWSER="browser",DEFAULT_FORMAT_DEVICE=DATE_FORMAT_DEVICE_BROWSER,DATE_PROCESSING_FN={["system"]:(date,fromBrowser)=>(fromBrowser&&(date=module.browserUTCToFortiGateUTC(date)),module.adjustForFortiGateTimezone(date)),[DATE_FORMAT_DEVICE_BROWSER]:(date,fromBrowser)=>fromBrowser?date:module.fortiGateUTCToBrowserUTC(date)},adjustDateTime=(date,offset)=>{let newDate;if("number"==typeof date)newDate=date+offset;else if(date instanceof Date){let ms=date.getTime();newDate=new Date(ms+=offset)}return newDate};var PERIODS,PERIOD_MAX_INDICES,LANG_KEY_MAP;module.MS_CONSTANTS={SECOND:1e3,MINUTE:6e4,HOUR:36e5,DAY:864e5},module.S_TO_MS=1e3,module.MS_TO_S=1/module.S_TO_MS,module.MIN_TO_S=60,module.MIN_TO_MS=module.MIN_TO_S*module.S_TO_MS,module.MIN_DATE=new Date(0,0,0),module.MAX_DATE=new Date(2038,0,1),module.EPOCH_MIN_DATE=new Date(1970,0,2),module.formatDateTime=function(date,params){return ftnt_shared.dateTime.formatDateTime(date,params)},module.formatDate=function(date,params){return ftnt_shared.dateTime.formatDate(date,params)},module.formatTime=function(date,params){return ftnt_shared.dateTime.formatTime(date,params)},module.formatDateTimeShort=function(date,params){if(!date||!(date instanceof Date||"number"==typeof date))return"";"number"==typeof date&&(date=new Date(date));var now=new Date;return now.getDate()===date.getDate()&&now.getMonth()===date.getMonth()&&now.getFullYear()===date.getFullYear()?module.formatTime(date,params):module.formatDateTime(date,params)},module.elapsedTime=(PERIODS=[module.MS_CONSTANTS.DAY,module.MS_CONSTANTS.HOUR,module.MS_CONSTANTS.MINUTE,module.MS_CONSTANTS.SECOND],PERIOD_MAX_INDICES=["day","hour","minute","second"],(LANG_KEY_MAP={})[module.MS_CONSTANTS.DAY]="fmt_elapsed_time_days",LANG_KEY_MAP[module.MS_CONSTANTS.HOUR]="fmt_elapsed_time_hours",LANG_KEY_MAP[module.MS_CONSTANTS.MINUTE]="fmt_elapsed_time_minutes",LANG_KEY_MAP[module.MS_CONSTANTS.SECOND]="fmt_elapsed_time_seconds",function(milliseconds,format,max,verbosity){var result,lang_key,list=[],is_short="short"===format,value_added=is_short;if(verbosity||(verbosity=PERIODS.length),"number"==typeof milliseconds&&isFinite(milliseconds)){var max_index=PERIOD_MAX_INDICES.indexOf(max||"day");if(PERIODS.slice(max_index).forEach(function(period){var count=Math.floor(milliseconds/period),value=count;is_short&&(value="",count<10&&(value+="0"),value+=count),(count||value_added||period===module.MS_CONSTANTS.SECOND)&&(list.push(value),milliseconds-=period*count,lang_key=lang_key||LANG_KEY_MAP[period],value_added=!0)}),is_short)result=list.join(":");else{var suffix=verbosity&&list.length>verbosity?"_verbosity"+verbosity:"";suffix&&(list=list.slice(0,verbosity)),result=lang.translate(lang_key+suffix,list)}}return result}),module.formatDateFromNow=function(date,now,params={}){return ftnt_shared.dateTime.formatDateFromNow(date,now,params)},module.fortiGateStringToUTC=function(string){return fortiGateStringToUTC(string,!1)},module.localFortiGateStringToUTC=function(string){return fortiGateStringToUTC(string,!0)},module.adjustBasedOnTZDevice=function(date,params={}){if(params.skipProcessing)return date;const dateFormatDevice=top.state&&top.state.date_format_device||DEFAULT_FORMAT_DEVICE;return DATE_PROCESSING_FN[dateFormatDevice](date,params.fromBrowser)},module.fortiGateUTCToBrowserUTC=function(date){const offset=top.state?top.state.browser_utc_offset:0;return adjustDateTime(date,offset)},module.browserUTCToFortiGateUTC=function(date){const offset=top.state?top.state.browser_utc_offset:0;return adjustDateTime(date,-offset)},module.adjustForFortiGateTimezone=function(date){const offset=(()=>top.state?top.state.getBrowserTZOffsetFromFortiGate()*module.MIN_TO_MS:0)();return adjustDateTime(date,-offset)};var FGT_DATE_REGEX=/(\d{4})[-/]{1}(\d{2})[-/]{1}(\d{2}) (\d{2}):(\d{2}):(\d{2})/;function fortiGateStringToUTC(string,isLocal){var match=FGT_DATE_REGEX.exec(string);if(!match)return null;var year=match[1],month=match[2],day=match[3],hour=match[4],minute=match[5],second=match[6],time=new Date(year,month-1,day,hour,minute,second),utc=Date.UTC(time.getUTCFullYear(),time.getUTCMonth(),time.getUTCDate(),time.getUTCHours(),time.getUTCMinutes(),time.getUTCSeconds());return utc-=isLocal?top.state.getBrowserTZOffsetFromFortiGate()*module.MIN_TO_S*module.S_TO_MS:top.state.browser_time_zone_offset*module.MIN_TO_S*module.S_TO_MS}return module.toCmdbDateTimeString=function(datetime){return`${`${this.toCmdbTimeString(datetime)} `} ${`${datetime.getFullYear()}/${datetime.getMonth()+1}/${datetime.getDate()}`}`},module.toCmdbTimeString=function(datetime){return`${datetime.getHours()}:${datetime.getMinutes()} `},module.cmdbTimeStringToDate=function(time){const start=new Date;return start.setHours(time.split(":")[0]),start.setMinutes(time.split(":")[1]),start.setSeconds(0),start.setMilliseconds(0),start},module.timeInputAsDate=function(value){var time=(value||"00:00:00").split(":");return new Date(1970,0,1,parseInt(time[0]||0,10),parseInt(time[1]||0,10),parseInt(time[2]||0,10))},module.dateToLocalSeconds=function(date){var offsetSeconds=(new Date).getTimezoneOffset()*module.MIN_TO_S;return Math.round(date.getTime()*module.MS_TO_S-offsetSeconds)},ftnt_shared.dateTime.setDateTimeProcessingFn(module.adjustBasedOnTZDevice),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,$){"use strict";const Omniselect=ftnt_shared.Omniselect,module={};return module.GLOBAL_VDOM_SOURCES=[{id:"antivirus.profile",notGlobalDownstream:!0},{id:"application.list",notGlobalDownstream:!0},{id:"file-filter.profile",notGlobalDownstream:!0},"firewallInterfaces","firewall.wildcard-fqdn.custom",{id:"ips.sensor",notGlobalDownstream:!0},"system.interface","system.vdom-link","systemVdomLink","systemTransceivers",{id:"webfilter.profile",notGlobalDownstream:!0},{id:"dlp.sensor",notGlobalDownstream:!0}],module.isSourceForAllVdoms=function(sourceID){return 0===sourceID.indexOf("allVdoms")},module.isSourceGlobal=function(sourceID){return sourceID.includes("global::")},module.isSourceForCSF=function(sourceID){return sourceID.includes("csf::")},module.doesAllVdomSourceExist=function(sourceID){const allVdomSource=module.makeAllVdomsSourceID(sourceID);return!!Omniselect.prototype.SOURCES[allVdomSource]},module.doesGlobalSourceExist=function(sourceID){const globalSource=module.makeGlobalSourceID(sourceID);return!!Omniselect.prototype.SOURCES[globalSource]},module.makeCSFProxySourceID=function(sourceID,csfPath){return csfPath&&!sourceID.includes(`csf::${csfPath}`)&&(sourceID=`csf::${csfPath}::${sourceID}`),sourceID},module.getCSFProxySourceID=function(sourceID,csfPath){const isGlobalScope=top.state.vdom_mode&&!top.state.current_vdom;let csfProxySourceID=module.makeCSFProxySourceID(sourceID,csfPath);const isDownstreamRequest=csfPath&&csfPath!==top.state.serial,doesGlobalSourceExist=module.doesGlobalSourceExist(sourceID);let makeGlobalSource=module.isSourceGlobal(csfProxySourceID)||doesGlobalSourceExist&&isGlobalScope||doesGlobalSourceExist&&isDownstreamRequest;if(isDownstreamRequest&&makeGlobalSource){const found=module.GLOBAL_VDOM_SOURCES.find(e=>e.id===sourceID);found&&found.notGlobalDownstream&&(makeGlobalSource=!1)}if(makeGlobalSource)return csfProxySourceID=csfProxySourceID.replace("global::",""),csfProxySourceID=module.makeGlobalSourceID(csfProxySourceID);return(isDownstreamRequest||isGlobalScope)&&module.doesAllVdomSourceExist(sourceID)&&(csfProxySourceID=module.makeAllVdomsSourceID(csfProxySourceID)),csfProxySourceID},module.makeAllVdomsSourceID=function(sourceID){return module.isSourceForAllVdoms(sourceID)?sourceID:`allVdoms::${sourceID}`},module.makeGlobalSourceID=function(sourceID){return module.isSourceGlobal(sourceID)?sourceID:`global::${sourceID}`},module.makeCSFSourceURI=function(uri,sourceID){var csfPath=module.getSourceCSFPath(sourceID);return csfPath&&(uri=`/csf/${csfPath}${uri}`),uri},module.getSourceCSFPath=function(sourceID){return Omniselect.prototype.SOURCES[sourceID].csfPath},module.setAllVdomsEntryId=function(entry,isAllVdom,sourceID,vdom){if(entry){sourceID=sourceID||entry.datasource,vdom=vdom||entry.vdom,entry.datasource=isAllVdom?module.makeAllVdomsSourceID(sourceID):sourceID,entry.vdom=vdom,"vd_relative_q_origin_key"===module.getSourceEntryIdKey(entry.datasource)&&!entry.vd_relative_q_origin_key&&(entry.vd_relative_q_origin_key=`${entry.q_origin_key}#${vdom}`)}return entry},module.getSourceEntryIdKey=function(sourceID){const source=Omniselect.prototype.SOURCES[sourceID];return source&&source.entryIdKeyFunction?source.entryIdKeyFunction(sourceID):"q_origin_key"},module.makeAllVdomsProcessFn=function(entryProcessFn){return function(resource,meta,sourceID){const isAllVdom=module.isSourceForAllVdoms(sourceID);let results=resource.results||resource||[];return results.forEach(entry=>{module.setAllVdomsEntryId(entry,isAllVdom,sourceID,entry.vdom),entryProcessFn&&entryProcessFn(entry,isAllVdom,entry.vdom)}),results}},module.allVdomsEntryIdKeyFn=function(sourceID){return module.isSourceForAllVdoms(sourceID)&&!module.isSourceForCSF(sourceID)?"vd_relative_q_origin_key":"q_origin_key"},module.getCMDBTable=async function(path,name,params={}){const optimize=params.optimizeForLargeDataset&&!params.allVdoms,baseURI=`/api/v2/cmdb/${path}/${name}`,cmdbURI=params.csfPath?`/csf/${params.csfPath}${baseURI}`:baseURI;let entriesPromise,defaultsPromise,uri=`${cmdbURI}?with_meta=1`;if(params.noDatasource||(uri+="&datasource=1"),null!=params.format&&(uri+=`&format=${params.format}`),params.allVdoms?uri+="&vdom=*":null!=params.vdom&&(uri+=`&vdom=${params.vdom}`),params.globalScope&&(uri+="&scope=global"),uri+=optimize?"&exclude-default-values=1":"&skip=1",params.filter){let filters=params.filter;Array.isArray(filters)||(filters=Object.entries(filters).map(([key,value])=>`${key}==${value}`)),uri+=`&filter=${filters.map(encodeURIComponent).join("&filter=")}`}if(params.plainTextPassword&&(uri+="&plain-text-password=1"),optimize){defaultsPromise=$.get(`${cmdbURI}?action=default`).then(data=>data.results);const size=await $.get(`${cmdbURI}?action=meta`).then(data=>data.results.size),requestCount=Math.min(Math.floor(size/5e3),2),promises=[],countPerRequest=Math.ceil(size/requestCount);let remaining=size,index=0;for(;remaining;){const count=Math.min(countPerRequest,remaining),url=`${uri}&start=${index}&count=${count}`;promises.push($.get(url).then(data=>data.results)),index+=count,remaining-=count}entriesPromise=Promise.all(promises).then(chunks=>({results:chunks.reduce((all,value)=>all.concat(value),[])}))}else entriesPromise=$.get(uri);const promises=[entriesPromise];optimize&&promises.push(defaultsPromise);const[data,defaults]=await Promise.all(promises);let results;if(params.allVdoms){results=[];for(const vdomData of data)for(let entry of vdomData.results)entry.vdom=vdomData.vdom,results.push(entry)}else results=data.results,optimize&&(results=data.results.map(entry=>Object.assign({},defaults,entry)));return results},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){"use strict";const IpMask=__webpack_require__(127),{getCountryCodeForID:getCountryCodeForID}=__webpack_require__(220);module.exports={IpMask:IpMask,natType:function(sourceip,destinationip){var ver=[goog.net.IpAddress.fromString(sourceip),goog.net.IpAddress.fromString(destinationip)].map(function(ip){if(ip)return ip.getVersion()});return void 0===ver[0]||void 0===ver[1]||ver[0]===ver[1]?ver[0]&&ver[1]:parseInt(ver.join(""),10)},isAscending:function(start,end,options={}){const VALID_IP_VERSIONS=[4,6];var startIp,endIp,result=!1;try{startIp=new goog.net.IpAddress.fromString(start),endIp=new goog.net.IpAddress.fromString(end);const startIpVer=startIp.getVersion();(result=startIpVer===endIp.getVersion()&&startIp.toInteger().lessThanOrEqual(endIp.toInteger()))&&options.noZeroSubnet&&(result=0!==startIp.toInteger().toNumber()||0!==endIp.toInteger().toNumber()),result&&VALID_IP_VERSIONS.includes(options.ipVersion)&&(result=startIpVer===options.ipVersion)}catch(e){options.ignoreParseError&&(result=!0)}return result},ipVersion:function(ipStr){return goog.net.IpAddress.fromString(ipStr).getVersion()},ipToGoogInt:function(ipStr){return goog.net.IpAddress.fromString(ipStr).toInteger()},isEqual:function(ip1,ip2){var ipAddress1,ipAddress2;try{return ipAddress1=new goog.net.IpAddress.fromString(ip1),ipAddress2=new goog.net.IpAddress.fromString(ip2),ipAddress1&&ipAddress2&&ipAddress1.getVersion()==ipAddress1.getVersion()&&ipAddress1.toInteger().lessThanOrEqual(ipAddress2.toInteger())&&ipAddress1.toInteger().greaterThanOrEqual(ipAddress2.toInteger())}catch(e){return!1}},googIntToIp:function(googIpInt,_ipVersion){return(4===_ipVersion?new goog.net.Ipv4Address(googIpInt):new goog.net.Ipv6Address(googIpInt)).toString()},getCountryCodeForID:getCountryCodeForID,getAvailableIpNetmask:function(params){const existingOctets={},ipSubnet=this.IpMask.parse(params.startingParentSubnet),octetIndex=ipSubnet&&ipSubnet.prefixLength()/8;if(ipSubnet&&octetIndex<4){const newAddr=ipSubnet.addr.slice().map(octet=>octet||1),ipStart=`${ipSubnet.addr.filter(octet=>octet).join(".")}.`;(params.blacklistSubnets||[]).forEach(subnet=>{const parsedSubnet=this.IpMask.parse(subnet),addr=parsedSubnet&&parsedSubnet.addr;if(addr&&addr.join(".").startsWith(ipStart)){const octet=addr[octetIndex];existingOctets[octet]=!0}});for(let i=1;i<255;++i)if(!existingOctets[i]){newAddr[octetIndex]=i;const newIp=newAddr.join(".");return params.netmask?`${newIp}/${8*(octetIndex+1)}`:newIp}}return"0.0.0.0/0"},normalizeIpStr:function(ipStr){let normalizedIpStr=ipStr;try{normalizedIpStr=goog.net.IpAddress.fromString(ipStr).toString()}catch(e){}return normalizedIpStr}}},function(module,exports,__webpack_require__){"use strict";const DEVICE_TYPES={SERVER:"server",DEVICE:"device",USER_DEVICE:"user-device",ANDROID:"android",APPLE:"apple",CISCO:"cisco",FTNT_DEVICE:"ftnt-device",FORTIANALYZER:"fortianalyzer",FORTIAP:"fortiap",FORTIMANAGER:"fortimanager",FORTIGATE:"fortigate",FORTISANDBOX:"fortisandbox",FORTISWITCH:"fortiswitch",GAME:"game",LINUX:"linux",MOBILE:"mobile",TABLET:"tablet",WINDOWS:"windows",CHROME:"chrome",FIREFOX:"firefox",AMAZON:"amazon"},deviceCategoryToIconMap={[DEVICE_TYPES.SERVER]:"fa-server",[DEVICE_TYPES.DEVICE]:"ftnt-device",[DEVICE_TYPES.USER_DEVICE]:"fa-cog",[DEVICE_TYPES.ANDROID]:"fa-device-android",[DEVICE_TYPES.APPLE]:"fa-device-apple",[DEVICE_TYPES.CISCO]:"ftnt-cisco",[DEVICE_TYPES.FTNT_DEVICE]:"ftnt-device-fortinet",[DEVICE_TYPES.FORTIANALYZER]:"ftnt-fortianalyzer",[DEVICE_TYPES.FORTIAP]:"ftnt-fortiap-marketing",[DEVICE_TYPES.FORTIMANAGER]:"ftnt-fortimanager",[DEVICE_TYPES.FORTIGATE]:"ftnt-standard-fortigate",[DEVICE_TYPES.FORTISANDBOX]:"ftnt-fortisandbox",[DEVICE_TYPES.FORTISWITCH]:"ftnt-standard-fortiswitch",[DEVICE_TYPES.GAME]:"fa-gamepad",[DEVICE_TYPES.LINUX]:"fa-linux",[DEVICE_TYPES.MOBILE]:"fa-mobile",[DEVICE_TYPES.TABLET]:"fa-tablet",[DEVICE_TYPES.WINDOWS]:"fa-windows",[DEVICE_TYPES.CHROME]:"fa-chrome",[DEVICE_TYPES.FIREFOX]:"fa-firefox",[DEVICE_TYPES.AMAZON]:"fa-amazon"},deviceToDeviceCategoryMap={server:DEVICE_TYPES.SERVER,unknown:DEVICE_TYPES.DEVICE,none:DEVICE_TYPES.DEVICE,"user-device":DEVICE_TYPES.USER_DEVICE,Android:DEVICE_TYPES.ANDROID,iOS:DEVICE_TYPES.APPLE,macOS:DEVICE_TYPES.APPLE,tvOS:DEVICE_TYPES.APPLE,watchOS:DEVICE_TYPES.APPLE,CatOS:DEVICE_TYPES.CISCO,IOS:DEVICE_TYPES.CISCO,"NX-OS":DEVICE_TYPES.CISCO,"FortiAnalyzer OS":DEVICE_TYPES.FORTIANALYZER,"FortiAP OS":DEVICE_TYPES.FORTIAP,"FortiCam OS":DEVICE_TYPES.FTNT_DEVICE,"FortiMail OS":DEVICE_TYPES.FTNT_DEVICE,"FortiManager OS":DEVICE_TYPES.FORTIMANAGER,FortiOS:DEVICE_TYPES.FORTIGATE,"FortiRecorder OS":DEVICE_TYPES.FTNT_DEVICE,"FortiSandbox OS":DEVICE_TYPES.FORTISANDBOX,"FortiSwitch OS":DEVICE_TYPES.FORTISWITCH,"FortiWeb OS":DEVICE_TYPES.FTNT_DEVICE,"Orbis OS":DEVICE_TYPES.GAME,"Arch Linux":DEVICE_TYPES.LINUX,CentOS:DEVICE_TYPES.LINUX,Debian:DEVICE_TYPES.LINUX,Fedora:DEVICE_TYPES.LINUX,Gentoo:DEVICE_TYPES.LINUX,"Joli OS":DEVICE_TYPES.LINUX,Kanotix:DEVICE_TYPES.LINUX,Linux:DEVICE_TYPES.LINUX,"Linux Mint":DEVICE_TYPES.LINUX,Mandriva:DEVICE_TYPES.LINUX,PClinuxOS:DEVICE_TYPES.LINUX,RHEL:DEVICE_TYPES.LINUX,SUSE:DEVICE_TYPES.LINUX,Slackware:DEVICE_TYPES.LINUX,Ubuntu:DEVICE_TYPES.LINUX,Bada:DEVICE_TYPES.MOBILE,BlackBerry:DEVICE_TYPES.MOBILE,Hiptop:DEVICE_TYPES.MOBILE,KaiOS:DEVICE_TYPES.MOBILE,LuneOS:DEVICE_TYPES.MOBILE,Sailfish:DEVICE_TYPES.MOBILE,Tizen:DEVICE_TYPES.MOBILE,"BlackBerry Tablet OS":DEVICE_TYPES.TABLET,Kindle:DEVICE_TYPES.TABLET,"RIM Tablet OS":DEVICE_TYPES.TABLET,webOS:DEVICE_TYPES.TABLET,Windows:DEVICE_TYPES.WINDOWS,"Windows Phone OS":DEVICE_TYPES.WINDOWS,ChromeOS:DEVICE_TYPES.CHROME,"Firefox OS":DEVICE_TYPES.FIREFOX,"Fire OS":DEVICE_TYPES.AMAZON},ICON_TYPE={DEVICE_CATEGORY:"deviceCategory",DEVICE_STATUS:"deviceStatus",FABRIC_DEVICE_48PX:"fabricDevice48px",HARDWARE_VENDOR:"hardwareVendor",GROUP:"group",LOGON:"logon",TWO_FACTOR_AUTH:"two-factor-auth",USER:"user",VDOM:"vdom",CERTIFICATE:"certificate",ENABLE_DISABLE:"enable_disable",FGD_CAT_ACTION:"fgd-cat-action",SERVER_TYPE:"serverType",URL_FILTER_ACTION:"url-filter-action",LDAP_ATTRIBUTE_TYPE:"ldapAttributeType",INTERFACE:"interfaceIconMap",ENDPOINT_CONTROL_AVATAR_SOURCE:"endpointControlAvatarSourceMap",UP_DOWN:"upDownIconMap",SDN:"sdnConnectorIconMap",WAF_ACTION:"wafAction",IPS_ACTION:"ipsAction"},ICON_TYPE_MAP={};ICON_TYPE_MAP[ICON_TYPE.DEVICE_CATEGORY]=deviceCategoryToIconMap,ICON_TYPE_MAP[ICON_TYPE.DEVICE_STATUS]={online:"fa-status-up",offline:"fa-status-down-disabled",quarantined:"ftnt-quarantine",registered:"ftnt-forticlient-registered","registered-online-offnet":"ftnt-forticlient-registered-offnet","registered-online-onnet":"ftnt-forticlient-registered-onnet","registered-online":"ftnt-forticlient-registered-onnet","registered-offline":"ftnt-forticlient-registered-offline"},ICON_TYPE_MAP[ICON_TYPE.HARDWARE_VENDOR]={Apple:"fa-device-apple",Fortinet:"ftnt-device-fortinet"},ICON_TYPE_MAP[ICON_TYPE.GROUP]={firewall:"ftnt-firewall","fsso-service":"ftnt-fsso-service",guest:"fa-guest",rsso:"ftnt-rsso"},ICON_TYPE_MAP[ICON_TYPE.LOGON]={firewall:"fa-user-firewall",fsso:"ftnt-fsso-service",fsso_citrix:"ftnt-fsso-service",ntlm:"fa-user-ntlm",rsso:"ftnt-rsso",sso_guest:"ftnt-fsso-service",wsso:"fa-wsso-service"},ICON_TYPE_MAP[ICON_TYPE.TWO_FACTOR_AUTH]={email:"fa-envelope-o",fortitoken:"ftnt-fortitoken","fortitoken-cloud":"ftnt-fortitoken-cloud",mobile:"fa-mobile",sms:"fa-mobile"},ICON_TYPE_MAP[ICON_TYPE.USER]={auth_user:"fa-user-local",fsso:"ftnt-fsso-service",ldap:"ftnt-ldap",peer:"ftnt-peer",radius:"ftnt-user-radius",remote:"fa-arrows-h",tacacs:"ftnt-tacacs","tacacs+":"ftnt-tacacs",authenticated:"fa-user-authenticated",unauthenticated:"fa-user-unauthenticated"},ICON_TYPE_MAP[ICON_TYPE.VDOM]={nat:"ftnt-vdom",tp:"ftnt-vdom-transparent","nat-management":"ftnt-vdom ftnt-management-vdom","tp-management":"ftnt-vdom-transparent ftnt-management-vdom"},ICON_TYPE_MAP[ICON_TYPE.CERTIFICATE]={"local-csr":"ftnt-certificate-local","local-ca":"ftnt-certificate-local","local-cer":"ftnt-certificate-local","remote-cer":"ftnt-certificate-remote","remote-ca":"ftnt-ca-certificates",crl:"ftnt-crl"},ICON_TYPE_MAP[ICON_TYPE.ENABLE_DISABLE]={enable:"fa-enabled",disable:"fa-disabled"},ICON_TYPE_MAP[ICON_TYPE.FGD_CAT_ACTION]={all:"fa-custom-action",pass:"fa-enabled",allow:"fa-enabled",monitor:"fa-monitor",block:"fa-denied",warning:"fa-warning",authenticate:"fa-user-authenticated",reset:"fa-reset",quarantine:"ftnt-quarantine",shaper:"ftnt-traffic"},ICON_TYPE_MAP[ICON_TYPE.SERVER_TYPE]={ftp:"ftnt-ftp-server",http:"ftnt-web-server",imap:"ftnt-mail-server",pop3:"ftnt-mail-server",smb:"ftnt-samba-server",smtp:"ftnt-mail-server",ldap:"ftnt-ldap-server",radius:"ftnt-radius-server","tacacs+":"ftnt-tacacs-server"},ICON_TYPE_MAP[ICON_TYPE.URL_FILTER_ACTION]={allow:"fa-enabled",monitor:"fa-monitor",block:"fa-denied",exempt:"fa-exempt"},ICON_TYPE_MAP[ICON_TYPE.LDAP_ATTRIBUTE_TYPE]={dc:"ftnt-ldap-dc",cn:"fa-users",ou:"fa-folder",o:"ftnt-ldap-organization",street:"ftnt-ldap-address",l:"ftnt-ldap-city",st:"ftnt-ldap-state",c:"ftnt-ldap-country",uid:"ftnt-ldap-uid"},ICON_TYPE_MAP[ICON_TYPE.INTERFACE]={"emac-vlan":"ftnt-vlan","fctrl-trunk":"ftnt-forticontroller-trunk","fext-wan":"ftnt-fortiextender","hard-switch":"ftnt-switch","hard-switch-vlan":"ftnt-switch","ipsec-aggregate":"ftnt-ipsec-aggregate","npu-vlink":"ftnt-npu-vdom-link","npu-vlink-pair":"ftnt-npu-vdom-link","sit-tunnel":"ftnt-vpn-tunnel","switch-vlan":"ftnt-vlan","vap-switch":"fa-wifi","vdom-link":"fa-link","vdom-link-pair":"fa-link","sdwan-zone":"ftnt-virtual-wan-link","wl-mesh":"fa-wifi",aggregate:"ftnt-aggregate",fortilink:"fa-fortilink",geneve:"ftnt-vpn-tunnel",loopback:"ftnt-loopback",physical:"ftnt-interface",pppoe:"ftnt-vpn-tunnel",redundant:"ftnt-aggregate",switch:"ftnt-switch",trunk:"ftnt-interface",tunnel:"ftnt-vpn-tunnel",virtual_wire_pair:"ftnt-virtual-wire-pair",vlan:"ftnt-vlan",vxlan:"ftnt-vpn-tunnel",wireless:"fa-wifi",zone:"fa-square-o"},ICON_TYPE_MAP[ICON_TYPE.ENDPOINT_CONTROL_AVATAR_SOURCE]={LinkedIn:"fa-linkedin-square",Google:"fa-google",SalesForce:"ftnt-salesforce"},ICON_TYPE_MAP[ICON_TYPE.UP_DOWN]={up:"fa-status-up",down:"fa-status-down"},ICON_TYPE_MAP[ICON_TYPE.SDN]={"aws-lambda":"ftnt-aws-lambda",aci:"ftnt-cisco","aci-direct":"ftnt-cisco",alicloud:"ftnt-acs",aws:"ftnt-aws",azure:"ftnt-sdn-azure",gcp:"ftnt-gcp-o-no-border",ibm:"ftnt-sdn-ibm",kubernetes:"ftnt-sdn-kubernetes",nsx:"ftnt-vmware-nsx",nuage:"ftnt-nuage-networks",oci:"ftnt-sdn-oracle-oci",openstack:"ftnt-sdn-openstack",vmware:"ftnt-sdn-esxi"},ICON_TYPE_MAP[ICON_TYPE.WAF_ACTION]={allow:"fa-enabled",monitor:"fa-monitor",block:"fa-disabled",erase:"fa-reset"},ICON_TYPE_MAP[ICON_TYPE.IPS_ACTION]={pass:"fa-enabled",monitor:"fa-monitor",block:"fa-denied",reset:"fa-reset",quarantine:"ftnt-quarantine",default:"fa-cog"},ICON_TYPE_MAP[ICON_TYPE.FABRIC_DEVICE_48PX]={fortiadc:"ftnt-48px-fortiadc",fortiauthenticator:"ftnt-48px-fortiauthenticator",forticasb:"ftnt-48px-forticasb",fortiddos:"ftnt-48px-fortiddos",fortimail:"ftnt-48px-fortimail",fortiweb:"ftnt-48px-fortiweb",fortiwlc:"ftnt-48px-fortiwlc"};const genTitle=function(content){return content?' title="'+content+'"':""},genIcon=function(iconClass,label,iconTitle,includeTitle){let str,title=genTitle(label);return iconTitle=iconTitle?genTitle(iconTitle):title,(includeTitle=null==includeTitle||includeTitle)||(title="",iconTitle=""),str='<f-icon class="'+iconClass+'"'+iconTitle+"></f-icon>",label&&(str+="<span"+title+">"+label+"</span>"),str},iconClass=function(iconType,iconKey){return(ICON_TYPE_MAP[iconType]||{})[iconKey]},getDeviceIconCategory=function(deviceEntry){const key=deviceEntry&&(deviceEntry.os_name||deviceEntry.os)||"unknown";return deviceToDeviceCategoryMap[key]};module.exports={genVdomIconKey:function(vdomName,state){const vdom=state.admin.vdom_info[vdomName];let opMode;if(!vdomName||!vdom)return null;opMode=vdom.transparent_mode?"tp":"nat";const vdomInfo=state.admin.vdom_info[vdomName];return vdomInfo&&vdomInfo.is_management_vdom&&state.admin.global_admin&&(opMode=`${opMode}-management`),opMode},genIcon:genIcon,iconClass:iconClass,formatIcon:function(iconType,iconKey,options){let includeTitle;let iconClass=(ICON_TYPE_MAP[iconType]||{})[iconKey];return includeTitle=null==(options=options||{}).includeTitle||options.includeTitle,!iconClass&&options.fallBackIconClass&&(iconClass=options.fallBackIconClass),genIcon(iconClass,options.label,options.iconTitle,includeTitle)},getDeviceIconCategory:getDeviceIconCategory,getDeviceIcon:function(deviceEntry){let iconKey,icon;return deviceEntry.q_class?(iconKey=`${deviceEntry.q_path}-${deviceEntry.q_name}`,icon=deviceEntry.q_class):deviceEntry.server?(iconKey=deviceEntry.server,icon=iconClass(ICON_TYPE.SERVER_TYPE,iconKey)):(iconKey=getDeviceIconCategory(deviceEntry),icon=iconClass(ICON_TYPE.DEVICE_CATEGORY,iconKey)),icon||(icon=iconClass(ICON_TYPE.DEVICE_CATEGORY,iconKey=deviceToDeviceCategoryMap.unknown)),{iconClass:icon,iconKey:iconKey}},ICON_TYPE:ICON_TYPE,ICON_TYPE_MAP:ICON_TYPE_MAP,ICON_DEVICE_TYPES:DEVICE_TYPES}},,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared){"use strict";const Sliderin=ftnt_shared.Sliderin;var module=ftnt_shared.slideUtil;return module.iframe=function(url,params){0===url.indexOf("/ng/")&&(url+=(url.indexOf("?")>=0?"&":"?")+"viewOnly");var hash=/(.*)(#[^#]+)$/.exec(url);hash&&(url=hash[1],hash=hash[2]),url+=(url.indexOf("?")>=0?"&":"?")+"redir=/success&slideFrame=1"+(hash||"");var slide=new Sliderin($.extend({url:url},params||{}));return slide.open(),slide.promise},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(46),__webpack_require__(52),__webpack_require__(10),__webpack_require__(27),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(structure,fweb_uri,$,notify,ftnt_shared){"use strict";const Sliderin=ftnt_shared.Sliderin;var module={},location_cache={},queued_notifications=[],lastMessageID=0;module.get_current=function(window_object){var loc=(window_object||window).location;return loc.pathname+loc.search+loc.hash},module.logout=function(params){var search,uri="/logout",queryParams={};(params=params||{}).redirect&&(queryParams.redir="string"==typeof params.redirect?params.redirect:module.get_current()),params.messageLangKey&&(queryParams.msg=params.messageLangKey),params.timeout&&(queryParams.timeout=1),(search=fweb_uri.formatParams(queryParams))&&(uri+="?"+search),top.location.href=uri},module.change_ng=function(path,search,embedded,hash){var message={messageType:"changeNgLocation",path:path,search:search,hash:hash,embedded:embedded};structure.topPostMessage(message)},module.change_ng_absolute=function(path,search,hash){var message={messageType:"changeNgLocation",path:path,search:search,hash:hash,absolute:!0};structure.topPostMessage(message)},module.join_with_mkey=function(path_components,mkey,encode){var path=path_components.join("/").replace(/\/\/*/g,"/");return mkey&&(path+="/"+(encode?encodeURIComponent(mkey):mkey)),path},module.get_cache=function(key,initial){var result;return key in location_cache?result=location_cache[key]:null!==initial&&(result=module.set_cache(key,initial)),result},module.set_cache=function(key,value){return location_cache[key]=value},module.clear_cache=function(){location_cache={}},module.notify_after_change=function(message,level,duration,config){queued_notifications.push({message:message,level:level,duration:duration,config:config})},module.notify_queued_notifications=function(){queued_notifications.forEach(function(entry){notify.post(entry.message,entry.level,entry.duration,entry.config)}),queued_notifications=[]},module.go_back=function(url,resolve){(resolve?Sliderin.resolveAndCloseLast:Sliderin.closeLast)()||(url?window.location.href=url:history.back())},module.ifPathAvailable=function(path){var origin=structure.getOrigin(),messageID=lastMessageID++,namespace=".locationMessage"+messageID,result=$.Deferred(),message={messageType:"pathAvailable",id:messageID,path:path,namespace:namespace};return $(window).on("message"+namespace,function(e){var originalEvent=e.originalEvent,data=originalEvent.data,isTrustedOrigin=originalEvent.origin===origin;"pathAvailable"===data.messageType&&isTrustedOrigin&&data.id===messageID&&(data.result?result.resolve():result.reject()),data.namespace===namespace&&$(window).off("message"+namespace)}),structure.topPostMessage(message),result.promise()};let _showInFortiview=function(params){const searchParams={};params["fortiview-sort-by"]=params["fortiview-sort-by"]||"bytes",["tab","returnPath","drilldown","start-timestamp","end-timestamp","fortiview-type","fortiview-visulaization","fortiview-timeframe","fortiview-sort-by","fortigate","vdom"].forEach(key=>params[key]&&(searchParams[key]=params[key])),params.filters&&Object.entries(params.filters).forEach(([key,value])=>searchParams[key]=value),module.change_ng("/system/dashboard-preview/fortiview",searchParams)};return module.drilldownFortiviewSource=function(params){if(!params.sourceAddress)throw new Error("no source ip specified for drilldown");_showInFortiview(Object.assign({},params,{"fortiview-type":"wan"===params.sourceInterfaceRole?"wanSource":"source",drilldown:params.sourceAddress}))},module.drilldownFortiviewDestination=function(params){if(!params.destinationAddress)throw new Error("no destination ip specified for drilldown");_showInFortiview(Object.assign({},params,{"fortiview-type":"wan"===params.sourceInterfaceRole?"wanDestination":"destination",drilldown:params.destinationAddress}))},module.drilldownFortiviewPolicy=function(params){if(!params.policyId)throw new Error("no policy id specified for drilldown");if(!params.policyType)throw new Error("no policy type specified for drilldown");_showInFortiview(Object.assign({},params,{"fortiview-type":"policy",drilldown:params.policyId,filters:{policytype:params.policyType}}))},module.drilldownFortiviewThreats=function(params){if(!params.threat)throw new Error("no threat specified for drilldown");if(!params.threatCategory)throw new Error("no threat category specified for drilldown");_showInFortiview(Object.assign({},params,{"fortiview-type":"threats",drilldown:params.threat,filters:{threattype:params.threatCategory}}))},module.drilldownFortiviewSourceInterface=function(params){if(!params.sourceInterface)throw new Error("Source interface not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"sourceInterface",drilldown:params.sourceInterface}))},module.drilldownFortiviewDestinationInterface=function(params){if(!params.destinationInterface)throw new Error("Destination interface not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"destinationInterface",drilldown:params.destinationInterface}))},module.drilldownFortiviewShaper=function(params){if(!params.shaper)throw new Error("Shaper not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"shaper",drilldown:params.shaper}))},module.drilldownFortiviewCompromisedHost=function(params){if(!params.endpointID)throw new Error("Endpoint ID not provided");if(!params.logtypeMask)throw new Error("Log type mask not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"compromisedHosts",drilldown:params.endpointID,filters:{logtype_mask:params.logtypeMask}}))},module.drilldownFortiviewEndpointDevice=function(params){if(!params.endpointID)throw new Error("Endpoint ID not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"endpointDevices",drilldown:params.endpointID}))},module.drilldownFortiviewSandbox=function(params){if(!params.checksum)throw new Error("Sandbox checksum not provided");_showInFortiview(Object.assign({},params,{"fortiview-type":"sandbox",drilldown:params.checksum}))},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,fwebLog){"use strict";var module={},reportedMissing=new Set,forceSilent=!1,prefixID=function(key){var i,prefix,possible,map=module.getLanguageMap();if(window.lang_prefixes&&map)for(i=0;i<window.lang_prefixes.length;i++)if("/"!==(prefix=window.lang_prefixes[i]).charAt(prefix.length-1)&&(prefix+="/"),(possible=prefix+key)in map){key=possible;break}return key};return module.getLanguageMap=function(){return window.fgt_lang||top.fgt_lang},module.translate=function(id,interpolate,options){var result=null,map=module.getLanguageMap();return id&&(id=prefixID(id),map&&(result=map[id]),result&&interpolate?result=ftnt_shared.lang.stringInterpolate(result,interpolate):null==result&&(result=(options=options||{}).strict?null:interpolate?ftnt_shared.lang.stringInterpolate(id,interpolate):id,forceSilent||options.silent||reportedMissing.has(id)||(map?(fwebLog.warn(`No language entry found for "${id}"`),reportedMissing.add(id)):fwebLog.warn(`Could not get language entry for "${id}" `+"Language file not loaded.")))),result},module.translationExistsFor=function(id){var map=module.getLanguageMap();return id=prefixID(id),null!=map&&null!=map[id]},module.setSilent=function(silent){forceSilent=silent},ftnt_shared.lang.configureTranslationFunction(module.translate),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(39)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntSharedUtil){"use strict";var module={};function getOrigin(){var loc=window.location;return loc.origin||loc.protocol+"//"+loc.host}function topPostMessage(message,opener){(opener||top).postMessage(message,getOrigin())}return module.getOrigin=getOrigin,module.topPostMessage=topPostMessage,module.refreshState=function(){topPostMessage({messageType:"refreshState"})},module.updateLicense=function(fortigate){topPostMessage({messageType:"licenseForceUpdate",fortigate:fortigate})},module.enterVdom=function(vdom){topPostMessage({messageType:"enterVDOM",vdom:vdom})},module.closeResponsiveMenu=function(){topPostMessage({messageType:"closeResponsiveMenu"})},module.updateNotificationsIfActive=function(notificationID){topPostMessage({messageType:"restartNotificationsIf",notificationID:notificationID})},module.updateNotificationsIfAnyActive=function(){topPostMessage({messageType:"restartNotificationsIf"})},module.EMBEDDED_URI_ROUTE="/page",module.ngURI=function(uri){return 0===uri.indexOf("/ng")?uri=uri.replace(/^\/ng/,""):0!==uri.indexOf(module.EMBEDDED_URI_ROUTE)&&"/"===uri[0]&&(uri=module.EMBEDDED_URI_ROUTE+uri),uri},module.openCli=function(entry,mode){var msg={messageType:"openCliConsole",mode:mode};entry&&(msg.entry={q_type:entry.q_type,q_path:entry.q_path,q_name:entry.q_name,q_origin_key:entry.q_origin_key,vdom:entry.vdom}),topPostMessage(msg)},module.openAPSlide=function(wtpID){topPostMessage({messageType:"openAPSlide",wtpID:wtpID,initModules:["/ng/wifi/managed-ap/details/f-ap-details"]})},module.extendAdminTimeout=function(opener){topPostMessage({messageType:"extendAdminTimeout"},opener)},module.listenForAdminActivity=function(){["mousemove","click","keypress"].forEach(function(listenEvent){document.addEventListener(listenEvent,ftntSharedUtil.throttle(function(){this.extendAdminTimeout()}.bind(this),1e3))}.bind(this))}.bind(module),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fwebLog){"use strict";var CHECKED_TYPES=["radio","checkbox"];return{get:function(key){var value=localStorage.getItem(key);return JSON.parse(value)},put:function(key,value){value=JSON.stringify(value),localStorage.setItem(key,value)},remove:remove,session:{get:sessionGet,put:sessionPut,remove:function(key){sessionStorage.removeItem(key)}},hasCookie:function(key){return null!==getCookie(key)},getCookie:getCookie,setCookie:setCookie,removeCookie:function(key,pathname){setCookie(key,void 0,-1,pathname)},getCsrfToken:function(){var cookieStr,cookieName,state=function(){var state=top.state;if(!state&&window.opener)try{state=window.opener.state||window.opener.top.state}catch(e){}return state}();state&&(cookieName=state.ccsrf_token_cookie_name,cookieStr=(cookieStr=getCookie(cookieName)||"").replace(/^"|"$/g,""));return cookieStr},restoreForm:function(form,backingStore){var data,id=backingStore.value,key=storeFormGetKey(form);try{data=sessionGet(key)}catch(ex){return void fwebLog.warn("Error restoring form data @"+key)}data&&data.id===id&&(getNamedFormInputs(form).forEach(function(input){var isInput="input"===input.tagName.toLowerCase(),isCheckable=isInput&&CHECKED_TYPES.includes(input.type);if(input.name in data.fields){var fv=data.fields[input.name];if(isCheckable){var cv=fv.checked;cv&&"object"==typeof cv&&input.value in cv&&(input.checked=cv[input.value])}else Array.isArray(fv.values)&&fv.values.length&&(input.value=fv.values.shift())}}),remove(key))},storeForm:function(form,backingStore){var data={id:backingStore.value,fields:getNamedFormInputs(form).reduce(function(result,input){var isInput="input"===input.tagName.toLowerCase(),isCheckable=isInput&&CHECKED_TYPES.includes(input.type);return input.disabled?result:(result[input.name]=result[input.name]||{checked:{},values:[]},isCheckable?result[input.name].checked[input.value]=input.checked:result[input.name].values.push(input.value),result)},{})};sessionPut(storeFormGetKey(form),data)}};function remove(key){localStorage.removeItem(key)}function sessionGet(key){var value=sessionStorage.getItem(key);return JSON.parse(value)}function sessionPut(key,value){value=JSON.stringify(value),sessionStorage.setItem(key,value)}function setCookie(key,value,expires,pathname,domain,secure){pathname||(pathname=0===location.pathname.indexOf("/ng")?"/ng":location.pathname.substring(0,location.pathname.lastIndexOf("/"))+"/"),null==expires&&(expires=value?31536e6:-1);var expireDate=new Date;expireDate.setTime(expireDate.getTime()+expires),document.cookie=key+"="+encodeURIComponent(value)+(expires?"; expires="+expireDate.toGMTString():"")+"; path="+pathname+(domain?"; domain="+domain:"")+(secure?"; secure="+secure:"")}function getCookie(key,removeQuotes){for(var aCookie=document.cookie.split("; "),i=0;i<aCookie.length;i++){var aCrumb=aCookie[i].split("=");if(key===aCrumb[0]&&2===aCrumb.length)return removeQuotes&&(aCrumb[1]=aCrumb[1].replace(/"/g,"")),aCrumb[1]?decodeURIComponent(aCrumb[1]):aCrumb[1]}return null}function storeFormGetKey(form){return"Persist.storeForm:"+window.location.origin+window.location.pathname+JSON.stringify(["action","method","id"].reduce(function(result,a){return result[a]=form.getAttribute(a),result},{}))}function getNamedFormInputs(form){return Array.from(form.querySelectorAll("input, select, textarea")).filter(function(input){return input.name&&("input"!==input.tagName.toLowerCase()||"password"!==input.type)})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(49),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,persist,BUILD){"use strict";var FILE_DOWNLOAD_CHECK_INTERVAL=1e3,FILE_DOWNLOADING_IFRAME_FLAG="fileDownloadingInsideIframe";return{FILE_DOWNLOADING_IFRAME_FLAG:FILE_DOWNLOADING_IFRAME_FLAG,cachePath:function(path){if(!path||"/"!==path[0])throw new Error("Path must be an absolute path");return"/"+BUILD.CONFIG.CONFIG_GUI_NO+path},urlParams:function(search){search=(null==search?location.search:search).replace(/^\?/,"");var split=/^([^=]+)=(.*)/;return search.split("&").reduce(function(result,param){var match=split.exec(param),key=match&&decodeURIComponent(match[1]),value=match&&decodeURIComponent(match[2]);if(match)if(key in result){var old=result[key];Array.isArray(old)||(result[key]=[old]),result[key].push(value)}else result[key]=value;return result},{})},formatParams:function(search){return Object.keys(search).map(function(key){return encodeURIComponent(key)+"="+encodeURIComponent(search[key])}).join("&")},setQueryValue:function(url,name,value){var re=new RegExp("([?|&])"+name+"=.*?(&|$)"),str=null===value?"":name+"="+encodeURIComponent(value),done=0,newUrl=(url||"").replace(re,function($m,$1,$2){return done=1,str?$1+str+$2:"?"===$1?$1:$2});done?newUrl.indexOf("?")===newUrl.length-1&&(newUrl=newUrl.substr(0,newUrl.length-1)):str&&(newUrl+=(newUrl.indexOf("?")<0?"?":"&")+str);return newUrl},makeExpression:function(uri){return uri=uri.replace(/\/$/,"").replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&"),new RegExp(uri+"(/.*)?")},indicateFileDownloadIntention:indicateFileDownloadIntention,downloadFile:function(uri){var deferred=$.Deferred(),cookieName=top.state.file_downloading_cookie_name;setTimeout(function checkCookieSet(){var cookie=persist.getCookie(cookieName);cookie?(persist.removeCookie(cookieName),deferred.resolve(cookie)):setTimeout(checkCookieSet,FILE_DOWNLOAD_CHECK_INTERVAL)},FILE_DOWNLOAD_CHECK_INTERVAL),persist.removeCookie(cookieName),window!==top&&indicateFileDownloadIntention();return window.location.assign(uri),deferred.promise()},isSafe:function(uri){var current=window.location,a=document.createElement("a");return a.href=uri,current.protocol===a.protocol&&current.hostname===a.hostname&&current.port===a.port},makeCsfUri:function(uri,csfPath){csfPath&&(uri=`/csf/${csfPath}${uri}`);return uri}};function indicateFileDownloadIntention(){window[FILE_DOWNLOADING_IFRAME_FLAG]=!0}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(92),__webpack_require__(52)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,firewallInterfaces,uri){"use strict";var module={getDedicatedToFortiSwitchInterface:function(csfPath){const state=top.state,isGlobal=!state.vdom_mode||!state.current_vdom;return firewallInterfaces.get(isGlobal,csfPath).then(module.findDedicatedToFortiSwitchInterface)},findDedicatedToFortiSwitchInterface:function(interfaces){var fortilinkIntf,maxManagedDeviceCount=-1;return interfaces.forEach(function(intf){intf.is_switchctl_interface_mode&&intf.managed_devices.length>maxManagedDeviceCount&&(fortilinkIntf=intf,maxManagedDeviceCount=intf.managed_devices.length)}),fortilinkIntf||$.Deferred().reject()},constructDeviceMapping:function(fswDetectedDevice){var fswDeviceMap={};return(fswDetectedDevice||[]).forEach(function(device){var mac=device.mac&&device.mac.toLowerCase();if(mac){var existing=fswDeviceMap[mac];(!existing||device.last_seen<existing.last_seen)&&(fswDeviceMap[mac]=device)}}),fswDeviceMap},getDHCPSnoopingMap:function(vlanId,vdom){var dhcpSnoopingUrl="/api/v2/monitor/switch-controller/managed-switch/dhcp-snooping";vdom&&(dhcpSnoopingUrl=uri.setQueryValue(dhcpSnoopingUrl,"vdom",vdom));var result={};return $.get(dhcpSnoopingUrl).then(function(data){return(data.results||[]).forEach(function(switchData){var switchId=switchData.switch_id,portMap=result[switchId]=result[switchId]||{};(switchData.snooping_entries||[]).forEach(function(server){if(null==vlanId||vlanId===String(server.vlan)){var serverStatus=server.status,statusCount=portMap[server.interface]=portMap[server.interface]||{};statusCount[serverStatus]=(statusCount[serverStatus]||0)+1}})}),result})},getPortStpStatus:function(switchStats,portStats){let result="";for(const stpInstance of switchStats.stp_status||[]){for(const portStp of stpInstance.port_stp_status||[])if(portStp.port_name===portStats.isl_peer_trunk_name||portStp.port_name===portStats.interface){if("DISABLED"===portStp.port_role){result="disabled";break}"FORWARDING"===portStp.port_state?result="forwarding":"DISCARDING"===portStp.port_state&&(result="discarding");break}if(result)break}return result}};const STATUS=module.STATUS={CONNECTING:"Connecting",CONNECTED:"Connected",CONNECTED_IMAGE:"Connected Image",IMAGE_DOWNLOADING:"Image Downloading",IDLE:"Idle"},STATUS_PREFIX="ManagedSwitch::status.";module.STATUS_LANG={[STATUS.IDLE]:`${STATUS_PREFIX}Idle`,[STATUS.CONNECTED]:`${STATUS_PREFIX}connected`,[STATUS.CONNECTING]:`${STATUS_PREFIX}connecting`,[STATUS.IMAGE_DOWNLOADING]:`${STATUS_PREFIX}image_downloading`,[STATUS.CONNECTED_IMAGE]:`${STATUS_PREFIX}connected_image`},module.STATUS_ICON={[STATUS.IDLE]:"fa-status-down",[STATUS.CONNECTED]:"fa-enabled",[STATUS.CONNECTING]:"fa-status-down",[STATUS.IMAGE_DOWNLOADING]:"fa-download",[STATUS.CONNECTED_IMAGE]:"fa-download"};const STATE=module.STATE={DEAUTHORIZED:"DeAuthorized",AUTHORIZED:"Authorized",DISCOVERED:"Discovered"};return module.STATE_LANG={[STATE.DISCOVERED]:`${STATUS_PREFIX}unauthorized`,[STATE.DEAUTHORIZED]:`${STATUS_PREFIX}unauthorized`,[STATE.AUTHORIZED]:`${STATUS_PREFIX}connected`},module.STATE_ICON={[STATE.AUTHORIZED]:"fa-enabled",[STATE.DEAUTHORIZED]:"fa-disabled",[STATE.DISCOVERED]:"fa-unknown"},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8),__webpack_require__(0),__webpack_require__(30),__webpack_require__(108),__webpack_require__(66),__webpack_require__(38),__webpack_require__(133),__webpack_require__(417),__webpack_require__(175),__webpack_require__(168),__webpack_require__(169)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared,BUILD,fLog,fUtil,ips_common,utilIcon,utilAws,UserDevice,FosState,utilFirewallInterfaces){"use strict";const{SYMBOLS:SYMBOLS}=BUILD,{Tooltip:Tooltip,Omniselect:Omniselect}=ftnt_shared,{TooltipKey:TooltipKey,TooltipFooterAction:TooltipFooterAction}=Omniselect,{address_search:fAddressSearch,avatars:fAvatars,datetime:fDateTime,dom:dom,firewallInterfaces:fInterfaces,formatters:formatters,fortiguard:fFortiGuard,ip:fIp,ldap:fLdap,location:fLocation,mac:fMac,quarantine:fQuarantine,slideBridge:slideBridge,sort:fSort,structure:fStructure,switchctrl:fSwitchctrl,userInfo:fUserInfo,wifi:wifi,persist:fPersist}=fUtil,{getCSFProxySourceID:getCSFProxySourceID,makeAllVdomsSourceID:makeAllVdomsSourceID,makeCSFSourceURI:makeCSFSourceURI,makeGlobalSourceID:makeGlobalSourceID,getSourceCSFPath:getSourceCSFPath,getSourceEntryIdKey:getSourceEntryIdKey,getCMDBTable:getCMDBTable,isSourceForAllVdoms:isSourceForAllVdoms,isSourceForCSF:isSourceForCSF,isSourceGlobal:isSourceGlobal,makeCSFProxySourceID:makeCSFProxySourceID,makeAllVdomsProcessFn:makeAllVdomsProcessFn,allVdomsEntryIdKeyFn:allVdomsEntryIdKeyFn,setAllVdomsEntryId:setAllVdomsEntryId,GLOBAL_VDOM_SOURCES:GLOBAL_VDOM_SOURCES}=fUtil.select,{translate:translate}=fUtil.lang,fPatterns=fUtil.patterns.commonRegExp;var MONITOR_URI="/api/v2/monitor/";var FIREWALL_INTERFACE_SUBTYPES=[{type:"ha",global:!0},{type:"zone",global:!0},{type:"sdwan",global:!0},{type:"vwp",global:!0},{type:"switch",global:!0},{type:"hard-switch",global:!0},{type:"config",global:!0},{type:"limited",global:!0}];const SDN_CONNECTOR_SUPPORT_FILTERS=["aci-direct","alicloud","aws","azure","gcp","ibm","kubernetes","oci","openstack","sepm"],SDN_CONNECTOR_AUTO_ACTION_MAP=new Map([["alicloud","alicloud-function"],["aws","aws-lambda"],["azure","azure-function"],["gcp","google-cloud-function"],["nsx","quarantine-nsx"]]),{EXT_CONN_STATUS_SUCCESS:EXT_CONN_STATUS_SUCCESS,EXT_CONN_STATUS_UNAVAILABLE:EXT_CONN_STATUS_UNAVAILABLE,EXT_CONN_STATUS_ERROR:EXT_CONN_STATUS_ERROR,EXT_FILE_STATUS_DOWNLOADED:EXT_FILE_STATUS_DOWNLOADED,EXT_FILE_STATUS_FAILED_OPEN:EXT_FILE_STATUS_FAILED_OPEN,EXT_FILE_STATUS_UNAVAILABLE:EXT_FILE_STATUS_UNAVAILABLE}=SYMBOLS,CONN_STATUS_ICON_MAP={[EXT_CONN_STATUS_SUCCESS]:"fa-connected",[EXT_CONN_STATUS_ERROR]:"fa-disabled",[EXT_CONN_STATUS_UNAVAILABLE]:"fa-unknown"},FILE_STATUS_ICON_MAP={[EXT_FILE_STATUS_DOWNLOADED]:"fa-connected",[EXT_FILE_STATUS_FAILED_OPEN]:"fa-disabled",[EXT_FILE_STATUS_UNAVAILABLE]:"fa-warning"},USER_FSSO_SUPPORT_TAGS=["fortiems","fortiems-cloud","fortinac"];var pluckName=function(entry){return entry.name},module={},createWritePermissionCheck=function(path,name){return function(){return!!top.state&&top.state.adminHasWritePermissionForTable(path,name)}};const hasGuiIPv6EnabledForCreateNew=function(path,name,globalOnly=!1){return()=>{let needCheck=!0;return globalOnly&&(needCheck=top.state&&!top.state.vdom_mode),needCheck&&top.state&&top.state.featureEnabled("gui-ipv6")&&createWritePermissionCheck(path,name)}};var createUtmProfilePermissionCheck=function(path,name){return function(){return createWritePermissionCheck(path,name)()&&top.state.featureEnabled("gui-multiple-utm-profiles")}};const createReplaceMsgGroupPermissionCheck=()=>()=>createWritePermissionCheck("system","replacemsg-group")()&&top.state.featureEnabled("gui-replacement-message-groups");var createGlobalOnlyObjectPermissionCheck=function(path,name){return function(){return!(!top.state||top.state.vdom_mode)&&createWritePermissionCheck(path,name)}},createExtensionSource=module.createExtensionSource=function(sourceID,extensionSourceID,config){var existing=Omniselect.prototype.SOURCES[sourceID],extension=$.extend(!0,{},existing,config);extension.aliasFor?"string"==typeof extension.aliasFor&&(extension.aliasFor=[extension.aliasFor]):extension.aliasFor=[],extension.aliasFor.push(sourceID),Omniselect.prototype.SOURCES[extensionSourceID]=extension};const createCMDBSource=function(path,name,params={}){return async function(meta,sourceID){let results;const source=this.getSource(sourceID),csfPath=getSourceCSFPath(source.id),allVdoms=!params.vdom&&isSourceForAllVdoms(sourceID);try{results=await getCMDBTable(path,name,{csfPath:csfPath,format:params.format,allVdoms:allVdoms,vdom:params.vdom,globalScope:source.globalScope,noDatasource:params.noDatasource,filter:params.filter,plainTextPassword:params.plainTextPassword,optimizeForLargeDataset:params.optimizeForLargeDataset})}catch(e){results=[]}return"function"==typeof params.processFn&&(results=params.processFn.call(this,results,meta,sourceID)),results}};var createSchemaSource=function(path,name,propName,idKey,datasource,processFn){return function(){var uri="/api/v2/cmdb/"+path+"/"+name+"?action=schema";return $.get(uri).then(function(data){return function(propEntries){var options=(propEntries[propName]&&propEntries[propName].options||[]).map(function(option){return option.q_origin_key=option[idKey],option.datasource=datasource,option});$.isFunction(processFn)&&(options=processFn(options));return options}(data.results.children)})}},createDatasourceSearch=function(keys){var search=function(value,query){return Array.isArray(value)&&value.length?value.some(function(obj){return search(obj,query)}):"object"==typeof value?String(value.q_origin_key).toLowerCase().indexOf(query)>=0:String(value).toLowerCase().indexOf(query)>=0};return function(entry,query){if(Array.isArray(keys))return keys.some(key=>search(entry[key],query));var value=entry[keys];return search(value,query)}};const createCMDBTooltipFooterActions=function(params){if(!params.path||!params.name)throw new Error("Path/name not provided");params.showInListQueryParam=params.showInListQueryParam||"showInList",params.showInListProperties=params.showInListProperties||["q_origin_key"];const hasReadPermission=()=>top.state&&top.state.adminHasReadPermissionForTable(params.path,params.name),isInlineEditSource=(selectInstance,sourceID)=>{return!!selectInstance.getSource(sourceID).inlineEdit},canEditEntry=(entry,sourceID,selectInstance)=>!entry.q_no_edit&&(()=>top.state&&top.state.adminHasWritePermissionForTable(params.path,params.name))()&&isInlineEditSource(selectInstance,sourceID),clickEditView=function(entry,sourceID){const source=this.getSource(sourceID);(source.inlineEditFunction||Omniselect.prototype.DEFAULT_INLINE_EDIT_FUNCTION).call(this,source.id,entry)};let actions=[];return actions.push(new TooltipFooterAction({label:translate("edit"),iconClass:"fa-pencil",visibleFunction:function(entry,sourceID){return canEditEntry(entry,sourceID,this)},onClick:clickEditView})),actions.push(new TooltipFooterAction({label:translate("view"),iconClass:"fa-eye",visibleFunction:function(entry,sourceID){return!canEditEntry(entry,sourceID,this)&&((entry,sourceID,selectInstance)=>hasReadPermission()&&isInlineEditSource(selectInstance,sourceID))(0,sourceID,this)},onClick:clickEditView})),params.showInListAction&&actions.push(new TooltipFooterAction({label:translate("Show in List"),iconClass:"fa-external-link",visibleFunction:function(entry,source){const fortigate=this.getSource(source).fortigate,isCurrent=!fortigate||fortigate.isCurrent;return hasReadPermission()&&isCurrent},onClick:entry=>{const path=entry.q_path,name=entry.q_name,url=top.state.getListUrl(path,name);let search={},showInlistParams={};if("function"==typeof params.showInListSearchFormatter)search=params.showInListSearchFormatter(entry);else{for(const prop of params.showInListProperties)showInlistParams[prop]=entry[prop];search[params.showInListQueryParam]=JSON.stringify(showInlistParams)}if(params.showInListAsSlide){(new slideBridge.Client).openRouteAsSlide({uri:url,searchParams:search})}else fLocation.change_ng(fStructure.ngURI(url),search)}})),params.otherActions&&(actions=[...actions,...params.otherActions]),actions},createTooltipFooterSlideAction=params=>{if(params.template)return new TooltipFooterAction({label:params.label,iconClass:params.iconClass,visibleFunction:params.visibleFunction,onClick:entry=>{const slideParams={template:params.template,parentScope:"function"==typeof params.parentScope?params.parentScope(entry):params.parentScope||{},options:{fullHeight:!0,title:"function"==typeof params.title?params.title(entry):params.title}},slideBridgeClient=new slideBridge.Client,slideID=params.id||"omniselectTooltipActionSlide";return slideBridgeClient.open(params.initModules||[],slideID,slideParams).catch(()=>{})}});fLog.error("Omniselect tooltip slide action must have a template specified.")};var commonGroupSearch=function(value,query){return value.member.some(function(member){return Omniselect.queryMatchesEntrySync(query,member,member.datasource)})},datasourceTooltipFormat=module.datasourceTooltipFormat=function(entry){var html="",icon=entry["css-class"];return icon&&(html=dom.create_icon_html(icon,{iconSize:"small"})),html+="object"==typeof entry?"<span>"+(entry.q_origin_key||entry.name)+"</span>":"<span>"+entry+"</span>"},nColumnListFormat=formatters.nColumnListFormat,shaperStatsTooltipKey=function(langKey,key,metaDataSource,formatter){return new TooltipKey($.getInfo(langKey),function(entry){var stat=this.getSourceMetaData(metaDataSource)[entry.name];if(stat&&stat[key])return formatter(stat[key])},function(entry){var stat=this.getSourceMetaData(metaDataSource)[entry.name];return stat&&stat[key]},!0)},userInfoTooltipKey=function(attribute,formatter){return formatter=formatter||function(entry){if(entry[attribute]&&entry[attribute][0])return dom.escapeHTML(entry[attribute][0])},new TooltipKey($.getInfo(`user_info::${attribute}`),function(entry){return formatter(entry)},null,"user.info")},userInfoDeviceTooltipKey=function(attribute,formatter){return formatter=formatter||function(userInfo){if(userInfo[attribute]&&userInfo[attribute][0])return dom.escapeHTML(userInfo[attribute][0])},new TooltipKey($.getInfo(`user_info::${attribute}`),function(entry){let userInfo=entry.user_info||{};return formatter(userInfo)},null,"user.info")},userInfoManagerFormatter=function(userInfo){let dn=userInfo.manager&&userInfo.manager[0];if(!dn)return;let dnObj=fLdap.dn_to_obj(dn);return dnObj?dom.escapeHTML(dnObj.cn):dom.escapeHTML(dn)};const win32EpochToUnixEpoch=function(){const win32Epoch=Date.UTC(1601,0);return function(n){return n/=1e4,n+=win32Epoch}}();var userInfoAccountExpiresFormatter=function(userInfo){const accountExpires=userInfo.accountExpires&&userInfo.accountExpires[0];if(accountExpires){if("0"===accountExpires||"9223372036854775807"===accountExpires)return $.getInfo("user_info::accountExpires::never");if(/^\d+$/.test(accountExpires)){let n=parseInt(accountExpires);return n=win32EpochToUnixEpoch(n),fDateTime.formatDateTime(n)}return dom.escapeHTML(accountExpires)}},userInfoMemberOfFormatter=function(userInfo){const groups=userInfo.memberOf;if(groups)return dom.fragment(groups.map(group=>dom.elem("div",{textContent:group})))},shaperBandwidthFormatter=function(key){return function(entry){var value=entry[key]||"";return value&&(value+=" "+$.getInfo(entry["bandwidth-unit"]||"kbps")),value}},createMembersTooltipFormatter=module.createMembersTooltipFormatter=function(key){return function(entry){var html,value=entry[key];return Array.isArray(value)?value.length&&(html=nColumnListFormat(value,2,datasourceTooltipFormat)):"object"==typeof entry[key]&&(html=datasourceTooltipFormat(value)),html}},createEscapedTooltipFormatter=module.createEscapedTooltipFormatter=function(key){return function(entry){var value=entry[key];return value&&(value=dom.escapeHTML(entry[key])),value}},createWTPRadioTooltipFormatter=function(radioID){return function(entry){var meta=this.getSourceMetaData("wireless-controller.wtp"),managedAP=meta.managedAPMap[entry["wtp-id"]],wifiCommon=meta.wifiCommon,wtpRadio=managedAP.radio.find(function(radio){return radio.radio_id===radioID&&("AP"===radio.mode&&radio.radio_type||["Monitor","Disabled","Sniffer"].includes(radio.mode))});if(!wtpRadio||"connected"!==managedAP.status)return;if(["Monitor","Disabled","Sniffer"].includes(wtpRadio.mode))return dom.elem("span",{textContent:$.getInfo(`RadioMode::${wtpRadio.mode.toLowerCase()}`)});const channelUtilizatonEnabled=wtpRadio.channel_utilization&&!managedAP.is_local;var fields=[{label:$.getInfo("field_oper_chan"),selector:"oper_chan"},{label:$.getInfo("client_count"),selector:"client_count"},{label:$.getInfo("field_oper_txpower"),selector:"oper_txpower",unit:" dbm"},{label:$.getInfo("Channel Utilization"),selector:channelUtilizatonEnabled?"channel_utilization_percent":"",unit:channelUtilizatonEnabled?"%":$.getInfo("n/a")}],br=dom.elem("br"),table=dom.elem("table",{className:"table key-value condensed"},{children:[dom.elem("tbody",null,{children:[dom.elem("tr",null,{children:[dom.elem("td",{textContent:$.getInfo("radio_type")}),dom.elem("td",{textContent:$.getInfo("wifi::"+wifiCommon.getFrequencyForBand(wtpRadio.radio_type))})]})].concat(fields.map(function(field){return dom.elem("tr",null,{children:[dom.elem("td",{textContent:field.label}),dom.elem("td",{textContent:(field.selector&&wtpRadio[field.selector])+(field.unit||"")})]})}))})]});return dom.elem("div",null,{children:[br,table]})}};function apPlatformRadioTooltip(radio){let result;const bands=[];for(const band of["24ghz","5ghz"])radio[band]&&(bands.length&&bands.push(dom.elem("br")),bands.push(dom.elem("span",{textContent:translate(`wifi::${band}`)})));return result=dom.elem("div",null,{children:bands})}function splitApPlatformGroupString(groupString){let result=[0,""],regexResult=/^([0-9]+)-([a-z]*)$/.exec(groupString);if(regexResult){const[,wifiGenStr,series]=regexResult;result=[parseInt(wifiGenStr),series]}return result}const commentTooltipKey=new TooltipKey($.getInfo("comment"),createEscapedTooltipFormatter("comment")),commentsTooltipKey=new TooltipKey($.getInfo("comment"),createEscapedTooltipFormatter("comments")),membersTooltipKey=new TooltipKey($.getInfo("members"),createMembersTooltipFormatter("member")),referencesTooltipKey=new TooltipKey(translate("References"),function(entry){const sourceID=Omniselect.prototype.ENTRY_SOURCE_ID_FUNCTION(entry),source=this.getSource(sourceID),serial=source.fortigate&&source.fortigate.serial;let anchor;return null!=entry.q_ref&&(anchor=dom.elem("a",{href:"#",textContent:entry.q_ref},{attributes:{[Tooltip.CLOSE_ON_CLICK_ATTRIBUTE]:"true"},events:{click:function(event){const mkey=entry.q_origin_key,vdom=entry.vdom;let types=[entry.q_type];Array.isArray(entry.q_type_extra)&&(types=types.concat(entry.q_type_extra)),fStructure.topPostMessage({messageType:"showObjectUsage",qTypes:types,mkey:mkey,vdom:vdom,fortigate:serial}),event.preventDefault()}}})),anchor}),profileFeatureSetTooltipKey=new TooltipKey(translate("Feature set"),function(entry){if(entry["feature-set"])return translate(`inspection_mode::${entry["feature-set"]}`)});var iconMapping,valueProcessFn,createTranslatedTooltipFormatter=function(key,langPrefix,langMap){return function(entry){var value=entry[key];return langPrefix?$.getInfo(langPrefix+value):$.getInfo(langMap&&langMap[value]||value)}},scopeTranslatedFormatter=createTranslatedTooltipFormatter("q_global_entry",null,{true:"global",false:"VDOM"}),scopeTooltipKey=new TooltipKey($.getInfo("scope"),function(entry){return top.state.vdom_mode&&scopeTranslatedFormatter(entry)}),formatRange=function(value){return value.indexOf("-")>=0&&(value=value.replace(/-/g," - ")),value},profileFormatFunction=function(entry,value){var html="",icon=entry.q_class||entry["css-class"];return icon&&(html=dom.create_icon_html(icon,{iconSize:"small"})),html+="<span>"+value+"</span>"},createIpPoolStatsFormatFunction=function(source,metaKey){return function(entry){var poolMeta=this.getSourceMetaData(source),pool=poolMeta&&poolMeta.poolStats&&poolMeta.poolStats[entry.name];return pool&&null!=pool[metaKey]&&pool[metaKey].toString()}},enableDisableFormatFn=(iconMapping={enable:"fa-enabled",disable:"fa-disabled"},valueProcessFn=function(value){return value=value?$.getInfo(value+"d"):""},function(entry,key){var value=entry[key],icon="function"==typeof iconMapping?iconMapping(value,entry):(iconMapping||{})[value],iconHtml="";return icon&&(iconHtml+='<f-icon class="'+icon+'"></f-icon>'),iconHtml+"<span>"+(value="function"==typeof valueProcessFn?valueProcessFn(value,entry):$.getInfo(value))+"</span>"}),VIP6_CONFIG={searchKeys:{extip:!0,extport:!0,mappedip:!0,mappedport:!0,comment:!0},tooltipKeys:{extip:new TooltipKey($.getInfo("extip"),function(entry){return formatRange(entry.extip)}),mappedip:new TooltipKey($.getInfo("mappedip"),function(entry){return entry.mappedip&&formatRange(entry.mappedip)}),extport:new TooltipKey($.getInfo("extport"),function(entry){return"enable"===entry.portforward?$.getInfo(entry.protocol)+" "+formatRange(entry.extport):entry.extport}),mappedport:new TooltipKey($.getInfo("mappedport"),function(entry){if("enable"===entry.portforward)return formatRange(entry.mappedport)}),comment:commentTooltipKey,references:referencesTooltipKey}},createExternalResourceSource=function(type,datasource){return createCMDBSource("system","external-resource",{processFn:function(resources){return(resources=(resources||[]).filter(function(resource){return resource.type===type})).forEach(function(resource){var hasCategory=["category","domain"].includes(resource.type);resource.q_origin_key=hasCategory?resource.category.toString():resource.name,hasCategory&&(resource.id=resource.category),resource.datasource=datasource||"system.external-resource"}),resources}})},processApplications=function(applications,meta,sourceID){const csfPath=getSourceCSFPath(sourceID);return Omniselect.getSourceData(getCSFProxySourceID("application.category",csfPath)).then(function(categories){var categoryMap=categories.mapping;return applications.forEach(function(app){app.datasource=sourceID,app.q_origin_key=app.id.toString();var category=categoryMap[app.category];app.categoryName=category?categoryMap[app.category].name:$.getInfo("unknown")}),applications})};const deviceFindMatchingFirewallAddress=function(selectInstance,entry,key){const metaData=selectInstance.getSourceMetaData("devices"),firewallAddressSourceID=metaData.addressSourceID,addrMap=metaData&&metaData.addressMap,value=entry[key];if(addrMap&&value){let firewallAddress=addrMap[`${value}-${"mac"===key?"mac":"ipv4"}`];if(firewallAddress)return{firewallAddress:firewallAddress,firewallAddressSourceID:firewallAddressSourceID}}},deviceAddressTooltipFn=function(selectInstance,entry,key){const result=deviceFindMatchingFirewallAddress(selectInstance,entry,key);return result?Omniselect.formatEntry(result.firewallAddress,result.firewallAddressSourceID):entry[key]},deviceInterfaceTooltipFn=function(selectInstance,entry,key){const tooltipData=selectInstance.getTooltipData(entry),metaData=selectInstance.getSourceMetaData("devices"),intfMap=tooltipData&&tooltipData.firewallInterfaces,noOtherInterfaces=!Array.isArray(entry.online_interfaces)||!entry.online_interfaces.length,firewallInterfacesSourceID=metaData&&metaData.firewallInterfacesSourceID,intfName=entry.detected_interface;let interfaces;if((!noOtherInterfaces||intfName)&&(interfaces="online_interfaces"===key?entry.online_interfaces||[]:noOtherInterfaces&&intfName?[intfName]:[]).length){const numCols=entry.fortiap_id||entry.fortiswitch_id?2:1;return nColumnListFormat(interfaces,numCols,function(name){const intf=intfMap&&intfMap[name];if(!intf)return name;let formatted=Omniselect.formatEntry(intf,firewallInterfacesSourceID);return formatted=formatters.interfaceWithFswFapInfo(formatted,entry,intf.vlan_id)})}},isWildCardFqdn=fqdn=>fqdn&&(fqdn.includes("*")||fqdn.includes("?")),resolvedAddressesFormatter=({resolvedMap:resolvedMap,key:key,unresolvedMessage:unresolvedMessage,messageFn:messageFn})=>{const resolvedEntry=resolvedMap&&resolvedMap[key],resolvedAddrs=resolvedEntry&&resolvedEntry.addrs||[];return resolvedAddrs.length?nColumnListFormat(resolvedAddrs,3,addr=>addr):!messageFn&&unresolvedMessage?(msg=>`<f-icon class="fa-warning"></f-icon><span>${msg}</span>`)(unresolvedMessage):"function"==typeof messageFn?messageFn(resolvedEntry):void 0},createUserFormatter=userType=>entry=>{return`${utilIcon.formatIcon(utilIcon.ICON_TYPE.USER,userType,{fallBackIconClass:"fa-user-local"})}<span>${entry.name}</span>`};var profileGroupUtmFormatter=module.profileGroupUtmFormatter=function(type){return function(entry){if(entry[type]){var html=dom.create_icon_html(entry[type]["css-class"],{iconSize:"small"});return html+="<span>"+entry[type].name+"</span>"}}},truncatedListFormat=function(entries,n,formatFn){var html;return formatFn=formatFn||function(entry){return entry},entries&&entries.length?(html=formatFn(entries[0]),entries.length>=n&&(html+=$.getInfo(" + {0} more",[entries.length-1]))):entries&&(html=formatFn(entries)),html};function createInterfaceFormatFunction(selector){return function(entry,key,meta,sourceID){if(entry&&entry[selector]){var datasource=Omniselect.prototype.ENTRY_SOURCE_ID_FUNCTION(entry),csfPath=this.getSource(datasource).csfPath;try{return truncatedListFormat(entry[selector],2,function(intf){return Omniselect.processedFormatEntrySync({q_origin_key:intf.q_origin_key,datasource:getCSFProxySourceID(sourceID||"firewallInterfaces",csfPath)})})}catch(e){return""}}}}function getCompleteInterfacesSourceID(sourceId){if(Omniselect.prototype.SOURCES[sourceId].$incompleteInterfacesSource){const csfPath=getSourceCSFPath(sourceId);return getCSFProxySourceID("firewallInterfaces",csfPath)}return sourceId}const createDeviceHeaderHTML=module.createDeviceHeaderHTML=function(entry,sourceID){const csfPath=getSourceCSFPath(sourceID),headerElem=fAvatars.headerFormatFn({user:entry.user_info&&entry.user_info.cn&&entry.user_info.cn[0],unauthuser:entry.unauth_user,uid:entry.forticlient_id,isFortiClientUnauthuser:entry.is_forticlient_unauth_user,display_mode:"large",addr:entry.ipv4_address||entry.ipv6_address,csfPath:csfPath,iconType:entry.iconType,email:entry.email,phone:entry.phone,forticlientUsername:entry.forticlient_username,avatarSource:entry.avatar_source,userInfo:entry.user_info,quarantined:entry.isQuarantined,banned:entry.isBanned,emsQuarantined:entry.quarantined_on_forticlient});if(headerElem)return dom.elem("div",{},{children:[headerElem]}).innerHTML};function isPolicyWithStats(entry){const NO_STATS_POLICIES=new Set(["firewall.policy64","firewall.policy46","firewall.multicast-policy","firewall.DoS-policy","firewall.DoS-policy6","firewall.security-policy"]),sourceID=Omniselect.prototype.ENTRY_SOURCE_ID_FUNCTION(entry);return!NO_STATS_POLICIES.has(sourceID)}function searchArray(key){return function(entry,searchString,searchRegex){return Array.isArray(entry[key])&&entry[key].some(intf=>searchRegex.test(intf.name))}}const POLICY_CONFIG={alternativeEntryIDs:["uuid"],formatFunction:function(policy){const policyID=policy.q_origin_key;let formatted;return formatted=policy.name?`${dom.escapeHTML(policy.name)} (${policyID})`:policyID},metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID);return Promise.all([Omniselect.getSourceData(getCSFProxySourceID("firewallInterfaces",csfPath))])},tooltipData:function(entry,sourceID){if(isPolicyWithStats(entry)){const[path,name]=sourceID.split("::").slice(-1)[0].split("."),uri=`${MONITOR_URI}${path}/${name}?policyid=${entry.q_origin_key}`;return $.get(makeCSFSourceURI(uri,sourceID)).then(response=>response.results[0])}return Promise.resolve()},searchKeys:{name:!0,srcintf:searchArray("srcintf"),dstintf:searchArray("dstintf"),srcaddr:searchArray("srcaddr"),dstaddr:searchArray("dstaddr")},tooltipKeys:{id:new TooltipKey($.getInfo("Policy ID"),entry=>entry.q_origin_key),name:new TooltipKey($.getInfo("Name")),srcintf:new TooltipKey($.getInfo("Source"),createInterfaceFormatFunction("srcintf")),dstintf:new TooltipKey($.getInfo("Destination"),createInterfaceFormatFunction("dstintf")),interface:new TooltipKey($.getInfo("interface"),createInterfaceFormatFunction("interface")),profiles:new TooltipKey($.getInfo("Security Profiles"),function(entry){const PROFILE_PROPERTIES=["av-profile","emailfilter-profile","webfilter-profile","dnsfilter-profile","waf-profile","application-list","ips-sensor","dlp-sensor","icap-profile","voip-profile","ssl-ssh-profile","profile-group"],profiles=[];for(let property of PROFILE_PROPERTIES){const profile=entry[property];profile&&profiles.push({name:profile.q_origin_key,iconClass:profile["css-class"]})}if(profiles.length)return dom.elem("div",null,{children:profiles.map(profile=>dom.elem("span",{className:profile.iconClass}))})}),action:new TooltipKey($.getInfo("Action"),function(entry){var action=entry.action,icon={accept:"fa-accepted",deny:"fa-denied",authenticate:"ftnt-ipsec-vpn-custom",permit:"fa-accepted"}[action];return(icon='<f-icon class="'+icon+'"></f-icon>')+"<span>"+(action=action?$.getInfo("Firewall::policyAction."+action):"")+"</span>"}),logtraffic:new TooltipKey($.getInfo("Log"),function(entry){var value=entry.logtraffic,html='<f-icon class="'+{all:"fa-enabled",enable:"fa-enabled",utm:"fa-shield",disable:"fa-disabled",unknown:"fa-unknown"}[value]+'"></f-icon>';return html+="<span>"+$.getInfo({enable:"enabled",disable:"disabled",utm:"UTM"}[value]||value)+"</span>"}),comments:commentsTooltipKey,firstUsed:new TooltipKey($.getInfo("first_used"),function(entry){if(isPolicyWithStats(entry)){const stats=this.getTooltipData(entry);return stats.first_used?dom.elem("div",null,{children:[dom.elem("f-icon",{className:"fa-clock-o"}),dom.elem("span",{textContent:fDateTime.formatDateTime(new Date(1e3*stats.first_used))})]}):dom.elem("div",{textContent:$.getInfo("Never")})}},null,!0),lastUsed:new TooltipKey($.getInfo("Last Used"),function(entry){if(isPolicyWithStats(entry)){const stats=this.getTooltipData(entry);return stats.last_used?dom.elem("div",null,{children:[dom.elem("f-icon",{className:"fa-clock-o"}),dom.elem("span",{textContent:fDateTime.formatDateFromNow(new Date(fDateTime.fortiGateUTCToBrowserUTC(1e3*stats.last_used)))})]}):dom.elem("div",{textContent:$.getInfo("Never")})}},null,!0),hitCount:new TooltipKey($.getInfo("hit_count"),function(entry){if(isPolicyWithStats(entry)){return(this.getTooltipData(entry).hit_count||0).toLocaleString()}},null,!0),bytes:new TooltipKey($.getInfo("Bytes"),function(entry){if(isPolicyWithStats(entry)){const stats=this.getTooltipData(entry);return formatters.metric_bytes(stats.bytes)}},null,!0)}},createPolicyTooltipFooterActions=(path,name)=>createCMDBTooltipFooterActions({path:path,name:name,showInListAction:!0,showInListSearchFormatter:entry=>{const id=Number(entry.policyid||entry.id||0);return{showInList:JSON.stringify({q_origin_key:id})}}}),createApplicationSignatureSlideAction=params=>createTooltipFooterSlideAction(Object.assign({label:translate("View Signatures"),title:()=>translate("Application Signatures"),iconClass:"fa-list",template:'\n                <f-application-signatures\n                    single-view="\'application.name\'"\n                    hide-chart="true"\n                    filters="filters">\n                </f-application-signatures>',initModules:["ng/utm/appctrl/signature/f-application-signatures"]},params));var VIP6_GROUP_CONFIG={searchKeys:{member:commonGroupSearch,comment:!0},tooltipKeys:{member:membersTooltipKey,comment:commentTooltipKey}};Omniselect.createCMDBSource=createCMDBSource,Omniselect.createSchemaSource=createSchemaSource;var collectFirewallInterfaceAddresses=function(entry,key){var result=[],addresses=entry[key];const vdomInfo=(top.state.admin.vdom_info||{})[entry.vdom],inTransparentVdom=vdomInfo&&vdomInfo.transparent_mode;return addresses&&!inTransparentVdom&&(result=addresses.map(function(address){return address.ip+"/"+address.cidr_netmask})),result},collectServiceProtocols=function(entry){var label,ANY=$.getInfo("any"),details=[],protocol=entry.protocol;return"TCP/UDP/SCTP"===protocol||"enable"===entry.proxy?["tcp","udp","sctp"].forEach(function(protoKey){var ranges=entry[protoKey+"-portrange"];ranges&&ranges.split(" ").forEach(function(range){var split=range.split(":"),dest=split[0],src=split[1];details.push(protoKey.toUpperCase()+": "+(src||ANY)+" → "+dest)})}):["ICMP","ICMP6"].indexOf(protocol)>=0?(label=protocol+"/",entry.icmptype?label+=entry.icmptype+": "+(entry.icmpcode||ANY):label+=ANY,details.push(label)):entry["protocol-number"]?details.push("IP/"+entry["protocol-number"]):details.push(ANY),details},joinValues=(entry,keys=[],separator=" / ")=>keys.map(key=>entry[key]).filter(value=>!!value).join(separator),createNegateFormatFunction=function(fallbackFormatFn){return function(entry,value,meta){return"function"!=typeof fallbackFormatFn&&(fallbackFormatFn=this.DEFAULT_FORMAT_FUNCTION),function(meta){return meta&&"function"==typeof meta.isNegated&&meta.isNegated()}(meta)?'<f-icon class="fa-negate"></f-icon><span>'+dom.escapeHTML(value)+"</span>":fallbackFormatFn.call(this,entry,value,meta)}},applicationIconHeaderFormatter=function(entry){var html="",icon=entry.q_class||entry["css-class"];return html='<div class="app-icon-header">',html+='<div class="app-icon-box">',html+=dom.create_icon_html(icon,{iconSize:"medium"}),html+='</div><div class="app-name">',html+=entry.name,html+="</div></div>"};const macRangeTooltipSearchFn=(addr,query)=>"mac"===addr.type&&(fMac.isValid(query)?fMac.contains(addr["start-mac"],addr["end-mac"],query):addr["start-mac"].includes(query.toLowerCase())||addr["end-mac"].includes(query.toLowerCase())),geographyTooltipSearchFn=function(selectInstance,source,entry,searchRegex){let code,name,metaData,countryMap;return"geography"===entry.type&&(code=entry.country,!!searchRegex.test(code)||(name=(countryMap=(metaData=selectInstance.getSourceMetaData(source))&&metaData.countryMap)[code]&&countryMap[code].name)&&searchRegex.test(name))},normalizeTransceiverPartNumber=partNumber=>(partNumber||"").replace(/-/g,"").toLowerCase(),transceiverValueFunction=transceiver=>{const vendorPartNum=transceiver.vendor_part_number;return[transceiver.vendor,vendorPartNum].join(" ").trim()||$.getInfo("Unknown")},isTransceiverCertified=(transceiver={},certifiedTransceivers={})=>{const certifiedMap=certifiedTransceivers.mapping||{},partNumber=normalizeTransceiverPartNumber(transceiver.vendor_part_number),vendor=(transceiver.vendor||"").toLowerCase(),isFortinet=vendor.indexOf("fortinet")>=0,certifiedTransceiver=certifiedMap[partNumber],certifiedVendor=certifiedTransceiver&&certifiedTransceiver.vendor,isCertified=certifiedTransceiver&&(!certifiedVendor||vendor.indexOf(certifiedVendor.toLowerCase())>=0);return isFortinet||isCertified},transceiverFormatter=(transceiver,certifiedTransceivers={})=>{const vendorPartNum=transceiver.vendor_part_number,vendor=transceiver.vendor,value=[vendor,vendorPartNum].join(" ").trim()||$.getInfo("Unknown");let iconClass="fa-error";return vendor&&(iconClass=isTransceiverCertified(transceiver,certifiedTransceivers)?"fa-enabled":"fa-warning"),`<f-icon class="${iconClass}"></f-icon><span>${value}</span>`},transceiverHeaderFormatter=(transceiver,certifiedTransceivers={})=>{if(transceiver){if(!transceiver.vendor)return`<div class="error-message">\n                    <f-icon class="fa-error"></f-icon>\n                    <div class="message-content">\n                        ${$.getInfo("Unable to read transceiver information.")}\n                    </div>\n                </div>`;if(!isTransceiverCertified(transceiver,certifiedTransceivers))return`<div class="warning-message">\n                        <f-icon class="fa-warning"></f-icon>\n                        <div class="message-content">\n                            ${$.getInfo("This transceiver is not certified by Fortinet.")}\n                        </div>\n                    </div>`}},internetServiceLocationFormatter=key=>entry=>{if("location"===entry.type&&entry[key])try{return Omniselect.processedFormatEntrySync(entry[key])}catch(e){return entry[key].name}};var defaultNegateFormatFunction=createNegateFormatFunction();Omniselect.prototype.ENTRY_ID_KEY="q_origin_key",Omniselect.prototype.SOURCE_ID_KEY="datasource",Omniselect.prototype.ENTRY_SOURCE_ID_FUNCTION=function(entry){var sourceID;return entry.datasource?sourceID=entry.datasource:entry.q_path&&entry.q_name&&(sourceID=entry.q_path+"."+entry.q_name),sourceID},Omniselect.prototype.PANE_TITLE=$.getInfo("Select Entries"),Omniselect.prototype.SEARCH_PLACEHOLDER=$.getInfo("search"),Omniselect.prototype.CLEAR_SEARCH_TITLE=$.getInfo("clear_search"),Omniselect.prototype.NO_ENTRIES_TEXT=$.getInfo("No entries"),Omniselect.prototype.PROCESSING_TEXT=$.getInfo("Processing"),Omniselect.prototype.CLOSE_TEXT=$.getInfo("Close"),Omniselect.prototype.OK_TEXT=$.getInfo("ok"),Omniselect.prototype.CANCEL_TEXT=$.getInfo("Cancel"),Omniselect.prototype.CREATE_NEW_LABEL=$.getInfo("create"),Omniselect.prototype.CREATE_NEW_TITLE=$.getInfo("Create New"),Omniselect.prototype.RETURN_TITLE=$.getInfo("Return"),Omniselect.prototype.LIMITED_PERMISSION_SOURCES_WARNING=$.getInfo("Limited view"),Omniselect.prototype.LIMITED_PERMISSION_SOURCES_WARNING_TOOLTIP=$.getInfo("Insufficient permission to view one or more entries in their entirety"),Omniselect.prototype.LIMITED_PERMISSION_ENTRY_WARNING=$.getInfo("Insufficient permission to view this entry in its entirety"),Omniselect.NOTIFY_SOURCE_CHANGED_IFRAMES=!0,Omniselect.prototype.DEFAULT_VALUE_FUNCTION=function(entry){return"object"==typeof entry?entry.q_origin_key:entry};Omniselect.prototype.DEFAULT_FORMAT_FUNCTION=function(entry,value){var html="",icon=entry.q_class||entry["css-class"];return icon&&(html=dom.create_icon_html(icon,{iconSize:"small"})),html+="<span>"+dom.escapeHTML(value)+"</span>"};var inlineEditCreate=module.inlineEditCreate=async function(sourceID,entry,extraParams){const mkey=entry&&entry.q_origin_key,vdom=entry&&entry.vdom,source=Omniselect.prototype.SOURCES[sourceID],datasource=source&&source.createNewDatasource||sourceID,pathObject=formatters.path_name_format(datasource),slideBridgeClient=new slideBridge.Client,fortigate=source.fortigate&&source.fortigate.serial;extraParams=Object.assign({},extraParams,{fortigate:fortigate}),await slideBridgeClient.openRouteAsSlide({path:pathObject.path,name:pathObject.name,mkey:mkey,vdom:vdom,fortigate:fortigate,searchParams:extraParams}).then(()=>{Omniselect.notifySourceChanged(sourceID)})};Omniselect.prototype.DEFAULT_CREATE_NEW_FUNCTION=function(sourceID){return inlineEditCreate(sourceID)},Omniselect.prototype.DEFAULT_INLINE_EDIT_FUNCTION=function(sourceID,entry){return inlineEditCreate(sourceID,entry)},Omniselect.prototype.LIMITED_PERMISSION_CHECK_FUNCTION=function(sourceID,sourceData){let limited=!1;return Array.isArray(sourceData)&&sourceData.length&&(limited=!!sourceData[0].q_limited_permission)&&fLog.warn(`Insufficient permission for source "${sourceID}". Falling back to `+"a limited view."),limited},Omniselect.prototype.SOURCES={"antivirus.profile":{name:$.getInfo("datasource_antivirus.profile"),data:createCMDBSource("antivirus","profile"),createNew:createUtmProfilePermissionCheck("antivirus","profile"),inlineEdit:createWritePermissionCheck("antivirus","profile"),formatFunction:profileFormatFunction,searchKeys:{"feature-set":!0,comment:!0},tooltipKeys:{"feature-set":profileFeatureSetTooltipKey,comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"antivirus",name:"profile"})},"antivirus.filetype":{name:$.getInfo("File Types"),data:createCMDBSource("antivirus","filetype"),tooltipKeys:{comment:commentTooltipKey}},"application.category":{name:$.getInfo("appcat"),data:function(meta,sourceID){return $.when($.get(makeCSFSourceURI("/api/v2/monitor/utm/application-categories",sourceID)),fFortiGuard.getApplicationCategories()).then(function(d1,d2){var localData=d1[0].results,fortiguardData=d2.results,appCategoryMap=new Map;return fortiguardData&&fortiguardData.forEach(function(obj){if(obj.name){var remoteName=obj.name.replace(/[^a-zA-Z]/g,"").toLowerCase();appCategoryMap.set(remoteName,obj)}}),localData.forEach(function(entry){if(entry.datasource=sourceID,entry.q_origin_key=entry.id.toString(),entry["css-class"]="fa-folder",fortiguardData){var localName=entry.name.replace(/[^a-zA-Z]/g,"").toLowerCase(),category=appCategoryMap.get(localName);category&&(entry.description=category.description,category.examples&&(entry.examples=category.examples.toString().split(",").join(", ")))}}),localData})},alternativeEntryIDs:["name"],valueFunction:function(entry){return entry.name},searchKeys:{name:!0},tooltipNameLabel:$.getInfo("category"),tooltipKeys:{description:new TooltipKey($.getInfo("desc")),examples:new TooltipKey($.getInfo("Examples"))},preProcessSelected:!0,tooltipFooterActions:[createApplicationSignatureSlideAction({id:"application-category-signature-slide",visibleFunction:function(entry){const hasPermission=top.state&&top.state.adminHasReadPermissionForTable("application","name");return!entry.csfPath&&hasPermission},parentScope:entry=>({filters:[{type:"category",id:entry.id}]})})]},"application.custom":{name:$.getInfo("Custom Firewall Application"),data:createCMDBSource("application","custom",{processFn:processApplications}),createNew:createUtmProfilePermissionCheck("application","custom"),inlineEdit:createWritePermissionCheck("application","custom"),inlineEditFunction:function(sourceID,entry){let tweakedEntry;return entry&&(tweakedEntry=Object.assign({},entry,{q_origin_key:entry.name})),inlineEditCreate(sourceID,tweakedEntry)},valueFunction:pluckName,searchKeys:{name:!0,categoryName:!0,id:!0},tooltipNameLabel:$.getInfo("id"),tooltipKeys:{categoryName:new TooltipKey($.getInfo("category"))},limitedPermissionFallbackFunctions:{valueFunction:pluckName}},"application.group":{name:$.getInfo("Application Group"),data:createCMDBSource("application","group",{processFn:function(entries,meta,sourceID){return entries.forEach(entry=>{entry.datasource=sourceID}),entries}}),metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID);return Promise.all([Omniselect.getSourceData(getCSFProxySourceID("application.name",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("application.custom",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("application.category",csfPath))]).then(function(resp){var apps=resp[0]&&resp[0].mapping,customApps=resp[1]&&resp[1].mapping,categories=resp[2]&&resp[2].mapping;return{application:Object.assign({},apps,customApps),category:categories}})},createNew:createUtmProfilePermissionCheck("application","group"),inlineEdit:createWritePermissionCheck("application","group"),subcategories:!0,subcategoryValueFunction:function(entry){return $.getInfo(entry.type)},tooltipKeys:{type:new TooltipKey($.getInfo("type"),createTranslatedTooltipFormatter("type")),members:new TooltipKey($.getInfo("members"),function(entry){var meta=this.getSourceMetaData("application.group"),type=entry.type,members=entry[type]||[];return nColumnListFormat(members,1,function(member){var id=member.id;try{var memberMeta=meta[type]&&meta[type][id];return Omniselect.processedFormatEntrySync(memberMeta)}catch(e){return id}})}),comment:commentTooltipKey},searchKeys:{comment:!0,members:function(entry,searchString){var meta=this.getSourceMetaData("application.group"),type=entry.type;return(entry[type]||[]).some(function(member){var memberMeta=meta[type]&&meta[type][member.id];try{return Omniselect.queryMatchesEntrySync(searchString,memberMeta)}catch(e){return!1}})}},tooltipFooterActions:[createApplicationSignatureSlideAction({id:"application-group-signature-slide",visibleFunction:function(entry){const hasPermission=top.state&&top.state.adminHasReadPermissionForTable("application","name");return!entry.csfPath&&hasPermission&&"category"===entry.type},parentScope:entry=>{return{filters:[{type:"category",id:entry.category.map(category=>category.q_origin_key)}]}}})]},"application.list":{name:$.getInfo("datasource_application.list"),data:createCMDBSource("application","list"),createNew:createUtmProfilePermissionCheck("application","list"),inlineEdit:createWritePermissionCheck("application","list"),formatFunction:profileFormatFunction,searchKeys:{comment:!0},tooltipKeys:{"enforce-default-app-port":new TooltipKey(translate("Enforce Default Port"),enableDisableFormatFn),comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"application",name:"list"})},"application.name":{name:$.getInfo("Firewall Application"),data:function(meta,sourceID){const applicationGetter=createCMDBSource("application","name",{processFn:processApplications}),ipsMetadataMapURI=makeCSFSourceURI("/api/v2/cmdb/ips/metadata-map",sourceID),ipsMetadataURI=makeCSFSourceURI("/api/v2/monitor/ips/metadata",sourceID);return $.when(applicationGetter.call(this,meta,sourceID),$.get(ipsMetadataMapURI),$.get(ipsMetadataURI)).then(function(apps,metadataMapResults,ipsMetaData){var metadataMap=ips_common.build_metadata_map(metadataMapResults[0].results);const metaId=ipsMetaData[0]&&ipsMetaData[0].results&&ipsMetaData[0].results.cloud_app_ctrl_meta_id;return apps.forEach(function(app){ips_common.add_metadata_attrs(app,metadataMap),app.$requiresSslDeepInspection=app.require_ssl_di&&"Yes"===app.require_ssl_di[0],app.isCloudApp=metaId>=0&&Array.isArray(app.metadata)&&app.metadata.some(_meta=>_meta.metaid===metaId&&_meta.valueid);const[parentApp,childApp]=app.name.split("_");app.parentApp=childApp&&parentApp}),apps})},alternativeEntryIDs:["name"],preProcessSelected:!0,valueFunction:pluckName,searchKeys:{name:!0,protocol:!0,technology:!0,behavior:!0,vendor:!0,categoryName:!0,legend:!0,id:!0},suppressIdValueTooltip:!0,tooltipHeaderFormatFunction:applicationIconHeaderFormatter,tooltipNameLabel:$.getInfo("id"),tooltipData:function(entry){return fFortiGuard.getApplicationInfo(entry.id).then(function(data){var formattedData={},fortiguardData=data.results;if(fortiguardData){fortiguardData.Summary&&(formattedData.summary=fortiguardData.Summary.replace(/(<br\/?>\s*)*$/,"")),formattedData.symptoms=fortiguardData.Symptoms;const requireApps=fortiguardData.RequireApp||[];formattedData.app_dependencies=requireApps.map(app=>app.vuln_id)}return formattedData})},cacheTooltipData:!0,tooltipKeys:{id:new TooltipKey($.getInfo("id"),function(entry){return`<a href="${this.getSourceMetaData("application.name").prefix}/${entry.id}" `+'target="_blank" rel="noopener noreferrer">'+`${entry.id}</a>`}),summary:new TooltipKey($.getInfo("meta"),function(entry){return this.getTooltipData(entry).summary}),categoryName:new TooltipKey($.getInfo("category")),risk:new TooltipKey($.getInfo("field_risk"),function(entry){return formatters.severity_bar(["none","low","medium","high","critical"][entry.risk-1])}),popularity:new TooltipKey($.getInfo("field_popularity"),function(entry){return formatters.popularity_rating(entry.popularity)}),protocol:new TooltipKey($.getInfo("protocol")),app_port:new TooltipKey($.getInfo("Ports"),entry=>{const separatePorts=(entry.app_port||[]).map(ports=>ports.split(",").map(port=>port.trim())),flattened=[].concat.apply([],separatePorts);return[...new Set(flattened)].join(", ")}),dependencies:new TooltipKey($.getInfo("Dependencies"),function(entry,key,meta,sourceID){const data=this.getTooltipData(entry);if(data&&data.app_dependencies){const prefix=this.getSourceMetaData(sourceID).prefix,dependencies=data.app_dependencies.map(app=>{return Omniselect.getSourceDataSync("application.name").mapping[app]?Omniselect.processedFormatEntrySync({q_origin_key:app,datasource:"application.name"}):`<a href="${prefix}/${app}" `+'target="_blank" rel="noopener noreferrer">'+`${app}</a>`});return nColumnListFormat(dependencies,1)}}),technology:new TooltipKey($.getInfo("technology")),behavior:new TooltipKey($.getInfo("behavior")),vendor:new TooltipKey($.getInfo("vendor")),legend:new TooltipKey($.getInfo("Legend"),function(entry){const legends=[];return entry.casi&&entry.casi.length&&legends.push(dom.create_icon_html("ftnt-cloud-o",{iconSize:"small"})+" "+$.getInfo("Cloud Application")),entry.$requiresSslDeepInspection&&legends.push(dom.create_icon_html("fa-lock",{iconSize:"small"})+" "+$.getInfo("Requires SSL Deep Inspection")),nColumnListFormat(legends,1)})},subcategories:!0,subcategoryValueFunction:function(entry){return entry.categoryName||"Other"},formatFunction:function(entry){var result="",requiresSslDeepInspection=entry.$requiresSslDeepInspection;return result=dom.create_icon_html(entry["css-class"],{iconSize:"small"}),result+="<span>"+entry.name+"</span>",entry.casi&&entry.casi.length&&(result+=dom.create_icon_html("ftnt-cloud-o",{iconSize:"small"})),requiresSslDeepInspection&&(result+=dom.create_icon_html("fa-lock",{iconSize:"small"})),result},limitedPermissionFallbackFunctions:{valueFunction:pluckName},metaData:function(){var fortiguard=fFortiGuard;return fortiguard.links.resolve().then(function(){return{prefix:fortiguard.getLink(fortiguard.LINK_TYPE.APP)}})}},"authentication.scheme":{name:$.getInfo("Authentication Scheme"),data:createCMDBSource("authentication","scheme"),createNew:createWritePermissionCheck("authentication","scheme"),inlineEdit:createWritePermissionCheck("authentication","scheme"),preProcessSelected:!0,tooltipKeys:{method:new TooltipKey($.getInfo("method"),function(entry){if(entry&&entry.method)return $.getInfo(entry.method)}),userDatabase:new TooltipKey($.getInfo("User Database"),function(entry){var userDatabase=entry&&entry["user-database"];if(userDatabase&&userDatabase.length)return userDatabase.map(function(db){return db.name}).join(", ")})}},crlCertificates:{name:$.getInfo("cert_crl"),aliasFor:["certificate.crl","vpn.certificate.crl"],data:async function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),datasource=getCSFProxySourceID("availableCertificates",csfPath);return(await Omniselect.getSourceData(datasource)).filter(entry=>"crl"===entry.type).map(entry=>Object.assign({},entry,{datasource:sourceID}))},formatFunction:function(entry,value){return formatters.certificate_format_fn(entry.range,value,entry)},createNewLabel:$.getInfo("import"),createNewTitle:$.getInfo("Import CRL"),createNew:createWritePermissionCheck("vpn.certificate","crl"),createNewDatasource:"vpn.certificate.crl"},remoteCaCertificates:{name:$.getInfo("cert_ca_remote"),aliasFor:["certificate.ca","vpn.certificate.ca"],data:async function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),datasource=getCSFProxySourceID("availableCertificates",csfPath);return(await Omniselect.getSourceData(datasource)).filter(entry=>"remote-ca"===entry.type).map(entry=>Object.assign({},entry,{datasource:sourceID}))},formatFunction:function(entry,value){return formatters.certificate_format_fn(entry.range,value,entry)},createNewLabel:$.getInfo("import"),createNewTitle:$.getInfo("Import CA Certificate"),createNew:createWritePermissionCheck("vpn.certificate","ca"),createNewDatasource:"vpn.certificate.ca"},remoteCertificates:{name:$.getInfo("cert_remote"),aliasFor:["certificate.remote","vpn.certificate.remote"],data:async function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),datasource=getCSFProxySourceID("availableCertificates",csfPath);return(await Omniselect.getSourceData(datasource)).filter(entry=>"remote-cer"===entry.type).map(entry=>Object.assign({},entry,{datasource:sourceID}))},formatFunction:function(entry,value){return formatters.certificate_format_fn(entry.range,value,entry)},createNewLabel:$.getInfo("import"),createNewTitle:$.getInfo("Import remote certificate"),createNew:createWritePermissionCheck("vpn.certificate","remote"),createNewDatasource:"vpn.certificate.remote"},localCertificates:{name:$.getInfo("certificate.local"),aliasFor:["certificate.local","vpn.certificate.local"],data:async function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),datasource=getCSFProxySourceID("availableCertificates",csfPath),results=await Omniselect.getSourceData(datasource),withSelfSign=meta&&meta.withSelfSign,localCerts=["local-csr","local-cer","local-ca"];return results.filter(entry=>localCerts.includes(entry.type)).map(entry=>Object.assign({},entry,{datasource:sourceID})).concat(withSelfSign?[{q_origin_key:"self-sign",datasource:sourceID,name:"self-sign",type:"local-cer",exists:!0,is_ssl_server_cert:!0,is_built_in:!0,has_valid_cert_key:!0}]:[])},filterFunction:function(entry,meta){return(meta&&meta.withWifi||!entry.is_wifi_cert)&&(meta&&meta.withUntrusted||"Fortinet_CA_Untrusted"!==entry.name)},formatFunction:function(entry,value){return formatters.certificate_format_fn(entry.range,value,entry)},sortFunction:function(valueA,valueB,entryA,entryB){return entryA.range===entryB.range?ftnt_shared.util.fastLocaleCompare(entryA.name,entryB.name):"global"===entryA.range?-1:1},tooltipKeys:{range:new TooltipKey($.getInfo("Certificate range"),function(entry){return"global"===entry.range?$.getInfo("Global Certificate, available on all VDOMs"):""})},createNew:createWritePermissionCheck("certificate","local"),createNewDatasource:"certificate.local"},availableCertificates:{name:$.getInfo("Certificate"),aliasFor:["certificate.local","vpn.certificate.local","certificate.remote","vpn.certificate.remote","certificate.ca","vpn.certificate.ca","certificate.crl","vpn.certificate.crl"],data:async function(meta,sourceID){const scope=top.state.isGlobalVDOM()?"global":"vdom";return(await $.get(makeCSFSourceURI("/api/v2/monitor/system/available-certificates",sourceID),{scope:scope,with_remote:1,with_ca:1,with_crl:1})).results.map(entry=>(entry.q_origin_key=entry.name,entry))},valueFunction:function(entry){return entry.name}},trustedCertificateAuthorities:{name:$.getInfo("Trusted CA Certificate"),aliasFor:["certificate.ca","vpn.certificate.ca"],data:async function(meta,sourceID){const scope=top.state.isGlobalVDOM()?"global":"vdom";return(await $.get(makeCSFSourceURI("/api/v2/monitor/system/trusted-cert-authorities",sourceID),{scope:scope})).results.map(entry=>(entry.q_origin_key=entry.name,entry.datasource=sourceID,entry))},formatFunction:function(entry,value){return formatters.certificate_format_fn(entry.range,value,entry)}},availableIPsecTunnels:{name:$.getInfo("IPsec Tunnel"),aliasFor:["vpn.ipsec.phase1-interface"],data:function(meta,sourceID){var csfPath=getSourceCSFPath(sourceID),url="/api/v2/monitor/vpn/ipsec",datasource=getCSFProxySourceID("availableIPsecTunnels",csfPath),filterTunnel=function(entry){return""!==entry.type&&Array.isArray(entry.proxyid)&&entry.proxyid.length},processTunnel=function(entry){return entry.q_origin_key=entry.name,entry.datasource=datasource,entry.$status=entry.proxyid.some(function(proxyid){return"up"===proxyid.status})?"up":"down",entry.$p1name=entry.parent||entry.name,entry.creation_time=new Date(Date.now()-1e3*entry.creation_time),entry};return csfPath&&(url="/csf/"+csfPath+url),$.get(url).then(function(response){return response.results.filter(filterTunnel).map(processTunnel)},function(){return[]})},valueFunction:function(entry){return entry.name},formatFunction:function(entry){return utilIcon.formatIcon(utilIcon.ICON_TYPE.UP_DOWN,entry.$status,{label:entry.name,includeTitle:!1})},tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){const vdom=top.state.vdom_mode&&top.state.current_vdom;return formatters.ipsec_tunnel_type(entry["wizard-type"],vdom)}),rgwy:new TooltipKey($.getInfo("field_rgwy")),rport:new TooltipKey($.getInfo("field_rport")),proxyid:new TooltipKey($.getInfo("ph2"),function(entry){return nColumnListFormat(entry.proxyid,2,function(phase2){return utilIcon.formatIcon(utilIcon.ICON_TYPE.UP_DOWN,phase2.status,{label:phase2.p2name})})}),incoming_bytes:new TooltipKey($.getInfo("field_incoming"),function(entry){if(entry.incoming_bytes)return formatters.metric_bytes(entry.incoming_bytes)}),outgoing_bytes:new TooltipKey($.getInfo("field_outgoing"),function(entry){if(entry.outgoing_bytes)return formatters.metric_bytes(entry.outgoing_bytes)}),username:new TooltipKey($.getInfo("field_username"),function(entry){return formatters.ipsec_tunnel_user(entry.username)}),xauth_user:new TooltipKey($.getInfo("xauthuser"),function(entry){return formatters.ipsec_tunnel_user(entry.xauth_user)}),$p1name:new TooltipKey($.getInfo("phase1")),comments:commentsTooltipKey}},availableVdoms:{name:$.getInfo("VDOM"),data:function(meta,sourceID){var vd,icon,result=[];let promise=Promise.resolve(top.state.admin.vdom_info||{});if(isSourceForCSF(sourceID)){const csfUri=makeCSFSourceURI("/api/v2/monitor/web-ui/state",sourceID);promise=$.get(csfUri).then(res=>new FosState(res).admin.vdom_info||{}).catch(()=>({}))}return promise.then(vdoms=>(Object.keys(vdoms).map(function(name){vd=vdoms[name],icon=formatters.vdom_icon_class(name),result.push({name:name,q_origin_key:name,datasource:"system.vdom","css-class":icon,operation_mode:vd.transparent_mode?"transparent":"nat",transparent_mode:vd.transparent_mode,is_management_vdom:vd.is_management_vdom,ngfw_mode:vd.ngfw_mode})}),meta&&meta.includeGlobal&&top.state.admin.global_admin&&result.unshift({name:$.getInfo("global"),q_origin_key:"","css-class":"fa-globe",datasource:"system.vdom",is_global:!0}),result))},dontCache:!0,aliasFor:["system.vdom"],valueFunction:pluckName,searchKeys:{operation_mode:!0},tooltipKeys:{operation_mode:new TooltipKey($.getInfo("Operation Mode"),function(entry){if(!entry.is_global)return $.getInfo(entry.operation_mode)}),is_management_vdom:new TooltipKey($.getInfo("Management VDOM"),function(entry){if(entry.is_management_vdom&&top.state.admin.super_admin)return $.getInfo("Yes")})}},awsEc2:{dontCache:!0,data:function(meta,sourceID){return $.get("/api/v2/monitor/aws/ec2").then(function(resp){const intfs=utilAws.processNetworkInterfaceSet(resp);return intfs.forEach(intf=>{intf.datasource=sourceID}),intfs}).catch(function(){return[]})}},awsInspector:{dontCache:!0,data:function(meta,sourceID){return $.get("/api/v2/monitor/aws/inspector").then(function(resp){const instances=utilAws.processAwsFindings(resp);return instances.forEach(instance=>{instance.datasource=sourceID}),instances}).catch(function(){return[]})}},"certificate.ca":{name:$.getInfo("certificate.ca"),data:createCMDBSource("certificate","ca"),formatFunction:function(entry){return formatters.certificate_format_fn(entry.range,entry.name)},preProcessSelected:!0,createNew:createWritePermissionCheck("certificate","ca")},certifiedTransceivers:{data:function(meta,sourceID){return $.get("/api/v2/static/fortinet_certified_transceivers.json").then(res=>res.map(entry=>{const partNumber=normalizeTransceiverPartNumber(entry.part_number);return entry.part_number=partNumber,entry.datasource=sourceID,entry})).catch(function(){return[]})},entryIdKeyFunction:()=>"part_number"},countryDialCode:{name:$.getInfo("Country"),data:function(){return $.getJSON("/api/v2/static/country_codes.json").then(function(countryCodes){let source=[];return Object.keys(countryCodes).forEach(function(key){let name=$.getInfo(key);var country=countryCodes[key];country.dial_code.forEach(function(dialCode){let detail={datasource:"countryDialCode",q_origin_key:country.code+dialCode,code:country.code,name:name,dial_code:dialCode};source.push(detail)})}),source})},preProcessSelected:!0,valueFunction:function(entry){var dialCode=entry.dial_code||"",fmtDialCode=dialCode?" ("+dialCode+")":"";return entry.name+fmtDialCode},formatFunction:function(entry,name){return'<span class="country_flag country_'+entry.code+'"></span><span>'+name+"</span>"}},devices:{name:translate("Detected Devices"),data:function(meta,sourceID){const source=this.getSource(sourceID),serial=source.fortigate?source.fortigate.serial:top&&top.state.serial,csfPath=getSourceCSFPath(sourceID),allVdoms=isSourceForAllVdoms(sourceID);let uri=makeCSFSourceURI("/api/v2/monitor/user/detected-device",sourceID),params={expand_child_macs:!0,with_fortilink:top.state&&top.state.featureEnabled("gui-switch-controller"),with_fortiap:top.state&&top.state.featureEnabled("gui-wireless-controller"),with_endpoint:!0,with_dhcp:!0,with_user:!0};allVdoms&&(params.vdom="*");const guiEndpointControlAdvancedEnabled=top.state.featureEnabled("gui-endpoint-control-advanced"),addressSource=getCSFProxySourceID("firewall.address",csfPath),address6Source=getCSFProxySourceID("firewall.address6",csfPath);return Promise.all([$.get(uri,params).catch(()=>[]),Omniselect.getSourceData("awsEc2"),Omniselect.getSourceData("awsInspector"),fQuarantine.getQuarantineData(csfPath),fQuarantine.getBannedData(csfPath)]).then(responses=>{const[userDevicesData,awsInstanceMacs,awsInstanceCVEs,quarantineMapping,bannedMapping]=responses;let results,mapping=(results=allVdoms?Array.isArray(userDevicesData)?userDevicesData.reduce((aggregated,currentData)=>aggregated.concat(currentData.results),[]):[]:Array.isArray(userDevicesData.results)?userDevicesData.results:[]).reduce((prev,entry)=>{const awsInstance=awsInstanceMacs.mapping[entry.mac],awsInstanceId=awsInstance&&awsInstance.instanceId,CVEs=awsInstanceId&&awsInstanceCVEs.mapping[awsInstanceId]&&awsInstanceCVEs.mapping[awsInstanceId].cve||[];entry.isQuarantined=entry.mac&&quarantineMapping&&!!quarantineMapping[entry.mac],bannedMapping&&(entry.ipv6_address&&bannedMapping[fIp.normalizeIpStr(entry.ipv6_address)]&&(entry.ipv6_address_banned=!0),entry.ipv4_address&&bannedMapping[entry.ipv4_address]&&(entry.ipv4_address_banned=!0)),entry.isBanned=!!entry.ipv4_address_banned||!!entry.ipv6_address_banned,entry.canQuarantine=!!entry.fortiap_id||!!entry.fortiswitch_id;const userDevice=new UserDevice(entry,serial,awsInstanceId,CVEs,guiEndpointControlAdvancedEnabled,csfPath,getCSFProxySourceID("devices",csfPath));return userDevice.joinedAddresses.forEach(address=>{const datasource="ipv6"===address.type?address6Source:addressSource;address.datasource=datasource}),(!prev[userDevice.mac]||userDevice.last_seen<prev[userDevice.mac].last_seen)&&(prev[userDevice.mac]=userDevice),prev},{}),entries=Object.values(mapping);return entries.forEach(entry=>{entry.q_origin_key=entry.mac,entry.datasource=sourceID,entry.csfPath=csfPath}),entries}).catch(()=>[])},metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),firewallInterfacesSourceID=getCSFProxySourceID("firewallInterfaces",csfPath),addressSourceID=getCSFProxySourceID("firewall.address",csfPath);return Promise.all([Omniselect.getSourceData(addressSourceID).catch(()=>null)]).then(([addresses])=>({addressMap:addresses&&addresses.alternativeMappings.$value,firewallInterfacesSourceID:firewallInterfacesSourceID,addressSourceID:addressSourceID})).catch(()=>({addressMap:null,firewallInterfacesSourceID:firewallInterfacesSourceID,addressSourceID:addressSourceID}))},cacheTooltipData:!0,tooltipData:function(entry,sourceID){const csfPath=getSourceCSFPath(sourceID),firewallInterfacesSourceID=getCSFProxySourceID("firewallInterfaces",csfPath);return Omniselect.getSourceData(firewallInterfacesSourceID).catch(()=>null).then(firewallInterfaces=>({firewallInterfaces:firewallInterfaces&&firewallInterfaces.mapping}))},valueFunction:function(entry){let value;return value=entry.mac_firewall_address?entry.mac_firewall_address:entry.hostname?entry.hostname:entry.mac,entry.is_master_device||(value+=" ("+entry.mac+")"),value},formatFunction:function(entry,value){let valueHtml;return valueHtml=entry.mac_firewall_address?`<span><strong>${value}</strong></span>\n                        <f-icon class="fa-thumb-tack"></f-icon>`:`<span>${value}</span>`,`<f-icon class="${entry["css-class"]}"></f-icon>${valueHtml}`},preProcessSelected:!0,headerSearchKeys:["authuser","unauth_user","username","ipv4_address","address"],tooltipHeaderFormatFunction:createDeviceHeaderHTML,searchKeys:{online_status:function(entry,searchString,searchRegex){return searchRegex.test(translate("User::Device::status."+entry.online_status))},hostname:function(entry,searchString,searchRegex){const hostname=entry.hostname;if(hostname)return searchRegex.test(hostname)},server:function(entry,searchString,searchRegex){if(entry.server){let server=translate("Server::type."+entry.server);return searchRegex.test(server)}},mac:function(entry,searchString,searchRegex){const addr=deviceAddressTooltipFn(this,entry,"mac");if(addr)return searchRegex.test(addr)},other_macs:function(entry,searchString,searchRegex){if(Array.isArray(entry.other_macs))return entry.other_macs.some(other=>{let mac=deviceAddressTooltipFn(this,other,"mac");return searchRegex.test(mac)})},ipv4_address:function(entry,searchString,searchRegex){const addr=deviceAddressTooltipFn(this,entry,"ipv4_address");if(addr)return searchRegex.test(addr)},ipv6_address:!0,interface:function(entry,searchString,searchRegex){if((!Array.isArray(entry.online_interfaces)||!entry.online_interfaces.length)&&entry.detected_interface)return searchRegex.test(entry.detected_interface)},online_interfaces:function(entry,searchString,searchRegex){if(Array.isArray(entry.online_interfaces)&&entry.online_interfaces.length)return entry.online_interfaces.some(name=>searchRegex.test(name))},hardware_type:!0,hardware:function(entry,searchString,searchRegex){const hardwareDetails=joinValues(entry,["hardware_vendor","hardware_family","hardware_version"]);return searchRegex.test(hardwareDetails)},os:function(entry,searchString,searchRegex){const osDetails=joinValues(entry,["os_name","os_version"]);return searchRegex.test(osDetails)},authuser:!0,unauthuser:!0,mac_firewall_address:!0,cn:function(entry,searchString,searchRegex){const authuser=entry.user_info&&entry.user_info.cn&&entry.user_info.cn[0];if(authuser)return searchRegex.test(authuser)}},tooltipKeys:{status:new TooltipKey(translate("Status"),function(entry){let status;if(entry.is_forticlient_endpoint)return status=entry.online_status,utilIcon.formatIcon(utilIcon.ICON_TYPE.DEVICE_STATUS,status,{label:translate("User::Device::status."+status),includeTitle:!1})}),hostname:new TooltipKey(translate("host_name"),function(entry){if(entry.hostname&&entry.mac_firewall_address)return dom.escapeHTML(entry.hostname)}),server:new TooltipKey(translate("Server"),function(entry){return formatters.server_format_fn(null,{selector:"server"},entry)}),last_seen:new TooltipKey(translate("last_seen"),function(entry){let now;if(!entry.is_online&&entry.last_seen)return now=(new Date).getTime(),fDateTime.formatDateTime(now-entry.last_seen*fDateTime.S_TO_MS)}),mac:new TooltipKey(translate("mac_address"),function(entry){return deviceAddressTooltipFn(this,entry,"mac")}),master_mac:new TooltipKey(translate("Primary MAC Address"),function(entry){if(entry.master_mac&&!entry.is_master_device)return deviceAddressTooltipFn(this,entry,"master_mac")}),other_macs:new TooltipKey(translate("Other MAC Addresses"),function(entry){if(Array.isArray(entry.other_macs)&&entry.other_macs.length)return entry.other_macs.map(other=>"<div>"+deviceAddressTooltipFn(this,other,"mac")+"</div>").join("\n")}),ipv4_address:new TooltipKey(translate("IP Address"),function(entry){return deviceAddressTooltipFn(this,entry,"ipv4_address")}),ipv6_address:new TooltipKey(translate("address6"),function(entry){if(top.state&&top.state.featureEnabled("gui-ipv6"))return entry.ipv6_address}),dhcp_lease:new TooltipKey(translate("DHCP Lease"),function(entry){const status=entry.dhcp_lease_status;let leaseInfo=[];if(status)return entry.dhcp_lease_reserved?leaseInfo.push(translate("Reserved")):"leased"!==status&&leaseInfo.push(translate(status)),leaseInfo.push(translate("expires on {0}",[fDateTime.formatDateTime(1e3*entry.dhcp_lease_expire)])),leaseInfo.join(" | ")}),domain:new TooltipKey(translate("domain")),interface:new TooltipKey(translate("Interface"),function(entry){return deviceInterfaceTooltipFn(this,entry,"detected_interface")}),online_interfaces:new TooltipKey(translate("Online Interfaces"),function(entry){return deviceInterfaceTooltipFn(this,entry,"online_interfaces")}),awsInstanceId:new TooltipKey(translate("AWS Instance ID")),awsSecurityGroups:new TooltipKey(translate("AWS Security Groups"),function(entry){const tooltipData=this.getTooltipData(entry),groups=tooltipData&&tooltipData.awsGroupSet;return nColumnListFormat(groups||[],1,function(group){return group.groupName})}),hardware:new TooltipKey(translate("Hardware"),function(entry){return joinValues(entry,["hardware_vendor","hardware_family","hardware_version"])}),os:new TooltipKey(translate("os"),function(entry){return joinValues(entry,["os_name","os_version"])}),vulnerabilities:new TooltipKey(translate("Vulnerabilities"),function(entry){if(entry.vuln_count)return formatters.vulnerability_number_bubbles(entry)}),CVE:new TooltipKey(translate("CVE"),function(entry){const CVEs=entry.CVEs;if(Array.isArray(CVEs)&&CVEs.length)return nColumnListFormat(CVEs,3,function(cveID){return cveID})}),cn:userInfoDeviceTooltipKey("cn"),givenName:userInfoDeviceTooltipKey("givenName"),sn:userInfoDeviceTooltipKey("sn"),userPrincipalName:userInfoDeviceTooltipKey("userPrincipalName"),mail:userInfoDeviceTooltipKey("mail"),telephoneNumber:userInfoDeviceTooltipKey("telephoneNumber"),streetAddress:userInfoDeviceTooltipKey("streetAddress"),postOfficeBox:userInfoDeviceTooltipKey("postOfficeBox"),l:userInfoDeviceTooltipKey("l"),st:userInfoDeviceTooltipKey("st"),postalCode:userInfoDeviceTooltipKey("postalCode"),co:userInfoDeviceTooltipKey("co"),title:userInfoDeviceTooltipKey("title"),company:userInfoDeviceTooltipKey("company"),department:userInfoDeviceTooltipKey("department"),manager:userInfoDeviceTooltipKey("manager",userInfoManagerFormatter),accountExpires:userInfoDeviceTooltipKey("accountExpires",userInfoAccountExpiresFormatter),memberOf:userInfoDeviceTooltipKey("memberOf",userInfoMemberOfFormatter)},tooltipNameLabel:translate("Device"),tooltipFooterActions:[new Omniselect.TooltipFooterAction({label:translate("Firewall Device Address"),iconClass:"fa-plus",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address");return!entry.csfPath&&hasWritePermission&&!entry.mac_firewall_address},onClick:function(entry){const firewallAddressSourceID=getCSFProxySourceID("firewall.address",entry.csfPath);inlineEditCreate(firewallAddressSourceID,null,{mac:entry.mac,intf:entry.detected_interface,addr_cat:"addr",name:entry.hostname||""})}}),new Omniselect.TooltipFooterAction({label:translate("Firewall Device Address"),iconClass:"fa-pencil",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address");return!entry.csfPath&&hasWritePermission&&entry.mac_firewall_address},onClick:function(entry){const firewallAddressSourceID=getCSFProxySourceID("firewall.address",entry.csfPath);inlineEditCreate(firewallAddressSourceID,{q_origin_key:entry.mac_firewall_address})}}),new Omniselect.TooltipFooterAction({label:translate("Firewall Device Address"),iconClass:"fa-eye",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address"),hasReadPermission=top.state&&top.state.adminHasReadPermissionForTable("firewall","address");return!entry.csfPath&&!hasWritePermission&&hasReadPermission&&entry.mac_firewall_address},onClick:function(entry){const firewallAddressSourceID=getCSFProxySourceID("firewall.address",entry.csfPath);inlineEditCreate(firewallAddressSourceID,{q_origin_key:entry.mac_firewall_address})}}),new Omniselect.TooltipFooterAction({label:translate("Firewall IP Address"),iconClass:"fa-plus",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address");return!entry.csfPath&&hasWritePermission&&entry.ipv4_address&&!deviceFindMatchingFirewallAddress(this,entry,"ipv4_address")},onClick:function(entry){const firewallAddressSourceID=getCSFProxySourceID("firewall.address",entry.csfPath);inlineEditCreate(firewallAddressSourceID,null,{addr:`${entry.ipv4_address}/32`,intf:entry.detected_interface,addr_cat:"addr",name:entry.hostname||""})}}),new Omniselect.TooltipFooterAction({label:translate("Firewall IP Address"),iconClass:"fa-pencil",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address");return!entry.csfPath&&hasWritePermission&&entry.ipv4_address&&deviceFindMatchingFirewallAddress(this,entry,"ipv4_address")},onClick:function(entry){const{firewallAddress:firewallAddress,firewallAddressSourceID:firewallAddressSourceID}=deviceFindMatchingFirewallAddress(this,entry,"ipv4_address");inlineEditCreate(firewallAddressSourceID,{q_origin_key:firewallAddress.q_origin_key},{})}}),new Omniselect.TooltipFooterAction({label:translate("Firewall IP Address"),iconClass:"fa-eye",visibleFunction:function(entry){const hasWritePermission=top.state&&top.state.adminHasWritePermissionForTable("firewall","address"),hasReadPermission=top.state&&top.state.adminHasReadPermissionForTable("firewall","address");return!entry.csfPath&&!hasWritePermission&&hasReadPermission&&entry.ipv4_address&&deviceFindMatchingFirewallAddress(this,entry,"ipv4_address")},onClick:function(entry){const{firewallAddress:firewallAddress,firewallAddressSourceID:firewallAddressSourceID}=deviceFindMatchingFirewallAddress(this,entry,"ipv4_address");inlineEditCreate(firewallAddressSourceID,{q_origin_key:firewallAddress.q_origin_key})}}),createTooltipFooterSlideAction({id:"access-layer-quarantine-slide",label:translate("Quarantine Host"),visibleFunction:function(entry){return top.state&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.SYSTEM_CFG)&&entry.canQuarantine&&!entry.isQuarantined},title:()=>translate("Quarantine Host"),iconClass:"ftnt-quarantine",template:'<f-quarantine-dialog entries="::entries"></f-quarantine-dialog>',parentScope:entry=>({entries:[fQuarantine.createQuarantineRequestEntry({mac:entry.mac,fortigateSerial:entry.fortigate||entry.parentFortigateId})]}),initModules:["ng/components/quarantine/f-quarantine-dlg"]}),createTooltipFooterSlideAction({id:"remove-access-layer-quarantine-slide",label:translate("Remove Quarantine"),visibleFunction:function(entry){return top.state&&top.state.adminHasWritePermission(top.state.ACCESS_GROUP.SYSTEM_CFG)&&entry.isQuarantined},title:()=>translate("Remove Quarantine"),iconClass:"ftnt-quarantine",template:'<f-quarantine-dialog entries="::entries" remove-mode="true">\n                        </f-quarantine-dialog>',parentScope:entry=>({entries:[fQuarantine.createQuarantineRequestEntry({mac:entry.mac,fortigateSerial:entry.fortigate||entry.parentFortigateId})]}),initModules:["ng/components/quarantine/f-quarantine-dlg"]}),createTooltipFooterSlideAction({id:"ban-ip-slide",label:translate("Ban IP"),visibleFunction:function(entry){const allowedGroups=[top.state.ACCESS_GROUP.USER_DEVICE,top.state.ACCESS_GROUP.FABRIC,top.state.ACCESS_GROUP.FORTIVIEW,top.state.ACCESS_GROUP.LOG_DATA_ACCESS];return top.state&&allowedGroups.some(group=>top.state.adminHasWritePermission(group))&&!entry.canQuarantine&&!entry.isBanned&&(entry.ipv4_address||entry.ipv6_address)},title:()=>translate("Ban IP"),iconClass:"fa-blocked",template:'<f-ban-ip-dialog entries="entries"></f-ban-ip-dialog>',parentScope:entry=>{const ips=["ipv4_address","ipv6_address"].reduce((result,key)=>(entry[key]&&!entry[`${key}_banned`]&&result.push(entry[key]),result),[]),fortigateSerial=entry.fortigate||entry.parentFortigateId;return{entries:ips.map(ip=>fQuarantine.createBanIPRequestEntry({ip:ip,fortigateSerial:fortigateSerial}))}},initModules:["ng/components/quarantine/f-ban-ip-dlg"]}),createTooltipFooterSlideAction({id:"remove-ban-ip-slide",label:translate("Remove IP Ban"),visibleFunction:function(entry){const allowedGroups=[top.state.ACCESS_GROUP.USER_DEVICE,top.state.ACCESS_GROUP.FABRIC,top.state.ACCESS_GROUP.FORTIVIEW,top.state.ACCESS_GROUP.LOG_DATA_ACCESS];return top.state&&allowedGroups.some(group=>top.state.adminHasWritePermission(group))&&!entry.canQuarantine&&!entry.isQuarantined&&entry.isBanned},title:()=>translate("Remove IP Ban"),iconClass:"fa-blocked",template:'<f-ban-ip-dialog entries="entries" remove-mode="true">\n                        </f-ban-ip-dialog>',parentScope:entry=>{const ips=["ipv4_address","ipv6_address"].reduce((result,key)=>(entry[key]&&entry[`${key}_banned`]&&result.push(entry[key]),result),[]),fortigateSerial=entry.fortigate||entry.parentFortigateId;return{entries:ips.map(ip=>fQuarantine.createBanIPRequestEntry({ip:ip,fortigateSerial:fortigateSerial}))}},initModules:["ng/components/quarantine/f-ban-ip-dlg"]})]},"endpoint-control.fctems":{name:$.getInfo("FortiClient EMS Entries"),data:createCMDBSource("endpoint-control","fctems"),tooltipKeys:{server:new TooltipKey($.getInfo("address")),"serial-number":new TooltipKey($.getInfo("FortiClient EMS Serial Number"))},searchKeys:{name:!0,server:!0,"serial-number":!0}},firewallInterfaces:{aliasFor:["system.interface","system.sdwan.zone","system.zone"],name:$.getInfo("Interface"),data:function(meta,sourceID){var source=this.getSource(sourceID),allVdoms=isSourceForAllVdoms(sourceID),global=isSourceGlobal(sourceID)||allVdoms&&top.state.vdom_mode&&!top.state.current_vdom,csfPath=source.csfPath,viewTypes=[...source.viewTypes||[],"limited"];return top.state.ha_mode>0&&viewTypes.push("ha"),fInterfaces.get(global,csfPath,viewTypes).then(interfaces=>{if(source.dummySdwan){const sdwanEnabled=interfaces.some(intf=>intf.is_sdwan_zone&&"up"===intf.status);interfaces=interfaces.filter(intf=>!intf.is_sdwan_zone),sdwanEnabled&&interfaces.push(fInterfaces.getDummySdwan())}return interfaces})},metaData:()=>Omniselect.getSourceData("certifiedTransceivers").then(data=>({certifiedTransceivers:data})),tooltipData:(entry,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);let poeUri=`${MONITOR_URI}system/interface/poe?mkey=${entry.name}`,transceiverSource="systemTransceivers";const vapSource=getCSFProxySourceID("wireless-controller.vap",csfPath),ipsecSource=getCSFProxySourceID("availableIPsecTunnels",csfPath);let fswSource="switch-controller.managed-switch";const completeInterfaceSourceId=getCompleteInterfacesSourceID(sourceID);if(!top.state.adminHasReadPermission(top.state.ACCESS_GROUP.SYSTEM_CFG))return Promise.resolve({csfPath:csfPath});isSourceGlobal(sourceID)&&(poeUri+="&scope=global"),transceiverSource=getCSFProxySourceID(transceiverSource,csfPath),fswSource=getCSFProxySourceID(fswSource,csfPath);const poeRequest=entry.poe_capable&&entry.is_physical?$.get(makeCSFSourceURI(poeUri,sourceID)).catch(()=>Promise.resolve()):Promise.resolve();return Promise.all([$.get(makeCSFSourceURI("/api/v2/cmdb/system/ha",sourceID)),poeRequest,async function(){if(!entry.is_virtual_wan_link_member)return{};try{const response=await $.get(makeCSFSourceURI("/api/v2/monitor/virtual-wan/members",sourceID));return utilFirewallInterfaces.getSdWanBandwidth(response,entry)}catch(e){return{}}}(),Omniselect.getSourceData(vapSource).catch(()=>Promise.resolve()),Omniselect.getSourceData(ipsecSource).catch(()=>Promise.resolve()),Omniselect.getSourceData(fswSource).catch(Promise.resolve()),Omniselect.getSourceData(completeInterfaceSourceId).catch(Promise.resolve())]).then(([ha,poe,sdWanBandwidth,vaps])=>{const systemTransceivers=BUILD.PLATFORM.HAVE_TRANSCEIVER?Omniselect.getSourceData(transceiverSource):Promise.resolve();return Object.assign({csfPath:csfPath,systemTransceivers:systemTransceivers.catch(()=>Promise.resolve()),vaps:vaps,ha:ha.results,poe:poe&&poe.results&&poe.results[0]},sdWanBandwidth)})},tooltipHeaderFormatFunction:function(entry,sourceID){if(entry.supports_transceiver){const systemTransceivers=this.getTooltipData(entry).systemTransceivers,meta=this.getSourceMetaData(sourceID),certifiedTransceivers=meta&&meta.certifiedTransceivers;if(systemTransceivers){const elem=dom.elem("div");return systemTransceivers.then(res=>{const transceiver=res&&res.mapping[entry.q_origin_key];elem.innerHTML=transceiverHeaderFormatter(transceiver,certifiedTransceivers)||""}),elem}}},valueFunction:function(entry){return(intf=entry).is_blackhole||intf.is_virtual_wan_link||intf.is_empty_placeholder?entry.label:utilFirewallInterfaces.getLabel(entry)||entry.name;var intf},preProcessSelected:!0,solitaryEntries:{any:!0},formatFunction:function(entry,value){return`<f-icon class="${entry.icon}"></f-icon>                     <span>${dom.escapeHTML(value)}</span>`},sortFunction:function(valueA,valueB,entryA,entryB){return(entryA.sortValue===entryB.sortValue?0:entryA.sortValue<entryB.sortValue?-1:1)||fSort.interfaceName(entryA.name,entryB.name)},searchKeys:{alias:!0,type:function(entry,searchString,searchRegex){return searchRegex.test($.getInfo(entry.type))},role:function(entry,searchString,searchRegex){if(entry.role&&"undefined"!==entry.role)return searchRegex.test($.getInfo("Interface::role."+entry.role))},ipv4_addresses:function(entry,searchString,searchRegex){return collectFirewallInterfaceAddresses(entry,"ipv4_addresses").some(function(address){return searchRegex.test(address)})},ipv6_addresses:function(entry,searchString,searchRegex){return collectFirewallInterfaceAddresses(entry,"ipv6_addresses").some(function(address){return searchRegex.test(address)})},ssid:!0,vlan_id:!0,description:!0,members:!0},tooltipKeys:{alias:new TooltipKey($.getInfo("alias")),link:new TooltipKey($.getInfo("link"),function(entry,key,meta,sourceID){var result,icon;if("down"===entry.status)result='<f-icon class="fa-status-down-disabled"></f-icon><span>('+$.getInfo("disabled")+")</span>";else if(entry.link){if(icon='<f-icon class="'+("up"===entry.link?"fa-status-up":"fa-status-down")+'"></f-icon>',entry.vlan_interface)try{entry=Omniselect.getSourceDataSync(sourceID).mapping[entry.q_origin_key]||entry}catch(e){}result=entry.speed&&entry.duplex&&"rj11"!==entry.media?icon+"<span>"+(entry.speed+" "+$.getInfo("mbps")+" / "+$.getInfo("duplex_"+entry.duplex))+"</span>":icon}return result}),type:new TooltipKey($.getInfo("type"),function(entry){var iconClass,type,result;return"any"!==entry.name&&entry.type&&(iconClass=utilIcon.iconClass(utilIcon.ICON_TYPE.INTERFACE,entry.type),result=type=$.getInfo("interface_type::"+entry.type),iconClass&&(result=dom.create_icon_html(iconClass,{iconSize:"small"}),result+="<span>"+type+"</span>")),result}),role:new TooltipKey($.getInfo("role"),function(entry){if(entry.role&&"undefined"!==entry.role)return $.getInfo("Interface::role."+entry.role)}),hardware_switch:new TooltipKey($.getInfo("Hardware Switch")),physical_mode:new TooltipKey($.getInfo("Physical Mode"),entry=>entry.adsl&&entry.adsl.physical_mode),ipv4_addresses:new TooltipKey($.getInfo("IPv4 Addresses"),function(entry){return collectFirewallInterfaceAddresses(entry,"ipv4_addresses").reduce(function(previous,current){return previous+"<div>"+current+"</div>"},"")}),ipv6_addresses:new TooltipKey($.getInfo("IPv6 Addresses"),function(entry){if(!top.state||top.state.featureEnabled("gui-ipv6"))return collectFirewallInterfaceAddresses(entry,"ipv6_addresses").reduce(function(previous,current){return previous+"<div>"+current+"</div>"},"")}),adsl_link:new TooltipKey($.getInfo("ADSL Status"),entry=>entry.adsl&&entry.adsl.link&&translate(`linkstatus::${entry.adsl.link}`)),ssid:new TooltipKey($.getInfo("ssid"),createEscapedTooltipFormatter("ssid")),schedule:new TooltipKey($.getInfo("Schedule"),function(entry){if("vap-switch"===entry.type){const vaps=this.getTooltipData(entry).vaps;if(vaps){const vap=vaps.find(vapEntry=>vapEntry.name===entry.name);if(vap&&vap.schedule&&vap.schedule.length)return truncatedListFormat(vap.schedule,2,schedule=>Omniselect.formatEntry(schedule))}}}),vlan_id:new TooltipKey($.getInfo("vlanid")),vlan_interface:new TooltipKey($.getInfo("Base Interface"),function(entry,key,meta,sourceID){var html;if(entry.vlan_interface)try{const completeInterfaceSourceId=getCompleteInterfacesSourceID(sourceID);html=this.processedFormatEntrySync({q_origin_key:entry.vlan_interface,datasource:completeInterfaceSourceId})}catch(e){html=entry.vlan_interface}return html}),members:new TooltipKey($.getInfo("members"),function(entry,key,meta,sourceID){const csfPath=getSourceCSFPath(sourceID),datasource="ipsec-aggregate"===entry.type?getCSFProxySourceID("availableIPsecTunnels",csfPath):sourceID,membersMap=Omniselect.getSourceDataSync(datasource).mapping;if(Array.isArray(entry.members)&&entry.members.length){const members=entry.members.filter(member=>membersMap[member]);return nColumnListFormat(members,2,member=>Omniselect.processedFormatEntrySync({q_origin_key:member,datasource:datasource}))}}),managed_devices:new TooltipKey($.getInfo("ac_managed_devices"),function(entry){var html;return Array.isArray(entry.managed_devices)&&entry.managed_devices.length&&(html=nColumnListFormat(entry.managed_devices,1,device=>{try{return Omniselect.processedFormatEntrySync({q_origin_key:device,datasource:"switch-controller.managed-switch"})}catch(e){return device}})),html}),dhcp4_client_count:new TooltipKey($.getInfo("DHCP Clients")),dhcp6_client_count:new TooltipKey($.getInfo("DHCPv6 Clients")),fabric_heartbeat:new TooltipKey($.getInfo("Interface::allowaccess.fabric"),function(entry){if(entry.hasOwnProperty("fabric_heartbeat"))return utilIcon.formatIcon(utilIcon.ICON_TYPE.ENABLE_DISABLE,entry.fabric_heartbeat?"enable":"disable")}),ha_role:new TooltipKey($.getInfo("HA Role"),function(entry){const formatRole=(iconClass,role)=>`<f-icon class="${iconClass}"></f-icon>\n                            <span>${translate(role)}</span>`,ha=this.getTooltipData(entry).ha;if(ha&&ha){let match;const quotedStringSplit=new RegExp(/(?:"([^"]+)") ?/g);for(;match=quotedStringSplit.exec(ha.hbdev);)if(entry.name===match[1])return formatRole("ftnt-ha-heartbeat","HA Heartbeat Interface");for(;match=quotedStringSplit.exec(ha.monitor);)if(entry.name===match[1])return formatRole("ftnt-ha-monitor","HA Monitor Interface");if(ha["ha-mgmt-interfaces"].find(mgmtEntry=>{return(mgmtEntry.interface&&mgmtEntry.interface.name)===entry.name}))return formatRole("ftnt-ha-mgmt","HA Management Interface")}}),poe_status:new TooltipKey($.getInfo("PoE Status"),entry=>{const status=entry.poe_enabled?"enabled":"disabled";return entry.poe_capable&&`<f-icon class="fa-${status}"></f-icon>\n                        <span>${translate(status)}</span>`}),power_status:new TooltipKey($.getInfo("Power Status"),entry=>{const status=entry.poe_status,iconClass=status===BUILD.SYMBOLS.POE_STATUS_DELIVERING_POWER?"fa-poe-powered":"fa-poe";return status&&`<f-icon class="${iconClass}"></f-icon><span>${translate(`poestatus::${status}`)}</span>`}),poe_power:new TooltipKey($.getInfo("Used Power"),function(entry){const data=this.getTooltipData(entry).poe;return data&&data.used&&formatters.wattage(data.used,2)}),poe_reserved:new TooltipKey($.getInfo("Reserved Power"),function(entry){const data=this.getTooltipData(entry).poe;return data&&data.reserved&&formatters.wattage(data.reserved,2)}),bandwidthRestriction:new TooltipKey($.getInfo("Bandwidth Restriction"),function(entry){var html="";return entry.in_bandwidth_limit&&(html=`<div>\n                                ${formatters.metric_bits_per_second(1e3*entry.in_bandwidth_limit)}\n                                ${$.getInfo("Inbound")}\n                            </div>`),entry.out_bandwidth_limit&&(html=html.concat(`<div>\n                            ${formatters.metric_bits_per_second(1e3*entry.out_bandwidth_limit)}\n                            ${$.getInfo("Outbound")}\n                        </div>`)),html}),"seq-num":new TooltipKey($.getInfo("SD-WAN Member ID"),function(entry){return entry["seq-num"]},null,"sdwan"),sdwan_zone:new TooltipKey($.getInfo("SD-WAN Zone"),function(entry,key,meta,sourceID){if(entry.sdwan_zone)try{const completeInterfaceSourceId=getCompleteInterfacesSourceID(sourceID);return Omniselect.processedFormatEntrySync({q_origin_key:entry.sdwan_zone,datasource:completeInterfaceSourceId})}catch(e){return entry.sdwan_zone}},null,"sdwan"),sdWanBandwidth:new TooltipKey($.getInfo("Bandwidth"),function(entry){const bandwidth=this.getTooltipData(entry).bandwidth;if(bandwidth&&(bandwidth.tx_bandwidth||bandwidth.rx_bandwidth))return dom.create_compare_bar_on_tooltip(bandwidth,{keys:["tx_bandwidth","rx_bandwidth"],format_fn:summed=>formatters.metric_bits_per_second(summed)})},null,"sdwan"),sdWanTxBandwidthUtilization:new TooltipKey($.getInfo("Upstream Bandwidth Utilization"),function(entry){const utilization=this.getTooltipData(entry).bandwidthUtilization;if(utilization&&utilization.tx_bandwidth)return ftnt_shared.formatters.resourceBarElement(utilization.tx_bandwidth,{textHeight:!0,showPercentage:!0})},null,"sdwan"),sdWanRxBandwidthUtilization:new TooltipKey($.getInfo("Downstream Bandwidth Utilization"),function(entry){const utilization=this.getTooltipData(entry).bandwidthUtilization;if(utilization&&utilization.rx_bandwidth)return ftnt_shared.formatters.resourceBarElement(utilization.rx_bandwidth,{textHeight:!0,showPercentage:!0})},null,"sdwan"),transceiver:new TooltipKey($.getInfo("Transceiver"),function(entry){if(entry.supports_transceiver){const csfPath=this.getTooltipData(entry).csfPath,transceiverPromise=this.getTooltipData(entry).systemTransceivers,datasource=getCSFProxySourceID("systemTransceivers",csfPath),elem=dom.elem("span",null,{children:[dom.elem("f-icon",{className:"fa-loading"})]});return transceiverPromise.then(()=>{try{elem.innerHTML=Omniselect.processedFormatEntrySync({q_origin_key:entry.name,datasource:datasource})}catch(e){elem.innerHTML=$.getInfo("None detected")}}),elem}}),description:new TooltipKey($.getInfo("description"),createEscapedTooltipFormatter("description")),references:referencesTooltipKey},tooltipFooterActions:[createTooltipFooterSlideAction({label:translate("View DHCP Clients"),title:entry=>translate("DHCP Clients for {INTERFACE}",[utilFirewallInterfaces.getLabel(entry)||entry.name]),iconClass:"fa-list",template:'<f-dhcp-monitor-widget interface="::interface" in-slide="::true"></f-dhcp-monitor-widget>',initModules:["ng/system/dashboard/f-dhcp-monitor-widget"],parentScope:entry=>({interface:entry}),visibleFunction:entry=>{return top.state&&top.state.adminHasReadPermission(top.state.ACCESS_GROUP.NETWORK_CFG)&&(!fPersist.get("DhcpMonitor::persist::fortigate")&&entry.dhcp4_client_count||top.state.featureEnabled("gui-ipv6")&&entry.dhcp6_client_count)}})]},"user.fortitoken":{name:$.getInfo("fortitoken"),data:function(meta,sourceID){var global=isSourceForAllVdoms(sourceID)?"?vdom=*":"",uri="/api/v2/monitor/user/fortitoken/"+global;return $.getJSON(uri).then(function(response){if(global){var tokens=[];return response.forEach(function(vdomResponse){var vdomTokens=toArray(vdomResponse.results,vdomResponse.vdom);tokens=tokens.concat(vdomTokens)}),tokens}return toArray(response.results,response.vdom)});function toArray(map,vdom){return Object.keys(map).map(function(key){var entry=map[key];return $.extend(entry,{q_origin_key:entry.serial_number,datasource:sourceID,vdom:vdom})})}},valueFunction:function(entry){return entry.serial_number},formatFunction:function(entry,value){return'<f-icon class="'+("mobile"===entry.type?"fa-mobile":"ftnt-fortitoken")+'"></f-icon><span>'+value+"</span>"},searchKeys:{type:function(entry,searchString,searchRegex){var type=entry.type;return searchRegex.test($.getInfo("fortitoken_type::"+type))}},tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){var type=entry.type;return $.getInfo("fortitoken_type::"+type)})}},"firewall.internet-service":{name:translate("Internet Service"),data:async function(){const res=await $.getJSON("/api/v2/monitor/firewall/internet-service-basic");for(let service of res.results)service.datasource="firewall.internet-service",service["css-class"]=`isdb_icon isdb${service["icon-id"]}`,service.q_static=!0;return res.results},alternativeEntryIDs:["name"],searchKeys:{name:!0,id:function(entry,searchString){const value=entry.id,id=Number(searchString);if(value&&!Number.isNaN(id))return value===id},direction:!0},valueFunction:pluckName,formatFunction:defaultNegateFormatFunction,suppressIdValueTooltip:!0,tooltipHeaderFormatFunction:applicationIconHeaderFormatter,tooltipNameLabel:translate("id"),tooltipKeys:{id:new TooltipKey(translate("ID")),direction:new TooltipKey(translate("Direction"),entry=>translate(entry.direction)),totalIPRanges:new TooltipKey(translate("Total IP Ranges"),function(entry){const value=entry["ip-range-number"];if(value)return value.toLocaleString()}),totalIPs:new TooltipKey(translate("Total IPs"),function(entry){const value=entry["ip-number"];if(value)return value.toLocaleString()})}},"firewall.country":{name:$.getInfo("Country"),data:createCMDBSource("firewall","country",{format:"id|name"}),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},"firewall.region":{name:$.getInfo("Region"),data:createCMDBSource("firewall","region",{format:"id|name",processFn:results=>{for(const entry of results)0===entry.id&&(entry.q_origin_key=0);return results}}),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},"firewall.city":{name:$.getInfo("City"),data:createCMDBSource("firewall","city",{processFn:results=>{for(const entry of results)0===entry.id&&(entry.q_origin_key=0);return results}}),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},"firewall.internet-service-botnet":{name:$.getInfo("Internet Service Botnet"),data:createCMDBSource("firewall","internet-service-botnet"),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},"firewall.internet-service-sld":{name:$.getInfo("Second Level Domain"),data:createCMDBSource("firewall","internet-service-sld"),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},"firewall.internet-service-name":{name:$.getInfo("Internet Service"),data:async function(meta,sourceID){const[serviceNames,services,countries,regions,cities]=await Promise.all([createCMDBSource("firewall","internet-service-name",{noDatasource:!0}).apply(this,[meta,sourceID]),Omniselect.getSourceData("firewall.internet-service"),Omniselect.getSourceData("firewall.country"),Omniselect.getSourceData("firewall.region"),Omniselect.getSourceData("firewall.city")]),extraInfoMap={"internet-service-id":services.mapping,"country-id":countries.mapping,"region-id":regions.mapping,"city-id":cities.mapping},extraInfoKeys=["internet-service-id","country-id","region-id","city-id"];for(let serviceName of serviceNames){for(const key of extraInfoKeys){const extraInfo=extraInfoMap[key],id=serviceName[key];id&&extraInfo&&extraInfo[id]&&(serviceName[key]=Object.assign({},extraInfo[id]))}serviceName["css-class"]=serviceName["internet-service-id"]["css-class"]}return serviceNames.filter(entry=>"number"!=typeof entry["internet-service-id"])},searchKeys:{name:!0,type:!0,direction:function(entry,searchString,searchRegex){const value=entry["internet-service-id"]&&entry["internet-service-id"].direction;if(value)return searchRegex.test(value)},"internet-service-id":function(entry,searchString){const value=entry["internet-service-id"]&&entry["internet-service-id"].id,id=Number(searchString);if(value&&!Number.isNaN(id))return value===id},"internet-service":function(entry,searchString,searchRegex){const value=entry["internet-service-id"]&&entry["internet-service-id"].name;if(value)return searchRegex.test(value)},"country-id":function(entry,searchString,searchRegex){if("location"===entry.type){const value=entry["country-id"]&&entry["country-id"].name;if(value)return searchRegex.test(value)}},"region-id":function(entry,searchString,searchRegex){if("location"===entry.type){const value=entry["region-id"]&&entry["region-id"].name;if(value)return searchRegex.test(value)}},"city-id":function(entry,searchString,searchRegex){if("location"===entry.type){const value=entry["city-id"]&&entry["city-id"].name;if(value)return searchRegex.test(value)}}},valueFunction:pluckName,formatFunction:defaultNegateFormatFunction,suppressIdValueTooltip:!0,tooltipHeaderFormatFunction:applicationIconHeaderFormatter,tooltipNameLabel:translate("name"),tooltipKeys:{name:new TooltipKey(translate("name")),type:new TooltipKey(translate("type"),entry=>translate(`internetServiceName::type.${entry.type}`)),"country-id":new TooltipKey(translate("Country"),internetServiceLocationFormatter("country-id")),"region-id":new TooltipKey(translate("Region"),internetServiceLocationFormatter("region-id")),"city-id":new TooltipKey(translate("City"),internetServiceLocationFormatter("city-id")),"internet-service-id":new TooltipKey(translate("Master Internet Service ID"),entry=>entry["internet-service-id"]&&entry["internet-service-id"].id),"internet-service":new TooltipKey(translate("Master Internet Service"),entry=>{if("location"===entry.type)return entry["internet-service-id"]&&entry["internet-service-id"].name}),database:new TooltipKey(translate("Database"),entry=>{if(entry["internet-service-id"]&&"irdb"===entry["internet-service-id"].database)return translate("IP Reputation Database")}),direction:new TooltipKey(translate("Direction"),entry=>{if(entry["internet-service-id"])return translate(entry["internet-service-id"].direction)}),totalIPRanges:new TooltipKey(translate("Total IP Ranges"),function(entry){if("default"===entry.type){const value=entry["internet-service-id"]&&entry["internet-service-id"]["ip-range-number"];if(value)return value.toLocaleString()}}),totalIPs:new TooltipKey(translate("Total IPs"),function(entry){if("default"===entry.type){const value=entry["internet-service-id"]&&entry["internet-service-id"]["ip-number"];if(value)return value.toLocaleString()}}),references:referencesTooltipKey},createNew:createWritePermissionCheck("firewall","internet-service-name"),inlineEdit:createWritePermissionCheck("firewall","internet-service-name"),tooltipFooterActions:[new Omniselect.TooltipFooterAction({label:translate("View/Edit Entries"),iconClass:"fa-eye",visibleFunction:function(entry){const hasPermission=top.state&&top.state.adminHasReadPermissionForTable("firewall","internet-service-name");return!entry.csfPath&&hasPermission},onClick:async function(entry){const slideBridgeClient=new slideBridge.Client,mkey=entry["internet-service-id"].q_origin_key,searchParams={country_id:entry["country-id"]&&entry["country-id"].id||0,region_id:entry["region-id"]&&entry["region-id"].id||0,city_id:entry["city-id"]&&entry["city-id"].id||0};try{await slideBridgeClient.openRouteAsSlide({uri:`/ng/firewall/internet_service/${mkey}`,title:entry["internet-service-id"].name,searchParams:searchParams})}catch(e){}}})]},"firewall.internet-service-custom":{name:$.getInfo("Custom Internet Service"),data:createCMDBSource("firewall","internet-service-custom",{processFn:makeAllVdomsProcessFn()}),metaData:function(){return Promise.all([Omniselect.getSourceData("firewall.address"),Omniselect.getSourceData("firewall.addrgrp")])},filterFunction:function(entry){return!entry["master-service-id"]||entry.entry.length>0},formatFunction:defaultNegateFormatFunction,tooltipKeys:{dst:new TooltipKey($.getInfo("addr"),function(entry){return nColumnListFormat(entry.entry.reduce(function(address,subEntry){return address.concat(subEntry.dst)},[]),1,function(addr){try{return Omniselect.processedFormatEntrySync(addr)}catch(e){return addr.q_origin_key}})})},limitedPermissionFallbackFunctions:{valueFunction:pluckName}},"firewall.internet-service-group":{name:$.getInfo("Internet Service Group"),data:async function(meta,sourceID){const[serviceGroups,serviceNames]=await Promise.all([createCMDBSource("firewall","internet-service-group").apply(this,[meta,sourceID]),Omniselect.getSourceData("firewall.internet-service-name")]),memberInfoMapping=serviceNames.mapping;for(let serviceGroup of serviceGroups)for(let member of serviceGroup.member||[])Object.assign(member,memberInfoMapping[member.q_origin_key]);return serviceGroups},formatFunction:defaultNegateFormatFunction,filterFunction:entry=>entry.member&&entry.member.length,tooltipKeys:{member:new TooltipKey($.getInfo("members"),entry=>nColumnListFormat(entry.member,1,Omniselect.processedFormatEntrySync))}},"firewall.internet-service-custom-group":{name:$.getInfo("Custom Internet Service Group"),data:async function(meta,sourceID){const[serviceGroups,customServices]=await Promise.all([createCMDBSource("firewall","internet-service-custom-group").apply(this,[meta,sourceID]),Omniselect.getSourceData("firewall.internet-service-custom")]),memberInfoMapping=customServices.mapping;for(let serviceGroup of serviceGroups)for(let member of serviceGroup.member||[])Object.assign(member,memberInfoMapping[member.q_origin_key]);return serviceGroups},formatFunction:defaultNegateFormatFunction,filterFunction:entry=>entry.member&&entry.member.length,tooltipKeys:{member:new TooltipKey($.getInfo("members"),entry=>nColumnListFormat(entry.member,1,Omniselect.processedFormatEntrySync))}},"firewall.internet-service-owner":{name:$.getInfo("Owner"),data:createCMDBSource("firewall","internet-service-owner"),valueFunction:pluckName,searchKeys:{name:!0,id:!0},tooltipKeys:{id:new TooltipKey(translate("id"))}},dlpFileTypes:{aliasFor:["dlp.filepattern"],dontCache:!0,name:$.getInfo("File Types"),data:function(meta){var nameMap=(meta&&meta.filepattern&&meta.filepattern.entries||[]).reduce(function(result,entry){return result[entry.q_origin_key]=entry.names,result},{}),filepatternName=meta&&meta.filepattern&&meta.filepattern.name;return $.when($.get("/api/v2/cmdb/dlp/filepattern/?action=schema"),$.get("/api/v2/cmdb/system/global/?format=special-file-23-support")).then(function(schema,hibunConfig){var entries=[],showHibun="enable"===hibunConfig[0].results["special-file-23-support"];return schema[0].results.children.entries.children["file-type"].options.forEach(function(entry){if("hibun"!==entry.name||showHibun){var name=entry.name;entries.push({name:name,q_origin_key:name,"file-type":name,pattern:name,"filter-type":"type",datasource:"dlp.filepattern",lang:"ft_"+name,names:nameMap[name]||[name],filepatternName:filepatternName})}}),entries})},formatFunction:function(entry){return $.getInfo(entry.lang)+" ("+entry.q_origin_key+")"},sortFunction:function(valueA,valueB,entryA,entryB){return fSort.fileType(valueA,valueB,entryA,entryB)},tooltipNameLabel:$.getInfo("File type"),tooltipKeys:{names:new TooltipKey($.getInfo("Entry Label(s)"),function(entry){if(Array.isArray(entry.names))return entry.names.join(", ")}),filepatternName:new TooltipKey($.getInfo("File Pattern Name"))}},"dlp.sensor":{name:$.getInfo("datasource_dlp.sensor"),data:createCMDBSource("dlp","sensor"),formatFunction:profileFormatFunction,tooltipKeys:{q_global_entry:scopeTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"dlp",name:"sensor"})},"dnsfilter.profile":{name:$.getInfo("datasource_dnsfilter.profile"),data:createCMDBSource("dnsfilter","profile"),createNew:createUtmProfilePermissionCheck("dnsfilter","profile"),inlineEdit:createWritePermissionCheck("dnsfilter","profile"),formatFunction:profileFormatFunction,searchKeys:{comment:!0},tooltipKeys:{comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"dnsfilter",name:"profile"})},"extender-controller.extender":{name:$.getInfo("extender"),data:createCMDBSource("extender-controller","extender"),inlineEdit:createWritePermissionCheck("extender-controller","extender")},firewallNat46IPPools:{aliasFor:["firewall.ippool6"],name:$.getInfo("firewall.ippool6"),data:function(){return $.getJSON("/api/v2/monitor/system/nat46-ippools").then(function(response){return response.results.map(function(ipp){return Object.assign(ipp,{q_origin_key:ipp.name,datasource:"firewall.ippool6","css-class":"ftnt-ip-pool"})})})},searchKeys:{comments:!0},tooltipKeys:{startip:new TooltipKey($.getInfo("external_ip_range"),function(entry){return entry.startip+" - "+entry.endip}),comments:commentsTooltipKey}},"firewall.address":{name:$.getInfo("Address"),data:function(meta,sourceID){const addrGetter=createCMDBSource("firewall","address",{optimizeForLargeDataset:!0,processFn:makeAllVdomsProcessFn(entry=>{switch(entry.type){case"mac":entry["start-mac"]===entry["end-mac"]&&(entry.$value=`${entry["start-mac"]}-mac`);break;case"ipmask":{let subnets=entry.subnet.split(" ");"255.255.255.255"===subnets[1]&&(entry.$value=`${subnets[0]}-ipv4`);break}case"dynamic":"ems-tag"===entry["sub-type"]&&(entry.q_no_rename=!0,entry.q_static=!0)}entry.visibility="enable"})});return Promise.all([addrGetter.call(this,meta,sourceID),$.get(makeCSFSourceURI("/api/v2/cmdb/firewall/addrgrp",sourceID))]).then(([addresses,groups])=>{const addressMap={};return addresses.forEach(address=>{addressMap[address.q_origin_key]=address}),groups.results.forEach(group=>{"folder"===group.type&&group.member&&group.member.forEach(member=>{addressMap[member.q_origin_key]&&(addressMap[member.q_origin_key].visibility="disable")})}),addresses})},alternativeEntryIDs:["uuid","$value"],metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),getData=Omniselect.getSourceData,interfacesSourceID=getCSFProxySourceID("firewallInterfaces",csfPath);var promises=[$.get(makeCSFSourceURI("/api/v2/cmdb/system/geoip-country",sourceID)),getData(interfacesSourceID),$.get(makeCSFSourceURI("/api/v2/monitor/firewall/address-fqdns",sourceID)),$.get(makeCSFSourceURI("/api/v2/monitor/firewall/address-dynamic",sourceID)),getData(getCSFProxySourceID("system.sdn-connector",csfPath))];return $.when.apply($,promises).then(function(countryResponse,firewallInterfaces,fqdnResponse,dynamicResponse,sdnResponse){var countryMap={};return countryResponse[0].results.forEach(function(country){countryMap[country.id]=country}),{countryMap:countryMap,resolvedFqdn:fqdnResponse[0].results,resolvedDynamic:dynamicResponse[0].results,sdnConnectors:sdnResponse,interfacesSourceID:interfacesSourceID}})},tooltipData:function(entry,sourceID){const csfPath=getSourceCSFPath(sourceID);return Omniselect.getSourceData(getCSFProxySourceID("user.adgrp",csfPath))},formatFunction:createNegateFormatFunction(function(entry,value){var type,resolvedFqdn,resolvedDynamic,resolvedAddrs,invalidIcon,icon=entry.q_class||entry["css-class"];try{"fqdn"===(type=entry.type)||icon.includes("ftnt-address-fqdn")?(resolvedAddrs=(resolvedFqdn=this.getSourceMetaData("firewall.address").resolvedFqdn)&&resolvedFqdn[entry.name]&&resolvedFqdn[entry.name].addrs||[],invalidIcon="ftnt-address-invalid-fqdn"):("dynamic"===type||icon.includes("ftnt-address-dynamic"))&&(resolvedAddrs=(resolvedDynamic=this.getSourceMetaData("firewall.address").resolvedDynamic)?resolvedDynamic[entry.name].addrs:[],invalidIcon="ftnt-address-invalid-dynamic"),!resolvedAddrs||resolvedAddrs.length||(address=>isWildCardFqdn(address.fqdn)||(subtype=>"ems-tag"===subtype)(address["sub-type"]))(entry)||((icon=icon.split(" "))[0]=invalidIcon,icon=icon.join(" "))}catch(e){}return'<f-icon class="'+icon+'"></f-icon><span>'+value+"</span>"}),createNew:createWritePermissionCheck("firewall","address"),inlineEdit:createWritePermissionCheck("firewall","address"),preProcessSelected:!0,solitaryEntries:{all:!0,none:!0},searchKeys:{type:function(addr,searchString,searchRegex){return searchRegex.test($.getInfo("addr_type_"+addr.type))},fqdn:!0,geography:function(addr,searchString,searchRegex){return geographyTooltipSearchFn(this,"firewall.address",addr,searchRegex)},range:function(addr,query){if("iprange"!==addr.type)return!1;var range=[goog.net.IpAddress.fromString(addr["start-ip"]),goog.net.IpAddress.fromString(addr["end-ip"])];return fAddressSearch.ip4_basic_search([range],query).length},subnet:function(addr,query){if("ipmask"!==addr.type)return!1;var range_str=addr.address||(null!=addr.subnet?addr.subnet.replace(" ","/"):null),is_address_all=fAddressSearch.IP_ALL===range_str;if(is_address_all&&!fAddressSearch.IP_ALL_QUERY_PARTIAL.test(query)||!is_address_all&&fAddressSearch.IP_ALL_QUERY.test(query))return!1;var range=fAddressSearch.ip4_range_calculate(range_str);return fAddressSearch.ip4_basic_search([range],query).length},wildcard:function(addr,query){if("wildcard"!==addr.type)return!1;var wildcardData=addr.wildcard.split(" "),ip=wildcardData[0],mask=wildcardData[1];return fAddressSearch.ip4_wildcard_search(ip,mask,query)},"associated-interface":!0,comment:!0,sdn:!0,tenant:!0,"epg-name":!0,"sdn-tag":!0,filter:!0,interface:!0,macAddressScope:function(addr,query,searchRegex){if("mac"!==addr.type)return!1;const scope=addr["start-mac"]===addr["end-mac"]?"single":"range";return searchRegex.test(translate(`macAddressScope::${scope}`))},mac:macRangeTooltipSearchFn,startMac:macRangeTooltipSearchFn,endMac:macRangeTooltipSearchFn},tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){return $.getInfo("addr_type_"+entry.type)}),"sub-type":new TooltipKey($.getInfo("subtype"),function(entry){return"dynamic"===entry.type&&$.getInfo("addr_sub_type_"+entry["sub-type"])}),fqdn:new TooltipKey($.getInfo("addr_type_fqdn"),function(entry){if("fqdn"===entry.type)return entry.fqdn}),geography:new TooltipKey($.getInfo("addr_type_geography"),function(entry){var code,countryMap;if("geography"===entry.type)return'<span class="country_flag country_'+(code=entry.country)+'"></span><span>'+((countryMap=this.getSourceMetaData("firewall.address").countryMap)?countryMap[code].name:code)+"</span>"}),range:new TooltipKey($.getInfo("addr_type_iprange"),function(entry){if("iprange"===entry.type)return entry["start-ip"]+" - "+entry["end-ip"]}),macAddressScope:new TooltipKey(translate("MAC Address Scope"),function(entry){if("mac"===entry.type){const scope=entry["start-mac"]===entry["end-mac"]?"single":"range";return $.getInfo(`macAddressScope::${scope}`)}}),mac:new TooltipKey(translate("MAC Address"),function(entry){if("mac"===entry.type&&entry["start-mac"]===entry["end-mac"])return entry["start-mac"]}),startMac:new TooltipKey(translate("Starting MAC"),function(entry){if("mac"===entry.type&&entry["start-mac"]!==entry["end-mac"])return entry["start-mac"]}),endMac:new TooltipKey(translate("Ending MAC"),function(entry){if("mac"===entry.type&&entry["start-mac"]!==entry["end-mac"])return entry["end-mac"]}),subnet:new TooltipKey($.getInfo("addr_type_ipmask"),function(entry){if("ipmask"===entry.type||"interface-subnet"===entry.type)return fIp.IpMask.parse(entry.subnet).fullNetwork()}),wildcard:new TooltipKey($.getInfo("wildcard"),function(entry){if("wildcard"===entry.type)return entry.wildcard.replace(" ","/")}),"fsso-group":new TooltipKey($.getInfo("FSSO Group"),function(entry){if("dynamic"===entry.type&&"fsso"===entry["sub-type"])return nColumnListFormat(entry["fsso-group"],1,function(member){try{return Omniselect.processedFormatEntrySync(member)}catch(e){return member.q_origin_key}})}),"clearpass-spt":new TooltipKey($.getInfo("SPT (System Posture Token)"),function(entry){if("dynamic"===entry.type&&"clearpass-spt"===entry["sub-type"])return $.getInfo("firewall::address::clearpass::spt."+entry["clearpass-spt"])}),sdn:new TooltipKey($.getInfo("System::SDN::field.sdn"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"]){var sdn=entry.sdn;return'<f-icon class="'+sdn["css-class"]+'"></f-icon><span>'+sdn.q_origin_key+"</span>"}}),tenant:new TooltipKey($.getInfo("System::SDN::field.tenant"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry.tenant}),"epg-name":new TooltipKey($.getInfo("System::SDN::field.epg-name"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry["epg-name"]}),"sdn-tag":new TooltipKey($.getInfo("System::SDN::field.sdn-tag"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry["sdn-tag"]}),organization:new TooltipKey($.getInfo("System::SDN::field.organization"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry.organization}),"subnet-name":new TooltipKey($.getInfo("System::SDN::field.subnet-name"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry["subnet-name"]}),"policy-group":new TooltipKey($.getInfo("System::SDN::field.policy-group"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"])return entry["policy-group"]}),"obj-id":new TooltipKey($.getInfo("System::SDN::field.obj-id"),function(entry){if("dynamic"===entry.type&&"sdn"===entry["sub-type"]&&"nsx"===entry.sdn)return entry["obj-id"]}),filter:new TooltipKey($.getInfo("System::SDN::field.filter"),function(entry){if(entry.sdn){const FILTERABLE_SDN_CONNECTORS=["acs","aws","azure","gcp","kubernetes","oci","openstack","vmware"],sdnName="string"==typeof entry.sdn?entry.sdn:entry.sdn.name||entry.sdn.q_origin_key,sdn=this.getSourceMetaData("firewall.address").sdnConnectors.mapping[sdnName];if("dynamic"===entry.type&&"sdn"===entry["sub-type"]&&FILTERABLE_SDN_CONNECTORS.includes(sdn.type))return entry.filter}}),"associated-interface":new TooltipKey($.getInfo("Interface"),function(entry){var name=(entry["associated-interface"]||entry.interface||{}).name||"any";let interfacesSourceID=this.getSourceMetaData("firewall.address").interfacesSourceID;return Omniselect.processedFormatEntrySync({q_origin_key:name,datasource:interfacesSourceID})}),"resolved-fqdn":new TooltipKey(translate("Resolved To"),function(entry){if("fqdn"===entry.type&&!isWildCardFqdn(entry.fqdn))return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address").resolvedFqdn,key:entry.name,unresolvedMessage:translate("fqdn_unresolved",[entry.fqdn])})}),"resolved-wildcard-fqdn":new TooltipKey(translate("Collected Resolved IPs"),function(entry){if("fqdn"===entry.type&&isWildCardFqdn(entry.fqdn))return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address").resolvedFqdn,key:entry.name,messageFn:()=>translate("fqdn_unresolved",[entry.fqdn])})}),"resolved-dynamic":new TooltipKey(translate("Resolved To"),function(entry){if("dynamic"===entry.type)return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address").resolvedDynamic,key:entry.name,unresolvedMessage:translate("dynamic_unresolved",[entry.name])})}),comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"address"})},"firewall.addrgrp":{name:$.getInfo("firewall.addrgrp"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","addrgrp",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)}),entry.visibility="enable"})});const csfPath=getSourceCSFPath(sourceID),addressSourceID=getCSFProxySourceID("firewall.address",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(addressSourceID)]).then(function([groups,addresses]){const addrMap=addresses.mapping,addrIdKey=getSourceEntryIdKey(addressSourceID),addrGrpIdKey=getSourceEntryIdKey(sourceID),folderMember={},addrGrpMap=groups.reduce((mapping,group)=>("folder"===group.type&&(folderMember[group.q_origin_key]=group),mapping[group[addrGrpIdKey]]=group,mapping),{});let processMember=addrOrGrp=>{var addrName=addrOrGrp[addrIdKey],addrGrpname=addrOrGrp[addrGrpIdKey];let address=addrMap[addrName];return address||(addrOrGrp.member=(addrGrpMap[addrGrpname]||{}).member,(addrOrGrp.member||[]).reduce((result,member)=>result.concat(processMember(member)),[]))};return groups.forEach(group=>{group.$flattenedAddresses=processMember(group),"folder"===group.type&&group.member&&group.member.forEach(member=>{folderMember[member.q_origin_key]&&(folderMember[member.q_origin_key].visibility="disable")})}),groups})},formatFunction:defaultNegateFormatFunction,createNew:createWritePermissionCheck("firewall","addrgrp"),inlineEdit:createWritePermissionCheck("firewall","addrgrp"),createNewDatasource:"firewall.addrgrp",searchKeys:{member:commonGroupSearch,comment:!0},tooltipKeys:{type:new TooltipKey($.getInfo("Type"),function(entry){return $.getInfo(`firewall::addgrp::type.${entry.type}`)}),member:membersTooltipKey,"exclude-member":new TooltipKey($.getInfo("Exclude Members"),createMembersTooltipFormatter("exclude-member")),comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"addrgrp"})},"firewall.address6":{name:$.getInfo("firewall.address6"),alternativeEntryIDs:["uuid"],preProcessSelected:!0,data:function(meta,sourceID){const addressGetter=createCMDBSource("firewall","address6",{processFn:makeAllVdomsProcessFn(entry=>{entry.visibility="enable"})}),isAllVdom=isSourceForAllVdoms(sourceID);let templateSourceID="firewall.address6-template";return isAllVdom&&(templateSourceID=makeAllVdomsSourceID(templateSourceID)),Promise.all([addressGetter.call(this,meta,sourceID),Omniselect.getSourceData(templateSourceID)]).then(function(response){var makeMap=function(map,current){return map[current.name]=current,map},makeSegmentValueMap=function(map,current){return map[formatters.parseIntToMultipleFormats(current.value).decimalNumber]=current,map},templateMap=response[1].mapping;return response[0].forEach(function(entry){if("template"===entry.type){let templateName=entry.template.name;isAllVdom&&(templateName=`${entry.template.name}#${entry.vdom}`);var template=templateMap[templateName];if(!template)return;var templateSegmentMap=template["subnet-segment"].reduce(makeMap,{});entry["subnet-segment"].forEach(function(segment){var predefinedValue;segment["meta.bits"]=templateSegmentMap[segment.name].bits,"specific"===segment.type&&(predefinedValue=(templateSegmentMap[segment.name].values||[]).reduce(makeSegmentValueMap,{})[formatters.parseIntToMultipleFormats(segment.value).decimalNumber])&&(segment["meta.value-name"]=predefinedValue.name)}),entry["meta.subnet-prefix"]=template.ip6}}),response[0]})},metaData:function(meta,sourceID){return Promise.all([$.get(makeCSFSourceURI("/api/v2/cmdb/system/geoip-country",sourceID)),$.get(makeCSFSourceURI("/api/v2/monitor/firewall/address-fqdns6",sourceID)),$.get(makeCSFSourceURI("/api/v2/monitor/firewall/address6-dynamic",sourceID))]).then(function([countryResponse,fqdnResponse,dynamicResponse]){return{countryMap:countryResponse.results.reduce((map,country)=>(map[country.id]=country,map),{}),resolvedFqdn:fqdnResponse.results,resolvedDynamic:dynamicResponse.results}})},formatFunction:createNegateFormatFunction(function(entry,value){var type,resolvedFqdn,resolvedDynamic,resolvedAddrs,invalidIcon,icon=entry.q_class||entry["css-class"];try{"fqdn"===(type=entry.type)||icon.includes("ftnt-address-fqdn")?(resolvedAddrs=(resolvedFqdn=this.getSourceMetaData("firewall.address6").resolvedFqdn)&&resolvedFqdn[entry.name]&&resolvedFqdn[entry.name].addrs||[],invalidIcon="ftnt-address-invalid-fqdn"):("dynamic"===type||icon.includes("ftnt-address-dynamic"))&&(resolvedAddrs=(resolvedDynamic=this.getSourceMetaData("firewall.address6").resolvedDynamic)?resolvedDynamic[entry.name].addrs:[],invalidIcon="ftnt-address-invalid-dynamic"),!resolvedAddrs||resolvedAddrs.length||isWildCardFqdn(entry.fqdn)||((icon=icon.split(" "))[0]=invalidIcon,icon=icon.join(" "))}catch(e){}return'<f-icon class="'+icon+'"></f-icon><span>'+value+"</span>"}),createNew:hasGuiIPv6EnabledForCreateNew("firewall","address6"),inlineEdit:createWritePermissionCheck("firewall","address6"),createNewDatasource:"firewall.address6",solitaryEntries:{all:!0,none:!0},searchKeys:{type:function(addr,searchString,searchRegex){return searchRegex.test($.getInfo("addr_type_ipv6_"+addr.type))},fqdn:!0,geography:function(addr,searchString,searchRegex){return geographyTooltipSearchFn(this,"firewall.address6",addr,searchRegex)},ip6:function(addr,query){if("ipprefix"!==addr.type||"all"===addr.q_origin_key&&-1===["::0","all"].indexOf(query))return!1;var address_parts=addr.ip6.split("/"),address=goog.net.IpAddress.fromString(address_parts[0]),mask=goog.math.Integer.fromString(address_parts[1]);return fPatterns.IP6_HOST.test(query)?fAddressSearch.subnet_util.contains(address,mask,goog.net.IpAddress.fromString(query)):void 0},"start-ip":function(addr,query){if("iprange"!==addr.type)return!1;var start=goog.net.IpAddress.fromString(addr["start-ip"]),end=goog.net.IpAddress.fromString(addr["end-ip"]);return fPatterns.IP6_HOST.test(query)?fAddressSearch.subnet_util.range_contains(start,end,goog.net.IpAddress.fromString(query)):void 0},ipmaskrange:!0,"obj-id":!0,comment:!0,template:!0,"subnet-segment":function(addr,query){return"template"===addr.type&&(addr["meta.subnet-prefix"].indexOf(query)>-1||addr["subnet-segment"].some(function(segment){return segment.name&&ftnt_shared.util.fastLocaleCompare(segment.name,query)||segment.value&&ftnt_shared.util.fastLocaleCompare(segment.value,query)||segment["meta.value-name"]&&ftnt_shared.util.fastLocaleCompare(segment["meta.value-name"],query)}))}},tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){return $.getInfo("addr_type_ipv6_"+entry.type)}),fqdn:new TooltipKey($.getInfo("addr_type_ipv6_fqdn"),function(entry){if("fqdn"===entry.type)return entry.fqdn}),geography:new TooltipKey($.getInfo("addr_type_ipv6_geography"),function(entry){var code,countryMap;if("geography"===entry.type)return`<span class="country_flag country_${code=entry.country}"></span>\n                            <span>${(countryMap=this.getSourceMetaData("firewall.address6").countryMap)?countryMap[code].name:code}</span>`}),sdn:new TooltipKey($.getInfo("System::SDN::field.sdn"),function(entry){if("dynamic"===entry.type){var sdn=entry.sdn;return'<f-icon class="'+sdn["css-class"]+'"></f-icon><span>'+sdn.q_origin_key+"</span>"}}),ipprefix:new TooltipKey($.getInfo("address"),function(entry){if("ipprefix"===entry.type)return entry.ip6}),iprange:new TooltipKey($.getInfo("ipmaskrange"),function(entry){if("iprange"===entry.type)return entry["start-ip"]+" - "+entry["end-ip"]}),template:new TooltipKey($.getInfo("IPv6 address template"),function(entry){if("template"===entry.type)return datasourceTooltipFormat(entry.template)}),"template-subnet-prefix":new TooltipKey($.getInfo("IPv6 subnet prefix"),function(entry){if("template"===entry.type)return dom.renderIPv6Template(["prefix"],entry)}),"subnet-segment":new TooltipKey($.getInfo("IPv6 subnet segment"),function(entry){if("template"===entry.type)return dom.renderIPv6Template(["subnet-segment"],entry)}),"host-type":new TooltipKey($.getInfo("Host"),function(entry){if("template"===entry.type)return dom.renderIPv6Template(["host"],entry)}),comment:commentTooltipKey,"resolved-fqdn":new TooltipKey(translate("Resolved To"),function(entry){if("fqdn"===entry.type&&!isWildCardFqdn(entry.fqdn))return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address6").resolvedFqdn,key:entry.name,unresolvedMessage:translate("fqdn_unresolved",[entry.fqdn])})}),"resolved-wildcard-fqdn":new TooltipKey(translate("Collected Resolved IPs"),function(entry){if("fqdn"===entry.type&&isWildCardFqdn(entry.fqdn))return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address6").resolvedFqdn,key:entry.name,messageFn:()=>translate("fqdn_unresolved",[entry.fqdn])})}),"obj-id":new TooltipKey($.getInfo("System::SDN::field.obj-id"),function(entry){if("dynamic"===entry.type&&"nsx"===entry.sdn)return entry["obj-id"]}),"resolved-dynamic":new TooltipKey(translate("Resolved To"),function(entry){if("dynamic"===entry.type)return resolvedAddressesFormatter({resolvedMap:this.getSourceMetaData("firewall.address6").resolvedDynamic,key:entry.name,unresolvedMessage:translate("dynamic_unresolved",[entry.name])})}),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"address6"})},"firewall.address6-template":{name:$.getInfo("firewall.address6-template"),data:createCMDBSource("firewall","address6-template",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.address6-template",createNew:!0,searchKeys:{template:!0,comment:!0},tooltipKeys:{ipprefix:new TooltipKey($.getInfo("IPv6 subnet prefix"),function(entry){return dom.renderIPv6Template(["prefix"],entry)}),"subnet-segment":new TooltipKey($.getInfo("IPv6 subnet segment"),function(entry){return dom.renderIPv6Template(["subnet-segment"],entry)}),comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"address6-template"})},"firewall.addrgrp6":{name:$.getInfo("firewall.addrgrp6"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","addrgrp6",{processFn:makeAllVdomsProcessFn(entry=>{entry.visibility="enable"})});const isAllVdom=isSourceForAllVdoms(sourceID);let addressSourceID="firewall.address6";return isAllVdom&&(addressSourceID=makeAllVdomsSourceID(addressSourceID)),Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(addressSourceID)]).then(function([groups,addresses]){const addrMap=addresses.mapping,addrGrpMap=groups.reduce((mapping,group)=>(mapping[group.name]=group,mapping),{}),processMember=addrOrGrp=>{const addrName=addrOrGrp[allVdomsEntryIdKeyFn(addressSourceID)],addrGrpname=addrOrGrp[allVdomsEntryIdKeyFn(sourceID)],address=addrMap[addrName];return address||(addrOrGrp.member=(addrGrpMap[addrGrpname]||{}).member,(addrOrGrp.member||[]).reduce((result,member)=>result.concat(processMember(member)),[]))};return groups.forEach(group=>{group.$flattenedAddresses=processMember(group)}),groups})},formatFunction:defaultNegateFormatFunction,createNewDatasource:"firewall.addrgrp6",createNew:hasGuiIPv6EnabledForCreateNew("firewall","addrgrp6"),inlineEdit:createWritePermissionCheck("firewall","addrgrp6"),searchKeys:{member:commonGroupSearch,comment:!0},tooltipKeys:{member:membersTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"addrgrp6"})},"firewall.proxy-address":{name:$.getInfo("firewall.proxy-address"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","proxy-address",{processFn:makeAllVdomsProcessFn(entry=>{entry.visibility="enable"})}),metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),getData=Omniselect.getSourceData;return Promise.all([getData(getCSFProxySourceID("webfilter.ftgd-cat",csfPath)),getData(getCSFProxySourceID("webfilter.ftgd-local-cat",csfPath)),getData(getCSFProxySourceID("system.external-resource.category",csfPath))]).then(function(response){return{urlCategoryMap:Object.assign({},response[0].mapping,response[1].alternativeMappings.id,response[2].mapping)}}).catch(function(){return{urlCategoryMap:null}})},formatFunction:defaultNegateFormatFunction,createNewDatasource:"firewall.proxy-address",createNew:createWritePermissionCheck("firewall","proxy-address"),inlineEdit:createWritePermissionCheck("firewall","proxy-address"),tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){return $.getInfo("addr_type_"+entry.type)}),host:new TooltipKey($.getInfo("Host"),function(entry){if(entry.host)return datasourceTooltipFormat(entry.host)}),"host-regex":new TooltipKey($.getInfo("Host Regex Pattern"),createEscapedTooltipFormatter("host-regex")),path:new TooltipKey($.getInfo("URL Path Regex"),createEscapedTooltipFormatter("path")),category:new TooltipKey($.getInfo("URL Category"),function(entry){if(entry.category){var html,categoryMap=this.getSourceMetaData("firewall.proxy-address").urlCategoryMap;return categoryMap&&Array.isArray(entry.category)&&entry.category.length&&(html=nColumnListFormat(entry.category,2,function(category){return categoryMap[category.q_origin_key]&&categoryMap[category.q_origin_key].name||""})),html}}),"header-name":new TooltipKey($.getInfo("Header Name"),createEscapedTooltipFormatter("header-name")),header:new TooltipKey($.getInfo("Header"),createEscapedTooltipFormatter("header")),method:new TooltipKey($.getInfo("Request Method"),function(entry){if(entry.method)return entry.method.split(" ").map(function(value){return value.toUpperCase()}).join("/")}),ua:new TooltipKey($.getInfo("User Agent"),function(entry){if(entry.ua)return entry.ua.split(" ").map(function(value){return $.getInfo("ua_"+value)}).join("/")}),"header-group":new TooltipKey($.getInfo("Header Group"),function(entry){var html,headerGroup=entry["header-group"];return Array.isArray(headerGroup)&&headerGroup.length&&(html=nColumnListFormat(headerGroup,2,function(group){return group["header-name"]+": "+group.header})),html}),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"proxy-address"})},"firewall.proxy-addrgrp":{name:$.getInfo("firewall.proxy-addrgrp"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","proxy-addrgrp",{processFn:makeAllVdomsProcessFn()}),formatFunction:defaultNegateFormatFunction,createNewDatasource:"firewall.proxy-addrgrp",createNew:createWritePermissionCheck("firewall","proxy-addrgrp"),inlineEdit:createWritePermissionCheck("firewall","proxy-addrgrp"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"proxy-addrgrp"})},"firewall.decrypted-traffic-mirror":{name:$.getInfo("Decrypted Traffic Mirror"),data:createCMDBSource("firewall","decrypted-traffic-mirror"),createNew:createWritePermissionCheck("firewall","decrypted-traffic-mirror"),inlineEdit:createWritePermissionCheck("firewall","decrypted-traffic-mirror"),searchKeys:{name:!0,dstmac:!0,"traffic-type":!0,"traffic-source":!0},tooltipKeys:{dstmac:new TooltipKey($.getInfo("dstmac")),"traffic-type":new TooltipKey($.getInfo("Decrypted Traffic Type"),entry=>$.getInfo(entry["traffic-type"])),"traffic-source":new TooltipKey($.getInfo("Decrypted Traffic Source"),entry=>$.getInfo(`DecryptedTrafficMirror::trafficeSource.${entry["traffic-source"]}`)),interface:new TooltipKey($.getInfo("Interface"),entry=>{if(Array.isArray(entry.interface)&&entry.interface.length)return nColumnListFormat(entry.interface,2,intf=>Omniselect.processedFormatEntrySync({q_origin_key:intf.q_origin_key,datasource:"firewallInterfaces"}))}),references:referencesTooltipKey}},"firewall.gtp":{name:$.getInfo("gtp_profile"),data:createCMDBSource("firewall","gtp")},"firewall.ippool":{name:$.getInfo("firewall.ippool"),data:createCMDBSource("firewall","ippool"),createNew:createWritePermissionCheck("firewall","ippool"),inlineEdit:createWritePermissionCheck("firewall","ippool"),metaData:function(){return $.when($.get("/api/v2/monitor/firewall/ippool")).then(function(response){return{poolStats:response.results}})},searchKeys:{comments:!0,startip:function(entry,query){const range=[goog.net.IpAddress.fromString(entry.startip),goog.net.IpAddress.fromString(entry.endip)];return fAddressSearch.ip4_basic_search([range],query).length},"source-startip":function(entry,query){if("fixed-port-range"!==entry.type)return!1;const range=[goog.net.IpAddress.fromString(entry["source-startip"]),goog.net.IpAddress.fromString(entry["source-endip"])];return fAddressSearch.ip4_basic_search([range],query).length}},tooltipKeys:{comments:commentsTooltipKey,type:new TooltipKey($.getInfo("type"),function(entry){return $.getInfo(entry.type)}),startip:new TooltipKey($.getInfo("external_ip_range"),function(entry){return entry.startip+" - "+entry.endip}),"source-startip":new TooltipKey($.getInfo("internal_ip_range"),function(entry){if("fixed-port-range"===entry.type)return entry["source-startip"]+" - "+entry["source-endip"]}),"arp-reply":new TooltipKey($.getInfo("arp-reply"),enableDisableFormatFn),"block-size":new TooltipKey($.getInfo("block-size")),"num-blocks-per-user":new TooltipKey($.getInfo("num-blocks-per-user")),"pba-per-ip":new TooltipKey($.getInfo("Blocks Per IP"),createIpPoolStatsFormatFunction("firewall.ippool","pba_per_ip")),"nat-ip-inuse":new TooltipKey($.getInfo("External IPs in Use"),function(entry){var poolMeta=this.getSourceMetaData("firewall.ippool"),pool=poolMeta&&poolMeta.poolStats&&poolMeta.poolStats[entry.name];return pool&&null!=pool.natip_in_use&&null!=pool.natip_total&&pool.natip_in_use+"/"+pool.natip_total}),clients:new TooltipKey($.getInfo("Clients Online"),createIpPoolStatsFormatFunction("firewall.ippool","clients")),available:new TooltipKey($.getInfo("Blocks Available"),function(entry){var poolMeta=this.getSourceMetaData("firewall.ippool"),pool=poolMeta&&poolMeta.poolStats&&poolMeta.poolStats[entry.name],available=pool&&pool.available,usage=pool&&$.getInfo("({COUNT}/{TOTAL} blocks used)",[pool.used,pool.total]),icon="<span>";return available<10&&(icon='<f-icon class="fa-warning"></f-icon><span>'),null!=available&&icon+available.toFixed(2)+"% "+usage+"</span>"}),ip_shared:new TooltipKey($.getInfo("IPs Sharing External IP"),createIpPoolStatsFormatFunction("firewall.ippool","ip_shared")),ports_per_ip:new TooltipKey($.getInfo("Ports Per IP"),createIpPoolStatsFormatFunction("firewall.ippool","ports_per_ip")),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"ippool"})},"firewall.ippool6":{name:$.getInfo("firewall.ippool6"),data:createCMDBSource("firewall","ippool6"),createNew:hasGuiIPv6EnabledForCreateNew("firewall","ippool6"),inlineEdit:createWritePermissionCheck("firewall","ippool6"),searchKeys:{comments:!0,startip:function(entry,query){const start=goog.net.IpAddress.fromString(entry.startip),end=goog.net.IpAddress.fromString(entry.endip);if(fPatterns.IP6_HOST.test(query))return fAddressSearch.subnet_util.range_contains(start,end,goog.net.IpAddress.fromString(query))}},tooltipKeys:{startip:new TooltipKey($.getInfo("external_ip_range"),function(entry){return entry.startip+" - "+entry.endip}),comments:commentsTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"ippool6"})},"firewall.ldb-monitor":{name:$.getInfo("Health Check"),data:createCMDBSource("firewall","ldb-monitor"),formatFunction:function(entry,value){return'<f-icon class="ftnt-virtual-ip ftnt-color-0"></f-icon><span>'+value+"</span>"},createNew:createWritePermissionCheck("firewall","ldb-monitor"),searchKeys:{type:!0,port:!0,interval:!0,timeout:!0,retry:!0},subcategories:!0,subcategoryValueFunction:function(entry){return entry.type.toUpperCase()||"Uncategorized"},tooltipKeys:{type:new TooltipKey($.getInfo("type"),function(entry){return entry.type.toUpperCase()}),"http-get":new TooltipKey($.getInfo("http_get")),port:new TooltipKey($.getInfo("Port"),function(entry){return!!entry.hasOwnProperty("port")&&entry.port.toString()}),interval:new TooltipKey($.getInfo("interval")),timeout:new TooltipKey($.getInfo("timeout")),retry:new TooltipKey($.getInfo("retry"))}},"firewall.policy":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.policy"),data:createCMDBSource("firewall","policy",{optimizeForLargeDataset:!0,processFn:makeAllVdomsProcessFn()}),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","policy")}),"firewall.policy64":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.policy64"),data:createCMDBSource("firewall","policy64",{processFn:makeAllVdomsProcessFn()}),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","policy64")}),"firewall.policy46":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.policy46"),data:createCMDBSource("firewall","policy46",{processFn:makeAllVdomsProcessFn()}),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","policy46")}),"firewall.security-policy":Object.assign({},POLICY_CONFIG,{name:$.getInfo("Security Policy"),data:createCMDBSource("firewall","security-policy",{optimizeForLargeDataset:!0})}),"firewall.proxy-policy":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.proxy-policy"),data:createCMDBSource("firewall","proxy-policy",{optimizeForLargeDataset:!0,processFn:makeAllVdomsProcessFn()}),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","proxy-policy")}),"firewall.multicast-policy":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.multicast-policy"),data:createCMDBSource("firewall","multicast-policy",{processFn:makeAllVdomsProcessFn()}),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","multicast-policy")}),"firewall.DoS-policy":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.DoS-policy"),data:createCMDBSource("firewall","DoS-policy"),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","DoS-policy")}),"firewall.DoS-policy6":Object.assign({},POLICY_CONFIG,{name:$.getInfo("firewall.DoS-policy6"),data:createCMDBSource("firewall","DoS-policy6"),tooltipFooterActions:createPolicyTooltipFooterActions("firewall","DoS-policy6")}),"firewall.profile-group":{name:$.getInfo("firewall.profile-group"),data:createCMDBSource("firewall","profile-group",{processFn:makeAllVdomsProcessFn()}),metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),getData=Omniselect.getSourceData;return Promise.all([getData(getCSFProxySourceID("webfilter.profile",csfPath)),getData(getCSFProxySourceID("emailfilter.profile",csfPath)),getData(getCSFProxySourceID("antivirus.profile",csfPath)),getData(getCSFProxySourceID("firewall.profile-protocol-options",csfPath))]).then(function([webfilters,emailfilters,avProfiles,protocolOptions]){return{mapping:{"av-profile":avProfiles.mapping,"webfilter-profile":webfilters.mapping,"profile-protocol-options":protocolOptions.mapping,"emailfilter-profile":emailfilters.mapping}}}).catch(function(){return{mapping:null}})},createNewDatasource:"firewall.profile-group",createNew:createWritePermissionCheck("firewall","profile-group"),inlineEdit:createWritePermissionCheck("firewall","profile-group"),formatFunction:profileFormatFunction,searchKeys:{comment:!0},tooltipKeys:{comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"profile-group"})},"firewall.profile-protocol-options":{name:$.getInfo("firewall.profile-protocol-options"),data:createCMDBSource("firewall","profile-protocol-options"),createNew:createUtmProfilePermissionCheck("firewall","profile-protocol-options"),inlineEdit:createWritePermissionCheck("firewall","profile-protocol-options"),formatFunction:profileFormatFunction,searchKeys:{"feature-set":!0,comment:!0},tooltipKeys:{"feature-set":profileFeatureSetTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"profile-protocol-options"})},"firewall.schedule.onetime":{name:$.getInfo("firewall.schedule.onetime"),data:createCMDBSource("firewall.schedule","onetime",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.schedule.onetime",createNew:createWritePermissionCheck("firewall.schedule","onetime"),inlineEdit:createWritePermissionCheck("firewall.schedule","onetime"),searchKeys:{start:!0,end:!0},tooltipKeys:{start:new TooltipKey($.getInfo("Start"),function(entry){return entry.start?fDateTime.formatDateTime(Date.parse(entry.start)):""}),end:new TooltipKey($.getInfo("End"),function(entry){return entry.end?fDateTime.formatDateTime(Date.parse(entry.end)):""}),status:new TooltipKey($.getInfo("Status"),entry=>entry.q_class.includes("expired")?`<f-icon class="fa-status-down"></f-icon><span>\n                            ${$.getInfo("Expired")}</span>`:`<f-icon class="fa-status-up"></f-icon><span>\n                            ${$.getInfo("active")}</span>`),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.schedule",name:"onetime"})},"firewall.schedule.recurring":{name:$.getInfo("firewall.schedule.recurring"),data:createCMDBSource("firewall.schedule","recurring",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.schedule.recurring",createNew:createWritePermissionCheck("firewall.schedule","recurring"),inlineEdit:createWritePermissionCheck("firewall.schedule","recurring"),searchKeys:{day:!0,start:!0,end:!0},tooltipKeys:{day:new TooltipKey($.getInfo("days"),function(entry){return entry.day.split(" ").map(function(day){return $.getInfo(day)}).join(", ")}),start:new TooltipKey($.getInfo("start_time"),function(entry){return entry.start+":00"}),end:new TooltipKey($.getInfo("end_time"),function(entry){return entry.end+":00"}),status:new TooltipKey($.getInfo("Status"),entry=>entry.q_class.includes("expired")?`<f-icon class="fa-status-down"></f-icon><span>\n                            ${$.getInfo("Expired")}</span>`:`<f-icon class="fa-status-up"></f-icon><span>\n                            ${$.getInfo("active")}</span>`),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.schedule",name:"recurring"})},"firewall.schedule.group":{name:$.getInfo("firewall.schedule.group"),data:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID),cloneObject=ftnt_shared.util.cloneObject,groupGetter=createCMDBSource("firewall.schedule","group",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})}),oneTimeSourceID=getCSFProxySourceID("firewall.schedule.onetime",csfPath),recurringSourceID=getCSFProxySourceID("firewall.schedule.recurring",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(oneTimeSourceID),Omniselect.getSourceData(recurringSourceID)]).then(function(response){const onetimeMap=response[1].mapping,recurringMap=response[2].mapping;return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var oneTimeMemberID=group.member[i][getSourceEntryIdKey(oneTimeSourceID)],recurringMemberID=group.member[i][getSourceEntryIdKey(recurringSourceID)];onetimeMap[oneTimeMemberID]?(group.member[i]=cloneObject(onetimeMap[oneTimeMemberID]),group.member[i].datasource=oneTimeSourceID):recurringMap[recurringMemberID]&&(group.member[i]=cloneObject(recurringMap[recurringMemberID]),group.member[i].datasource=recurringSourceID)}}),response[0]})},createNewDatasource:"firewall.schedule.group",createNew:createWritePermissionCheck("firewall.schedule","group"),inlineEdit:createWritePermissionCheck("firewall.schedule","group"),searchKeys:{member:commonGroupSearch},tooltipKeys:{member:membersTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.schedule",name:"group"})},"firewall.service.custom":{name:$.getInfo("firewall.service.custom"),data:createCMDBSource("firewall.service","custom",{processFn:makeAllVdomsProcessFn()}),formatFunction:defaultNegateFormatFunction,metaData:function(meta,sourceID){return $.get(makeCSFSourceURI("/api/v2/cmdb/firewall.service/category",sourceID)).then(function(data){var lastIndex,indexMap={};return data.results.forEach(function(category,index){indexMap[category.name]=index,lastIndex=index}),indexMap.Uncategorized=lastIndex+1,indexMap})},createNew:createWritePermissionCheck("firewall.service","custom"),inlineEdit:createWritePermissionCheck("firewall.service","custom"),createNewDatasource:"firewall.service.custom",solitaryEntries:{ALL:!0,NONE:!0},searchKeys:{comment:!0,category:!0,protocols:function(entry,searchString,searchRegex){for(var protocols=collectServiceProtocols(entry),i=0;i<protocols.length;i++)if(searchRegex.test(protocols[i]))return!0;return!1}},tooltipKeys:{comment:commentTooltipKey,category:new TooltipKey($.getInfo("category"),function(entry){return entry.category.name}),protocols:new TooltipKey($.getInfo("protocols"),function(entry){return collectServiceProtocols(entry).map(function(protocol){return"<div>"+protocol+"</div>"}).join("\n")}),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.service",name:"custom"}),subcategories:!0,subcategoryValueFunction:function(entry){return entry.category.name||"Uncategorized"},subcategorySortFunction:function(categoryA,categoryB){var indexMap=this.getSourceMetaData("firewall.service.custom");return indexMap[categoryA]-indexMap[categoryB]}},"firewall.service.category":{name:$.getInfo("firewall.service.category"),data:async function(meta,sourceID){let result=await createCMDBSource("firewall.service","category").call(this,meta,sourceID);return result.push({q_origin_key:"Uncategorized",name:"Uncategorized",datasource:"firewall.service.category"}),result}},"firewall.service.group":{name:$.getInfo("firewall.service.group"),data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall.service","group",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})});const csfPath=getSourceCSFPath(sourceID),customServiceSourceID=getCSFProxySourceID("firewall.service.custom",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(customServiceSourceID)]).then(function(response){var serviceMap=response[1].mapping,memberIdKey=getSourceEntryIdKey(customServiceSourceID);return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var memberID=group.member[i][memberIdKey],member=serviceMap[memberID];member&&(member=ftnt_shared.util.cloneObject(member),group.member[i]=member,member.datasource=customServiceSourceID)}}),response[0]})},formatFunction:defaultNegateFormatFunction,createNew:createWritePermissionCheck("firewall.service","group"),inlineEdit:createWritePermissionCheck("firewall.service","group"),createNewDatasource:"firewall.service.group",searchKeys:{member:commonGroupSearch,comment:!0},tooltipKeys:{member:membersTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.service",name:"group"})},"firewall.traffic-class":{name:$.getInfo("Traffic Shaping Class ID"),data:createCMDBSource("firewall","traffic-class",{processFn:makeAllVdomsProcessFn()}),suppressIdValueTooltip:!0,valueFunction:entry=>entry["class-name"]?`${entry["class-name"]} (${entry["class-id"]})`:entry["class-id"],tooltipKeys:{"class-id":new TooltipKey($.getInfo("Traffic Shaping Class ID")),"class-name":new TooltipKey($.getInfo("Name"),entry=>dom.escapeHTML(entry["class-name"])),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"traffic-class",showInListAction:!0,showInListAsSlide:!0}),searchKeys:{"class-id":!0,"class-name":!0},createNew:createWritePermissionCheck("firewall","traffic-class"),createNewFunction:function(sourceID,entry,meta){var extra={};return meta&&meta.vdom&&(extra.vdom=meta.vdom),inlineEditCreate(sourceID,entry,extra)},inlineEdit:createWritePermissionCheck("firewall","traffic-class"),inlineEditFunction:function(sourceID,entry,meta){var extra={};return meta&&meta.vdom&&(extra.vdom=meta.vdom),inlineEditCreate(sourceID,entry,extra)}},"firewall.shaper.per-ip-shaper":{name:$.getInfo("firewall.shaper.per-ip-shaper"),data:createCMDBSource("firewall.shaper","per-ip-shaper"),metaData:function(){return $.get("/api/v2/monitor/firewall/per-ip-shaper").then(function(res){return res.results.data.reduce(function(shaperStatsMap,stat){return shaperStatsMap[stat.name]=stat,shaperStatsMap},{})})},createNew:createWritePermissionCheck("firewall.shaper","per-ip-shaper"),inlineEdit:createWritePermissionCheck("firewall.shaper","per-ip-shaper"),tooltipKeys:{"max-bandwidth":new TooltipKey($.getInfo("Max Bandwidth"),shaperBandwidthFormatter("max-bandwidth")),"max-concurrent-session":new TooltipKey($.getInfo("max-connections"),function(entry){return entry["max-concurrent-session"]}),drops:shaperStatsTooltipKey("Dropped Packets","drops","firewall.shaper.per-ip-shaper",formatters.number),dropped_bytes:shaperStatsTooltipKey("Dropped Bytes","dropped_bytes","firewall.shaper.per-ip-shaper",formatters.metric_bytes),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.shaper",name:"per-ip-shaper"})},"firewall.shaper.traffic-shaper":{name:$.getInfo("firewall.shaper.traffic-shaper"),data:createCMDBSource("firewall.shaper","traffic-shaper"),metaData:function(){return $.get("/api/v2/monitor/firewall/shaper").then(function(res){return res.results.data.reduce(function(shaperStatsMap,stat){return shaperStatsMap[stat.name]=stat,shaperStatsMap},{})})},createNew:createWritePermissionCheck("firewall.shaper","traffic-shaper"),inlineEdit:createWritePermissionCheck("firewall.shaper","traffic-shaper"),tooltipKeys:{"guaranteed-bandwidth":new TooltipKey($.getInfo("Guaranteed Bandwidth"),shaperBandwidthFormatter("guaranteed-bandwidth")),"maximum-bandwidth":new TooltipKey($.getInfo("Max Bandwidth"),shaperBandwidthFormatter("maximum-bandwidth")),priority:new TooltipKey($.getInfo("priority"),function(entry){return translate(entry.priority)}),current_bandwidth:shaperStatsTooltipKey("Bandwidth Utilization","current_bandwidth","firewall.shaper.traffic-shaper",fUtil.formatters.metric_bits_per_second),drops:shaperStatsTooltipKey("Dropped Packets","drops","firewall.shaper.traffic-shaper",formatters.number),dropped_bytes:shaperStatsTooltipKey("Dropped Bytes","dropped_bytes","firewall.shaper.traffic-shaper",formatters.metric_bytes),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.shaper",name:"traffic-shaper"})},"firewall.ssh.local-ca":{name:$.getInfo("SSH Local CA"),data:createCMDBSource("firewall.ssh","local-ca")},"firewall.ssl-ssh-profile":{name:$.getInfo("firewall.ssl-ssh-profile"),data:createCMDBSource("firewall","ssl-ssh-profile"),formatFunction:profileFormatFunction,createNew:createUtmProfilePermissionCheck("firewall","ssl-ssh-profile"),inlineEdit:createWritePermissionCheck("firewall","ssl-ssh-profile"),searchKeys:{comment:!0},tooltipKeys:{comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"ssl-ssh-profile"})},"firewall.vip":{name:$.getInfo("Virtual IP/Server"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","vip",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.vip",createNew:createWritePermissionCheck("firewall","vip"),inlineEdit:createWritePermissionCheck("firewall","vip"),searchKeys:{extintf:createDatasourceSearch("extintf"),extip:!0,extport:!0,"mapped-addr":!0,mappedip:!0,mappedport:!0,realservers:!0,comment:!0},tooltipKeys:{extintf:new TooltipKey($.getInfo("Interface"),function(entry){return datasourceTooltipFormat(entry.extintf)}),extip:new TooltipKey($.getInfo("extip"),function(entry){return formatRange(entry.extip)}),"mapped-addr":new TooltipKey($.getInfo("FQDNs"),createMembersTooltipFormatter("mapped-addr")),mappedip:new TooltipKey($.getInfo("mappedip"),function(entry){var html;return Array.isArray(entry.mappedip)&&entry.mappedip.length&&(html="",entry.mappedip.forEach(function(ip){html+="<div>"+formatRange(ip.range)+"</div>"})),html}),extport:new TooltipKey($.getInfo("extport"),function(entry){return"enable"===entry.portforward&&entry.extport?$.getInfo(entry.protocol)+" "+formatRange(entry.extport):entry.extport}),service:new TooltipKey($.getInfo("service"),function(entry){if(entry.service)return nColumnListFormat(entry.service,2,datasourceTooltipFormat)}),mappedport:new TooltipKey($.getInfo("mappedport"),function(entry){if("enable"===entry.portforward&&entry.mappedport)return formatRange(entry.mappedport)}),realservers:new TooltipKey($.getInfo("ldb_realservers"),function(entry){if(entry.realservers&&Array.isArray(entry.realservers))return entry.realservers.map(function(realserver){const port=realserver.port?`:${realserver.port}`:"";return`${realserver.ip}${port}<br>`}).join("")}),comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vip"})},"firewall.vip46":{name:$.getInfo("firewall.vip46"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","vip46",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.vip46",createNew:createWritePermissionCheck("firewall","vip46"),inlineEdit:createWritePermissionCheck("firewall","vip46"),searchKeys:VIP6_CONFIG.searchKeys,tooltipKeys:VIP6_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vip46"})},"firewall.vip6":{name:$.getInfo("firewall.vip6"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","vip6",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.vip6",createNew:hasGuiIPv6EnabledForCreateNew("firewall","vip6"),inlineEdit:createWritePermissionCheck("firewall","vip6"),searchKeys:VIP6_CONFIG.searchKeys,tooltipKeys:VIP6_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vip6"})},"firewall.vip64":{name:$.getInfo("firewall.vip64"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall","vip64",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.vip64",createNew:createWritePermissionCheck("firewall","vip64"),inlineEdit:createWritePermissionCheck("firewall","vip64"),searchKeys:VIP6_CONFIG.searchKeys,tooltipKeys:VIP6_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vip64"})},"firewall.vipgrp":{name:$.getInfo("firewall.vipgrp"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","vipgrp",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})});const csfPath=getSourceCSFPath(sourceID),vipSourceID=getCSFProxySourceID("firewall.vip",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(vipSourceID)]).then(function(response){var vipMap=response[1].mapping,memberIdKey=getSourceEntryIdKey(vipSourceID);return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var memberID=group.member[i][memberIdKey];group.member[i]=ftnt_shared.util.cloneObject(vipMap[memberID]),group.member[i].datasource=vipSourceID}}),response[0]})},createNewDatasource:"firewall.vipgrp",createNew:createWritePermissionCheck("firewall","vipgrp"),inlineEdit:createWritePermissionCheck("firewall","vipgrp"),searchKeys:{interface:!0,member:commonGroupSearch,comment:!0},tooltipKeys:{interface:new TooltipKey($.getInfo("Interface"),function(entry){return datasourceTooltipFormat(entry.interface)}),member:membersTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vipgrp"})},"firewall.vipgrp46":{name:$.getInfo("firewall.vipgrp46"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","vipgrp46",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})});const csfPath=getSourceCSFPath(sourceID),vipSourceID=getCSFProxySourceID("firewall.vip46",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(vipSourceID)]).then(function(response){var vipMap=response[1].mapping,memberIdKey=getSourceEntryIdKey(vipSourceID);return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var memberID=group.member[i][memberIdKey];group.member[i]=ftnt_shared.util.cloneObject(vipMap[memberID]),group.member[i].datasource=vipSourceID}}),response[0]})},createNewDatasource:"firewall.vipgrp46",createNew:createWritePermissionCheck("firewall","vipgrp46"),inlineEdit:createWritePermissionCheck("firewall","vipgrp46"),searchKeys:VIP6_GROUP_CONFIG.searchKeys,tooltipKeys:VIP6_GROUP_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vipgrp46"})},"firewall.vipgrp6":{name:$.getInfo("firewall.vipgrp6"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","vipgrp6",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})});const csfPath=getSourceCSFPath(sourceID),vipSourceID=getCSFProxySourceID("firewall.vip6",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(vipSourceID)]).then(function(response){var vipMap=response[1].mapping;return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var memberID=group.member[i][allVdomsEntryIdKeyFn(vipSourceID)];group.member[i]=ftnt_shared.util.cloneObject(vipMap[memberID]),group.member[i].datasource=vipSourceID}}),response[0]})},createNewDatasource:"firewall.vipgrp6",createNew:hasGuiIPv6EnabledForCreateNew("firewall","vipgrp6"),inlineEdit:createWritePermissionCheck("firewall","vipgrp6"),searchKeys:VIP6_GROUP_CONFIG.searchKeys,tooltipKeys:VIP6_GROUP_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vipgrp6"})},"firewall.vipgrp64":{name:$.getInfo("firewall.vipgrp64"),alternativeEntryIDs:["uuid"],data:function(meta,sourceID){var groupGetter=createCMDBSource("firewall","vipgrp64",{processFn:makeAllVdomsProcessFn(function(entry,isAllVdom,vdom){(entry.member||[]).forEach(member=>{setAllVdomsEntryId(member,isAllVdom,null,vdom)})})});const csfPath=getSourceCSFPath(sourceID),vipSourceID=getCSFProxySourceID("firewall.vip64",csfPath);return Promise.all([groupGetter.call(this,meta,sourceID),Omniselect.getSourceData(vipSourceID)]).then(function(response){var vipMap=response[1].mapping,memberIdKey=getSourceEntryIdKey(vipSourceID);return response[0].forEach(function(group){if(group.member)for(var i=0,count=group.member.length;i<count;i++){var memberID=group.member[i][memberIdKey];group.member[i]=ftnt_shared.util.cloneObject(vipMap[memberID]),group.member[i].datasource=vipSourceID}}),response[0]})},createNewDatasource:"firewall.vipgrp64",createNew:createWritePermissionCheck("firewall","vipgrp64"),inlineEdit:createWritePermissionCheck("firewall","vipgrp64"),searchKeys:VIP6_GROUP_CONFIG.searchKeys,tooltipKeys:VIP6_GROUP_CONFIG.tooltipKeys,tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"vipgrp64"})},"firewall.wildcard-fqdn.custom":{name:$.getInfo("Wildcard FQDN"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall.wildcard-fqdn","custom",{processFn:makeAllVdomsProcessFn(entry=>{entry.visibility="enable"})}),formatFunction:function(entry,value){var html="",icon=entry.q_global_entry?"ftnt-address-global-wildcard-fqdn":entry.q_class||entry["css-class"];return icon&&(html=dom.create_icon_html(icon,{iconSize:"small"})),html+="<span>"+dom.escapeHTML(value)+"</span>"},searchKeys:{"wildcard-fqdn":!0,comment:!0},tooltipKeys:{"wildcard-fqdn":new TooltipKey($.getInfo("fqdn"),function(entry){return entry["wildcard-fqdn"]}),comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},createNew:createWritePermissionCheck("firewall.wildcard-fqdn","custom"),inlineEdit:createWritePermissionCheck("firewall.wildcard-fqdn","custom"),tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.wildcard-fqdn",name:"custom"})},"firewall.wildcard-fqdn.group":{name:$.getInfo("Wildcard FQDN Group"),alternativeEntryIDs:["uuid"],data:createCMDBSource("firewall.wildcard-fqdn","group",{processFn:makeAllVdomsProcessFn(entry=>{entry.visibility="enable"})}),searchKeys:{member:commonGroupSearch,comment:!0},tooltipKeys:{member:membersTooltipKey,comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},createNew:createWritePermissionCheck("firewall.wildcard-fqdn","group"),inlineEdit:createWritePermissionCheck("firewall.wildcard-fqdn","group"),tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall.wildcard-fqdn",name:"group"})},"firewall.shaping-profile":{name:$.getInfo("Traffic Shaping Profile"),data:createCMDBSource("firewall","shaping-profile",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"firewall.shaping-profile",tooltipData:function(entry,sourceID){const csfPath=getSourceCSFPath(sourceID),shapingGroupSource=getCSFProxySourceID("firewall.traffic-class",csfPath);return Omniselect.getSourceData(shapingGroupSource).then(data=>({data:data,shapingGroupSource:shapingGroupSource}))},tooltipKeys:{shapingGroup:new TooltipKey($.getInfo("Traffic Shaping Class ID"),function(entry){const shapingGroupSource=this.getTooltipData(entry).shapingGroupSource;return nColumnListFormat(entry["shaping-entries"],1,function(shapingEntry){const classId=shapingEntry["class-id"];try{return Omniselect.processedFormatEntrySync({q_origin_key:classId.q_origin_key,datasource:shapingGroupSource})}catch(e){return classId["class-name"]?`${dom.escapeHTML(classId["class-name"])} `+`(${classId["class-id"]})`:classId["class-id"]}})})},createNew:createWritePermissionCheck("firewall","shaping-profile"),inlineEdit:createWritePermissionCheck("firewall","shaping-profile"),tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"shaping-profile",showInListAction:!0,showInListSearchFormatter:entry=>({showInList:entry.q_origin_key,vdom:entry.vdom})})},forticareRegistrationLicenseCountries:{name:$.getInfo("country").toString(),data:meta=>{const countries=meta&&meta.countries||[];return Promise.resolve(countries.map(country=>Object.assign({},country,{q_origin_key:country.code,datasource:"forticareRegistrationLicenseCountries"})))},valueFunction:entry=>entry.name,searchKeys:{name:!0}},forticareRegistrationLicenseResellers:{name:$.getInfo("reseller").toString(),data:meta=>{const resellers=meta&&meta.resellers||[];return Promise.resolve(resellers.map(reseller=>$.extend(reseller,{q_origin_key:reseller.value,datasource:"forticareRegistrationLicenseResellers"})))},dontCache:!0,valueFunction:entry=>entry.text,sortFunction:(resellerA,resellerB)=>"Unknown"===resellerA||"Unknown"===resellerB?"Unknown"===resellerA?-1:1:"Other"===resellerA||"Other"===resellerB?"Other"===resellerA?1:-1:ftnt_shared.util.fastLocaleCompare(resellerA,resellerB),searchKeys:{text:!0}},"icap.profile":{name:$.getInfo("datasource_icap.profile"),data:createCMDBSource("icap","profile"),createNew:createWritePermissionCheck("icap","profile"),inlineEdit:createWritePermissionCheck("icap","profile"),formatFunction:profileFormatFunction,tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"icap",name:"profile"})},"icap.server":{name:$.getInfo("icap.server"),data:createCMDBSource("icap","server"),createNew:createWritePermissionCheck("icap","server"),inlineEdit:createWritePermissionCheck("icap","server"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"icap",name:"server"})},"ips.custom":{name:$.getInfo("Custom IPS Signature"),data:createCMDBSource("ips","custom",{processFn:function(entries,meta,sourceID){return entries.forEach(entry=>{entry.datasource=sourceID}),entries}}),alternativeEntryIDs:["rule-id"],formatFunction:profileFormatFunction,tooltipNameLabel:$.getInfo("Name"),searchKeys:{id:!0,"rule-id":!0},tooltipKeys:{id:new TooltipKey($.getInfo("id"),function(entry){return entry["rule-id"]})}},"ips.rule":{name:$.getInfo("datasource_ips.rule"),data:async function(meta,sourceID){const ipsSignatureGetter=createCMDBSource("ips","rule"),[rules,metadataMapResponse,rateBasedSignatures]=await Promise.all([ipsSignatureGetter.call(this,meta,sourceID),$.get(makeCSFSourceURI("/api/v2/cmdb/ips/metadata-map",sourceID)),$.get(makeCSFSourceURI("/api/v2/monitor/ips/rate-based",sourceID)).then(response=>{const result=new Map;return response.results.forEach(signature=>{result.set(signature.id,signature)}),result},()=>new Map)]),metadataMap=ips_common.build_metadata_map(metadataMapResponse.results);return rules.forEach(function(rule){ips_common.add_metadata_attrs(rule,metadataMap),function(){const rateBasedStats=rateBasedSignatures.get(rule["rule-id"]);rateBasedStats&&(rule["rate-count"]=rateBasedStats["rate-count"],rule["rate-duration"]=rateBasedStats["rate-duration"],rule["rate-track"]=rateBasedStats["rate-track"],rule["rate-mode"]=rateBasedStats["rate-mode"])}()}),rules},alternativeEntryIDs:["rule-id"],formatFunction:profileFormatFunction,tooltipNameLabel:$.getInfo("Name"),tooltipData:function(entry){return fFortiGuard.getIPSInfo(entry["rule-id"]).then(function(data){var formattedData={},fortiguardData=data.results;return fortiguardData&&(fortiguardData.Summary&&(formattedData.summary=fortiguardData.Summary.replace(/(<br\/?>\s*)*$/,"")),formattedData.recommended=fortiguardData.Action,formattedData.risk=fortiguardData.Risk,formattedData.impact=fortiguardData.Analysis),formattedData})},cacheTooltipData:!0,searchKeys:{id:!0,"rule-id":!0,risk:!0},tooltipKeys:{id:new TooltipKey($.getInfo("id"),function(entry){const id=entry["rule-id"];return`<a href="${this.getSourceMetaData("ips.rule").prefix}/${id}" target="_blank">${id}</a>`}),summary:new TooltipKey($.getInfo("meta"),function(entry){return this.getTooltipData(entry).summary}),risk:new TooltipKey($.getInfo("Severity"),function(entry){var tooltipData=this.getTooltipData(entry);return formatters.severity_bar(tooltipData.risk)}),impact:new TooltipKey($.getInfo("Impact"),function(entry){return this.getTooltipData(entry).impact}),recommended:new TooltipKey($.getInfo("Recommendation"),function(entry){var html,tooltipData=this.getTooltipData(entry);return tooltipData.recommended&&(html='<span class="break-word">'+tooltipData.recommended+"</span>"),html})},metaData:function(){const fortiguard=fFortiGuard;return fortiguard.links.resolve().then(function(){return{prefix:fortiguard.getLink(fortiguard.LINK_TYPE.IPS)}})}},"ips.sensor":{name:$.getInfo("datasource_ips.sensor"),data:createCMDBSource("ips","sensor"),createNew:createUtmProfilePermissionCheck("ips","sensor"),inlineEdit:createWritePermissionCheck("ips","sensor"),formatFunction:profileFormatFunction,searchKeys:{comment:!0},tooltipKeys:{comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"ips",name:"sensor"})},"firewall.multicast-address":{name:$.getInfo("firewall.multicast-address"),data:createCMDBSource("firewall","multicast-address"),searchKeys:{subnet:!0,"start-ip":!0,"end-ip":!0},tooltipKeys:{subnet:new TooltipKey($.getInfo("addr_subnet")),"start-ip":new TooltipKey($.getInfo("start-ip")),"end-ip":new TooltipKey($.getInfo("end-ip")),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"firewall",name:"multicast-address"}),createNew:createWritePermissionCheck("firewall","multicast-address"),inlineEdit:createWritePermissionCheck("firewall","multicast-address")},fortiGuardCategoryActions:{name:$.getInfo("Filter by action"),data:function(){return $.when(["all","allow","monitor","block","warning","authenticate"].map(function(action){return{datasource:"fortiGuardCategoryActions",name:action,q_origin_key:action,"css-class":utilIcon.iconClass(utilIcon.ICON_TYPE.FGD_CAT_ACTION,action)}}))},formatFunction:function(entry,value,meta){var langKey="block"===entry.name&&meta&&meta.block_as_redirect?"Redirect to Block Portal":"ftgd_"+entry.name;return utilIcon.genIcon(entry["css-class"],$.getInfo(langKey))}},fortiviewDestination:{name:$.getInfo("FortiView Destination"),data:function(){return $.Deferred().reject()},valueFunction:function(entry){return entry.dstaddr||entry.dstip||entry.country},searchKeys:{address:!0,country:!0},tooltipKeys:{address:new TooltipKey($.getInfo("IP Address")),country:new TooltipKey($.getInfo("Country"),function(entry){if("Reserved"!==entry.country&&entry.country_id){var low=255&entry.country_id,high=entry.country_id>>8;return'<span class="'+("country_flag country_"+String.fromCharCode(low)+String.fromCharCode(high))+'"></span><span>'+entry.country+"</span>"}})}},"gtp.apn":{name:$.getInfo("apn"),createNew:createWritePermissionCheck("gtp","apn"),inlineEdit:createWritePermissionCheck("gtp","apn"),data:createCMDBSource("gtp","apn")},"gtp.apngrp":{name:$.getInfo("APN groups"),createNew:createWritePermissionCheck("gtp","apngrp"),inlineEdit:createWritePermissionCheck("gtp","apngrp"),data:createCMDBSource("gtp","apngrp")},"gtp.message-filter-v0v1":{name:$.getInfo("gtp.message-filter-v0v1"),data:createCMDBSource("gtp","message-filter-v0v1")},"gtp.message-filter-v2":{name:$.getInfo("gtp.message-filter-v2"),data:createCMDBSource("gtp","message-filter-v2")},"log.event":{name:$.getInfo("Event"),data:function(){return $.getJSON("/api/v2/monitor/log/event/").then(response=>(response.results.forEach(entry=>{entry.q_origin_key=entry.log_id,entry.datasource="log.event"}),response.results))},valueFunction:entry=>entry.description,formatFunction:(entry,value)=>'<f-icon class="ftnt-eventlog"></f-icon><span>'+value+"</span>",searchKeys:{log_id:!0,name:!0},tooltipKeys:{log_id:new TooltipKey($.getInfo("log_id")),name:new TooltipKey($.getInfo("name"))}},proxyAddressUserAgents:{name:$.getInfo("User Agent"),data:function(){return $.getJSON("/api/v2/cmdb/firewall/proxy-address/?action=schema").then(response=>response.results.children.ua.options.map(ua=>({q_origin_key:ua.name,datasource:"proxyAddressUserAgents"})))},valueFunction:entry=>$.getInfo("ua_"+entry.q_origin_key)},proxyAddressHttpMethods:{name:$.getInfo("Request Method"),data:function(){return $.getJSON("/api/v2/cmdb/firewall/proxy-address/?action=schema").then(response=>response.results.children.method.options.map(method=>({q_origin_key:method.name,datasource:"proxyAddressHttpMethods"})))},valueFunction:entry=>entry.q_origin_key.toUpperCase()},"router.policy":{name:$.getInfo("Policy Route"),data:createCMDBSource("router","policy")},"router.policy6":{name:$.getInfo("IPv6 Policy Route"),data:createCMDBSource("router","policy6")},"router.static":{name:$.getInfo("Static Route"),data:createCMDBSource("router","static")},"emailfilter.bword":{name:$.getInfo("datasource_spamfilter.bword"),data:createCMDBSource("emailfilter","bword"),valueFunction:function(entry){return entry.name},searchKeys:{comment:!0},tooltipKeys:{comment:commentTooltipKey}},"emailfilter.profile":{name:$.getInfo("datasource_spamfilter.profile"),data:createCMDBSource("emailfilter","profile"),createNew:createUtmProfilePermissionCheck("emailfilter","profile"),inlineEdit:createWritePermissionCheck("emailfilter","profile"),formatFunction:profileFormatFunction,searchKeys:{"feature-set":!0,comment:!0},tooltipKeys:{"feature-set":profileFeatureSetTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"emailfilter",name:"profile"})},"file-filter.profile":{name:$.getInfo("File Filter"),data:createCMDBSource("file-filter","profile"),createNew:createWritePermissionCheck("file-filter","profile"),inlineEdit:createWritePermissionCheck("file-filter","profile"),formatFunction:profileFormatFunction,searchKeys:{name:!0,comment:!0},tooltipKeys:{"feature-set":profileFeatureSetTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"file-filter",name:"profile"})},"system.accprofile":{name:$.getInfo("admin_profile"),data:createCMDBSource("system","accprofile"),createNew:createWritePermissionCheck("system","accprofile"),inlineEdit:createWritePermissionCheck("system","accprofile"),searchKeys:{name:!0},tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"system",name:"accprofile",showInListSearchFormatter:()=>top.state.vdom_mode?{vdom:""}:""})},"system.admin":{name:$.getInfo("Administrator"),data:createCMDBSource("system","admin"),tooltipKeys:{accprofile:new TooltipKey($.getInfo("admin_profile"),function(entry){return entry.accprofile.name}),type:new TooltipKey($.getInfo("type"),function(entry){let type;return type="enable"===entry["peer-auth"]?"pki":"enable"===entry["remote-auth"]?"enable"===entry.wildcard?"remote_w":"remote":"local",$.getInfo(type)}),"2fa":new TooltipKey($.getInfo("2fa"),function(entry){const fwebIcon=utilIcon;let label;switch(entry["two-factor"]){case"fortitoken":label=entry.fortitoken;break;case"fortitoken-cloud":label=$.getInfo("FortiToken Cloud");break;case"email":label=entry["email-to"];break;case"sms":label=entry["sms-phone"];break;default:return}return fwebIcon.formatIcon(fwebIcon.ICON_TYPE.TWO_FACTOR_AUTH,entry["two-factor"],{label:label})}),comments:commentsTooltipKey}},"system.datasource":{name:$.getInfo("System Data Source"),data:createCMDBSource("system","datasource")},"system.dns-server":{name:$.getInfo("system.dns-server"),data:createCMDBSource("system","dns-server")},"system.dns-database":{name:$.getInfo("system.dns-database"),data:createCMDBSource("system","dns-database")},"system.external-resource.address":{name:$.getInfo("FabricConnector::type.external-resource-address"),aliasFor:["system.external-resource"],createNewDatasource:"system.external-resource",createNew:createGlobalOnlyObjectPermissionCheck("system","external-resource"),createNewFunction:function(sourceID,entry){return inlineEditCreate(sourceID,entry,{subtype:"third-party.address"})},inlineEdit:createWritePermissionCheck("system","external-resource"),data:createExternalResourceSource("address","system.external-resource.address"),limitedPermissionCheckFunction:function(sourceID,sourceData){let limited=!1;return Array.isArray(sourceData)&&sourceData.length&&(limited=!sourceData[0].hasOwnProperty("status"))&&fLog.warn(`Insufficient permission for source "${sourceID}".`+"Falling back to  a limited view."),limited},valueFunction:pluckName,tooltipData:(entry,sourceID)=>{const uri=makeCSFSourceURI("/api/v2/monitor/system/external-resource/entry-list",sourceID);return $.get(uri,{mkey:entry.name}).then(res=>({details:res.results}))},searchKeys:{name:!0,comments:!0,resource:!0,type:!0,category:!0},tooltipKeys:{type:new TooltipKey($.getInfo("type"),createTranslatedTooltipFormatter("type","FabricConnector::type.external-resource-")),category:new TooltipKey($.getInfo("category")),resource:new TooltipKey($.getInfo("URI"),createEscapedTooltipFormatter("resource")),connection:new TooltipKey($.getInfo("Connection Status"),function(entry){const details=this.getTooltipData(entry).details||{},{status:status,error:error}=details,lastAttempt=details.conn_attempt_time*fDateTime.S_TO_MS;let text="";switch(details.status){case EXT_CONN_STATUS_SUCCESS:text=fDateTime.formatDateTime(lastAttempt);break;case EXT_CONN_STATUS_UNAVAILABLE:text=translate(`System::ExternalResource::connectionStatus.${status}`);break;case EXT_CONN_STATUS_ERROR:text=translate(`System::ExternalResource::connectionError.${error}`)}const icon=CONN_STATUS_ICON_MAP[status||EXT_CONN_STATUS_UNAVAILABLE];return utilIcon.genIcon(icon,text)}),content:new TooltipKey($.getInfo("Last Content Update"),function(entry){const details=this.getTooltipData(entry).details||{};let text=$.getInfo("Not updated");const status=details.resource_file_status;if(status===EXT_FILE_STATUS_DOWNLOADED){const time=details.last_content_update_time*fDateTime.S_TO_MS;text=fDateTime.formatDateTime(time)}const icon=FILE_STATUS_ICON_MAP[status||EXT_FILE_STATUS_UNAVAILABLE];return utilIcon.genIcon(icon,text,null,!1)}),entries:new TooltipKey($.getInfo("Entries"),function(entry){const details=this.getTooltipData(entry).details||{};if(details.invalid_count||details.valid_count){const entries=[dom.elem("span",null,{children:[dom.elem("span",{className:"number-bubble",textContent:details.valid_count}),dom.elem("span",{textContent:` ${$.getInfo("Valid")} `})]})];return details.invalid_count&&entries.push(dom.elem("span",null,{children:[dom.elem("span",{className:"number-bubble severity-critical",textContent:details.invalid_count}),dom.elem("span",{textContent:` ${$.getInfo("Invalid")}`})]})),dom.elem("div",{className:"info-text info-text-centered"},{children:entries})}}),comments:commentsTooltipKey},filterFunction:function(entry){return"enable"===entry.status},tooltipFooterActions:[createTooltipFooterSlideAction({id:"external-resource-entries-slide",title:entry=>{return`${translate(`FabricConnector::type.external-resource-${entry.type}`)}: ${entry.name}`},label:translate("View Entries"),iconClass:"fa-list",template:'<f-system-external-resource-entry name="name" type="type">\n                        </f-system-external-resource-entry>',parentScope:entry=>({name:entry.name,type:entry.type}),initModules:["ng/system/external-resource/entry/f-system-external-resource-entry"]})]},"system.geoip-country":{name:$.getInfo("geography"),data:createCMDBSource("system","geoip-country"),searchKeys:{name:!0},formatFunction:function(entry,value){return'<span class="country_flag country_'+value+'"></span><span>'+entry.name+"</span>"},sortFunction:function(valueA,valueB,entryA,entryB){return ftnt_shared.util.fastLocaleCompare(entryA.name,entryB.name)}},"system.physical-switch":{name:$.getInfo("Physical Switch"),data:createCMDBSource("system","physical-switch")},"system.pppoe-interface":{name:$.getInfo("PPPoE Interface"),data:createCMDBSource("system","pppoe-interface")},"system.switch-interface":{name:$.getInfo("Software Switch"),data:createCMDBSource("system","switch-interface")},"system.virtual-switch":{name:$.getInfo("Hardware Switch"),data:createCMDBSource("system","virtual-switch")},"system.sdwan":{name:$.getInfo("SD-WAN"),data:createCMDBSource("system","sdwan",{complex:!0})},"system.sdwan.zone":{name:$.getInfo("SD-WAN Zone"),data:createCMDBSource("system/sdwan","zone")},sdWanService:{name:$.getInfo("Virtual WAN Rule"),data:createCMDBSource("system/sdwan","service")},"system.vdom-link":{name:$.getInfo("system.vdom-link"),data:createCMDBSource("system","vdom-link"),metaData:()=>Promise.all([Omniselect.getSourceData(makeGlobalSourceID("firewallInterfaces")),Omniselect.getSourceData("availableVdoms")]).then(function(response){return{interface:response[0],vdom:response[1]}}),formatFunction:(entry,value)=>{const fIcon=utilIcon;return fIcon.formatIcon(fIcon.ICON_TYPE.INTERFACE,"vdom-link",{label:value})},tooltipKeys:{vdom:new TooltipKey($.getInfo("vdom"),function(entry){var metadata=this.getSourceMetaData("system.vdom-link").interface,vdlink=entry.q_origin_key,vdoms=[];return metadata&&metadata.mapping&&["0","1"].forEach(function(suffix){metadata.mapping[vdlink+suffix]&&vdoms.push(metadata.mapping[vdlink+suffix].vdom)}),nColumnListFormat(vdoms,2,function(member){try{return Omniselect.processedFormatEntrySync({q_origin_key:member,datasource:"availableVdoms"})}catch(e){return member}})}),interfaces:new TooltipKey($.getInfo("interfaces"),function(entry){var vdlink=entry.q_origin_key;return nColumnListFormat([{name:vdlink+"0"},{name:vdlink+"1"}],1,function(member){try{return Omniselect.processedFormatEntrySync({q_origin_key:member.name,datasource:makeGlobalSourceID("firewallInterfaces")})}catch(e){return member.name}})})}},"system.virtual-wire-pair":{name:$.getInfo("system.virtual-wire-pair"),data:createCMDBSource("system","virtual-wire-pair",{processFn:makeAllVdomsProcessFn()}),formatFunction:(entry,value)=>`<f-icon class="${entry.icon||entry["css-class"]}"></f-icon>                     <span>${dom.escapeHTML(value)}</span>`,metaData:()=>{var interfaceSource="firewallInterfaces";return top.state.vdom_mode&&!top.state.current_vdom&&(interfaceSource=makeGlobalSourceID(interfaceSource)),Omniselect.getSourceData(interfaceSource)},tooltipKeys:{member:new TooltipKey($.getInfo("members"),function(entry){const isGlobalScope=top.state.vdom_mode&&!top.state.current_vdom;var interfaceSource="firewallInterfaces";if(isGlobalScope&&(interfaceSource=makeGlobalSourceID(interfaceSource)),entry.member&&entry.member.length)return nColumnListFormat(entry.member,1,function(member){try{return Omniselect.processedFormatEntrySync({q_origin_key:member["interface-name"],datasource:interfaceSource})}catch(e){return member["interface-name"]}})})}},switchControllerPorts:{name:$.getInfo("Port"),data:async(meta,sourceID)=>{const url=makeCSFSourceURI(`${MONITOR_URI}switch-controller/managed-switch`,sourceID);return((await $.get(url,{transceiver:!0,poe:!0,stp_status:!0})).results||[]).reduce((ports,entry)=>{const $switchStats=Object.assign({},entry);return delete $switchStats.ports,(entry.ports||[]).forEach(port=>{port["port-name"]=port.interface,port.switch_id=entry.serial,port.switch_alias=entry.name,port.q_origin_key=`${entry.serial}::${port.interface}`,port.datasource=sourceID,port.stpStatus=fSwitchctrl.getPortStpStatus(entry,port),port.$switchStats=$switchStats}),[...ports,...entry.ports]},[])},metaData:()=>Omniselect.getSourceData("certifiedTransceivers").then(data=>({certifiedTransceivers:data})),tooltipData:(entry,sourceID)=>{const managedSwitchCmdbUrl=makeCSFSourceURI(`/api/v2/cmdb/switch-controller/managed-switch/${entry.switch_id}/ports`,sourceID),csfPath=getSourceCSFPath(sourceID);return $.when(Omniselect.getSourceData(getCSFProxySourceID("switch-controller.managed-switch",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("switchControllerTransceivers",csfPath)),$.get(managedSwitchCmdbUrl,{format:"port-name|vlan|allowed-vlans|allowed-vlans-all|port-owner"}),Omniselect.getSourceData(getCSFProxySourceID("switchControllerVLANs",csfPath))).then((managedSwitch,fswTransceivers,fswPorts,vlans)=>{return{managedSwitch:managedSwitch,fswTransceivers:fswTransceivers,fswPortMap:(fswPorts[0]&&fswPorts[0].results||[]).reduce((res,port)=>(res[port.q_origin_key]=port,res),{}),vlans:vlans}})},formatFunction:entry=>{let iconClass="fa-status";return entry.poe_capable&&(iconClass+="-poe"),"up"===entry.status?iconClass+=entry.power_status===BUILD.SYMBOLS.PORT_POWER_STATUS_DELIVERING_POWER?"-powered":"-up":"disabled"===entry.status?iconClass+="-down-disabled":iconClass+="-down",`<f-icon class="${iconClass}"></f-icon><span>${entry.interface||entry["port-name"]}</span>`},subcategories:!0,subcategoryValueFunction:entry=>entry.switch_id,sortFunction:(valueA,valueB,portA,portB)=>{const regex=/\d+/;return parseInt(portA["port-name"].match(regex))-parseInt(portB["port-name"].match(regex))},tooltipHeaderFormatFunction:function(entry,sourceID){const meta=this.getSourceMetaData(sourceID)||{};return transceiverHeaderFormatter(entry.transceiver,meta.certifiedTransceivers)},tooltipKeys:{switch_id:new TooltipKey($.getInfo("FortiSwitch"),(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);try{return Omniselect.processedFormatEntrySync({q_origin_key:entry.switch_id,datasource:getCSFProxySourceID("switch-controller.managed-switch",csfPath)})}catch(e){return entry.switch_id}}),status:new TooltipKey($.getInfo("Link"),entry=>$.getInfo(`linkstatus::${entry.status}`)),vlan:new TooltipKey($.getInfo("Native VLAN"),function(entry,key,meta,sourceID){const portCmdb=(this.getTooltipData(entry).fswPortMap||{})[entry.interface]||{},csfPath=getSourceCSFPath(sourceID);if(portCmdb.vlan)try{return Omniselect.processedFormatEntrySync({q_origin_key:portCmdb.vlan,datasource:getCSFProxySourceID("switchControllerVLANs",csfPath)})}catch(e){return portCmdb.vlan}}),allowedVlans:new TooltipKey($.getInfo("Allowed VLANs"),function(entry,key,meta,sourceID){const portCmdb=(this.getTooltipData(entry).fswPortMap||{})[entry.interface]||{},csfPath=getSourceCSFPath(sourceID);if("enable"===entry["allowed-vlans-all"])return translate("All");const vlans=portCmdb["allowed-vlans"];return vlans&&vlans.length&&nColumnListFormat(vlans,2,vlan=>{try{return Omniselect.processedFormatEntrySync({q_origin_key:vlan.q_origin_key,datasource:getCSFProxySourceID("switchControllerVLANs",csfPath)})}catch(e){return vlan.q_origin_key}})}),speed:new TooltipKey($.getInfo("Speed"),entry=>{if("up"===entry.status&&entry.duplex){const duplex=$.getInfo(`duplex_${entry.duplex}`);return`${entry.speed} Mbps (${duplex})`}}),poe_status:new TooltipKey($.getInfo("PoE Status"),entry=>entry.poe_capable&&`<f-icon class="fa-${entry.poe_status}"></f-icon>\n                        <span>${translate(entry.poe_status)}</span>`),stpStatus:new TooltipKey($.getInfo("STP Status"),entry=>{if(entry.stpStatus){const labelClassName="discarding"===entry.stpStatus?"severity-label severity-high":"";return`<f-icon class="${"discarding"===entry.stpStatus?"fa-discard":"fa-forward"}"></f-icon>`+`<span class="${labelClassName}">${$.getInfo(`stp-status::${entry.stpStatus}`)}</span>`}}),mclagIcl:new TooltipKey($.getInfo("MC-LAG ICL"),entry=>{if(entry.mclag_icl)return'<f-icon class="fa-enabled"></f-icon>'+`<span>${$.getInfo("enabled")}</span>`}),power_status:new TooltipKey($.getInfo("Power Status"),entry=>{let statusString=BUILD.SYMBOLS.POE_STATUS_UNKNOWN,iconClass="fa-poe";switch(entry.power_status){case BUILD.SYMBOLS.PORT_POWER_STATUS_DISABLED:statusString=BUILD.SYMBOLS.POE_STATUS_DISABLED;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_SEARCHING:statusString=BUILD.SYMBOLS.POE_STATUS_SEARCHING;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_DELIVERING_POWER:statusString=BUILD.SYMBOLS.POE_STATUS_DELIVERING_POWER,iconClass="fa-poe-powered";break;case BUILD.SYMBOLS.PORT_POWER_STATUS_TESTMODE:statusString=BUILD.SYMBOLS.POE_STATUS_TESTMODE;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_FAULT:statusString=BUILD.SYMBOLS.POE_STATUS_FAULT;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_OTHERFAULT:statusString=BUILD.SYMBOLS.POE_STATUS_OTHERFAULT;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_REQ_POWER:statusString=BUILD.SYMBOLS.POE_STATUS_REQ_POWER}const langKey=`poestatus::${statusString}`;return entry.poe_capable&&"enabled"===entry.poe_status&&`<f-icon class="${iconClass}"></f-icon><span>${translate(langKey)}</span>`}),poe_power:new TooltipKey($.getInfo("Used Power"),entry=>entry.poe_capable&&"enabled"===entry.poe_status&&entry.power_status!==BUILD.SYMBOLS.PORT_POWER_STATUS_DISABLED&&`${entry.port_power.toFixed(2)}W`),transceiver:new TooltipKey($.getInfo("Transceiver"),(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);if(entry.transceiver)try{return Omniselect.processedFormatEntrySync({q_origin_key:`${entry.switch_id}::${entry.interface}`,datasource:getCSFProxySourceID("switchControllerTransceivers",csfPath)})}catch(e){return null}})},searchKeys:{switch_id:function(entry,searchString,searchRegex){return searchRegex.test(entry.switch_id)||entry.switch_alias&&searchRegex.test(entry.switch_alias)},stp_status:!0}},switchControllerTransceivers:{name:$.getInfo("Transceiver"),data:async(meta,sourceID)=>{try{let url=`${MONITOR_URI}switch-controller/managed-switch/transceivers`;url=makeCSFSourceURI(url,sourceID);const transceivers=(await $.get(url)).results;return transceivers.forEach(entry=>{entry.q_origin_key=`${entry.fortiswitch_id}::${entry.port}`,entry.datasource=sourceID}),transceivers}catch(error){return fLog.error(error),[]}},tooltipData:(entry,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);return $.when(Omniselect.getSourceData(getCSFProxySourceID("switchControllerPorts",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("switch-controller.managed-switch",csfPath))).then(fswPorts=>({fswPorts:fswPorts}))},metaData:()=>Omniselect.getSourceData("certifiedTransceivers").then(data=>({certifiedTransceivers:data})),valueFunction:transceiverValueFunction,formatFunction:function(entry,value,meta,sourceID){const metaData=this.getSourceMetaData(sourceID)||{};return transceiverFormatter(entry,metaData.certifiedTransceivers)},tooltipHeaderFormatFunction:function(entry,sourceID){const meta=this.getSourceMetaData(sourceID);return transceiverHeaderFormatter(entry,meta&&meta.certifiedTransceivers)},tooltipKeys:{type:new TooltipKey($.getInfo("Type")),vendor:new TooltipKey($.getInfo("Vendor")),vendor_part_number:new TooltipKey($.getInfo("Part Number")),vendor_serial_number:new TooltipKey($.getInfo("Serial")),fortiswitch_id:new TooltipKey($.getInfo("FortiSwitch"),(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);try{const mkey=entry.fortiswitch_id;return mkey&&Omniselect.processedFormatEntrySync({q_origin_key:mkey,datasource:getCSFProxySourceID("switch-controller.managed-switch",csfPath)})}catch(e){return""}}),port:new TooltipKey($.getInfo("Port"),(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);return entry.port&&entry.fortiswitch_id&&Omniselect.processedFormatEntrySync({q_origin_key:`${entry.fortiswitch_id}::${entry.port}`,datasource:getCSFProxySourceID("switchControllerPorts",csfPath)})})},searchKeys:{type:!0,vendor:!0,vendor_part_number:!0,vendor_serial_number:!0,fortiswitch_id:!0,port:!0}},"switch-controller.managed-switch":{name:$.getInfo("FortiSwitch"),data:createCMDBSource("switch-controller","managed-switch",{format:"switch-id|name"}),metaData:(meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);let switchGroupSourceId="switch-controller.switch-group";switchGroupSourceId=getCSFProxySourceID(switchGroupSourceId,csfPath);const statsUrl=makeCSFSourceURI(`${MONITOR_URI}switch-controller/managed-switch?`,sourceID);return Promise.all([$.get(statsUrl,{igmp_snooping_group:!0}).then(res=>res.results.reduce((result,fsw)=>(result[fsw.serial]=fsw,result),{})),Omniselect.getSourceData(switchGroupSourceId)]).then(([statusMap,group])=>({statusMap:statusMap,group:group}))},formatFunction:function(entry,value,meta,sourceID){const serial=entry["switch-id"],name=entry.name,label=name&&name!==serial?`${name} (${serial})`:serial,statusMap=this.getSourceMetaData(sourceID).statusMap,stats=statusMap&&statusMap[serial],isAuthorized=stats&&stats.state===fSwitchctrl.STATE.AUTHORIZED,isConnected=isAuthorized&&stats.status!==fSwitchctrl.STATUS.IDLE;let className="";return isAuthorized?isConnected||(className="disconnected"):className="discovered","all"===entry.q_origin_key?`<f-icon class="fa-square-o"></f-icon>\n                    <span>${$.getInfo("All")}</span>`:`<f-icon class="ftnt-fortiswitch security-fabric-node ${className}">\n                    </f-icon><span>${label}</span>`},tooltipKeys:{"switch-id":new TooltipKey($.getInfo("sn")),name:new TooltipKey($.getInfo("name")),status:new TooltipKey($.getInfo("status"),function(entry,key,meta,sourceID){const stats=this.getSourceMetaData(sourceID).statusMap[entry["switch-id"]];if(!stats)return;let label=fSwitchctrl.STATE_LANG[stats.state];let iconClass;return stats.state===fSwitchctrl.STATE.AUTHORIZED?(label=fSwitchctrl.STATUS_LANG[stats.status||fSwitchctrl.STATUS.IDLE],iconClass=fSwitchctrl.STATUS_ICON[stats.status||fSwitchctrl.STATUS.IDLE]):iconClass=fSwitchctrl.STATE_ICON[stats.state],'<f-icon class="'+iconClass+'"></f-icon><span>'+$.getInfo(label)||!1}),group:new TooltipKey($.getInfo("Switch Group"),function(entry,key,meta,sourceID){const csfPath=getSourceCSFPath(sourceID);let html,groups=this.getSourceMetaData(sourceID).group;return groups=groups.filter(group=>group.members.some(member=>member["switch-id"]===entry["switch-id"])),Array.isArray(groups)&&groups.length&&(html=nColumnListFormat(groups,1,group=>{try{return Omniselect.processedFormatEntrySync({q_origin_key:group.name,datasource:getCSFProxySourceID("switch-controller.switch-group",csfPath)})}catch(e){return group.name}})),html}),igmp_snooping_group:new TooltipKey($.getInfo("IGMP Snooping Groups"),function(entry,key,meta,sourceID){const stats=this.getSourceMetaData(sourceID).statusMap[entry["switch-id"]];if(stats&&stats.igmp_snooping_group)return stats.igmp_snooping_group["number-of-groups"]}),os_version:new TooltipKey($.getInfo("ver_firmware"),function(entry,key,meta,sourceID){const stats=this.getSourceMetaData(sourceID).statusMap[entry["switch-id"]];if(stats)return stats.os_version})},searchKeys:{"switch-id":!0,name:!0,status:!0,group:function(entry,searchString,searchRegex){let groups=this.getSourceMetaData("switch-controller.managed-switch").group;if((groups=(groups||[]).filter(group=>group.members.some(member=>member["switch-id"]===entry["switch-id"]))).length)return groups.some(group=>searchRegex.test(group.name))},os_version:!0},createNew:createWritePermissionCheck("switch-controller","managed-switch"),inlineEdit:createWritePermissionCheck("switch-controller","managed-switch"),tooltipFooterActions:createCMDBTooltipFooterActions({path:"switch-controller",name:"managed-switch"})},"switch-controller.switch-group":{name:$.getInfo("FortiSwitch Group"),data:createCMDBSource("switch-controller","switch-group"),formatFunction:entry=>{return`<f-icon class="fa-folder"></f-icon><span>${entry.name}</span>`},tooltipData:function(){return Omniselect.getSourceData("switch-controller.managed-switch")},createNew:createWritePermissionCheck("switch-controller","switch-group"),inlineEdit:createWritePermissionCheck("switch-controller","switch-group"),tooltipKeys:{members:new TooltipKey($.getInfo("Members"),function(entry){const swList=entry.members;if(swList&&swList.length)return nColumnListFormat(swList,1,member=>{try{return Omniselect.processedFormatEntrySync({q_origin_key:member["switch-id"],datasource:"switch-controller.managed-switch"})}catch(e){return member.q_origin_key}})})},tooltipFooterActions:createCMDBTooltipFooterActions({path:"switch-controller",name:"switch-group"})},"user.nac-policy":{name:$.getInfo("user.nac-policy"),data:createCMDBSource("user","nac-policy")},"switch-controller.security-policy.802-1X":{name:$.getInfo("datasource_switch-controller.security-policy.802-1X"),data:createCMDBSource("switch-controller.security-policy","802-1X"),createNew:createWritePermissionCheck("switch-controller.security-policy","802-1X"),inlineEdit:createWritePermissionCheck("switch-controller.security-policy","802-1X"),formatFunction:function(entry){return'<span class="ftnt-switch-controller-security-policy-802-1X"></span><span>'+entry.q_origin_key+"</span>"},searchKeys:{q_origin_key:!0},tooltipKeys:{usergroup:new TooltipKey($.getInfo("usergroup"),entry=>nColumnListFormat(entry["user-group"],1,group=>utilIcon.genIcon(group["css-class"],group.name))),references:referencesTooltipKey}},"switch-controller.qos.qos-policy":{name:$.getInfo("QoS Policy"),data:createCMDBSource("switch-controller.qos","qos-policy"),formatFunction:function(entry){return'<span class="ftnt-switch-controller-qos-qos-policy"></span><span>'+entry.q_origin_key+"</span>"},searchKeys:{q_origin_key:!0}},"switch-controller.lldp-profile":{name:$.getInfo("LLDP Profile"),data:createCMDBSource("switch-controller","lldp-profile"),formatFunction:function(entry){return'<span class="ftnt-switch-controller-lldp-profile"></span><span>'+entry.q_origin_key+"</span>"},searchKeys:{q_origin_key:!0}},"switch-controller.vlan-policy":{name:$.getInfo("VLAN Policy"),data:createCMDBSource("switch-controller","vlan-policy"),formatFunction:function(entry){return'<span class="ftnt-switch-controller-vlan-policy"></span><span>'+entry.q_origin_key+"</span>"},searchKeys:{q_origin_key:!0}},"switch-controller.nac-device":{name:$.getInfo("switch-controller.nac-device"),data:createCMDBSource("switch-controller","nac-device"),valueFunction:entry=>entry.mac,entryIdKeyFunction:()=>"mac",tooltipData:(entry,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);return Promise.all([Omniselect.getSourceData(getCSFProxySourceID("switch-controller.managed-switch",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("switchControllerPorts",csfPath))])},tooltipKeys:{mac:new TooltipKey("MAC Address"),id:new TooltipKey("ID"),"matched-nac-policy":new TooltipKey("Matched NAC Policy",entry=>entry["matched-nac-policy"]&&entry["matched-nac-policy"].q_origin_key),"last-known-switch":new TooltipKey("Last Known Switch",(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID),q_origin_key=entry["last-known-switch"]&&entry["last-known-switch"].q_origin_key;try{return Omniselect.processedFormatEntrySync({q_origin_key:q_origin_key,datasource:getCSFProxySourceID("switch-controller.managed-switch",csfPath)})}catch(e){return entry["last-known-switch"].q_origin_key}}),"last-known-port":new TooltipKey("Last Known Port",(entry,key,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID),q_origin_key=entry["last-known-switch"]&&entry["last-known-port"]&&`${entry["last-known-switch"].q_origin_key}::${entry["last-known-port"]}`;try{return Omniselect.processedFormatEntrySync({q_origin_key:q_origin_key,datasource:getCSFProxySourceID("switchControllerPorts",csfPath)})}catch(e){return entry["last-known-port"]}}),"last-seen":new TooltipKey(translate("last_seen"),function(entry){let now;if(entry.last_seen)return now=(new Date).getTime(),fDateTime.formatDateTime(now-entry["last-seen"]*fDateTime.S_TO_MS)})},searchKeys:{q_origin_key:!0}},systemVdomLink:{name:$.getInfo("VDOM Link"),data:async(meta,sourceID)=>{try{let url=`${MONITOR_URI}system/vdom-link`;return isSourceGlobal(sourceID)?url+="?scope=global":isSourceForAllVdoms(sourceID)&&(url+="?vdom=*"),(await $.get(url)).results.map(entry=>Object.assign(entry,{q_origin_key:entry.name,datasource:sourceID}))}catch(error){return fLog.error(error),[]}},formatFunction:(entry,value)=>{const fIcon=utilIcon;return fIcon.formatIcon(fIcon.ICON_TYPE.INTERFACE,entry.type,{label:value})},tooltipKeys:{type:new TooltipKey(translate("Type"),entry=>{const fIcon=utilIcon,type=translate(`interface_type::${entry.type}`);return fIcon.formatIcon(fIcon.ICON_TYPE.INTERFACE,entry.type,{label:type})})}},systemTransceivers:{name:$.getInfo("Transceiver"),data:async(meta,sourceID)=>{try{let url=makeCSFSourceURI(`${MONITOR_URI}system/interface/transceivers`,sourceID);isSourceGlobal(sourceID)&&(url=`${url}?scope=global`);const res=await $.get(url),transceivers=Array.isArray(res)?[].concat.apply([],res.map(vdomRes=>vdomRes.results)):res.results;return transceivers.forEach(entry=>{entry.q_origin_key=entry.interface,entry.datasource=sourceID}),transceivers}catch(error){return fLog.error(error),[]}},metaData:()=>Omniselect.getSourceData("certifiedTransceivers").then(data=>({certifiedTransceivers:data})),tooltipData:(entry,sourceID)=>{const csfPath=getSourceCSFPath(sourceID);let intfSourceID="firewallInterfaces";return isSourceGlobal(sourceID)&&(intfSourceID=makeGlobalSourceID(intfSourceID)),intfSourceID=getCSFProxySourceID(intfSourceID,csfPath),$.when(Omniselect.getSourceData(intfSourceID)).then(interfaces=>({interfaces:interfaces,intfSourceID:intfSourceID}))},valueFunction:transceiverValueFunction,formatFunction:function(entry){const meta=this.getSourceMetaData("systemTransceivers")||{};return transceiverFormatter(entry,meta.certifiedTransceivers)},tooltipHeaderFormatFunction:function(entry,sourceID){const meta=this.getSourceMetaData(sourceID);return transceiverHeaderFormatter(entry,meta.certifiedTransceivers)},tooltipKeys:{type:new TooltipKey($.getInfo("Type")),vendor:new TooltipKey($.getInfo("Vendor")),vendor_part_number:new TooltipKey($.getInfo("Part Number")),vendor_serial_number:new TooltipKey($.getInfo("Serial")),interface:new TooltipKey($.getInfo("Interface"),function(entry){const tooltipData=this.getTooltipData(entry);return entry.interface&&Omniselect.processedFormatEntrySync({q_origin_key:entry.interface,datasource:tooltipData.intfSourceID})})},searchKeys:{type:!0,vendor:!0,vendor_part_number:!0,vendor_serial_number:!0,interface:!0}},"system.dhcp.server":{name:$.getInfo("DHCP Server"),data:createCMDBSource("system.dhcp","server")},"system.dhcp6.server":{name:$.getInfo("IPv6 DHCP Server"),data:createCMDBSource("system.dhcp6","server")},"system.geneve":{name:$.getInfo("GENEVE Interface"),data:createCMDBSource("system","geneve")},"system.interface":{name:$.getInfo("Interface"),data:createCMDBSource("system","interface")},"system.replacemsg-group":{name:$.getInfo("system.replacemsg-group"),data:createCMDBSource("system","replacemsg-group",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"system.replacemsg-group",createNew:createReplaceMsgGroupPermissionCheck(),inlineEdit:createReplaceMsgGroupPermissionCheck(),searchKeys:{"group-type":!0,comment:!0},tooltipKeys:{"group-type":new TooltipKey($.getInfo("Group Type"),entry=>$.getInfo(`group_${entry["group-type"]}`)),comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"system",name:"replacemsg-group"})},"system.sdn-connector":{name:$.getInfo("system.sdn-connector"),createNewDatasource:"system.sdn-connector",createNew:createGlobalOnlyObjectPermissionCheck("system","sdn-connector"),inlineEdit:createGlobalOnlyObjectPermissionCheck("system","sdn-connector"),createNewFunction:function(sourceID,entry,meta){var search={};return meta&&meta.ipv6&&(search={ipv6:!0}),inlineEditCreate(sourceID,entry,search)},data:createCMDBSource("system","sdn-connector",{processFn:makeAllVdomsProcessFn()}),formatFunction:function(entry){var type=entry.type;return utilIcon.formatIcon(utilIcon.ICON_TYPE.SDN,type)+"<span>"+entry.name+"</span>"},tooltipData:function(entry){const promises=[$.get(`/api/v2/monitor/system/sdn-connector/status?mkey=${entry.name}`)];return SDN_CONNECTOR_SUPPORT_FILTERS.includes(entry.type)&&promises.push($.get(`/api/v2/monitor/firewall/sdn-connector-filters?connector=${entry.name}`).catch(()=>Promise.resolve())),Promise.all(promises).then(([statusResp,filterResp])=>{const statusResults=statusResp&&statusResp.results;return{status:Array.isArray(statusResults)?statusResults[0]:null,filters:filterResp&&filterResp.results}})},tooltipKeys:{server:new TooltipKey($.getInfo("Server")),port:new TooltipKey($.getInfo("Port")),"access-key":new TooltipKey($.getInfo("Access Key")),"vpc-id":new TooltipKey($.getInfo("VPC ID")),"user-id":new TooltipKey($.getInfo("User ID")),"tenant-id":new TooltipKey($.getInfo("Directory ID")),"client-id":new TooltipKey($.getInfo("Application ID")),"subscription-id":new TooltipKey($.getInfo("Subscription ID")),"gcp-project":new TooltipKey($.getInfo("Project")),"compartment-id":new TooltipKey($.getInfo("Compartment ID")),"service-account":new TooltipKey($.getInfo("Service Account")),"resource-group":new TooltipKey($.getInfo("Resource Group")),"compute-generation":new TooltipKey($.getInfo("Compute Generation")),domain:new TooltipKey($.getInfo("Domain")),username:new TooltipKey($.getInfo("Username")),region:new TooltipKey($.getInfo("Region"),entry=>{if("azure"===entry.type)return $.getInfo(`System::SDN::azure::azure-region.${entry["azure-region"]}`);if("oci"===entry.type&&"enable"!==entry["use-metadata-iam"])return entry["oci-region"];if("ibm"===entry.type){if(1===entry["compute-generation"])return $.getInfo(`System::SDN::ibm::ibm-region-gen1.${entry["ibm-region-gen1"]}`);if(2===entry["compute-generation"])return $.getInfo(`System::SDN::ibm::ibm-region-gen2.${entry["ibm-region-gen2"]}`)}return entry.region}),status:new TooltipKey($.getInfo("Status"),function(entry){var statusEntry=this.getTooltipData(entry).status;if(statusEntry){var status=statusEntry.status,iconClass={Up:"fa-status-up",Down:"fa-status-down",Disabled:"fa-status-down-disabled",Unknown:"fa-unknown"}[status];return utilIcon.genIcon(iconClass,$.getInfo(status))}}),filters:new TooltipKey($.getInfo("Filter Count"),function(entry){return(this.getTooltipData(entry).filters||[]).length})},tooltipFooterActions:[createTooltipFooterSlideAction({id:"sdn-connector-objects-slide",title:entry=>{return`${$.getInfo("External Connector Objects")}: ${entry.name}`},label:$.getInfo("View Connector Objects"),iconClass:"ftnt-web-server",template:'<f-sdn-connector-objects-list connector="connector">\n                        </f-sdn-connector-objects-list>',parentScope:entry=>({connector:entry}),initModules:["ng/system/sdn-connector/f-sdn-connector-objects-list"],visibleFunction:entry=>{const{SYSTEM_CFG:SYSTEM_CFG,FIREWALL_ADDRESS:FIREWALL_ADDRESS}=top.state.ACCESS_GROUP,hasPermission="aws"===entry.type?top.state.adminHasReadPermission(FIREWALL_ADDRESS)||top.state.adminHasReadPermission(SYSTEM_CFG):top.state.adminHasReadPermission(FIREWALL_ADDRESS);return SDN_CONNECTOR_SUPPORT_FILTERS.includes(entry.type)&&hasPermission}}),createTooltipFooterSlideAction({id:"sdn-connector-policy-slide",title:$.getInfo("External Connector Policies"),label:$.getInfo("View Policies"),iconClass:"ftnt-policy-objects",template:"<f-policy-list filter=filter type=type sub-type=subType></f-policy-list>",parentScope:entry=>({filter:{sdn:entry.name},type:"policy",subType:"standard"}),initModules:["ng/firewall/policy/policy-list"],visibleFunction:()=>{const{FIREWALL_POLICY:FIREWALL_POLICY}=top.state.ACCESS_GROUP;return top.state.adminHasReadPermission(FIREWALL_POLICY)&&top.state.isVdomModeDisabled()}}),createTooltipFooterSlideAction({id:"sdn-connector-automation-slide",title:$.getInfo("Connector Automation Rules"),label:$.getInfo("View Automation Rules"),iconClass:"ftnt-security-fabric",template:"<f-stitch-list filter=filter></f-stitch-list>",parentScope:entry=>({filter:{action:SDN_CONNECTOR_AUTO_ACTION_MAP.get(entry.type)}}),initModules:["ng/stitch/f-stitch-list"],visibleFunction:entry=>SDN_CONNECTOR_AUTO_ACTION_MAP.has(entry.type)&&top.state.isGlobalAdmin()})]},"system.sms-server":{name:$.getInfo("SMS Server"),data:createCMDBSource("system","sms-server"),tooltipKeys:{"mail-server":new TooltipKey($.getInfo("Mail Server"))},searchKeys:{name:!0,"mail-server":!0}},"system.vxlan":{name:$.getInfo("VXLAN"),data:createCMDBSource("system","vxlan")},"system.zone":{name:$.getInfo("zone"),data:createCMDBSource("system","zone")},"user.domain-controller":{name:$.getInfo("Domain Controller"),data:createCMDBSource("user","domain-controller"),createNew:createWritePermissionCheck("user","domain-controller"),inlineEdit:createWritePermissionCheck("user","domain-controller"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"domain-controller"})},"user.group":{name:$.getInfo("usergroup"),data:createCMDBSource("user","group",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"user.group",createNew:createWritePermissionCheck("user","group"),inlineEdit:createWritePermissionCheck("user","group"),searchKeys:{member:createDatasourceSearch("member")},tooltipKeys:{member:membersTooltipKey,"group-type":new TooltipKey($.getInfo("grp_type"),function(entry){var value=entry["group-type"];if(value)return $.getInfo(value)}),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"group"})},"user.guest":{name:$.getInfo("guest_group"),data:createCMDBSource("user","group",{filter:{"group-type":"guest"},plainTextPassword:1}),searchKeys:{member:createDatasourceSearch("guest")}},"user.krb-keytab":{name:$.getInfo("user.krb-keytab"),data:createCMDBSource("user","krb-keytab"),createNew:createWritePermissionCheck("user","krb-keytab"),inlineEdit:createWritePermissionCheck("user","krb-keytab"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"krb-keytab"})},"user.local":{name:$.getInfo("user"),data:createCMDBSource("user","local",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"user.local",createNew:createWritePermissionCheck("user","local"),inlineEdit:createWritePermissionCheck("user","local"),formatFunction:createUserFormatter("auth_user"),subcategories:!0,subcategoryValueFunction:function(entry){return entry.type},subcategoryFormatFunction:function(subcategoryValue,count){return $.getInfo("User::type."+subcategoryValue)+" ("+count+")"},tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"local"})},"user.peer":{name:$.getInfo("PKI User"),data:createCMDBSource("user","peer",{processFn:makeAllVdomsProcessFn()}),formatFunction:createUserFormatter("peer"),createNew:createWritePermissionCheck("user","peer"),inlineEdit:createWritePermissionCheck("user","peer"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"peer"})},"user.peergrp":{name:$.getInfo("PKI Group"),data:createCMDBSource("user","peergrp")},"user.radius":{name:$.getInfo("RADIUS Server"),data:createCMDBSource("user","radius",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"user.radius",createNew:createWritePermissionCheck("user","radius"),inlineEdit:createWritePermissionCheck("user","radius"),inlineEditFunction:function(sourceID,entry){const mkey=entry&&entry.q_origin_key,vdom=entry&&entry.vdom,source=Omniselect.prototype.SOURCES[sourceID],datasource=source&&source.createNewDatasource||sourceID,pathObject=formatters.path_name_format(datasource),slideBridgeClient=new slideBridge.Client,fortigate=source.fortigate&&source.fortigate.serial,uri="enable"===entry.rsso&&`/ng/external-connector/edit/radius/${encodeURIComponent(entry.q_origin_key)}`;return slideBridgeClient.openRouteAsSlide({path:pathObject.path,name:pathObject.name,mkey:mkey,vdom:vdom,fortigate:fortigate,uri:uri}).then(()=>{Omniselect.notifySourceChanged(sourceID)})},tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"radius"}),formatFunction:createUserFormatter("radius")},"user.ldap":{name:$.getInfo("LDAP Server"),data:createCMDBSource("user","ldap",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"user.ldap",createNew:createWritePermissionCheck("user","ldap"),inlineEdit:createWritePermissionCheck("user","ldap"),formatFunction:createUserFormatter("ldap"),tooltipKeys:{server:new TooltipKey($.getInfo("Server IP/Name")),port:new TooltipKey($.getInfo("Server Port")),cnid:new TooltipKey($.getInfo("Common Name Identifier")),dn:new TooltipKey($.getInfo("dn")),type:new TooltipKey($.getInfo("Bind Type"),createTranslatedTooltipFormatter("type","LdapServer::bind-type.")),references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"ldap"})},"user.tacacs+":{name:$.getInfo("TACACS+ Server"),data:createCMDBSource("user","tacacs+"),createNew:createWritePermissionCheck("user","tacacs+"),inlineEdit:createWritePermissionCheck("user","tacacs+"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"tacacs+"}),formatFunction:createUserFormatter("tacacs+")},"user.adgrp":{name:$.getInfo("FSSO Group"),data:createCMDBSource("user","adgrp"),createNew:createWritePermissionCheck("user","adgrp"),metaData:()=>Omniselect.getSourceData("user.fsso").then(res=>({fsso:res})),formatFunction:profileFormatFunction,tooltipKeys:{"server-name":new TooltipKey($.getInfo("Connector"),function(entry){const server=this.getSourceMetaData("user.adgrp").fsso.mapping[entry["server-name"]]||entry["server-name"];return profileFormatFunction(server,server.name||server)})},subcategories:!0,subcategoryValueFunction:function(entry){return entry["server-name"]===BUILD.SYMBOLS.FORTIMANAGER_FSSO_NAME?entry["connector-source"]||entry["server-name"]:entry["server-name"]||$.getInfo("unknown")},searchKeys:{name:!0,"server-name":!0}},"user.exchange":{name:$.getInfo("Exchange Server"),data:createCMDBSource("user","exchange"),createNew:createWritePermissionCheck("user","exchange"),createNewFunction:function(sourceID,entry){return inlineEditCreate(sourceID,entry,{subtype:"user.exchange"})},inlineEdit:createWritePermissionCheck("user","exchange"),formatFunction:profileFormatFunction,tooltipKeys:{"server-name":new TooltipKey($.getInfo("sname")),"domain-name":new TooltipKey($.getInfo("domain_name")),username:new TooltipKey($.getInfo("Username")),references:referencesTooltipKey},searchKeys:{name:!0},tooltipFooterActions:createCMDBTooltipFooterActions({path:"user",name:"exchange"})},"user.fsso":{name:$.getInfo("Endpoint/Identity"),data:createCMDBSource("user","fsso"),createNew:createWritePermissionCheck("user","fsso"),inlineEdit:createWritePermissionCheck("user","fsso"),formatFunction:profileFormatFunction,tooltipData:entry=>Promise.all([$.get("/api/v2/monitor/user/fsso",{mkey:entry.name,type:"fsso"}),Omniselect.getSourceData("user.adgrp")]).then(([statusResp,adgrpResp])=>{const adgrpFilter=(adgrpResp||[]).filter(adgrp=>adgrp["server-name"]===entry.name);return{status:statusResp&&statusResp.results&&statusResp.results[0],adgrps:adgrpFilter}}),tooltipKeys:{status:new TooltipKey($.getInfo("Status"),function(entry){const isConnected="connected"===this.getTooltipData(entry).status.status,iconClass=isConnected?"fa-status-up":"fa-status-down";return utilIcon.genIcon(iconClass,$.getInfo(isConnected?"Connected":"Down"))}),"ldap-server":new TooltipKey($.getInfo("LDAP Server"),function(entry){return entry["ldap-server"]&&entry["ldap-server"].name}),servers:new TooltipKey($.getInfo("FSSO Agent(s)"),function(entry){const status=this.getTooltipData(entry).status,servers=[entry.server,entry.server2,entry.server3,entry.server4,entry.server5].filter(server=>server);return nColumnListFormat(servers,1,server=>{const safeServer=dom.escapeHTML(server);return server===status.active_server?`<strong>${safeServer}</strong>`:safeServer})}),ssl:new TooltipKey($.getInfo("SSL/TLS"),entry=>{const sslEnabled="enable"===entry.ssl,iconClass=sslEnabled?"fa-enabled":"fa-disabled",value=sslEnabled?"enabled":"disabled";return utilIcon.genIcon(iconClass,$.getInfo(value))}),tag_count:new TooltipKey($.getInfo("Tag Count"),function(entry){if(USER_FSSO_SUPPORT_TAGS.includes(entry.type)){const adgrps=this.getTooltipData(entry).adgrps;return adgrps&&adgrps.length}}),adgrp_count:new TooltipKey($.getInfo("AD Group Count"),function(entry){if(!USER_FSSO_SUPPORT_TAGS.includes(entry.type)){const adgrps=this.getTooltipData(entry).adgrps;return adgrps&&adgrps.length}}),references:referencesTooltipKey},searchKeys:{name:!0,"ldap-server":!0,servers:(entry,query)=>{return[entry.server,entry.server2,entry.server3,entry.server4,entry.server5].filter(server=>server).find(server=>server.indexOf(query)>=0)}},tooltipFooterActions:[...createCMDBTooltipFooterActions({path:"user",name:"fsso"}),createTooltipFooterSlideAction({id:"fsso-objects-slide",title:entry=>{return`${$.getInfo("External Connector Objects")}: ${entry.name}`},label:$.getInfo("View Connector Objects"),iconClass:"ftnt-web-server",template:'<f-collector-agent-adgrp-list connector="connector">\n                        </f-collector-agent-adgrp-list>',parentScope:entry=>({connector:entry}),initModules:["ng/user/sso/edit/f-collector-agent-adgrp-list"]}),createTooltipFooterSlideAction({id:"fsso-policy-slide",title:entry=>{return`${$.getInfo("External Connector Policies")}: ${entry.name}`},label:$.getInfo("View Policies"),iconClass:"ftnt-policy-objects",template:"<f-policy-list filter=filter type=type sub-type=subType></f-policy-list>",parentScope:entry=>({filter:{fsso:entry.name},type:"policy",subType:"standard"}),initModules:["ng/firewall/policy/policy-list"],visibleFunction:()=>{const{FIREWALL_POLICY:FIREWALL_POLICY}=top.state.ACCESS_GROUP;return top.state.adminHasReadPermission(FIREWALL_POLICY)}})]},"user.fsso-polling":{name:$.getInfo("fsso_poll"),data:createCMDBSource("user","fsso-polling"),createNew:createWritePermissionCheck("user","fsso-polling"),inlineEdit:createWritePermissionCheck("user","fsso-polling"),valueFunction:function(entry){return entry.server},sortFunction:function(valueA,valueB,entryA,entryB){return ftnt_shared.util.fastLocaleCompare(entryA.server,entryB.server)},tooltipKeys:{id:new TooltipKey($.getInfo("id")),"ldap-server":new TooltipKey($.getInfo("LDAP Server"),function(entry){return entry["ldap-server"]&&entry["ldap-server"].name}),status:new TooltipKey($.getInfo("Status"),createTranslatedTooltipFormatter("status")),references:referencesTooltipKey},tooltipFooterActions:[...createCMDBTooltipFooterActions({path:"user",name:"fsso-polling"}),createTooltipFooterSlideAction({id:"fsso-objects-slide",title:entry=>{return`${$.getInfo("External Connector Objects")}: ${entry.server}`},label:$.getInfo("View Connector Objects"),iconClass:"ftnt-web-server",template:'<f-collector-agent-adgrp-list connector="connector">\n                        </f-collector-agent-adgrp-list>',parentScope:entry=>({connector:entry}),initModules:["ng/user/sso/edit/f-collector-agent-adgrp-list"]})],searchKeys:{name:!0,id:!0,"ldap-server":!0,status:!0}},"user.info":{name:$.getInfo("user_info"),data:async function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID);let entries=await fUserInfo.getAll({csfPath:csfPath}),data=[];return entries.forEach(function(entry){entry.sourceip&&entry.sourceip.forEach(ip=>{entry.username?entry.username.forEach(username=>{data.push(Object.assign({},entry,{datasource:sourceID,q_origin_key:ip,$username:username}))}):data.push(Object.assign({},entry,{datasource:sourceID,q_origin_key:ip}))})}),data},alternativeEntryIDs:["$username"],valueFunction:function(entry){return entry.username&&entry.username[0]},formatFunction:function(entry,value){return`${utilIcon.formatIcon(utilIcon.ICON_TYPE.USER,"authenticated")}<span>${dom.escapeHTML(value)}</span>`},tooltipData:async function(entry){return await fUserInfo.getUserThumbnail({filters:[{type:"sourceip",value:entry.q_origin_key}]})},suppressIdValueTooltip:!0,tooltipNameLabel:$.getInfo("user_info::username"),tooltipHeaderFormatFunction:function(entry){let thumbnail=null;try{thumbnail=this.getTooltipData(entry)}catch(e){}return fAvatars.userInfoHeaderFormatFn(entry,thumbnail)},tooltipKeys:{sourceip:userInfoTooltipKey("sourceip",function(entry){let sourceip=entry.sourceip&&entry.sourceip.length>1&&entry.sourceip.filter(Boolean);if(sourceip)return dom.fragment(sourceip.map(ip=>dom.elem("div",{textContent:ip})))}),cn:userInfoTooltipKey("cn"),givenName:userInfoTooltipKey("givenName"),sn:userInfoTooltipKey("sn"),userPrincipalName:userInfoTooltipKey("userPrincipalName"),mail:userInfoTooltipKey("mail"),telephoneNumber:userInfoTooltipKey("telephoneNumber"),streetAddress:userInfoTooltipKey("streetAddress"),postOfficeBox:userInfoTooltipKey("postOfficeBox"),l:userInfoTooltipKey("l"),st:userInfoTooltipKey("st"),postalCode:userInfoTooltipKey("postalCode"),co:userInfoTooltipKey("co"),title:userInfoTooltipKey("title"),company:userInfoTooltipKey("company"),department:userInfoTooltipKey("department"),manager:userInfoTooltipKey("manager",userInfoManagerFormatter),accountExpires:userInfoTooltipKey("accountExpires",userInfoAccountExpiresFormatter),memberOf:userInfoTooltipKey("memberOf",userInfoMemberOfFormatter)}},"voip.profile":{name:$.getInfo("datasource_voip.profile"),data:createCMDBSource("voip","profile"),createNew:createUtmProfilePermissionCheck("voip","profile"),inlineEdit:createWritePermissionCheck("voip","profile"),formatFunction:profileFormatFunction,tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"voip",name:"profile"})},"vpn.certificate.ca":{name:$.getInfo("certificate.ca"),data:createCMDBSource("vpn.certificate","ca"),formatFunction:function(entry){return formatters.certificate_format_fn(entry.range,entry.name)}},"vpn.ipsec.concentrator":{name:$.getInfo("IPsec Concentrator"),data:createCMDBSource("vpn.ipsec","concentrator"),createNew:createWritePermissionCheck("vpn.ipsec","concentrator"),inlineEdit:createWritePermissionCheck("vpn.ipsec","concentrator")},"vpn.ipsec.manualkey":{name:$.getInfo("vpn.ipsec.manualkey"),data:createCMDBSource("vpn.ipsec","manualkey")},"system.ipsec-aggregate":{name:$.getInfo("system.ipsec-aggregate"),data:createCMDBSource("system","ipsec-aggregate",{processFn:async(results,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID),tunnels=await Omniselect.getSourceData(getCSFProxySourceID("availableIPsecTunnels",csfPath));return results=results.map(aggregate=>{const status=aggregate.member.some(member=>{const key=member.q_origin_key;return tunnels.mapping[key]&&"up"===tunnels.mapping[key].$status});return Object.assign({},aggregate,{$status:status?"up":"down"})}),Omniselect.getSourceData(getCSFProxySourceID("vpn.ipsec.phase1-interface",csfPath)).then(()=>results)}}),formatFunction:(entry,value)=>{let html="";return html=dom.create_icon_html(`ftnt-ipsec-aggregate-${entry.$status||"down"}`,{iconSize:"small"}),html+="<span>"+value+"</span>"},tooltipKeys:{algorithm:new TooltipKey($.getInfo("Algorithm"),entry=>$.getInfo(`ipsec-aggregate::algorithm.${entry.algorithm}`)),member:new TooltipKey($.getInfo("Members"),function(entry,key,meta,sourceID){const csfPath=getSourceCSFPath(sourceID);return nColumnListFormat(entry.member,1,member=>{try{return Omniselect.processedFormatEntrySync({q_origin_key:member.q_origin_key,datasource:getCSFProxySourceID("availableIPsecTunnels",csfPath)})}catch(e){return Omniselect.processedFormatEntrySync({q_origin_key:member.q_origin_key,datasource:getCSFProxySourceID("vpn.ipsec.phase1-interface",csfPath)})}})})}},"vpn.ipsec.phase1":{name:$.getInfo("vpn.ipsec.phase1"),data:createCMDBSource("vpn.ipsec","phase1")},"vpn.ipsec.phase1-interface":{name:$.getInfo("vpn.ipsec.phase1-interface"),data:createCMDBSource("vpn.ipsec","phase1-interface",{processFn:(results,meta,sourceID)=>{const csfPath=getSourceCSFPath(sourceID),promises=[Omniselect.getSourceData(getCSFProxySourceID("availableIPsecTunnels",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("vpn.ipsec.phase2-interface",csfPath))];return Promise.all(promises).then(([availableTunnels,phase2Interface])=>{const upTunnels=new Set;return availableTunnels.forEach(tunnel=>{"up"===tunnel.$status&&upTunnels.add(tunnel.$p1name)}),results=results.map(tunnel=>{const key=tunnel.q_origin_key;if(phase2Interface.mapping[key]){const isUp=upTunnels.has(key);return Object.assign({},tunnel,{$status:isUp?"up":"down",$phase2Intf:!0})}return tunnel})})}}),tooltipHeaderFormatFunction:entry=>{if(["static","ddns"].includes(entry.type)&&!entry.$phase2Intf)return`<div class="warning-message">\n                        <f-icon class="fa-warning"></f-icon>\n                        <div class="message-content">\n                            ${$.getInfo("Phase 2 tunnel is not configured.")}\n                        </div>\n                        </div>`},formatFunction:(entry,value)=>{if(!entry.$phase2Intf){return`${["static","ddns"].includes(entry.type)?dom.create_icon_html("fa-warning",{iconSize:"small"}):""}<span>${value}</span>`}if(entry.$status)return utilIcon.formatIcon(utilIcon.ICON_TYPE.UP_DOWN,entry.$status,{label:entry.name,includeTitle:!1})}},"vpn.ipsec.phase2-interface":{name:$.getInfo("vpn.ipsec.phase2-interface"),data:createCMDBSource("vpn.ipsec","phase2-interface")},"vpn.ssl.web.portal":{name:$.getInfo("portal"),data:createCMDBSource("vpn.ssl.web","portal")},"vpn.ssl.web.realm":{name:$.getInfo("realm"),data:createCMDBSource("vpn.ssl.web","realm")},"vpn.ssl.web.user-bookmark":{name:$.getInfo("User Bookmark"),data:createCMDBSource("vpn.ssl.web","user-bookmark")},"waf.profile":{name:$.getInfo("datasource_waf.profile"),data:createCMDBSource("waf","profile"),createNew:createUtmProfilePermissionCheck("waf","profile"),inlineEdit:createWritePermissionCheck("waf","profile"),formatFunction:profileFormatFunction,tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"waf",name:"profile"})},"waf.signature":{name:$.getInfo("datasource_waf.signature"),data:createCMDBSource("waf","signature"),formatFunction:profileFormatFunction,tooltipNameLabel:$.getInfo("id"),tooltipKeys:{desc:new TooltipKey($.getInfo("desc"))}},"waf.main-class":{name:$.getInfo("datasource_waf.main-class"),data:createCMDBSource("waf","main-class"),valueFunction:function(entry){return entry.name},tooltipNameLabel:$.getInfo("name"),tooltipKeys:{id:new TooltipKey($.getInfo("id"))}},"wanopt.auth-group":{name:$.getInfo("wanopt.auth-group"),data:createCMDBSource("wanopt","auth-group"),tooltipKeys:{"auth-method":new TooltipKey($.getInfo("auth-method"),createTranslatedTooltipFormatter("auth-method")),"peer-accept":new TooltipKey($.getInfo("Accept Peer(s)"),createTranslatedTooltipFormatter("peer-accept",null,{any:"any",defined:"Defined Only",one:"specify"})),peer:new TooltipKey($.getInfo("peer"),function(entry){return entry.peer&&datasourceTooltipFormat(entry.peer)})}},"wanopt.peer":{name:$.getInfo("wan_peer"),data:createCMDBSource("wanopt","peer"),searchKeys:{ip:!0},tooltipKeys:{"peer-host-id":new TooltipKey($.getInfo("peer_name")),ip:new TooltipKey($.getInfo("field_ipaddr"))}},"wanopt.profile":{name:$.getInfo("wan_profile"),data:createCMDBSource("wanopt","profile"),formatFunction:profileFormatFunction},"web-proxy.forward-server":{name:$.getInfo("web-proxy.forward-server"),data:createCMDBSource("web-proxy","forward-server"),tooltipKeys:{comment:commentTooltipKey}},"web-proxy.forward-server-group":{name:$.getInfo("web-proxy.forward-server-group"),data:createCMDBSource("web-proxy","forward-server-group"),tooltipKeys:{comment:commentTooltipKey}},fortiguardWebfilterCategoriesInfo:{name:translate("FortiGuard Web Filter Category Information"),data:async function(){let results=(await fFortiGuard.getWebFilterCategories()).results||[];for(let entry of results)entry.q_origin_key=Number(entry.categoryid);return results}},"webfilter.ftgd-cat":{name:translate("webcat"),data:async function(){let localResults=(await $.getJSON(MONITOR_URI+"webfilter/fortiguard-categories",{include_unrated:1,convert_unrated_id:1})).results||[];for(let entry of localResults)entry.q_origin_key=entry.id,entry.datasource="webfilter.ftgd-cat","Unrated"===entry.group&&(entry.name="Unrated");return localResults},tooltipData:async function(entry){let res=await Omniselect.getSourceData("fortiguardWebfilterCategoriesInfo");return res.mapping&&res.mapping[entry.id]||{}},preProcessSelected:!0,subcategories:!0,subcategoryValueFunction:function(entry){return entry.group||"Uncategorized"},valueFunction:pluckName,tooltipNameLabel:translate("category"),tooltipKeys:{rating:new TooltipKey(translate("rating")),group:new TooltipKey(translate("group")),description:new TooltipKey(translate("desc"),function(entry){const tooltipData=this.getTooltipData(entry);if(tooltipData&&tooltipData.desc)return tooltipData.desc}),example:new TooltipKey(translate("Examples"),function(entry){const tooltipData=this.getTooltipData(entry);if(tooltipData&&tooltipData.example)return tooltipData.example.split(",").join(", ")})}},"web-proxy.url-match":{name:$.getInfo("web-proxy.url-match"),data:createCMDBSource("web-proxy","url-match"),tooltipKeys:{pattern:new TooltipKey($.getInfo("url-pattern"),createEscapedTooltipFormatter("url-pattern")),"forward-server":new TooltipKey($.getInfo("Forward to Server"),function(entry){return entry["forward-server"]&&datasourceTooltipFormat(entry["forward-server"])}),"cache-exemption":new TooltipKey($.getInfo("cache-exemption"),createEscapedTooltipFormatter("cache-exemption")),status:new TooltipKey($.getInfo("enabled"),createEscapedTooltipFormatter("status"))}},"webfilter.ftgd-local-cat":{name:$.getInfo("webfilter.ftgd-local-cat"),data:createCMDBSource("webfilter","ftgd-local-cat",{processFn:function(categories){return(categories=categories||[]).forEach(function(category){category.name=category.desc,category.datasource="webfilter.ftgd-local-cat"}),categories}}),alternativeEntryIDs:["id"],preProcessSelected:!0,valueFunction:pluckName,searchKeys:{name:!0},tooltipNameLabel:$.getInfo("id")},"webfilter.ftgd-local-rating":{name:$.getInfo("webfilter.ftgd-local-rating"),data:createCMDBSource("webfilter","ftgd-local-rating"),preProcessSelected:!0,valueFunction:pluckName,searchKeys:{name:!0},tooltipNameLabel:$.getInfo("id")},"webfilter.profile":{name:$.getInfo("datasource_webfilter.profile"),data:createCMDBSource("webfilter","profile"),createNew:createUtmProfilePermissionCheck("webfilter","profile"),inlineEdit:createWritePermissionCheck("webfilter","profile"),formatFunction:profileFormatFunction,searchKeys:{"feature-set":!0,comment:!0},tooltipKeys:{"feature-set":profileFeatureSetTooltipKey,comment:commentTooltipKey,q_global_entry:scopeTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"webfilter",name:"profile"})},"webfilter.override":{name:$.getInfo("Web Filter Overrides"),data:function(meta,sourceID){const uri=makeCSFSourceURI("/api/v2/monitor/webfilter/override",sourceID);return $.get(uri).then(data=>data.results)}},"wireless-controller.region":{name:$.getInfo("wireless-controller.region"),data:createCMDBSource("wireless-controller","region"),searchKeys:{name:!0,comments:!0},tooltipKeys:{comments:commentsTooltipKey}},"wireless-controller.vap":{name:$.getInfo("wireless-controller.vap"),aliasFor:["system.interface"],data:createCMDBSource("wireless-controller","vap",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"wireless-controller.vap",subcategories:!0,subcategoryValueFunction:entry=>entry.vdom||top.state.getOperatingVDOM(),valueFunction:function(entry){return entry.ssid?entry.ssid+" ("+entry.name+")":entry.name},tooltipKeys:{trafficMode:new TooltipKey($.getInfo("Traffic mode"),entry=>{const keyLangMap={"local-bridging":"Bridge","mesh-backhaul":"mesh"};let result="Tunnel";return Object.keys(keyLangMap).forEach(key=>{"enable"!==entry[key]||(result=$.getInfo(keyLangMap[key]))}),result}),security:new TooltipKey($.getInfo("Security mode"),createTranslatedTooltipFormatter("security"))}},"wireless-controller.vap-group":{name:$.getInfo("wireless-controller.vap-group"),metaData:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID);let datasource=makeCSFProxySourceID("wireless-controller.vap",csfPath);datasource=makeAllVdomsSourceID(datasource);const vaps=Omniselect.getSourceData(datasource);return Promise.all([csfPath,vaps])},formatFunction:function(entry,value){return`<f-icon class="ftnt-vap-group"></f-icon><span>${value}</span>`},valueFunction:function(entry){return entry.name},data:createCMDBSource("wireless-controller","vap-group"),tooltipKeys:{vaps:new TooltipKey($.getInfo("ssids"),function(entry){const[csfPath]=this.getSourceMetaData("wireless-controller.vap-group"),vapList=entry.vaps;if(vapList&&vapList.length)return nColumnListFormat(vapList,1,member=>{try{let datasource=makeCSFProxySourceID(member.datasource,csfPath);return datasource=makeAllVdomsSourceID(datasource),Omniselect.processedFormatEntrySync({q_origin_key:member.q_origin_key,datasource:datasource})}catch(e){return member.q_origin_key}})})}},"wireless-controller.utm-profile":{name:$.getInfo("Security Profile Group"),data:createCMDBSource("wireless-controller","utm-profile",{processFn:makeAllVdomsProcessFn()}),createNewDatasource:"wireless-controller.utm-profile",createNew:createWritePermissionCheck("wireless-controller","utm-profile"),inlineEdit:createWritePermissionCheck("wireless-controller","utm-profile"),formatFunction:function(entry,value){var html="";return html=dom.create_icon_html("ftnt-profile-group",{iconSize:"small"}),html+="<span>"+value+"</span>"},searchKeys:{"ips-sensor":!0,"application-list":!0,"antivirus-profile":!0,"webfilter-profile":!0,q_global_entry:!0,comment:!0},tooltipKeys:{"utm-log":new TooltipKey($.getInfo("Logging"),enableDisableFormatFn),"scan-botnet-connections":new TooltipKey($.getInfo("Scan Botnets"),function(entry,value){var iconClass="fa-";switch(entry[value]){case"disable":iconClass+="disabled";break;case"block":iconClass+="denied";break;default:iconClass+=entry[value]}return`${`<f-icon class="${iconClass}"></f-icon>`}<span>${$.getInfo(entry[value])}</span>`}),"ips-sensor":new TooltipKey($.getInfo("IPS"),profileGroupUtmFormatter("ips-sensor")),"application-list":new TooltipKey($.getInfo("Application Control"),profileGroupUtmFormatter("application-list")),"antivirus-profile":new TooltipKey($.getInfo("AV"),profileGroupUtmFormatter("antivirus-profile")),"webfilter-profile":new TooltipKey($.getInfo("Web Filter"),profileGroupUtmFormatter("webfilter-profile")),q_global_entry:scopeTooltipKey,comment:commentTooltipKey,references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"wireless-controller",name:"utm-profile"})},"wireless-controller.wids-profile":{name:$.getInfo("wids_profile"),data:createCMDBSource("wireless-controller","wids-profile"),tooltipKeys:{"ap-scan":new TooltipKey($.getInfo("rogue_ap_detection"),function(entry){return'<f-icon class="fa-'+entry["ap-scan"]+'d"></f-icon>'})}},"wireless-controller.wtp":{name:$.getInfo("FortiAP"),data:createCMDBSource("wireless-controller","wtp"),inlineEdit:createWritePermissionCheck("wireless-controller","wtp"),formatFunction:function(entry,value){const baseClass=entry["css-class"]||"ftnt-fortiap",ICON_MAP={CONNECTED:`${baseClass}-connected`,DISCONNECTED:`${baseClass}-disconnected`,DISCOVERED:`${baseClass}-discovered`},{managedAPMap:managedAPMap}=this.getSourceMetaData("wireless-controller.wtp"),{state:state,status:status}=managedAPMap[entry["wtp-id"]];let extraClass;return"authorized"===state?extraClass="connected"===status?ICON_MAP.CONNECTED:ICON_MAP.DISCONNECTED:"disabled"===state?extraClass=ICON_MAP.DISCONNECTED:"discovered"===state&&(extraClass=ICON_MAP.DISCOVERED),`<f-icon class='${baseClass} ${extraClass}'></f-icon><span>${value}</span>`},valueFunction:function(entry){return entry["wtp-id"].endsWith("WIFI0")?translate("Local WiFi Radio"):entry.name||entry["wtp-id"]},metaData:function(meta,sourceID){const csfURI=makeCSFSourceURI(`${MONITOR_URI}wifi/managed_ap?incl_local=true`,sourceID);return Promise.all([wifi.metaDataFactory(),$.get(csfURI)]).then(function([wifiCommon,{results:managedAPSource}]){return{wifiCommon:wifiCommon,managedAPMap:managedAPSource.reduce(function(map,managedAP){return map[managedAP.wtp_id]=managedAP,map},{}),managedAP:managedAPSource}})},searchKeys:{name:!0,"wtp-id":!0,status:function(entry,searchString,searchRegex){const map=this.getSourceMetaData("wireless-controller.wtp").managedAPMap,{status:status,state:state}=map[entry["wtp-id"]];let statusText;statusText=status,"disabled"===state?statusText="rejected":"discovered"===state&&(statusText="wait_auth");const translated=translate(`ManagedAP::status.${statusText}`);return searchRegex.test(translated)}},tooltipKeys:{"wtp-profile":new TooltipKey($.getInfo("Profile"),function(entry){var radioId,radio,overridden=!1;if(!(overridden=hasOverriddenProps(entry)))for(radioId=1;!overridden&&(radio=entry["radio-"+radioId]);)overridden=hasOverriddenProps(radio),radioId++;return overridden=overridden?" ("+$.getInfo("Overridden")+")":"",entry["wtp-profile"].name+overridden;function hasOverriddenProps(obj){return function(strs,start){return strs.filter(function(str){return 0===str.indexOf(start)})}(Object.keys(obj),"override-").some(function(prop){return"enable"===this[prop]},obj)}}),"wtp-id":new TooltipKey($.getInfo("Serial")),ip:new TooltipKey($.getInfo("IP Address"),function(entry){const{managedAPMap:managedAPMap}=this.getSourceMetaData("wireless-controller.wtp"),entryStatus=managedAPMap[entry["wtp-id"]];return"0.0.0.0"!==entryStatus.local_ipv4_addr?entryStatus.local_ipv4_addr:"0.0.0.0"!==entryStatus.connecting_from?entryStatus.connecting_from:void 0}),status:new TooltipKey($.getInfo("status"),function(entry){const map=this.getSourceMetaData("wireless-controller.wtp").managedAPMap,iconMap={connected:"status-up",disconnected:"status-down",discovered:"unknown"},{status:status,state:state}=map[entry["wtp-id"]];let realStatus,statusText;if(statusText=status)return"authorized"===state?realStatus="connected"===status?"connected":"disconnected":"disabled"===state?(realStatus="disconnected",statusText="rejected"):"discovered"===state&&(realStatus="discovered",statusText="wait_auth"),'<f-icon class="fa-'+iconMap[realStatus]+'"></f-icon><span>'+$.getInfo(statusText)+"</span>"}),firmware:new TooltipKey($.getInfo("fm_ver"),function(entry){return this.getSourceMetaData("wireless-controller.wtp").managedAPMap[entry["wtp-id"]].os_version}),"radio-1":new TooltipKey($.getInfo("Radio {COUNT}",[1]),createWTPRadioTooltipFormatter(1)),"radio-2":new TooltipKey($.getInfo("Radio {COUNT}",[2]),createWTPRadioTooltipFormatter(2)),"radio-3":new TooltipKey($.getInfo("Radio {COUNT}",[3]),createWTPRadioTooltipFormatter(3))},tooltipFooterActions:[...createCMDBTooltipFooterActions({path:"wireless-controller",name:"wtp"}),createTooltipFooterSlideAction({id:"ap-details-slide",label:$.getInfo("Details"),title:entry=>$.getInfo("Summary of {0}",[entry.name]),iconClass:"fa-eye",template:'<f-ap-details serial="serial"></f-ap-details>',parentScope:entry=>({serial:entry.q_origin_key}),initModules:["ng/wifi/managed-ap/details/f-ap-details"]})]},"wireless-controller.wtp-group":{name:$.getInfo("FortiAP Group"),data:createCMDBSource("wireless-controller","wtp-group",{processFn:makeAllVdomsProcessFn()}),tooltipKeys:{vaps:new TooltipKey($.getInfo("members"),createMembersTooltipFormatter("wtps"))}},"wireless-controller.wtp-profile":{name:$.getInfo("ap_profile"),data:createCMDBSource("wireless-controller","wtp-profile"),createNew:createWritePermissionCheck("wireless-controller","wtp-profile"),inlineEdit:createWritePermissionCheck("wireless-controller","wtp-profile"),tooltipKeys:{references:referencesTooltipKey},tooltipFooterActions:createCMDBTooltipFooterActions({path:"wireless-controller",name:"wtp-profile"})},"wireless-controller.wtp-country":{name:translate("Country"),data:createSchemaSource("wireless-controller","wtp-profile","ap-country","name","wireless-controller.wtp-country",entries=>{const upper=letter=>letter.toUpperCase();return entries.map(entry=>{return Object.assign({},entry,{countryName:entry.help.toLowerCase().replace(/\b\w/g,upper)})})}),valueFunction:entry=>translate(entry.countryName)},wirelessNetworks:{name:$.getInfo("Wireless Network"),data:function(meta,sourceID){const url=makeCSFSourceURI(`${MONITOR_URI}wifi/network/list`,sourceID);return $.get(url).then(data=>{const networkMap=data.results.reduce(function(netMap,network){const ssid=network.ssid,storedNetwork=netMap[ssid];(!storedNetwork||network.signal_strength>storedNetwork.signal_strength)&&(network.q_origin_key=ssid,network.datasource="wirelessNetworks",netMap[ssid]=network);return netMap},{});return Object.values(networkMap)})},formatFunction:function(entry,val){return`<f-icon class="${`fa-${"open"===entry.security?"unlock":"lock"}`}"></f-icon><span>${dom.escapeHTML(val)}</span>`},tooltipKeys:{security:new TooltipKey($.getInfo("Security"),entry=>$.getInfo(entry.security)),channel:new TooltipKey($.getInfo("channel")),mac_address:new TooltipKey($.getInfo("MAC Address")),vendor:new TooltipKey($.getInfo("Vendor")),transmission_rate:new TooltipKey($.getInfo("Rate"),entry=>{if(void 0!==entry.transmission_rate)return $.getInfo("{NUMBER} Mbps",[entry.transmission_rate])})}},"wtp-profile.platform":{name:translate("platform"),data:function(meta,sourceID){const url=makeCSFSourceURI(`${MONITOR_URI}wifi/ap_platforms`,sourceID);return $.get(url).then(data=>{const platformMap=data.results;return Object.keys(platformMap).reduce(function(platformList,platformKey){if(platformKey.startsWith("$"))return platformList;const platformInfo=Object.assign({},platformMap[platformKey],{q_origin_key:platformKey,datasource:"wtp-profile.platform"}),regexResult=/^(F[A-Z]{1,3})(\d{2,3})/.exec(platformInfo.platform_name);if(regexResult){const wifiGen=platformInfo.wifi_generation,[,prefix,modelStr]=regexResult,series=platformInfo.platform_series||"";platformInfo.$prefix=prefix,platformInfo.$modelNum=parseInt(modelStr),platformInfo.$group=`${wifiGen}-${"c"===series?"":series}`}else{const PLATFORM_GROUP_MAP={FWF:"999-l"};PLATFORM_GROUP_MAP.hasOwnProperty(platformKey)?PLATFORM_GROUP_MAP[platformKey]&&(platformInfo.$group=translate(PLATFORM_GROUP_MAP[platformKey])):platformInfo.$group="0-o"}["FWF"].includes(platformKey)&&(platformInfo.$translatedName=translate(platformInfo.platform_name));return platformList.push(platformInfo),platformList},[])})},tooltipKeys:{"radio-1":new TooltipKey(translate("Radio {NUMBER}",[1]),entry=>apPlatformRadioTooltip(entry.radios[0]),entry=>entry.radios[0]),"radio-2":new TooltipKey(translate("Radio {NUMBER}",[2]),entry=>apPlatformRadioTooltip(entry.radios[1]),entry=>entry.radios[1]),"radio-3":new TooltipKey(translate("Radio {NUMBER}",[3]),entry=>apPlatformRadioTooltip(entry.radios[2]),entry=>entry.radios[2])},valueFunction:entry=>entry.platform_name,sortFunction:(platName1,platName2,platInfo1,platInfo2)=>{const PREFIX_SORT_ORDER=["FAP","FAPC","FK","FAPU","FAPS"];let result=PREFIX_SORT_ORDER.indexOf(platInfo1.$prefix)-PREFIX_SORT_ORDER.indexOf(platInfo2.$prefix);return 0===result&&(result=platInfo1.$modelNum-platInfo2.$modelNum),result},subcategories:!0,subcategoryValueFunction:function(entry){return entry.$group},subcategoryFormatFunction:function(value){const GROUP_LABEL={l:"Local",o:"Other"},SERIES_LABEL={u:" (Universal series)",s:" (Smart series)"},[wifiGen,series]=splitApPlatformGroupString(value);let result;return result=translate(GROUP_LABEL[series]?GROUP_LABEL[series]:`WiFi ${wifiGen}${SERIES_LABEL[series]||""}`)},subcategorySortFunction:function(subcat1,subcat2){const[wifiGen1,series1]=splitApPlatformGroupString(subcat1),[wifiGen2,series2]=splitApPlatformGroupString(subcat2),SERIES_ORDER=["s","u"];let result=wifiGen2-wifiGen1;return 0===result&&(result=SERIES_ORDER.indexOf(series2)-SERIES_ORDER.indexOf(series1)),result}}},Omniselect.prototype.SOURCES.firewallInterfacesCreate=Object.assign({},Omniselect.prototype.SOURCES.firewallInterfaces,{createNew:!0}),Omniselect.prototype.SOURCES["system.external-resource.address6"]=Object.assign({},Omniselect.prototype.SOURCES["system.external-resource.address"],{name:$.getInfo("IP Address Threat Feed (IPv6)"),aliasFor:["system.external-resource"],data:createExternalResourceSource("address","system.external-resource.address6"),createNew:hasGuiIPv6EnabledForCreateNew("system","external-resource",!0),formatFunction:function(entry,value){return utilIcon.genIcon(entry["css-class"],value+"(IPv6)",null,!1)}}),Omniselect.prototype.SOURCES["system.external-resource.category"]=Object.assign({},Omniselect.prototype.SOURCES["system.external-resource.address"],{name:$.getInfo("FabricConnector::type.external-resource-category"),data:createExternalResourceSource("category","system.external-resource.category"),createNewFunction:function(sourceID){return inlineEditCreate(sourceID,null,{subtype:"third-party.category"})},inlineEditFunction:function(sourceID,entry){return inlineEditCreate(sourceID,Object.assign({},entry,{q_origin_key:entry.name}),{subtype:"third-party.category"})}}),Omniselect.prototype.SOURCES["system.external-resource.domain"]=Object.assign({},Omniselect.prototype.SOURCES["system.external-resource.address"],{name:$.getInfo("FabricConnector::type.external-resource-domain"),data:createExternalResourceSource("domain","system.external-resource.domain"),createNewFunction:function(sourceID){return inlineEditCreate(sourceID,null,{subtype:"third-party.domain"})},inlineEditFunction:function(sourceID,entry){return inlineEditCreate(sourceID,Object.assign({},entry,{q_origin_key:entry.name}),{subtype:"third-party.domain"})}}),Omniselect.prototype.SOURCES["system.external-resource.malware"]=Object.assign({},Omniselect.prototype.SOURCES["system.external-resource.address"],{name:$.getInfo("FabricConnector::type.external-resource-malware"),data:createExternalResourceSource("malware","system.external-resource.malware"),createNewFunction:function(sourceID){return inlineEditCreate(sourceID,null,{subtype:"third-party.malware"})},inlineEditFunction:function(sourceID,entry){return inlineEditCreate(sourceID,Object.assign({},entry,{q_origin_key:entry.name}),{subtype:"third-party.malware"})}}),Omniselect.prototype.SOURCES.wifiCertificates=Object.assign({},Omniselect.prototype.SOURCES.localCertificates,{filterFunction:function(entry){return entry.exists&&entry.is_ssl_server_cert&&!entry.is_deep_inspection_cert}});const switchControllerVLANsInlineEditCreate=(sourceID,entry)=>{const slideBridgeClient=new slideBridge.Client;let url="/ng/interface/fsw/edit";entry&&entry.name&&(url+=`/${encodeURIComponent(entry.name)}`);const source=Omniselect.prototype.SOURCES[sourceID],fortigate=source.fortigate&&source.fortigate.serial;return slideBridgeClient.openRouteAsSlide({uri:makeCSFSourceURI(url,sourceID),searchParams:{fortigate:fortigate}})};createExtensionSource("firewallInterfaces","switchControllerVLANs",{name:$.getInfo("datasource_switch-controller.vlan"),data:function(meta,sourceID){const csfPath=getSourceCSFPath(sourceID);return Promise.all([Omniselect.getSourceData(getCSFProxySourceID("firewallInterfaces",csfPath)),Omniselect.getSourceData(getCSFProxySourceID("system.interface",csfPath)),$.get(makeCSFSourceURI("/api/v2/cmdb/switch-controller.security-policy/captive-portal?format=vlan",sourceID))]).then(function([fwIntfs,sysIntfs,cppResponse]){const flinkIntfName=fSwitchctrl.findDedicatedToFortiSwitchInterface(fwIntfs).name,captivePortalPolicies=cppResponse.results;return fwIntfs.filter(intf=>"vlan"===intf.type&&intf.vlan_interface===flinkIntfName).map(intf=>{const copyIntf=Object.assign({},intf);copyIntf.is_used_by_switchctrl_captive_portal_policy=captivePortalPolicies.some(function(policy){return policy.vlan===intf.name});const systemIntf=sysIntfs.mapping[intf.name];return systemIntf&&["allowaccess","color","ip","q_global_entry","q_name","q_no_edit","q_no_rename","q_path","q_origin_key","q_ref","q_static","q_type"].forEach(propName=>copyIntf[propName]=systemIntf[propName]),copyIntf})})},formatFunction:function(entry,value){return`<f-icon class="${"ftnt-vlan ftnt-desc-color ftnt-color-"+entry.color}"></f-icon><span>${value}</span>`},createNew:createWritePermissionCheck("system","interface"),inlineEdit:createWritePermissionCheck("system","interface"),createNewFunction:switchControllerVLANsInlineEditCreate,inlineEditFunction:switchControllerVLANsInlineEditCreate}),[{id:"devices",useDefaultEntryId:!0},"firewall.address","firewall.address6","firewall.address6-template","firewall.addrgrp","firewall.addrgrp6","firewall.internet-service-name","firewall.internet-service-custom","firewall.multicast-policy","firewall.policy","firewall.policy46","firewall.policy64","firewall.profile-group","firewall.proxy-address","firewall.proxy-addrgrp","firewall.proxy-policy","firewall.schedule.recurring","firewall.schedule.onetime","firewall.schedule.group","firewall.service.custom","firewall.service.group","firewall.shaping-profile","firewall.traffic-class","firewall.vip","firewall.vip46","firewall.vip6","firewall.vip64","firewall.vipgrp","firewall.vipgrp46","firewall.vipgrp6","firewall.vipgrp64",{id:"system.dhcp",useDefaultEntryId:!0},{id:"system.dhcp6",useDefaultEntryId:!0},{id:"system.interface",useDefaultEntryId:!0},{id:"system.ipsec-aggregate",useDefaultEntryId:!0},{id:"system.physical-switch",useDefaultEntryId:!0},{id:"system.pppoe-interface",useDefaultEntryId:!0},"system.replacemsg-group","system.sdn-connector",{id:"system.switch-interface",useDefaultEntryId:!0},{id:"system.virtual-switch",useDefaultEntryId:!0},"system.virtual-wire-pair",{id:"system.vxlan",useDefaultEntryId:!0},{id:"user.fortitoken",useDefaultEntryId:!0},"user.group","user.ldap","user.local","user.peer","user.radius",{id:"vpn.ipsec.phase1-interface",useDefaultEntryId:!0},"wireless-controller.utm-profile",{id:"wireless-controller.vap",useDefaultEntryId:!0},"wireless-controller.wtp-group"].forEach(function(sourceID){let useDefaultEntryId=!1;if("object"==typeof sourceID){const config=sourceID;sourceID=config.id,useDefaultEntryId=config.useDefaultEntryId}const allVdomsSourceID=makeAllVdomsSourceID(sourceID);createExtensionSource(sourceID,allVdomsSourceID,useDefaultEntryId?null:{entryIdKeyFunction:allVdomsEntryIdKeyFn});const newSource=Omniselect.prototype.SOURCES[allVdomsSourceID];newSource.createNewDatasource||(newSource.createNewDatasource=sourceID)}),GLOBAL_VDOM_SOURCES.forEach(function(sourceID){if("object"==typeof sourceID){sourceID=sourceID.id}createExtensionSource(sourceID,"global::"+sourceID,{globalScope:!0})}),FIREWALL_INTERFACE_SUBTYPES.forEach(function(subType){var extensionName=subType.type+"FirewallInterfaces";createExtensionSource("firewallInterfaces",extensionName,{viewTypes:[subType.type]}),subType.global&&createExtensionSource(extensionName,makeGlobalSourceID(extensionName))});const allTypesName="allTypesFirewallInterfaces";return createExtensionSource("firewallInterfaces",allTypesName,{viewTypes:FIREWALL_INTERFACE_SUBTYPES.map(subType=>subType.type)}),createExtensionSource(allTypesName,makeAllVdomsSourceID(allTypesName)),createExtensionSource(allTypesName,makeGlobalSourceID(allTypesName)),createExtensionSource("firewallInterfaces","dummySdwanFirewallInterfaces",{dummySdwan:!0}),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){__webpack_require__(10),__webpack_require__(897),__webpack_require__(898),__webpack_require__(899),__webpack_require__(900),__webpack_require__(901),__webpack_require__(902),__webpack_require__(903)},,,,,,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($){"use strict";var module={};function Interval(begin,end){if(begin>end||isNaN(begin)||isNaN(end))throw new Error("Invalid interval endpoints");this.begin=begin,this.end=end,this.size=Math.abs(this.end-this.begin)}function IntervalList(intervals){if(!(Array.isArray(intervals)&&intervals.every(function(interval){return interval instanceof Interval})))throw new Error("Invalid array of intervals");this.intervals=intervals}Interval.prototype.contains=function(other){return this.begin<=other.begin&&this.end>=other.end},Interval.prototype.overlaps=function(other){return!(other.end<this.begin||other.begin>this.end)},Interval.prototype.equals=function(other){return other.begin===this.begin&&other.end===this.end},Interval.prototype.subtract=function(other){if(!this.overlaps(other))return new IntervalList([new Interval(this.begin,this.end)]);var difference=[];return other.begin>this.begin&&difference.push(new Interval(this.begin,other.begin-1)),other.end<this.end&&difference.push(new Interval(other.end+1,this.end)),new IntervalList(difference)},Interval.prototype.merge=function(other){return this.overlaps(other)?new Interval(Math.min(other.begin,this.begin),Math.max(other.max,this.max)):new Interval(this.begin,this.end)},IntervalList.prototype.subtract=function(other){var arrA=this.sortAndMergeOverlaps().intervals,arrB=other.sortAndMergeOverlaps().intervals;if(arrA.length)for(var intervalA,intervalB,difference,a=0,b=0;a<arrA.length&&b<arrB.length;)intervalA=arrA[a],intervalB=arrB[b],intervalA.overlaps(intervalB)?(difference=intervalA.subtract(intervalB).intervals,arrA=arrA.slice(0,a).concat(difference.concat(arrA.slice(a+1,arrA.length)))):intervalA.begin<intervalB.begin?a++:b++;return new IntervalList(arrA)},IntervalList.prototype.sortAndMergeOverlaps=function(){return new IntervalList(this.intervals.slice().sort(function(a,b){return a.begin-b.begin}).reduce(function(prev,interval){var length=prev.length,copy=new Interval(interval.begin,interval.end);if(length){var prevInterval=prev[length-1];prevInterval.overlaps(copy)?prev[length-1]=prevInterval.merge(copy):prev.push(copy)}else prev.push(copy);return prev},[]))},module.Interval=Interval,module.IntervalList=IntervalList,module.extend_merge=function(target,options,copy_options){var name,src,copy;for(name in null==copy_options&&(copy_options=!1),options)if(options.hasOwnProperty(name)){if(src=target[name],target===(copy=options[name])||void 0===copy)continue;$.isArray(src)?$.isArray(copy)?$.merge(src,copy):src.push(copy):void 0===src?$.isArray(copy)?target[name]=copy_options?$.merge([],copy):copy:target[name]=[copy]:$.isArray(copy)?target[name]=$.merge([src],copy):target[name]=[src,copy]}return target},module.makeSet=function(array,ensureUniqueness){return ensureUniqueness&&(array=Object.keys(array.reduce(function(obj,k){k in obj||(obj[k]=1);return obj},{}))),array.containsSet=function(other,compare){if(this===other)return!0;if(!other)return!1;if(other.toArray&&(other=other.toArray()),!(this instanceof Array&&other instanceof Array))return!1;if(this.length<other.length||0===other.length)return!1;var i,diff,a=this.slice().sort(compare),b=other.slice().sort(compare),j=0,aLength=a.length,bLength=b.length;if(compare&&"function"==typeof compare)for(i=0;i<aLength;++i){if(0===(diff=compare(a[i],b[j]))&&++j,j>=bLength)return!0;if(diff>0)return!1}else for(i=0;i<aLength;++i)if(a[i]===b[j]&&++j,j>=bLength)return!0;return!1},array.equalToSet=function(other,compare){if(this===other)return!0;if(!other)return!1;if(other.toArray&&(other=other.toArray()),!(this instanceof Array&&other instanceof Array))return!1;if(this.length!==other.length)return!1;var i,a=this.slice().sort(compare),b=other.slice().sort(compare),c=a.length;if(compare&&"function"==typeof compare){for(i=0;i<c;++i)if(0!==compare(a[i],b[i]))return!1}else for(i=0;i<c;++i)if(a[i]!==b[i])return!1;return!0},array.intersection=function(other,compare){if(this===other)return other;if(!other)return null;if(other.toArray&&(other=other.toArray()),!(this instanceof Array&&other instanceof Array))return null;var compareResult,a=this.slice().sort(compare),b=other.slice().sort(compare),ai=0,bi=0,aLength=a.length,bLength=b.length,intersection=[];if(compare&&"function"==typeof compare)for(;ai<aLength&&bi<bLength;)(compareResult=compare(a[ai],b[bi]))<0?ai++:compareResult>0?bi++:(intersection.push(a[ai]),ai++,bi++);else for(;ai<aLength&&bi<bLength;)a[ai]<b[bi]?ai++:a[ai]>b[bi]?bi++:(intersection.push(a[ai]),ai++,bi++);return intersection},array.difference=function(other,compare){if(this===other)return other;if(!other)return null;if(other.toArray&&(other=other.toArray()),!(this instanceof Array&&other instanceof Array))return null;var compareResult,a=this.slice().sort(compare),b=other.slice().sort(compare),ai=0,bi=0,aLength=a.length,bLength=b.length,missing=[];if(compare&&"function"==typeof compare)for(;ai<aLength&&bi<bLength;)(compareResult=compare(a[ai],b[bi]))<0?(missing.push(a[ai]),ai++):compareResult>0?bi++:(ai++,bi++);else for(;ai<aLength&&bi<bLength;)a[ai]<b[bi]?(missing.push(a[ai]),ai++):a[ai]>b[bi]?bi++:(ai++,bi++);for(;ai<aLength;)missing.push(a[ai]),ai++;return missing},array},module.is_valid=function(p_selector,selector){var valid=!0;return $(p_selector).find(selector).each(function(){!1===$("form").validate().element(this)&&(valid=!1)}),valid},module.stable_string=function(target){return JSON.stringify(Object.keys(target).sort().map(function(key){return[key,target[key]]}))};var simpleForEach=module.forEach=function(obj,iterator,context){var key;for(key in obj)obj.hasOwnProperty(key)&&iterator.call(context,obj[key],key)};return module.lockCurrentProperties=function(obj){if(Object.defineProperty)try{simpleForEach(obj,function(v,k){Object.defineProperty(obj,k,{value:v,writable:!1,configurable:!1})})}catch(ex){}},module.pick=function(obj,keys){for(var new_obj={},i=0,len=keys.length;i<len;++i){var prop=keys[i];new_obj[prop]=obj[prop]}return new_obj},module.values=function(obj){return Object.keys(obj).map(function(key){return obj[key]})},module.unique=function(key){var exists={};return function(entry){var val=entry[key];return!(val in exists)&&(exists[val]=!0,!0)}},module.nestedGet=((obj,keys,separator=".")=>{const get=(current,parts)=>{if(!current)return current;const key=parts[0];return parts.length>1?get(current[key],parts.slice(1)):current[key]};return get(obj,keys.split(separator))}),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(225),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,CMDB,Notify){"use strict";const AP_NAMES_URL="/api/v2/monitor/wifi/ap-names",AP_META_URL="/api/v2/monitor/wifi/meta",LOCAL_RADIO_PREFIX_LENGTH=6,LOCAL_SUFFIX="WIFI0",LOCAL_RADIO_LABEL=$.getInfo("Local WiFi Radio");let namesPromise,metaPromise;return{metaDataFactory:function(){return null==namesPromise&&(namesPromise=$.getJSON(AP_NAMES_URL).then(function(namesResult){var maps={fortiapPrefixesMap:{},fortiapPlatformsMap:{}};return(maps=namesResult.results.reduce(function(mapEntries,nameEntry){var prefix,platformsMap,platform=nameEntry.platform;return"FWF"!==platform&&(prefix=nameEntry.prefix,mapEntries.fortiapPrefixesMap[prefix]={model:nameEntry.model,platform:platform},((platformsMap=mapEntries.fortiapPlatformsMap)[platform]=platformsMap[platform]||[]).push(nameEntry.model)),mapEntries},maps)).fortiapPrefixesMap.FWF={model:LOCAL_RADIO_LABEL,platform:"FWF"},maps.fortiapPlatformsMap.FWF=[LOCAL_RADIO_LABEL],maps},CMDB.notify_failure_message("Failed to retrieve FortiAP model names",Notify.LEVEL.WARNING))),null==metaPromise&&(metaPromise=$.getJSON(AP_META_URL).then(function(metaResult){return{bandSpectrumMap:metaResult.results.band_spectrum_map,signalStrengthMap:metaResult.results.signal_strength_scale,sizeMap:{wtpTotalSize:metaResult.results.wtp_total_size,wtpNormalSize:metaResult.results.wtp_normal_size||metaResult.results.wtp_total_size}}},CMDB.notify_failure_message("Failed to retrieve wireless metadata",Notify.LEVEL.WARNING))),Promise.all([namesPromise,metaPromise]).then(function(results){var namesResult=results.shift(),metaResult=results.shift(),fortiapPrefixesMap=namesResult.fortiapPrefixesMap,fortiapPlatformsMap=namesResult.fortiapPlatformsMap,bandSpectrumMap=metaResult.bandSpectrumMap,signalStrengthMap=metaResult.signalStrengthMap,sizeMap=metaResult.sizeMap;return{wtpPlatformTypeFromSerial:function(serial){return getModelAttribute(serial,"platform")},wtpModelFromSerial:function(serial){return getModelAttribute(serial,"model")},wtpModelsForPlatform:function(platform){return fortiapPlatformsMap&&fortiapPlatformsMap[platform]},signalStrengthToScore:function(signalStrength){var result=signalStrengthMap&&signalStrengthMap.find(function(signalEntry){return signalStrength>=signalEntry.lower_bound});return result&&result.scale_value||1},getFrequencyForBand:function(band){return bandSpectrumMap&&bandSpectrumMap[band]},wtpTotalSize:function(){return sizeMap.wtpTotalSize},wtpNormalSize:function(){return sizeMap.wtpNormalSize}};function getModelAttribute(serial,attribute){var fullSerial,model=fortiapPrefixesMap&&fortiapPrefixesMap[(fullSerial=serial,"string"==typeof fullSerial?fullSerial.substring(0,6):"")];return model||0!==serial.indexOf("FW")||(model=fortiapPrefixesMap.FWF),model&&model[attribute]}})},convertSerialToLocal:function(serial){return`${serial.substring(0,LOCAL_RADIO_PREFIX_LENGTH)}-${LOCAL_SUFFIX}`},isWtpIdLocal:function(wtpId){return wtpId&&wtpId.substring(LOCAL_RADIO_PREFIX_LENGTH+1)===LOCAL_SUFFIX},technologyFromBand:function(band){return["802.11ax","802.11ac","802.11n","802.11g","802.11b","802.11a"].find(tech=>band.startsWith(tech))}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(0),__webpack_require__(31),__webpack_require__(82)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,BUILD,fDom,fFortiguard){"use strict";var BUILD_SYMBOLS=BUILD.SYMBOLS;function QuarantineSetting(config){this._min=config.min,this._max=config.max,this.key=config.key,this.lang_key=config.lang_key}QuarantineSetting.prototype.get_min=function(model){return"m"===this.key&&(model.d>0||model.h>0)?0:this._min},QuarantineSetting.prototype.get_max=function(){return this._max},QuarantineSetting.prototype.pattern=new RegExp(/^\d+$/);var ips_common={IPS_ATTR_ID_MAX:BUILD_SYMBOLS.IPS_ATTR_ID_MAX,IPS_ATTR_ID_ALL:BUILD_SYMBOLS.IPS_ATTR_ID_ALL,IPS_ATTR_NONE:BUILD_SYMBOLS.IPS_ATTR_NONE,IPS_ATTR_OS:BUILD_SYMBOLS.IPS_ATTR_OS,IPS_ATTR_APP:BUILD_SYMBOLS.IPS_ATTR_APP,IPS_ATTR_PROTOCOL:BUILD_SYMBOLS.IPS_ATTR_PROTOCOL,IPS_ATTR_SEVERITY:BUILD_SYMBOLS.IPS_ATTR_SEVERITY,IPS_ATTR_LOCATION:BUILD_SYMBOLS.IPS_ATTR_LOCATION,IPS_ATTR_APP_CAT:BUILD_SYMBOLS.IPS_ATTR_APP_CAT,IPS_ATTR_APP_SUB_CAT:BUILD_SYMBOLS.IPS_ATTR_APP_SUB_CAT,IPS_ATTR_VENDOR:BUILD_SYMBOLS.IPS_ATTR_VENDOR,IPS_ATTR_TECHNOLOGY:BUILD_SYMBOLS.IPS_ATTR_TECHNOLOGY,IPS_ATTR_BEHAVIOR:BUILD_SYMBOLS.IPS_ATTR_BEHAVIOR,IPS_ATTR_POPULARITY:BUILD_SYMBOLS.IPS_ATTR_POPULARITY,IPS_ATTR_MAX:BUILD_SYMBOLS.IPS_ATTR_MAX,ATTR_TYPES_ENUM:["IPS_ATTR_NONE","IPS_ATTR_OS","IPS_ATTR_APP","IPS_ATTR_PROTOCOL","IPS_ATTR_SEVERITY","IPS_ATTR_LOCATION","IPS_ATTR_APP_CAT","IPS_ATTR_APP_SUB_CAT","IPS_ATTR_VENDOR","IPS_ATTR_TECHNOLOGY","IPS_ATTR_BEHAVIOR","IPS_ATTR_POPULARITY"],POPULARITY_MAX:5,FMETA_TYPE_INTEGER:1,FMETA_TYPE_BITMAP:2,FMETA_TYPE_ENUM:3,FMETA_TYPE_STRING:4,attr_map:{},cat_map:{},INDUSTRIAL_ID:347,QUARANTINE_SETTINGS:{days:new QuarantineSetting({min:0,max:364,key:"d",lang_key:"quar_expire_day"}),hours:new QuarantineSetting({min:0,max:23,key:"h",lang_key:"quar_expire_hour"}),minutes:new QuarantineSetting({min:1,max:59,key:"m",lang_key:"quar_expire_min"})},DEFAULT_QUARANTINE_STRING:"5m",QUARANTINE_REGEX:/(\d+)([hmd])/g,EMPTY_QUARANTINE_MODEL:{d:0,h:0,m:0},vulnid_format_elem:function(entry,column){var prefix=fFortiguard.getLink(fFortiguard.LINK_TYPE.FCTVULN),id=entry[column.id];if(prefix){var link=`${prefix}/${id}`;return fDom.elem("a",{className:"sig_name",target:"_blank",rel:"noopener noreferrer",textContent:id,href:link})}return document.createTextNode(id)},vulnid_format_fn:function(name,row){var elem=ips_common.vulnid_format_elem(row,{id:name});return elem?elem.outerHTML||elem.textContent:""},ips_get_start_id_for_type:function(type){return(type-1)*this.IPS_ATTR_ID_MAX},ips_get_attr_map_id:function(type,id){return(id=Number(id))===ips_common.IPS_ATTR_ID_ALL?0:this.ips_get_start_id_for_type(type)+id+1},ips_get_type_from_id:function(id){id=Number(id);for(var type=this.IPS_ATTR_NONE,attr_type=0;attr_type<this.ATTR_TYPES_ENUM.length;++attr_type){if(id<this.ips_get_start_id_for_type(attr_type))break;type=attr_type}return type},ips_get_id_from_mapped:function(type,id){return 0===(id=Number(id))?ips_common.IPS_ATTR_ID_ALL:id-1-ips_common.ips_get_start_id_for_type(type)},ips_get_attr_string:function(type,id){return ips_common.attr_map[type][ips_common.ips_get_attr_map_id(type,id)]},ips_get_attr_relative_id:function(type,text){return ips_common.ips_get_id_from_mapped(type,ips_common.attr_map[type][text])},get_quarantine_time_format:function(expires){var str_key,lang_key,str=expires,settings_keys=Object.keys(this.QUARANTINE_SETTINGS),settings=this.QUARANTINE_SETTINGS;return settings_keys.forEach(function(k){str_key=settings[k].key,lang_key=settings[k].lang_key,str=str.replace(str_key,` ${$.getInfo(lang_key)} `)}),`${$.getInfo("quarantine_expire")} ${str}`},format_expires:function(expires){var val,quarantine_string="",settings=ips_common.QUARANTINE_SETTINGS;return Object.keys(settings).forEach(function(k){(!(val=expires[settings[k].key])||val<settings[k].get_min(expires)||val>settings[k].get_max())&&(val=settings[k].get_min(expires)),val>0&&(quarantine_string+=val+settings[k].key)}),quarantine_string},gen_expiry_object:function(expiry_string,obj){var match,regex=ips_common.QUARANTINE_REGEX;for(regex.lastIndex=0,$.extend(obj,ips_common.EMPTY_QUARANTINE_MODEL);null!==(match=regex.exec(expiry_string));)obj[match[2]]=+match[1]},quarantine_expiry_validator:function(){var val,min,max,error_ctxt,settings_keys=Object.keys(ips_common.QUARANTINE_SETTINGS),obj=this,settings=ips_common.QUARANTINE_SETTINGS,valid=!0,msg="",template=$.getInfo("quarantine_expiry_range_error");return settings_keys.forEach(function(k){min=settings[k].get_min(obj),max=settings[k].get_max(),(void 0===(val=obj[settings[k].key])||"number"!=typeof val||val<min||val>max)&&(valid=!1,error_ctxt={duration:$.getInfo(k),min:min.toString(),max:max.toString()},msg+=fDom.renderTemplate(template,error_ctxt),msg+="<br>")}),valid||msg},load_attr_map:function(res){var i,len=res.length;for(i=0;i<len;++i){var obj=res[i],id=obj.id,type=ips_common.ips_get_type_from_id(id);ips_common.attr_map[type]||(ips_common.attr_map[type]={}),ips_common.attr_map[type][obj.id]=obj.name,ips_common.attr_map[type][obj.name]=obj.id}i=0;for(var behavior_attr=ips_common.IPS_ATTR_BEHAVIOR,unused_behavior_id=ips_common.ips_get_start_id_for_type(behavior_attr)+1;i<ips_common.IPS_ATTR_ID_MAX&&ips_common.attr_map[behavior_attr].hasOwnProperty(unused_behavior_id);)unused_behavior_id++,i++;i<ips_common.IPS_ATTR_ID_MAX&&(ips_common.attr_map[behavior_attr][unused_behavior_id]="None");var pop_attr=ips_common.IPS_ATTR_POPULARITY,pop_id=ips_common.ips_get_start_id_for_type(pop_attr)+1;for(ips_common.attr_map[pop_attr]={},i=0;i<ips_common.POPULARITY_MAX;i++)ips_common.attr_map[pop_attr][pop_id]=String(ips_common.POPULARITY_MAX-i),pop_id++},populate_category:function(type){for(var _id=0;_id<ips_common.IPS_ATTR_ID_MAX;++_id){var val=ips_common.ips_get_attr_string(type,_id);ips_common.cat_map.hasOwnProperty(type)||(ips_common.cat_map[type]={}),val&&(ips_common.cat_map[type][val]=_id)}},build_metadata_map:function(result){return result.reduce(function(previousMap,resource){var obj={name:resource.name,id:resource.id,values:{},type:resource.type};return resource.values.forEach(function(val){obj.values[val.subid]=val.subname}),previousMap[resource.id]=obj,previousMap[resource.name]=obj,previousMap},{})},add_metadata_attrs:function(entry,metadata_map){(entry.metadata||[]).forEach(function(meta){var value,values,metadataInfo=metadata_map[meta.metaid]||{};if(metadataInfo.type===ips_common.FMETA_TYPE_ENUM||metadataInfo.type===ips_common.FMETA_TYPE_STRING)value=metadataInfo.values[meta.valueid];else if(metadataInfo.type===ips_common.FMETA_TYPE_INTEGER)value=meta.valueid;else if(metadataInfo.type===ips_common.FMETA_TYPE_BITMAP)for(var bitMask in values=[],metadataInfo.values)metadataInfo.values.hasOwnProperty(bitMask)&&meta.valueid&bitMask&&values.push(metadataInfo.values[bitMask]);value&&(values=entry[metadataInfo.name]||[]).push(value),entry[metadataInfo.name]=values})},log_cve_format_elem:function(row,column){var value=row[column.id],prefix=fFortiguard.getLink(fFortiguard.LINK_TYPE.CVE_LOOKUP);return value?fDom.elem("div",{className:"flex-wrap cveid"},{children:value.split(" ").map(function(cveid){var children=[document.createTextNode(cveid)];prefix&&(children=[fDom.elem("a",{href:prefix+cveid,target:"_blank",rel:"noopener noreferrer",textContent:cveid})]);return fDom.elem("div",{className:"cell-collection-member"},{children:children})})}):null},log_cve_format_fn:function(name,row){var elem=ips_common.log_cve_format_elem(row,{id:name});return elem?elem.outerHTML:""}};return ips_common}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";module.exports={DEVICE_FACTORY:Symbol("DEVICE_FACTORY"),DEVICE_CONSTRUCTOR:Symbol("DEVICE_CONSTRUCTOR"),DEVICE_DEPENDENCIES:Symbol("DEVICE_DEPENDENCIES"),DEVICE_INSTANCE:Symbol("DEVICE_INSTANCE"),SECURITY_RATING_DEVICE_INSTANCE:Symbol("SECURITY_RATING_DEVICE_INSTANCE"),SERIALIZE_TO_TOPOLOGY_REPORT:Symbol("SERIALIZE_TO_TOPOLOGY_REPORT"),DESERIALIZE_FROM_TOPOLOGY_REPORT:Symbol("DESERIALIZE_FROM_TOPOLOGY_REPORT"),AUDIT_ID:Symbol("AUDIT_ID")}},,,,function(module,exports,__webpack_require__){"use strict";const{SERIALIZE_TO_TOPOLOGY_REPORT:SERIALIZE_TO_TOPOLOGY_REPORT,DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=__webpack_require__(67);class BaseCsfDevice{constructor(csfEntry={},id="",parentFortigateId=""){if(this.constructor===BaseCsfDevice)throw new Error("Cannot instantiate abstract class BaseCsfDevice");this.id=id,this.parentFortigateId=parentFortigateId,this.csfEntry=csfEntry,this.interfaces=[],this.interfaceMap={}}getIconClass(){throw new Error("Abstract base class method must be overridden")}getLabel(){throw new Error("Abstract base class method must be overridden")}getLabelClass(){return""}isAuthorized(){throw new Error("Abstract base class method must be overridden")}requiresAuthorizationDecision(){throw new Error("Abstract base class method must be overridden")}[SERIALIZE_TO_TOPOLOGY_REPORT](){const serialized=JSON.parse(JSON.stringify(this));return delete serialized.csfEntry,delete serialized.interfaces,delete serialized.interfaceMap,serialized}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData){const instance=new this;return Object.assign(instance,instanceJSONData),instance}}module.exports=BaseCsfDevice},,,,function(module,exports,__webpack_require__){"use strict";module.exports={AppAwareEntryMixin:__webpack_require__(769),CompromisedHostEntryMixin:__webpack_require__(770),CountryEntryMixin:__webpack_require__(771),DestinationEntryMixin:__webpack_require__(772),DetailedDeviceEntryMixin:__webpack_require__(773),DeviceEntryMixin:__webpack_require__(774),EntryMixin:__webpack_require__(775),OwnerEntryMixin:__webpack_require__(776),TrafficEntryMixin:__webpack_require__(777)}},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(242),__webpack_require__(461),__webpack_require__(27),__webpack_require__(63),__webpack_require__(49),__webpack_require__(79),__webpack_require__(30),__webpack_require__(136)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,FortiSwitch,FortiAP,notify,fwebWifi,fPersist,fFirmware,fLog){function TaskQueue(injector,params){if(injector.injectMarked(this),!Array.isArray(params.tasks))throw new Error('"tasks" should be defined as an array for TaskQueue');if(this.tasks=params.tasks.slice(),!Number.isInteger(params.concurrency)||params.concurrency<=0)throw new Error('"concurrency" should be defined as a positive integer for TaskQueue');if(this.concurrency=Math.max(Math.min(this.tasks.length,params.concurrency),1),"function"!=typeof params.callback)throw new Error('"callback" should be defined as a function for TaskQueue');this.callback=params.callback,this.quitOnError=!!params.quitOnError}function AsyncTask(params){if("function"!=typeof params.run)throw new Error('"run" should be defined as a function for AsyncTask');this.run=params.run}function UpgradableExtensionDeviceList(injector,slide,$scope){injector.injectMarked(this,{$scope:$scope}),this.loading=!0,this.refreshing=!0,this.firmwareSources=[{name:"FortiGuard",value:"fortiguard"},{name:"Upload",value:"upload"}],this.firmwareSource=this.firmwareSources[0].value,this.disableFortiGuardUpgrade=!1,this.selectedFile=null,this._initialTopology=null,this.selectedFirmware=null,this.fileError=null,this.deviceTopology=null,this._deviceClass=null,this._deviceDatasource=null,this.downloadStatus={},this.uploadStatus={},this.upgradeQueue=null,this.QUEUE_HANDLER_TYPE={DOWNLOAD:"download",TASK_QUEUE:"taskQueue"},this.upgradeStatus=this.UPGRADE_STATUS.NOT_STARTED,this.devicesToDowngrade={},this.matchedDeviceCount=0,this.toUpgradeCount=0;this.concurrentUpgradeLimit=5,this._wifiMetaData={},this._validModels={}}return TaskQueue.prototype.run=inject.mark(function($timeout){return function(){for(var completed=0,failed=0,total=this.tasks.length,taskQueue=this,errorInQueue=!1,idx=0;idx<taskQueue.concurrency;idx++)$timeout(next,0);function next(){if(0!==taskQueue.tasks.length){var task=taskQueue.tasks.shift(),taskCallbackCalled=!1;try{task.run(function(error){taskCallbackCalled||(taskCallbackCalled=!0,error?(errorInQueue=!0,failed++,task.quitOnError?taskQueue.callback(error):next()):(completed++,taskQueue.quitOnError&&errorInQueue||next()))})}catch(error){if(taskCallbackCalled)return;fLog.error("Exception: "+error),taskCallbackCalled=!0,errorInQueue=!0,failed++,task.quitOnError?taskQueue.callback(error):next()}}else completed+failed===total&&taskQueue.callback(null,{completed:completed,failed:failed})}}}),UpgradableExtensionDeviceList.prototype.DEVICE_TYPE_TO_CLASS={FORTI_SWITCH:FortiSwitch,FORTI_AP:FortiAP},UpgradableExtensionDeviceList.prototype.DEVICE_TYPE_TO_MAPPING={FORTI_SWITCH:"fortiswitchMapping",FORTI_AP:"fortiapMapping"},UpgradableExtensionDeviceList.prototype.UPGRADE_STATUS={NOT_STARTED:"notStarted",IN_PROGRESS:"inProgress",SUCCESS:"success",ERROR:"error"},UpgradableExtensionDeviceList.prototype.DEVICE_DATASOURCE={FORTI_AP:"csfFortiAPs",FORTI_SWITCH:"csfFortiSwitches"},UpgradableExtensionDeviceList.prototype.DOWNLOAD_STATUS={NOT_STARTED:"notStarted",IN_PROGRESS:"inProgress",ERROR:"error",SUCCESS:"success"},UpgradableExtensionDeviceList.prototype.UPLOAD_STATUS={NOT_STARTED:"notStarted",IN_PROGRESS:"inProgress",ERROR:"error",SUCCESS:"success"},UpgradableExtensionDeviceList.prototype.$onInit=inject.mark(function($scope,recommendedFirmware,csfTopology,$q,$timeout,$http,lang,state){return function(){this._deviceClass=this.DEVICE_TYPE_TO_CLASS[this.deviceType],this._deviceDatasource=this.DEVICE_DATASOURCE[this.deviceType],this.operatingVdom=state.getOperatingVDOM();var preLoadPromises={recommendedFirmwareLoad:recommendedFirmware.load(recommendedFirmware.DEVICE_TYPES[this.deviceType],!0),csfTopologyBuild:csfTopology.buildIfNecessary()};"FORTI_AP"===this.deviceType&&(preLoadPromises.wifiMetaData=fwebWifi.metaDataFactory()),$q.all(preLoadPromises).then(function(preLoadResults){this._buildDeviceTopology(preLoadResults),$scope.$watch("$ctrl.firmwareSource",function(source){this.devicesToDowngrade={},"upload"===source&&this.selectedFirmware?(this._filterDeviceWithSelectedFirmware(),this._updateHasDowngrade()):"fortiguard"===source&&this._filterDeviceWithRecommendedFirmware()}.bind(this)),$scope.$watch("$ctrl.selectedFirmware",function(firmware,oldFirmware){firmware!==oldFirmware&&firmware&&(this.devicesToDowngrade={},this._filterDeviceWithSelectedFirmware(),this._updateHasDowngrade())}.bind(this)),$scope.$watch("$ctrl.deviceTopology",function(){this.refreshing=!0,$timeout(function(){this.refreshing=!1}.bind(this))}.bind(this)),$scope.$watch(function(){var toUpgradeCount=0,topology=Object.assign({},this.deviceTopology);return"upload"!==this.firmwareSource||this.selectedFirmware&&this.matchedDeviceCount?(Object.keys(topology).forEach(function(serial){Object.keys(topology[serial].models).forEach(function(model){toUpgradeCount+=topology[serial].models[model].reduce(function(count,dev){return count+=dev.willUpgrade&&dev.canUpgrade},0)})}),toUpgradeCount):0}.bind(this),function(count){this.toUpgradeCount=count}.bind(this)),this.refreshing=!1,this.loading=!1}.bind(this),function(){notify.post(lang("Failed to collect necessary data. Please try again later."),notify.LEVEL.ERROR),this.slideController.slide.close()}.bind(this))}}),UpgradableExtensionDeviceList.prototype._createDeviceTopologyMeta=inject.mark(function(csfTopology){return function(){var deviceMapping={},fortigates={},mappingType=this.DEVICE_TYPE_TO_MAPPING[this.deviceType];return csfTopology.fortigates.forEach(function(fortigate){Object.assign(deviceMapping,fortigate[mappingType]),fortigates[fortigate.serial]={label:fortigate.getLabel()}}),{deviceMapping:deviceMapping,fortigates:fortigates}}}),UpgradableExtensionDeviceList.prototype._buildDeviceTopology=inject.mark(function($injector,csfTopology){return function(preLoadResults){var deviceList=this,deviceTopology={},metaData=this._createDeviceTopologyMeta(),deviceMapping=metaData.deviceMapping,fortigates=metaData.fortigates,wifiMetaData=preLoadResults.wifiMetaData;this._wifiMetaData=wifiMetaData,this.devices.forEach(function(device){if(deviceMapping[device.serial]){var fgtSerial=deviceMapping[device.serial].parentFortigateId,modelFormatter=null;deviceList._deviceClass===deviceList.DEVICE_TYPE_TO_CLASS.FORTI_AP&&(modelFormatter=function(){return wifiMetaData.wtpModelFromSerial(this.getSerial())});var entry={willUpgrade:!0,canUpgrade:!0,isDowngradeFirmware:!1,device:$injector.instantiate(deviceList._deviceClass,{params:Object.assign({},device,{modelFormatter:modelFormatter})})},model=entry.device.getModel();deviceTopology[fgtSerial]?deviceTopology[fgtSerial].models[model]?deviceTopology[fgtSerial].models[model].push(entry):(deviceTopology[fgtSerial].models[model]=[entry],this.downloadStatus[fgtSerial][model]=this.DOWNLOAD_STATUS.NOT_STARTED):(deviceTopology[fgtSerial]={isCurrentFortiGate:fgtSerial===csfTopology.thisFortigate.serial,models:{},label:fortigates[fgtSerial].label},deviceTopology[fgtSerial].models[model]=[entry],this.downloadStatus[fgtSerial]={},this.downloadStatus[fgtSerial][model]=this.DOWNLOAD_STATUS.NOT_STARTED,this.uploadStatus[fgtSerial]={progress:0,status:this.UPLOAD_STATUS.NOT_STARTED})}else fLog.error("Device "+device.serial+" not found in csf extension device topology")}.bind(this)),this.deviceTopology=this._initialTopology=deviceTopology}}),UpgradableExtensionDeviceList.prototype.noUpgradableModel=function(fortigate){var modelNames=Object.keys(fortigate.models);return!modelNames.length||modelNames.every(function(model){return this.noUpgradableDevice(fortigate.models[model])}.bind(this))},UpgradableExtensionDeviceList.prototype.noUpgradableDevice=function(devices){return!devices.length||devices.every(function(dev){return!dev.canUpgrade})},UpgradableExtensionDeviceList.prototype.showDevices=function(devices){return"fortiguard"===this.firmwareSource?devices.length>0:!this.noUpgradableDevice(devices)},UpgradableExtensionDeviceList.prototype._filterDeviceWithRecommendedFirmware=function(){var topology=Object.assign({},this._initialTopology),fortiguardUpgradeCount=0;Object.keys(topology).forEach(function(serial){Object.keys(topology[serial].models).forEach(function(model){topology[serial].models[model].forEach(function(dev){dev.canUpgrade=dev.willUpgrade=dev.device.isRecommendedFirmwareAvailable()&&!dev.device.isFirmwareUpToDate(),dev.isDowngradeFirmware=!1,dev.canUpgrade&&fortiguardUpgradeCount++})})}),this.deviceTopology=topology,fortiguardUpgradeCount||(this.disableFortiGuardUpgrade=!0,this.firmwareSource="upload")},UpgradableExtensionDeviceList.prototype._filterDeviceWithSelectedFirmware=function(){var topology=Object.assign({},this._initialTopology);this.matchedDeviceCount=0,Object.keys(topology).forEach(function(serial){Object.keys(topology[serial].models).forEach(function(model){topology[serial].models[model].forEach(function(dev){dev.willUpgrade=dev.canUpgrade=model===this.selectedFirmware.model,dev.willUpgrade&&(this.matchedDeviceCount++,dev.isDowngradeFirmware=!dev.device.isUpgrade(this.selectedFirmware),dev.isDowngradeFirmware&&(this.devicesToDowngrade[serial]?this.devicesToDowngrade[serial].push(dev):this.devicesToDowngrade[serial]=[dev]))}.bind(this))}.bind(this))}.bind(this)),this.deviceTopology=topology},UpgradableExtensionDeviceList.prototype._updateHasDowngrade=function(){this.hasDowngrade=this.devicesToDowngrade&&Object.keys(this.devicesToDowngrade).length},UpgradableExtensionDeviceList.prototype.numberOfColumns=function(){var count=1;return"fortiguard"===this.firmwareSource&&this.upgradeStatus===this.UPGRADE_STATUS.NOT_STARTED&&count++,count},UpgradableExtensionDeviceList.prototype.countUpgrade=function(){var topology=this.deviceTopology,count=0;return Object.keys(topology).forEach(function(serial){Object.keys(topology[serial].models).forEach(function(model){var willUpgradeList=topology[serial].models[model].filter(function(dev){return dev.willUpgrade&&dev.canUpgrade});count+=willUpgradeList.length})}),count},UpgradableExtensionDeviceList.prototype.getDevicesToUpgrade=function(){var topology=Object.assign({},this.deviceTopology);return Object.keys(topology).forEach(function(serial){Object.keys(topology[serial].models).forEach(function(model){topology[serial].models[model]=topology[serial].models[model].filter(function(dev){return dev.willUpgrade&&dev.canUpgrade})})}),topology},UpgradableExtensionDeviceList.prototype._buildUpgradeQueue=function(){this.upgradeQueue=[],Object.keys(this.deviceTopology).forEach(function(serial){Object.keys(this.deviceTopology[serial].models||{}).forEach(function(model){var devices=this.deviceTopology[serial].models[model],upgradeTasks=[];devices.length&&(this.upgradeQueue.push({type:this.QUEUE_HANDLER_TYPE.DOWNLOAD,model:model,device:devices[0].device,fortigate:serial,handler:devices[0].device.downloadFirmware.bind(devices[0].device)}),devices.forEach(function(dev){upgradeTasks.push({device:dev.device,handler:dev.device.upgrade.bind(dev.device),monitor:dev.device.monitorUpgradeProgress.bind(dev.device),onFinish:dev.device.restart.bind(dev.device)})}),this.upgradeQueue.push({type:this.QUEUE_HANDLER_TYPE.TASK_QUEUE,upgradeTasks:upgradeTasks}))}.bind(this))}.bind(this))},UpgradableExtensionDeviceList.prototype._runFtgdUpgrades=inject.mark(function($q,$injector){return function(onUpgradeFinish){var upgradeQueue=this.upgradeQueue,devList=this,currentIdx=0,completed=0,failed=0;!function nextUpgrade(){if(upgradeQueue.length===currentIdx)return fLog.info("Upgrade finished with "+completed+" completed and "+failed+" failed"),void onUpgradeFinish();var currentJob=upgradeQueue[currentIdx];if(currentJob.type===devList.QUEUE_HANDLER_TYPE.DOWNLOAD)devList.downloadStatus[currentJob.fortigate][currentJob.model]=devList.DOWNLOAD_STATUS.IN_PROGRESS,currentJob.handler().then(function(){devList.downloadStatus[currentJob.fortigate][currentJob.model]=devList.DOWNLOAD_STATUS.SUCCESS,currentIdx++,completed++,nextUpgrade()},function(errorMessage){devList.downloadStatus[currentJob.fortigate][currentJob.model]=devList.DOWNLOAD_STATUS.ERROR,failed++,upgradeQueue[++currentIdx].upgradeTasks.forEach(function(task){failed++,task.device.upgradeErrorMessage=errorMessage,task.device.setUpgradeStatus(task.device.UPGRADE_STATUS.ERROR)}),currentIdx++,nextUpgrade()});else{var taskQueue=$injector.instantiate(TaskQueue,{params:{tasks:currentJob.upgradeTasks.map(function(upgradeTask){return new AsyncTask({run:function(callback){upgradeTask.handler().then(function(){upgradeTask.monitor(function(){upgradeTask.onFinish(),callback()},function(errorMessage){upgradeTask.device.upgradeErrorMessage=errorMessage,upgradeTask.device.setUpgradeStatus(upgradeTask.device.UPGRADE_STATUS.ERROR),callback(errorMessage)})},function(){upgradeTask.device.upgradeErrorMessage=upgradeTask.device.ERROR_MESSAGE.PUSH_FIRMWARE,upgradeTask.device.setUpgradeStatus(upgradeTask.device.UPGRADE_STATUS.ERROR),callback(!0)})}})}),concurrency:devList.concurrentUpgradeLimit,callback:function(error,taskStats){error?fLog.error("Task queue failed for: "+error):(completed+=taskStats.completed,failed+=taskStats.failed),currentIdx++,nextUpgrade()}}});taskQueue.run()}}()}}),UpgradableExtensionDeviceList.prototype._uploadFirmware=inject.mark(function($q,$scope){return function(fgtSerial,deviceSerials){var deferred=$q.defer(),formData=new FormData,xhr=new XMLHttpRequest,devList=this;this.uploadStatus[fgtSerial].status=this.UPLOAD_STATUS.IN_PROGRESS;var onError=function(error){$scope.$apply(function(){devList.uploadStatus[fgtSerial].status=devList.UPLOAD_STATUS.ERROR,deferred.reject(error)})};xhr.addEventListener("load",function(){xhr.readyState===XMLHttpRequest.DONE&&200===xhr.status?$scope.$apply(function(){devList.uploadStatus[fgtSerial].status=devList.UPLOAD_STATUS.SUCCESS,deferred.resolve(JSON.parse(xhr.response).results)}):onError()}),xhr.addEventListener("error",function(){onError()}),xhr.upload.addEventListener("load",function(){$scope.$apply(function(){devList.uploadStatus[fgtSerial].progress=100})}),xhr.upload.addEventListener("progress",function(event){event.lengthComputable&&$scope.$apply(function(){devList.uploadStatus[fgtSerial].progress=event.loaded/event.total*100})});var uri=this._deviceClass.prototype.URLS.UPLOAD+"?serials="+JSON.stringify(deviceSerials);return xhr.open("POST",uri),xhr.setRequestHeader("X-CSRFTOKEN",fPersist.getCsrfToken()),formData.append("upload_file",this.selectedFile),xhr.send(formData),deferred.promise}}),UpgradableExtensionDeviceList.prototype._monitorAll=function(fgtSerial,model,pushResults,onUpgradeFinish){var devices=this.deviceTopology[fgtSerial].models[model],count=devices.length;function checkFinish(){0===--count&&onUpgradeFinish()}devices.forEach(function(dev){var device=dev.device;pushResults[device.getSerial()]?device.monitorUpgradeProgress(function(){device.restart(),checkFinish()},function(errorMessage){device.upgradeErrorMessage=errorMessage,device.setUpgradeStatus(device.UPGRADE_STATUS.ERROR),checkFinish()}):(device.upgradeErrorMessage=device.ERROR_MESSAGE.PUSH_FIRMWARE,device.setUpgradeStatus(device.UPGRADE_STATUS.ERROR),checkFinish())})},UpgradableExtensionDeviceList.prototype._upgradeWithSelectedFirmware=function(onUpgradeFinish){Object.keys(this.deviceTopology).forEach(function(fgtSerial){var targetModel,serials=[];Object.keys(this.deviceTopology[fgtSerial].models||{}).forEach(function(model){var devices=this.deviceTopology[fgtSerial].models[model];devices.length&&(devices.forEach(function(dev){serials.push(dev.device.getSerial())}),targetModel=model)}.bind(this)),serials.length?this._uploadFirmware(fgtSerial,serials).then(function(pushResults){this._monitorAll(fgtSerial,targetModel,pushResults,onUpgradeFinish)}.bind(this),function(error){fLog.error("error: "+error),this.upgradeStatus=this.UPGRADE_STATUS.ERROR,this.deviceTopology[fgtSerial].models[targetModel].forEach(function(dev){dev.device.setUpgradeStatus(dev.device.UPGRADE_STATUS.ERROR)})}.bind(this)):onUpgradeFinish()}.bind(this))},UpgradableExtensionDeviceList.prototype._upgrade=function(onUpgradeFinish){"fortiguard"===this.firmwareSource?(this._buildUpgradeQueue(),this._runFtgdUpgrades(onUpgradeFinish)):this.selectedFirmware?this._upgradeWithSelectedFirmware(onUpgradeFinish):fLog.error("No valid firmware selected")},UpgradableExtensionDeviceList.prototype.disableUpgradeButton=function(){return!("upload"!==this.firmwareSource||this.selectedFirmware&&this.matchedDeviceCount)||!this.toUpgradeCount},UpgradableExtensionDeviceList.prototype.upgrade=function(){this.upgradeStatus=this.UPGRADE_STATUS.IN_PROGRESS,this.countUpgrade()?(this.deviceTopology=this.getDevicesToUpgrade(),this._upgrade(function(){this.upgradeStatus=this.UPGRADE_STATUS.SUCCESS}.bind(this))):this.upgradeStatus=this.UPGRADE_STATUS.NOT_STARTED},UpgradableExtensionDeviceList.prototype.close=function(){this.upgradeStatus===this.UPGRADE_STATUS.NOT_STARTED?this.slideController.slide.close():this.slideController.slide.done()},UpgradableExtensionDeviceList.prototype.onFileSelect=inject.mark(function($scope){return function(selectedFile){if(selectedFile){this.selectedFile=selectedFile;var reader=new FileReader;reader.addEventListener("load",function(event){$scope.$apply(function(){var bytes=new Uint8Array(event.target.result);this._parseSelectedFile(bytes)}.bind(this))}.bind(this)),reader.readAsArrayBuffer(Blob.prototype.slice.call(selectedFile,0,64))}else this.selectedFile=null,this.selectedFirmware=null,this.fileError=null}}),UpgradableExtensionDeviceList.prototype._parseSelectedFile=function(bytes){this.extractFirmwareInformation(bytes).then(function(info){this.selectedFirmware=info.firmware,this.fileError=null}.bind(this),function(errorMessage){this.selectedFirmware=null,this.fileError=errorMessage}.bind(this))},UpgradableExtensionDeviceList.prototype.extractFirmwareInformation=inject.mark(function($filter,$q){var DEVICE_TYPE_NAME={FORTI_AP:"FortiAP",FORTI_SWITCH:"FortiSwitch"},buildNumber=$filter("buildNumber");return function(bytes){var endIndex=this._deviceClass.prototype.VERSION_STRING_START_INDEX+this._deviceClass.prototype.FIRMWARE_HEADER_LENGTH,header=String.fromCharCode.apply(null,bytes.subarray(this._deviceClass.prototype.VERSION_STRING_START_INDEX,endIndex)),firmware=fFirmware.parseFirmwareHeader(header);return firmware?(firmware.file=this.selectedFile,firmware.label=(DEVICE_TYPE_NAME[this.deviceType]||firmware.model)+" "+firmware.version+" build"+buildNumber(firmware.build),this.isValidModel(firmware.model).then(function(valid){return valid?(firmware.file=this.selectedFile,firmware.label=(DEVICE_TYPE_NAME[this.deviceType]||firmware.model)+" "+firmware.version+" build"+buildNumber(firmware.build),$q.resolve({firmware:firmware})):$q.reject("Image file doesn't match platform.")}.bind(this),function(){return $q.reject("Image file doesn't match platform.")})):$q.reject("Invalid image file.")}}),UpgradableExtensionDeviceList.prototype.isValidModel=inject.mark(function($http,$q){return function(model){return this._validModels[model]||"FORTI_SWITCH"===this.deviceType?$q.resolve(!0):(this._validModels[model]=!!this._wifiMetaData.wtpPlatformTypeFromSerial(model),$q.resolve(this._validModels[model]))}}),function(providers,loaderProvider){return providers.$compile.component("fUpgradableExtensionDeviceList",{templateUrl:__webpack_require__(940),controller:UpgradableExtensionDeviceList,bindings:{devices:"<",deviceType:"<"},require:{slideController:"^fSlideContainer"}}),loaderProvider.initModules([__webpack_require__(188),__webpack_require__(941)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){"use strict";const VERSION_COMPONENTS=["major","minor","patch","build"];function compareFirmware(firmware1,firmware2){for(var component,diff=0,compIdx=0;0===diff&&compIdx<VERSION_COMPONENTS.length;)component=VERSION_COMPONENTS[compIdx],firmware1.hasOwnProperty(component)&&firmware2.hasOwnProperty(component)&&(diff=firmware2[component]-firmware1[component]),compIdx++;return diff}return{getReleaseNotesLinkPath:function(type,version){return type.toLowerCase()+"-"+version+"-release-notes/download"},isFirmwareUpdate:function(currentFirmware,newFirmware){return compareFirmware(currentFirmware,newFirmware)>0},compareFirmware:compareFirmware,parseFirmwareHeader:function(firmwareHeader){var info,model,major,minor,patch,build,releaseDate,match=/([A-Z\d-]{6,7})-(\d{1})\.(\d{2})-[A-Z]{2}-(?:build|BUILD)(\d{2,4})-(\d{6})(?:-patch(\d{2}))?/.exec(firmwareHeader);return match&&(model=match[1],major=parseInt(match[2],10),minor=parseInt(match[3],10),build=parseInt(match[4],10),releaseDate=match[5],info={model:model,major:major,minor:minor,build:build,patch:patch=null==match[6]?0:parseInt(match[6],10),version:"v"+[major,minor,patch].join("."),releaseDate:new Date("20"+releaseDate.slice(0,2)+"-"+releaseDate.slice(2,4)+"-"+releaseDate.slice(4,6))}),info},ZERO_VERSION:{major:0,minor:0,patch:0,build:0}}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8),__webpack_require__(28)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared,patterns){"use strict";var nameExpr=/^([^0-9]+)([0-9]+)$/,nameExprExec=nameExpr.exec.bind(nameExpr);return{interfaceName:function(nameA,nameB){var nameParts=[nameA,nameB].map(nameExprExec);if(nameParts.every(function(value){return null!=value})&&nameParts.reduce(function(a,b){return a[1]===b[1]}))return nameParts.reduce(function(a,b){return Number(a[2])-Number(b[2])});return ftnt_shared.util.fastLocaleCompare(nameA,nameB)},features:function(a,b){var featureA=a[1],featureB=b[1];if(featureA.newState&&!featureB.newState)return-1;if(!featureA.newState&&featureB.newState)return 1;return ftnt_shared.util.fastLocaleCompare($.getInfo(a[0]),$.getInfo(b[0]))},vdomSort:function(valueA,valueB,entryA,entryB){return entryA.is_global?-1:entryB.is_global?1:ftnt_shared.util.fastLocaleCompare(valueA.toLowerCase(),valueB.toLowerCase())},fileType:function(valueA,valueB,entryA,entryB){var formatFn=function(entry){return $.getInfo(entry.lang)+" ("+entry.q_origin_key+")"};return ftnt_shared.util.fastLocaleCompare(formatFn(entryA),formatFn(entryB))},ipAddr:function(a,b){return a=ipAddrConvert(a),b=ipAddrConvert(b),"number"==typeof a&&"number"==typeof b?a-b:a>b?1:a===b?0:-1},convert:{ipv4Addr:ipv4AddrConvert,ipv6Addr:ipv6AddrConvert},compareByOrder:function(compareFns){return function(a,b){var result=0;return Array.isArray(compareFns)&&compareFns.some(function(compare){return 0!==(result=compare(a,b))}),result}},compareByProperty:function(cb){if("string"==typeof cb){var key=cb;cb=function(obj){return obj[key]}}return function(a,b){var aValue=cb(a),bValue=cb(b);return"string"==typeof aValue&&"string"==typeof bValue?ftnt_shared.util.fastLocaleCompare(aValue,bValue):"number"==typeof aValue&&"number"==typeof bValue?aValue-bValue:aValue&&!bValue?-1:bValue&&!aValue?1:0}}};function ipAddrConvert(value){return patterns.commonRegExp.IP_HOST.test(value)?ipv4AddrConvert(value):patterns.commonRegExp.IP6_HOST.test(value)?"1"+ipv6AddrConvert(value):"26553565535655356553565535655356553565535"}function ipv4AddrConvert(value){return(value=value.split(".")).reduce(function(result,octet,i){return(result|parseInt(octet,10)<<8*(3-i))>>>0},0)}function ipv6AddrConvert(value){var i,s,g=[],halves=value.split("::");if(2===halves.length){var first=halves[0].split(":"),last=halves[1].split(":");1===first.length&&""===first[0]&&(first=[]),1===last.length&&""===last[0]&&(last=[]);var remaining=8-(first.length+last.length);for(i=0;i<first.length;i++)g.push(first[i]);for(i=0;i<remaining;i++)g.push(0);for(i=0;i<last.length;i++)g.push(last[i])}else 1===halves.length&&(g=value.split(":"));for(i=0;i<g.length;i++)s=g[i],g[i]="0000".substr(s.length)+s;return g.join("").toLowerCase()}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(46),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,structure,fwebLog){"use strict";var ACTIONS_OPEN="open",ACTIONS_OPEN_ROUTE="openRoute",ACTIONS_RESOLVE="resolve",ACTIONS_REJECT="reject",_openSlides={};function Host(onOpen){if(window!==window.top)throw new Error("Only use slideBridge Host on top window.");if(!onOpen)throw new Error("Must provide onOpen function for slideBridge Host.");this.listen(onOpen)}function Client(){}Host.prototype.resolve=function(eventSource,id,result){var origin=structure.getOrigin();eventSource.postMessage({messageType:"slideBridge",action:ACTIONS_RESOLVE,result:result,id:id},origin)},Host.prototype.reject=function(eventSource,id,error){var origin=structure.getOrigin();eventSource.postMessage({messageType:"slideBridge",action:ACTIONS_REJECT,error:error,id:id},origin)},Client.prototype.open=function(initModules,id,slideParams){this.listen(),id||(id=Math.random().toString(36));try{return structure.topPostMessage({messageType:"slideBridge",action:ACTIONS_OPEN,id:id,slideParams:slideParams,initModules:initModules}),new Promise(function(resolve,reject){_openSlides[id]={resolve:resolve,reject:reject}})}catch(err){return fwebLog.error(err),Promise.reject()}},Client.prototype.openRouteAsSlide=function(params){const id=Math.random().toString(36);this.listen();try{return structure.topPostMessage({messageType:"slideBridge",action:ACTIONS_OPEN_ROUTE,id:id,params:params}),new Promise(function(resolve,reject){_openSlides[id]={resolve:resolve,reject:reject}})}catch(err){return fwebLog.error(err),Promise.reject()}};var sharedPrototype={TYPE:{STANDARD:"standard",ROUTE:"route"},_listen:function(onOpen,event){var origin=structure.getOrigin(),data=event.data;if(event.origin===origin&&"slideBridge"===data.messageType)switch(data.action){case ACTIONS_OPEN:onOpen&&onOpen(this.TYPE.STANDARD,data,event.source);break;case ACTIONS_OPEN_ROUTE:onOpen&&onOpen(this.TYPE.ROUTE,data,event.source);break;case ACTIONS_RESOLVE:_openSlides[data.id]&&(_openSlides[data.id].resolve(data.result),stop(this));break;case ACTIONS_REJECT:_openSlides[data.id]&&(_openSlides[data.id].reject(data.error),stop(this))}function stop(bridge){delete _openSlides[data.id],bridge instanceof Client&&!Object.keys(_openSlides).length&&bridge.unListen()}},listen:function(onOpen){this._listenHandler=this._listen.bind(this,onOpen),window.addEventListener("message",this._listenHandler)},unListen:function(){window.removeEventListener("message",this._listenHandler),this._listenHandler=null}};return Object.assign(Host.prototype,sharedPrototype),Object.assign(Client.prototype,sharedPrototype),{Host:Host,Client:Client}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,log){"use strict";var module={},URIS={PREFIX_LINKS:"/api/v2/monitor/fortiguard/prefix-links",STATIC_LINKS:"/api/v2/monitor/fortiguard/static-links"};function FortiGuardResources(resourceTypes){this.resourceTypes=resourceTypes,this.mapping={},this.loaded=!1}module.LINK_TYPE={APP:"app",AV:"av",AWS_FAZ_INSTALLER:"aws_faz_installer",AWS_FAZ_SETUP:"aws_faz_setup",AWS_FSA_INSTALLER:"aws_fsa_installer",AWS_FSA_SETUP:"aws_fsa_setup",AZURE_FAZ_INSTALLER:"azure_faz_installer",AZURE_FAZ_SETUP:"azure_faz_setup",AZURE_FSA_INSTALLER:"azure_fsa_installer",AZURE_FSA_SETUP:"azure_fsa_setup",BETA_ANNOUNCEMENTS:"beta_announcements",BETA_DOCUMENTATION:"beta_documentation",BETA_FEEDBACK:"beta_feedback",BOTNET:"botnet",CVE_LOOKUP:"cve_lookup",FCTVULN:"fctvuln",FORTIAP_RELEASE_INFO:"fortiap_release_info",FORTICLIENT_EMS_INFO:"forticlient_ems_info",FORTICLIENT_EMS_SETUP:"forticlient_ems_setup",FORTICLIENT_INFO:"forticlient_info",FORTICLIENT_INSTALLER:"forticlient_installer",FORTICLOUD:"forticloud",FORTIEXPLORER_IOS_INSTALLER:"fortiexplorer_ios_installer",FORTIGUARD_AC_INFO:"fortiguard_ac_info",FORTIGUARD_IPS_INFO:"fortiguard_ips_info",FORTIIPAM_PORTAL:"fortiipam_portal",GCP_FAZ_INSTALLER:"gcp_faz_installer",GCP_FAZ_SETUP:"gcp_faz_setup",GCP_FSA_INSTALLER:"gcp_fsa_installer",GCP_FSA_SETUP:"gcp_fsa_setup",IPS:"ips",MOB:"mob",OCVPN_PORTAL:"ocvpn_portal",RELEASE_NOTES_DOWNLOAD:"release_notes_download",SSLVPN_ANDROID_INSTALLER:"sslvpn_android_installer",SSLVPN_IOS_INSTALLER:"sslvpn_ios_installer",SSLVPN_MAC_INSTALLER:"sslvpn_mac_installer",SSLVPN_WINDOWS_INSTALLER:"sslvpn_windows_installer",SUPPORT:"support",SUPPORT_LOGIN:"support_login",TRUSTEDCERTS:"trustedcerts",URL_RATING_SUBMIT:"url_rating_submit",WHOIS_LOOKUP:"whois_lookup"},FortiGuardResources.prototype.load=function(){var promises=(Array.isArray(this.resourceTypes)?this.resourceTypes:[this.resourceTypes]).map(function(resourceType){return $.get(URIS[resourceType])});return Promise.all(promises).then(function(resources){this.createMapping(resources)}.bind(this))},FortiGuardResources.prototype.resolve=function(key){return this.loaded?Promise.resolve(key?this.mapping[key]:this.mapping):(this.promise=this.promise||this.load(),this.promise.then(function(){return key?this.mapping[key]:this.mapping}.bind(this),function(){return log.error("Failed to retrieve URLs from FortiGuard."),key?"":{}}))},FortiGuardResources.prototype.createMapping=function(resources){return this.mapping=resources.reduce(function(result,resource){var mapping=Array.isArray(resource)?resource.reduce(indexByName,{}):resource;return Object.assign(result,mapping),result},{}),this.loaded=!0,this.mapping;function indexByName(result,entry){return result[entry.name]=entry.prefix||entry.url,result}},module.links=new FortiGuardResources(["PREFIX_LINKS","STATIC_LINKS"]),module.getLink=function(type){return module.links.mapping&&module.links.mapping[type]||""};var packageData=function(data){return{results:data}},errorUnexpected=function(source){var txt="Downloading "+source+" failed, FortiGuard returned unexpected data format";log.error(txt)};return module.getWebFilterCategories=function(){return $.get("/api/v2/monitor/fortiguard/wf-categories").then(function(res){return res instanceof Array&&res.length?packageData(res):(errorUnexpected("web filter categories"),{})},function(){return $.Deferred().resolve({})})},module.getApplicationCategories=function(){return $.get("/api/v2/monitor/fortiguard/app-categories").then(function(res){return res instanceof Array&&res.length?packageData(res):(errorUnexpected("application categories"),{})},function(){return $.Deferred().resolve({})})},module.getApplicationInfo=function(id){return $.get("/api/v2/monitor/fortiguard/app-information?id="+id).then(function(res){return res instanceof Object&&res.Type&&"app"===res.Type?packageData(res):(errorUnexpected("application id "+id+" information"),{})},function(){return $.Deferred().resolve({})})},module.getIPSInfo=function(id){return $.get("/api/v2/monitor/fortiguard/ips-information?id="+id).then(function(res){return res instanceof Object&&res.Type&&"ips"===res.Type?packageData(res):(errorUnexpected("ips id "+id+" information"),{})},function(){return $.Deferred().resolve({})})},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,,,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8),__webpack_require__(0),__webpack_require__(36),__webpack_require__(52)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared,BUILD,fSelect,fUri){"use strict";const Omniselect=ftnt_shared.Omniselect;var cachedFaceplateXmlRequest,API_AVAILABLE_INTERFACES="/api/v2/monitor/system/available-interfaces",API_WIFI_BASE="/api/v2/cmdb/wireless-controller/",FACEPLATE_XML_URI="/"+BUILD.CONFIG.CONFIG_GUI_NO+"/xml/faceplate.xml",MILLIWATTS=1e3;function FgtPoeData(){this.used=0,this.reserved=0,this.budget=BUILD.PLATFORM.POE_BUDGET}function FgtFaceplateSource(responses,fortigate){const interfaceResponse=responses.interfaces,{poeStats:poeStats}=responses;this.fortigate=fortigate,this.state=fortigate&&fortigate.state||top.state;const FGT_BUILD=this.state&&this.state.hasOwnProperty("getBuildInformation")?this.state.getBuildInformation():BUILD;if(this.device={rw:this.state.adminHasWritePermission(this.state.ACCESS_GROUP.NETWORK),is_vdom_admin:!this.state.admin.global_admin,vdom:this.state.current_vdom,ha:this.state.ha_mode,vcluster_id:0,opmode:this.state.getOperationMode().toLowerCase()},this.ports={},FGT_BUILD.PLATFORM.HAVE_POE&&(this.poe=new FgtPoeData),this.localWifiRadios={},FGT_BUILD.PLATFORM.HAVE_CAPWAP_WTP)for(var i=0,count=responses.managedAPs.length;i<count;i++)this._findLocalRadioInVDOM(responses.managedAPs[i].vdom,{managedAPs:responses.managedAPs[i].results,wtpProfiles:responses.wtpProfiles[i].results,vapGroups:responses.vapGroups[i].results});this._parseVdomInterfaces(interfaceResponse,poeStats)}function FswFaceplatePort(port,switchVlanMapping){$.extend(this,Object.assign({},port)),this.name=this["port-name"],this.poe_power=this.$stats?(this.$stats.port_power||0)*MILLIWATTS:0,this.poe_support=port["poe-capable"],this.poe_status=this.$stats?this.$stats.power_status:0;var statusString=BUILD.SYMBOLS.POE_STATUS_UNKNOWN;switch(this.poe_status){case BUILD.SYMBOLS.PORT_POWER_STATUS_DISABLED:statusString=BUILD.SYMBOLS.POE_STATUS_DISABLED;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_SEARCHING:statusString=BUILD.SYMBOLS.POE_STATUS_SEARCHING;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_DELIVERING_POWER:statusString=BUILD.SYMBOLS.POE_STATUS_DELIVERING_POWER;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_TESTMODE:statusString=BUILD.SYMBOLS.POE_STATUS_TESTMODE;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_FAULT:statusString=BUILD.SYMBOLS.POE_STATUS_FAULT;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_OTHERFAULT:statusString=BUILD.SYMBOLS.POE_STATUS_OTHERFAULT;break;case BUILD.SYMBOLS.PORT_POWER_STATUS_REQ_POWER:statusString=BUILD.SYMBOLS.POE_STATUS_REQ_POWER}this.poe_status_title=statusString,this.link=this.$stats&&"up"===this.$stats.status?"up":"down",this.duplex=this.$stats&&"full"===this.$stats.duplex?"full":"half",this.speed=this.$stats&&this.$stats.speed||0,this.vlan=this.$stats&&this.$stats["fortilink-port"]?void 0:this.vlan&&this.vlan.name||"";var switchVLAN=this.vlan&&switchVlanMapping?switchVlanMapping[this.vlan]:null;switchVLAN&&(this.vlan_color=switchVLAN.color)}return FgtFaceplateSource.prototype._findLocalRadioInVDOM=function(vdomName,data){var localAP,localAPProfile,aps=data.managedAPs,apProfiles=data.wtpProfiles,ssidGroups=data.vapGroups,LOCAL_SERIAL_NUMBER=this.state.serial.substring(0,6)+"-WIFI0";if(!(localAP=aps.find(function(ap){return ap["wtp-id"]===LOCAL_SERIAL_NUMBER})))return;if(!(localAPProfile=apProfiles.find(function(profile){return profile.name===localAP["wtp-profile"].q_origin_key})))return;for(var numberOfRadios=0,foundAllRadios=!1;!foundAllRadios;)localAP["radio-"+ ++numberOfRadios]||(foundAllRadios=!0,numberOfRadios--);const VAP_DATASOURCES=["wireless-controller.vap","system.interface"],processVap=function(radio,vap){if("wireless-controller.vap-group"===vap.datasource){var ssidGroup=ssidGroups.find(function(group){return group.q_origin_key===vap.q_origin_key});if(!ssidGroup)return;ssidGroup.vaps.forEach(function(groupVap){processVap(radio,groupVap)})}else{if(!VAP_DATASOURCES.includes(vap.datasource))return;radio.ssids[vap.q_origin_key]=!0}};for(var i=1;i<=numberOfRadios;i++){var localRadio={vdom:vdomName};this.localWifiRadios["radio-"+i]=localRadio;var apRadio=localAP["radio-"+i],profileRadio=localAPProfile["radio-"+i];if("ap"===profileRadio.mode)if("enable"===apRadio["override-txpower"]?localRadio.tx_power=apRadio["power-level"]:localRadio.tx_power=profileRadio["power-level"],"enable"!==apRadio["override-vaps"])"tunnel"!==profileRadio["vap-all"]&&"bridge"!==profileRadio["vap-all"]?(localRadio.ssids={},profileRadio.vaps.forEach(function(vap){processVap(localRadio,vap)})):localRadio.all=!0;else{if("tunnel"===apRadio["vap-all"]||"bridge"===apRadio["vap-all"]){localRadio.all=!0;continue}localRadio.ssids={},apRadio.vaps.forEach(function(vap){processVap(localRadio,vap)})}else localRadio.disabled=!0,localRadio.mode=profileRadio.mode}},FgtFaceplateSource.prototype._parseVdomInterfaces=function(intfs,poeStats){BUILD.PLATFORM.HAVE_CAPWAP_WTP&&Object.keys(this.localWifiRadios).forEach(function(radioName){var wifi,radio=this.localWifiRadios[radioName],name="local-wifi-"+radioName;(wifi=this.ports[name]?this.ports[name]:{is_wifi:!0,ssids:[]}).all_ssids=radio.all,wifi.tx_power=radio.tx_power,this.ports[name]=wifi}.bind(this));const poeMap=poeStats&&poeStats.reduce((map,entry)=>(map.set(entry.interface,entry),map),new Map);intfs.forEach(function(intf){if("any"!==intf.name&&(intf.is_physical||intf.is_wifi)){if(intf.poe_capable&&BUILD.PLATFORM.HAVE_POE&&intf.poe_enabled&&poeMap){const stats=poeMap.get(intf.name);stats&&(this.poe.used+=stats.used,this.poe.reserved+=stats.reserved)}BUILD.PLATFORM.HAVE_CAPWAP_WTP&&intf.is_wifi&&Object.keys(this.localWifiRadios).forEach(function(radioName){var radio=this.localWifiRadios[radioName],name="local-wifi-"+radioName,wifi=this.ports[name];if(radio.disabled)return wifi.disabled=!0,void(wifi.mode=radio.mode);(radio.all||radio.ssids[intf.name])&&radio.vdom===intf.vdom&&wifi.ssids.push(intf.ssid)}.bind(this)),this.ports[intf.name]=intf}}.bind(this))},{FgtFaceplateSource:FgtFaceplateSource,FswFaceplateSource:function(managedSwitch,switchVlanMapping){this.ports={},managedSwitch.$stats&&managedSwitch.$stats.max_poe_budget>0&&(this.poe={budget:managedSwitch.$stats.max_poe_budget*MILLIWATTS,reserved:0,used:0}),managedSwitch.ports.forEach(function(port){var faceplatePort=new FswFaceplatePort(port,switchVlanMapping);this.ports[faceplatePort["port-name"]]=faceplatePort,this.poe&&faceplatePort.poe_support&&(this.poe.used+=faceplatePort.poe_power)}.bind(this))},getFaceplateXml:function(deviceType,modelType){return cachedFaceplateXmlRequest||(cachedFaceplateXmlRequest=$.ajax(FACEPLATE_XML_URI)),cachedFaceplateXmlRequest.then(function(xml){var device=$(xml).find("device").filter(function(index,possibleDevice){return possibleDevice.getAttribute("type")===deviceType})[0],model=$(device).find("model").filter(function(index,possibleModel){return(possibleModel.getAttribute("type")||"").toLowerCase()===modelType.toLowerCase()})[0],$model=$(model);return $model.length?$("<div></div>").append($model.clone()).html():$.Deferred().reject()})},getFgtFaceplateData:function(params={}){const fortigate=params.fortigate,proxyUri=uri=>fortigate?fortigate.createCSFURI(uri):uri,state=fortigate&&fortigate.state||top.state,FGT_BUILD=state.getBuildInformation();let url=null;const urlParams=[];let apGetter,profileGetter,vapGroupGetter,intfGetter=null,poeGetter=null;if(state.ha_mode>0&&params.haPeerSerial&&params.haPeerSerial!==state.serial){url=API_AVAILABLE_INTERFACES;const devInfo={serial:params.haPeerSerial,cluster_id:params.haClusterId};url+="/ha-secondary",urlParams.push(fUri.formatParams(devInfo))}else params.useOmniselect||(url=API_AVAILABLE_INTERFACES);if(url)params.global?urlParams.push("scope=global"):(!fortigate||fortigate.isCurrent)&&state.vdom_mode&&state.current_vdom&&urlParams.push(`vdom=${state.current_vdom}`),state.ha_mode>0&&urlParams.push("view_type=ha"),url+="?"+urlParams.join("&"),intfGetter=$.get(url).then(res=>res.results);else{let sourceID="firewallInterfaces";params.global&&(sourceID=fSelect.makeGlobalSourceID(sourceID)),fortigate&&(sourceID=fortigate.getOmniselectProxySourceID(sourceID)),params.invalidateSource&&Omniselect.invalidateCacheForSource(sourceID),intfGetter=Omniselect.getSourceData(sourceID)}FGT_BUILD.PLATFORM.HAVE_CAPWAP_WTP&&(apGetter=$.get(proxyUri(`${API_WIFI_BASE}wtp?global=1&datasource=1`)),profileGetter=$.get(proxyUri(`${API_WIFI_BASE}wtp-profile?global=1&datasource=1`)),vapGroupGetter=$.get(proxyUri(`${API_WIFI_BASE}vap-group?global=1&datasource=1`))),FGT_BUILD.PLATFORM.HAVE_POE&&(poeGetter=$.get(proxyUri("/api/v2/monitor/system/interface/poe")));const requests=[intfGetter,apGetter,profileGetter,vapGroupGetter,poeGetter];return params.abortPromise&&params.abortPromise.then(function(){requests.forEach(function(request){request&&request.hasOwnProperty("abort")&&request.abort()})}),Promise.all(requests).then(function(responses){return{interfaces:responses[0],managedAPs:responses[1],wtpProfiles:responses[2],vapGroups:responses[3],poeStats:responses[4]&&responses[4].results}})}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(168)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,utilFirewallInterfaces){"use strict";var module={},SORT_VALUES={CONNECTED:0,DISCONNECTED:1,DISABLED:2,ANY:3,LAST:100};return module.SORT_VALUES=SORT_VALUES,module.processInterface=function(entry){var sortValue=SORT_VALUES.CONNECTED;"any"===entry.name?(sortValue=SORT_VALUES.ANY,entry.editable=!1):"down"===entry.status?sortValue=SORT_VALUES.DISABLED:"down"===entry.link&&(sortValue=SORT_VALUES.DISCONNECTED),entry.label=utilFirewallInterfaces.getLabel(entry),entry.sortValue=sortValue},module.get=function(global,csfPath,viewTypes){var params=[];global&&params.push("scope=global"),viewTypes&&viewTypes.forEach(function(type){params.push("view_type="+type)});var uri="/api/v2/monitor/system/available-interfaces";return params.length>0&&(uri+="?"+params.join("&")),csfPath&&(uri="/csf/"+csfPath+uri),$.ajax(uri).then(function(data){var map={},results=Array.isArray(data.results)?data.results:[];return results.forEach(function(entry){entry.q_origin_key=entry.name,entry["interface-name"]=entry.name,entry.is_zone?entry.datasource="system.zone":entry.is_sdwan_zone?entry.datasource="system.sdwan.zone":entry.datasource="system.interface",[entry.q_path,entry.q_name]=entry.datasource.split("."),module.processInterface(entry);var existing=map[entry.name];existing&&!existing.out_of_scope?existing.vdom&&entry.vdom&&(delete map[entry.name],map[[existing.name,existing.vdom].join("#")]=existing,map[[entry.name,entry.vdom].join("#")]=entry):map[entry.name]=entry}),(results=Object.values(map)).mapping=map,results})},module.getDummySdwan=function(){return{q_origin_key:"virtual-wan-link",name:"virtual-wan-link",label:$.getInfo("SD-WAN"),type:"virtual-wan",is_virtual_wan_link:!0,icon:"ftnt-virtual-wan-link-up",datasource:"system.sdwan.zone"}},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(52)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fUri){"use strict";const QUARANTINE_URL="/api/v2/cmdb/user/quarantine",MONITOR_BANNED_URL="/api/v2/monitor/user/banned";class QuarantineRequestEntry{constructor(params){const REQUIRED_PARAMS=["mac","fortigateSerial"];this.mac=params.mac,this.otherMacs=(params.otherMacs||[]).map(mac=>"object"==typeof mac?mac.mac:mac),this.hostname=params.hostname,this.user=params.user,this.fortigateSerial=params.fortigateSerial;for(let param of REQUIRED_PARAMS)if(!this[param])throw new Error(`Required parameters "${param}" not provided`);this.isQuarantineRequestEntry=!0}}class BanIPRequestEntry{constructor(params){if(this.ip=params.ip,this.fortigateSerial=params.fortigateSerial,!this.ip||!this.fortigateSerial)throw new Error("Required parameters not provided");this.isBanIPRequestEntry=!0}}return{getQuarantineData:function(csfPath){const url=fUri.makeCsfUri(QUARANTINE_URL,csfPath);return $.get(url).then(response=>{let quarantineMap={};return(response&&response.results&&response.results.targets||[]).forEach(target=>{Array.isArray(target.macs)?target.macs.forEach(mac=>{mac.mac&&(quarantineMap[mac.mac]=mac)}):target.mac&&(quarantineMap[target.mac]=target)}),quarantineMap}).catch(()=>{})},getBannedData:function(csfPath){const url=fUri.makeCsfUri(MONITOR_BANNED_URL,csfPath);return $.get(url).then(response=>{let bannedMap={};return(response.results||[]).forEach(item=>{item.ip_address&&(bannedMap[item.ip_address]=item)}),bannedMap}).catch(()=>{})},createQuarantineRequestEntry:function(params){return new QuarantineRequestEntry(params)},isQuarantineRequestEntry:function(entry){return entry instanceof QuarantineRequestEntry||entry.isQuarantineRequestEntry},createBanIPRequestEntry:function(params){return new BanIPRequestEntry(params)},isBanIPRequestEntry:function(entry){return entry instanceof BanIPRequestEntry||entry.isBanIPRequestEntry}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(30),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fwebLog,notify){const COMMANDS_PER_REQUEST=25;class SyncFabricWizard extends inject.Collectable{constructor(csfObjectSync){super(),this.loading=!0,this.tableSyncStatus={},this.tableProgress={},this.ftgtSyncStatus={},this.autoSyncRan=!1,this.SYNC_STATUS=csfObjectSync.SYNC_STATUS,this.SYNC_STEPS=csfObjectSync.SYNC_STEPS,this.RESOLUTION_TYPE=csfObjectSync.RESOLUTION_TYPE,this.syncStep=this.SYNC_STEPS.FORTIGATE_PREVIEW,this.conflictResolutionStrategy=this.RESOLUTION_TYPE.AUTOMATIC}$onInit($INJECTABLE$,csfTopology,state){return async()=>{try{if(this.isSuperAdmin=state.admin.super_admin,await csfTopology.buildIfNecessary(),this.csfFtgtMapping=csfTopology.fortigateMapping,this.thisFortigate=csfTopology.thisFortigate,!this.fortigates||!this.tables){const res=await state.buildOutofSyncTables();this.fortigates=res.fortigates,this.tables=res.tables}this.fortigates.forEach(ftgt=>{this.ftgtSyncStatus[ftgt.serial]=this.SYNC_STATUS.UNSYNCED}),this.fortigateChooserSettings={sources:"csfFortiGates",singleSelect:!0,preProcessSelected:!0,filterFunction:entry=>this.selectedFtgt.serial===entry.serial||this.thisFortigate.serial===entry.serial},this.setupWatch()}catch(err){fwebLog.error(err)}finally{this.loading=!1}}}setupWatch($INJECTABLE$,$scope,lang){return()=>{$scope.$watch("$ctrl.syncStep",value=>{value===this.SYNC_STEPS.FORTIGATE_PREVIEW?(this.autoSyncRan=!1,this.selectedFtgt&&(this.tables[this.selectedFtgt.serial].forEach(table=>this.tableSyncStatus[table]=this.SYNC_STATUS.UNSYNCED),this.selectedFtgt=null),this.description=lang("The following FortiGates are out of sync."),this.nextStepDescription=lang('Select a FortiGate and click "Next" to review out of sync tables.')):value===this.SYNC_STEPS.TABLE_PREVIEW?this.isAllTablesSyncDone()?this.description=lang("All tables have been successfully synchronized."):(this.description=lang("Firewall object synchronization is unable to resume until the following conflicts are resolved:"),this.isSuperAdmin?this.nextStepDescription=lang('Click "Synchronize Tables" to attempt to automatically resolve any conflicts.'):this.nextStepDescription=lang("Must be super admin to synchronize tables.")):value===this.SYNC_STEPS.MANUAL?(this.selectedTable=Object.keys(this.tableSyncStatus).find(table=>this.tableSyncStatus[table]===this.SYNC_STATUS.NEEDS_MANUAL_SYNC),this.description=`${lang("Manually Resolve Conflicts")} - ${lang(this.selectedTable)}`):value===this.SYNC_STEPS.DONE&&(this.selectedFtgt=null)}),$scope.$watch("$ctrl.ftgtSyncStatus[$ctrl.selectedFtgt.serial]",value=>{value===this.SYNC_STATUS.UNSYNCED&&this.syncStep===this.SYNC_STEPS.TABLE_PREVIEW?(this.description=lang("Could not automatically resolve all conflicts. Manual intervention is required for the tables below:"),this.nextStepDescription=lang('Click "Resolve Conflicts" to continue.')):value===this.SYNC_STATUS.SYNCING?this.description=lang("Attempting to synchronize tables."):value===this.SYNC_STATUS.SYNCED&&(this.description=lang("All tables have been successfully synchronized."))}),$scope.$watch("$ctrl.tableSyncStatus[$ctrl.selectedTable]",value=>{value===this.SYNC_STATUS.SYNCED&&this.isAllTablesSyncDone()&&(this.ftgtSyncStatus[this.selectedFtgt.serial]=this.SYNC_STATUS.SYNCED)})}}selectFortigate(ftgtSerial){this.ftgtSyncStatus[ftgtSerial]!==this.SYNC_STATUS.SYNCED&&(this.selectedFtgt=this.csfFtgtMapping[ftgtSerial],this.autoRenameFtgt=this.selectedFtgt,this.tables[this.selectedFtgt.serial].forEach(table=>{this.tableSyncStatus[table]=this.SYNC_STATUS.UNSYNCED,this.tableProgress[table]={}}))}beginAutomaticSync($INJECTABLE$,$http,$q,$timeout,csfObjectSync,state,lang){return async()=>{try{this.manualSyncObjects={},Object.keys(this.tableSyncStatus).forEach(e=>this.tableSyncStatus[e]=this.SYNC_STATUS.ANALYZING),this.ftgtSyncStatus[this.selectedFtgt.serial]=this.SYNC_STATUS.SYNCING;for(const table of this.tables[this.selectedFtgt.serial]){const rootTable={},downstreamTable={},res=await $q.all([$http.get(csfObjectSync.getUri(table)),$http.get(this.csfUri(csfObjectSync.getUri(table))),$timeout(1e3)]);res[0].data.results.forEach(e=>{rootTable[e.q_origin_key]=e}),res[1].data.results.forEach(e=>{downstreamTable[e.q_origin_key]=e}),this.tableProgress[table].needsSync=res[0].data.results.length+res[1].data.results.length;const commands=this.doTableAnalysis(rootTable,downstreamTable,table);await $timeout(1e3),this.tableSyncStatus[table]=this.SYNC_STATUS.UPDATING;let promises=[];if(commands.root){this._chunkArray(commands.root,COMMANDS_PER_REQUEST).forEach(cmds=>{promises.push(csfObjectSync.sendSyncCommand(state.serial,table,cmds))})}if(commands.downstream){this._chunkArray(commands.downstream,COMMANDS_PER_REQUEST).forEach(cmds=>{promises.push(csfObjectSync.sendSyncCommand(this.selectedFtgt.path,table,cmds))})}promises.length&&promises.push($timeout(1e3)),await $q.all(promises),this.manualSyncObjects[table]?this.tableSyncStatus[table]=this.SYNC_STATUS.NEEDS_MANUAL_SYNC:this.tableSyncStatus[table]=this.SYNC_STATUS.SYNCED,promises=[]}this.isAllTablesSyncDone()?this.ftgtSyncStatus[this.selectedFtgt.serial]=this.SYNC_STATUS.SYNCED:this.ftgtSyncStatus[this.selectedFtgt.serial]=this.SYNC_STATUS.UNSYNCED,this.autoSyncRan=!0}catch(err){notify.post(lang("Error occurred while synchronizing tables.").toString(),notify.LEVEL.ERROR),fwebLog.error(err)}}}doTableAnalysis($INJECTABLE$,csfObjectSync){return(rootObjects,downstreamObjects,table)=>{const commands={};for(const[q_origin_key,object]of Object.entries(rootObjects))downstreamObjects[q_origin_key]&&object["global-object"]&&downstreamObjects[q_origin_key]["global-object"]||(object.q_static?(commands.root||(commands.root=[]),commands.root.push({key:q_origin_key,new_key:q_origin_key})):downstreamObjects[q_origin_key]?csfObjectSync.objectContentsIdentical(object,downstreamObjects[q_origin_key])?(commands.root||(commands.root=[]),commands.root.push({key:q_origin_key,new_key:q_origin_key}),commands.downstream||(commands.downstream=[]),commands.downstream.push({key:q_origin_key,new_key:q_origin_key})):(this.manualSyncObjects[table]||(this.manualSyncObjects[table]=[]),object.datasource=table,object.status=csfObjectSync.CONFLICT_STATUS.NAME_CONFLICT,object.conflictObject=downstreamObjects[q_origin_key]||Object.entries(downstreamObjects).find(e=>object.q_contents_checksum===e.q_contents_checksum),this.manualSyncObjects[table].push(object)):(commands.root||(commands.root=[]),commands.root.push({key:q_origin_key,new_key:q_origin_key})));for(const[q_origin_key,object]of Object.entries(downstreamObjects))rootObjects[q_origin_key]&&!object.q_static||(commands.downstream||(commands.downstream=[]),commands.downstream.push({key:q_origin_key,new_key:q_origin_key}));return commands}}doingAutoSync(){return this.selectedFtgt&&this.ftgtSyncStatus[this.selectedFtgt.serial]===this.SYNC_STATUS.SYNCING}needsManualSync(){return Object.keys(this.tableSyncStatus).some(table=>this.tableSyncStatus[table]===this.SYNC_STATUS.NEEDS_MANUAL_SYNC)}needsAutomaticSync(){return this.ftgtSyncStatus[this.selectedFtgt.serial]===this.SYNC_STATUS.UNSYNCED&&!this.autoSyncRan}goBack(){this.syncStep--}canGoBack(){return this.syncStep>this.SYNC_STEPS.FORTIGATE_PREVIEW&&!this.doingAutoSync()}doNextStep(){this.syncStep++}doNextManualTable(){if(this.isAllFortigatesSyncDone())this.syncStep=this.SYNC_STEPS.DONE;else{if(this.ftgtSyncStatus[this.selectedFtgt.serial]===this.SYNC_STATUS.SYNCED)return this.syncStep=this.SYNC_STEPS.FORTIGATE_PREVIEW;this.manualSyncDone=!1,this.selectedTable=Object.keys(this.tableSyncStatus).find(table=>this.tableSyncStatus[table]===this.SYNC_STATUS.NEEDS_MANUAL_SYNC)}}canDoNextManualTable(){return this.tableSyncStatus[this.selectedTable]===this.SYNC_STATUS.SYNCED}canGoNext(){return this.syncStep===this.SYNC_STEPS.FORTIGATE_PREVIEW?null!=this.selectedFtgt:this.syncStep===this.SYNC_STEPS.TABLE_PREVIEW||!this.ftgtSyncStatus[this.selectedFtgt]===this.SYNC_STATUS.SYNCING}isAllTablesSyncDone(){return this.selectedFtgt&&this.tables[this.selectedFtgt.serial].every(table=>this.tableSyncStatus[table]===this.SYNC_STATUS.SYNCED)}isAllFortigatesSyncDone(){return this.fortigates&&this.fortigates.every(ftgt=>this.ftgtSyncStatus[ftgt.serial]===this.SYNC_STATUS.SYNCED)}csfUri(uri){return this.selectedFtgt.createCSFURI(uri)}close(){this.fSlideContainer.slide.close()}_chunkArray(array,chunkSize){let index=0;const arrayLength=array.length;let temp=[];for(index=0;index<arrayLength;index+=chunkSize){const myChunk=array.slice(index,index+chunkSize);temp.push(myChunk)}return temp}}return function(providers,loader){return providers.$compile.component("fSyncFabricWizard",{templateUrl:__webpack_require__(1065),controller:SyncFabricWizard,bindings:{fortigates:"<?",tables:"<?"},require:{fSlideContainer:"?^"}}),loader.initModules([__webpack_require__(1066)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";module.exports={core:__webpack_require__(563),uri:__webpack_require__(52),location:__webpack_require__(42),datetime:__webpack_require__(34),patterns:__webpack_require__(28),ip:__webpack_require__(37),firmware:__webpack_require__(79),formatters:__webpack_require__(32),dom:__webpack_require__(31),objects:__webpack_require__(62),ldap:__webpack_require__(221),logs:__webpack_require__(167),sort:__webpack_require__(80),persist:__webpack_require__(49),structure:__webpack_require__(46),firewallInterfaces:__webpack_require__(92),interface:__webpack_require__(222),address_search:__webpack_require__(129),avatars:__webpack_require__(111),cmdb:__webpack_require__(130),slide:__webpack_require__(41),slideBridge:__webpack_require__(81),shortcuts:__webpack_require__(170),browser:__webpack_require__(171),tree:__webpack_require__(172),switchctrl:__webpack_require__(53),file:__webpack_require__(399),fortiguard:__webpack_require__(82),lang:__webpack_require__(43),faceplate:__webpack_require__(87),select:__webpack_require__(36),quarantine:__webpack_require__(93),compose:__webpack_require__(223),mac:__webpack_require__(224),userInfo:__webpack_require__(638),wifi:__webpack_require__(63),ipInfo:__webpack_require__(112),ipLocation:__webpack_require__(226),tooltipTable:__webpack_require__(400)}},,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(31),__webpack_require__(38)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,dom,utilIcon){"use strict";var module={};function generateHeaderElems(thumbnailElem,infoElems,riskLevelElem,actionTakenClass=""){const thumbnailElems=[dom.elem("div",{className:`avatar-box ${actionTakenClass} center`},{children:[thumbnailElem]})];let children=[dom.elem("div",{className:"avatar-quarantine-wrap"},{children:thumbnailElems}),dom.elem("div",{className:"avatar-info"},{children:infoElems})];return riskLevelElem&&children.push(riskLevelElem),dom.elem("div",{className:"avatar-header"},{children:children})}function generateAvatarUserElem(username){return dom.elem("div",{className:"avatar-user"},{children:[dom.elem("span",{className:"avatar-user-text",textContent:dom.escapeHTML(username)})]})}function generateAvatarAddressElem(address){return dom.elem("div",{className:"avatar-address"},{children:[dom.elem("span",{className:"avatar-address-text",textContent:dom.escapeHTML(address)})]})}function getAvatarUserIcon(avatarSource,defaultIconType){const category=utilIcon.getDeviceIconCategory(defaultIconType);return utilIcon.iconClass(utilIcon.ICON_TYPE.ENDPOINT_CONTROL_AVATAR_SOURCE,avatarSource)||utilIcon.iconClass(utilIcon.ICON_TYPE.DEVICE_CATEGORY,category)||""}function getUserInfoValue(userInfo,key){return userInfo&&userInfo[key]&&userInfo[key][0]}function generateSocialIDElems({email:email,phone:phone,username:username,userIcon:userIcon=""}){let elem=null,socialIDItems=[];return email&&socialIDItems.push({iconClass:"ftnt-email",text:email}),phone&&socialIDItems.push({iconClass:"fa-phone",text:phone}),username&&socialIDItems.push({iconClass:userIcon,text:username}),socialIDItems.length&&(elem=dom.elem("div",{className:"social-id-info"},{children:socialIDItems.map(row=>(function({iconClass:iconClass,text:text}){return dom.elem("div",{className:"light-text flex-row-centered"},{children:[dom.elem("f-icon",{className:`${iconClass} icon-sm`}),dom.elem("span",{textContent:dom.escapeHTML(text)})]})})(row))})),elem}return module._generateEndpointAvatarUrl=function(uid,unauthuser,defaultIcon,csfPath){var url="/api/v2/monitor/endpoint-control/avatar/download",params={};return csfPath&&(url="/csf/"+csfPath+url),(uid&&unauthuser||defaultIcon)&&(uid&&unauthuser&&(params.uid=uid,params.user=unauthuser),defaultIcon&&(params.default=defaultIcon),url+="?"+$.param(params)),url},module.generateEndpointAvatarElem=function(uid,unauthuser,defaultIcon,displayMode,csfPath){var elem=null;if(uid&&unauthuser||defaultIcon){var url=module._generateEndpointAvatarUrl(uid,unauthuser,defaultIcon,csfPath);elem=dom.elem("div",{className:"avatar-wrapper "+(displayMode||"")},{children:[dom.elem("img",{className:"avatar",src:url})]})}return elem},module.generateEndpointAvatar=function(uid,unauthuser,defaultIcon,displayMode,csfPath){var elem=module.generateEndpointAvatarElem(uid,unauthuser,defaultIcon,displayMode,csfPath);return elem?elem.outerHTML:""},module.userFormatFragment=function(params){var defaultClass,uid,defaultIcon,elems=[],user=params&&params.user,unauthuser=params&&params.unauthuser,userDisplayed=user||unauthuser;if(userDisplayed)defaultIcon=user?"authuser":"unauthuser",(uid=params.uid)&&params.isFortiClientUnauthuser&&unauthuser?(elems.push(module.generateEndpointAvatarElem(uid,unauthuser,defaultIcon,params.display_mode,params.csfPath)),params.quarantinedOnFortiClient&&elems.push(dom.elem("f-icon",{className:"ftnt-forticlient-quarantined",title:$.getInfo("FortiClient device quarantined")}))):(defaultClass=user?"fa-user-authenticated":"fa-user-unauthenticated",elems.push(dom.elem("f-icon",{className:defaultClass}))),elems.push(dom.elem("span",{textContent:userDisplayed})),params.suffix_label&&elems.push(dom.elem("span",{textContent:" - "+params.suffix_label}));else if(params.suffix_label){var seperatorPrefix=elems.length?" - ":"";elems.push(dom.elem("span",{textContent:seperatorPrefix+params.suffix_label}))}return dom.fragment(elems)},module.userFormatFn=function(params){var fragment=module.userFormatFragment(params);return fragment?dom.elem("div",{},{children:[fragment]}).innerHTML:""},module.headerFormatFn=function(params={}){const user=params.user,unauthuser=params.unauthuser,userDisplayed=user||unauthuser,quarantined=params.quarantined,banned=params.banned,emsQuarantined=params.emsQuarantined,uid=params.uid,defaultIcon=user?"authuser_72":"unauthuser_72",defaultClass=user?"fa-user-authenticated":unauthuser?"fa-user-unauthenticated":"fa-user-unknown",actionTakenClass=quarantined||banned||emsQuarantined?" avatar-quarantined":"";if(userDisplayed||params.addr){let thumbnailElem,infoElems=[];const riskLevelElem=function({banned:banned,quarantined:quarantined,emsQuarantined:emsQuarantined,riskSeverityLevel:riskSeverityLevel}={}){let riskLevel,riskReason,elem=null;emsQuarantined?(riskLevel="medium",riskReason="EMS Quarantined"):quarantined?(riskLevel="medium",riskReason="Quarantined"):banned?(riskLevel="medium",riskReason="Banned"):riskSeverityLevel&&"none"!==riskSeverityLevel&&(riskLevel=riskSeverityLevel,riskReason=`riskLabel::${riskSeverityLevel}`);riskLevel&&(elem=dom.elem("div",{className:"avatar-risk-container"},{children:[dom.elem("div",{className:`severity-label severity-${riskLevel}`,textContent:$.getInfo(riskReason)})]}));return elem}(params),socialIDElems=generateSocialIDElems({email:getUserInfoValue(params.userInfo,"mail")||params.email,phone:getUserInfoValue(params.userInfo,"telephoneNumber")||params.phone,userIcon:getAvatarUserIcon(params.avatarSource,params.iconType||defaultIcon),username:params.forticlientUsername});return thumbnailElem=uid&&params.isFortiClientUnauthuser&&unauthuser?module.generateEndpointAvatarElem(uid,unauthuser,defaultIcon,"large",params.csfPath):dom.elem("f-icon",{className:`icon-xxxl ${defaultClass}`}),userDisplayed&&infoElems.push(generateAvatarUserElem(userDisplayed)),params.addr&&infoElems.push(generateAvatarAddressElem(params.addr)),socialIDElems&&infoElems.push(socialIDElems),generateHeaderElems(thumbnailElem,infoElems,riskLevelElem,actionTakenClass)}},module.userInfoHeaderFormatFn=function(userInfo,thumbnail){if(userInfo){const headerElem=function(userInfo,thumbnail){if(userInfo){const thumbnailUrl=thumbnail&&dom.escapeHTML(URL.createObjectURL(thumbnail)),thumbnailElem=thumbnailUrl?dom.elem("div",{className:"avatar-wrapper large"},{children:[dom.elem("img",{className:"avatar",src:thumbnailUrl})]}):dom.elem("f-icon",{className:"icon-xxxl fa-user-unknown"}),username=getUserInfoValue(userInfo,"username"),showSoureip=userInfo&&userInfo.sourceip&&1===userInfo.sourceip.length,socialIDElems=generateSocialIDElems({email:getUserInfoValue(userInfo,"mail"),phone:getUserInfoValue(userInfo,"telephoneNumber")});let infoElems=[];return username&&infoElems.push(generateAvatarUserElem(username)),showSoureip&&infoElems.push(generateAvatarAddressElem(userInfo.sourceip[0])),socialIDElems&&infoElems.push(socialIDElems),generateHeaderElems(thumbnailElem,infoElems)}}(userInfo,thumbnail);if(headerElem)return dom.elem("div",{},{children:[headerElem]}).innerHTML}},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8),__webpack_require__(32),__webpack_require__(31),__webpack_require__(226),__webpack_require__(37),__webpack_require__(30),__webpack_require__(43),__webpack_require__(400)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared,fwebFormatters,dom,fwebIpLocation,fwebIp,fwebLog,febLang,fwebTooltipTable){"use strict";const{Omniselect:Omniselect,Tooltip:Tooltip,ipParser:ipParser}=ftnt_shared,{TooltipRow:TooltipRow,TooltipCollectionRow:TooltipCollectionRow,TooltipTable:TooltipTable}=fwebTooltipTable,{IPLocationService:IPLocationService}=fwebIpLocation,{translate:translate}=febLang,ipInfoTooltipTable=new TooltipTable({ip:new TooltipRow(translate("IP Address"),entry=>{const location=entry.location;return location&&location.countryISOCode?fwebFormatters.countryIconFormatter(location.countryISOCode,entry.ip):dom.elem("span",{textContent:entry.ip})}),reputation:new TooltipRow("",entry=>{let tags=[];return entry.suspicious&&tags.push({level:"high",reason:"Suspicious Usage"}),fwebFormatters.severityTagsFormatter(tags)}),owner:new TooltipRow("Owner",entry=>{if(entry.owner&&entry.owner.name)return entry.owner.name}),location:new TooltipRow(translate("location"),entry=>{const location=entry.location;if(location&&location.isValid)return location.toString()}),coordinates:new TooltipRow(translate("Latitude / Longitude"),entry=>{const location=entry.location;if(location&&location.isValid)return`${location.coordinates.latitude} / ${location.coordinates.longitude}`}),internetService:new TooltipCollectionRow(translate("Running Services"),null,null,null,{collectionValueFunction:entry=>entry.internetServices||[],collectionEntryFormatter:entry=>{try{return Omniselect.processedFormatEntrySync(entry)}catch(e){return fwebLog(e),entry.name}},collectionLimit:6}),dnsResolveHits:new TooltipCollectionRow(translate("Resolved Domain"),null,null,null,{collectionValueFunction:entry=>entry.domains||[],collectionEntryFormatter:entry=>entry.count?`${entry.domain} (${entry.count.toLocaleString()})`:entry.domain,collectionLimit:5})});class InternetServiceMatchEntry{constructor({id:id,name:name,owner:owner}){this.id=id,this.name=name,this.owner=owner,this.q_origin_key=name,this.datasource="firewall.internet-service-name"}}class ResolvedDomain{constructor({domain:domain,total:total}){this.domain=domain,this.count=total}}class IPInfo{constructor(ip){try{const ipAddress=ipParser.parse(ip);this.ip=ipAddress.addr.toString(),this.ipVersion=fwebIp.ipVersion(this.ip),4===this.ipVersion&&(this.isPrivate=!fwebIp.IpMask.isPublic(this.ip)),this.isValid=!0}catch(e){this.isValid=!1}}parse({location:location,internetServices:internetServices=[],domains:domains}){this.location=location,this.domains=domains,this.internetServices=internetServices,this._parseSuspicious(internetServices),this._parseOwner(internetServices)}_parseOwner(internetServices=[]){internetServices.length>0&&(this.owner={id:internetServices[0].owner.id,name:internetServices[0].owner.name})}_parseSuspicious(internetServices=[]){this.suspicious=internetServices.some(service=>["Tor-Relay.Node","Tor-Exit.Node"].includes(service.name))}}class IPInfoService{static async getIPInfo(ip){let ipInfo;if((ipInfo=ip instanceof IPInfo?ip:new IPInfo(ip)).isPrivate||!ipInfo.isValid)return ipInfo;let promises=[IPInfoService.queryIPLocation(ipInfo.ip),IPInfoService.queryDomainHits(ipInfo.ip)];4===ipInfo.ipVersion&&promises.push(IPInfoService.queryInternetService(ipInfo.ip));try{let[location,domains,internetServices=[]]=await Promise.all(promises);ipInfo.parse({location:location,internetServices:internetServices,domains:domains})}catch(e){fwebLog(e)}return ipInfo}static setupTooltip({element:element,ip:ip}){let ipInfo=new IPInfo(ip);if(ipInfo.isPrivate||!ipInfo.isValid)return;let tooltip=new Tooltip(IPInfoService.TOOLTIP_DISPLAY_OPTIONS),tooltipContent=dom.elem("div",null,{children:[dom.elem("f-icon",{className:"fa-loading"})]});return tooltip.showOnElementHover(element),element.classList.add("tooltip-hint"),tooltip.setContent(tooltipContent),tooltip.onShow(()=>{IPInfoService.getIPInfoTooltipContent.apply(null,[ipInfo]).then(contentElement=>{tooltip.setContent(contentElement)},error=>{tooltip.setContent(dom.createIconWithLabel("fa-warning",translate("Failed to retrieve info"))),fwebLog.error("Failed to render tooltip: ",error)})}),tooltip.onHide(()=>{tooltipContent.innerHTML="",tooltipContent.appendChild(dom.elem("f-icon",{className:"fa-loading"}))}),tooltip}static async getIPInfoTooltipContent(ip){const[ipInfo]=await Promise.all([IPInfoService.getIPInfo(ip),IPInfoService.getIPInfoTooltipData()]);return ipInfoTooltipTable.createElement(ipInfo)}static queryIPLocation(ip){return IPLocationService.getIPLocation(ip)}static async queryDomainHits(ip){try{let results=(await $.get(IPInfoService.URLS.DOMAIN_HITS_QUERY,{ip:ip})).results||[];return Array.isArray(results)||(results=[results]),results.filter(entry=>entry.resolved).map(entry=>new ResolvedDomain(entry))}catch(e){return[]}}static async queryInternetService(ip){try{return((await $.get(IPInfoService.URLS.INTERNET_SERVICE_QUERY,{ip:ip,mask:"255.255.255.255"})).results||[]).filter(service=>null!=service.name).sort((a,b)=>b.num_matched_services-a.num_matched_services).map(service=>new InternetServiceMatchEntry(service))}catch(e){return[]}}static getIPInfoTooltipData(){return Promise.all([Omniselect.getSourceData("firewall.internet-service-name")])}}return IPInfoService.URLS={DOMAIN_HITS_QUERY:"/api/v2/monitor/network/reverse-ip-lookup",INTERNET_SERVICE_QUERY:"/api/v2/monitor/firewall/internet-service-match"},IPInfoService.TOOLTIP_DISPLAY_OPTIONS={fixed:!0,padContent:!0,showDelay:!0,stopContentClickPropagation:!0},{IPInfo:IPInfo,IPInfoService:IPInfoService}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(225),__webpack_require__(27),__webpack_require__(8),__webpack_require__(1027)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,CMDB,Notify,ftnt_shared){"use strict";const Sliderin=ftnt_shared.Sliderin;var cmdbClone=function(args){var message,hidden,attribs,name,$prompt,slide,params={mkey:null,nkey:null,path:null,name:null,csfProxy:null,qType:-1,maxLength:35,global:!1},numeric=!1;$.extend(params,args);var slideOpen=function(){if(params.mkey_type&&"integer"===params.mkey_type)numeric=!0,params.title=$.getInfo("clone"),message=params.message||$.getInfo("Are you sure you want to clone this object?"),hidden=!0,attribs='value="0"';else{var newName=params.global?"g-Clone of":"Clone of";name=$.validator.format($.getInfo(newName),params.mkey).slice(0,params.maxLength),message=params.message||$.getInfo("clone_msg"),attribs='type="text" value="'+name+'" maxlength="'+params.maxLength+'"'}return $prompt=$('<section><div class="info-message">'+message+'</div><div class="error-message hidden"></div></section>').append('<section class="'+(hidden?"hidden":"")+'"><div class="field"><label for="clone-name">'+$.getInfo("Name")+'</label><div><input id="clone-name"'+attribs+"/></div></div></section>"),(slide=new Sliderin({content:$prompt,title:params.title||$.getInfo("clone")+' "'+params.mkey+'"',buttons:!0,okButtonClick:function(){var nkey=$("#clone-name",$prompt).val();if(nkey){if(params.mkey===nkey)return void $(".error-message",$prompt).html($.getInfo("err_duplicate_value")).removeClass("hidden");slide.update({okButtonDisabled:!0}),CMDB.clone(params.path,params.name,params.mkey,nkey,{type:params.qType,scope:params.global?"global":"vdom",csfProxy:params.csfProxy}).then(function(data){slide.done(numeric?data.mkey:nkey)},function(data){slide.update({okButtonDisabled:!1}),$(".error-message",$prompt).html($.getInfo(data.error||data.http_status)).removeClass("hidden")})}else $(".error-message",$prompt).html($.getInfo("err_name")).removeClass("hidden")}})).open(),slide.promise};return CMDB.schema(params.path,params.name).then(res=>{const schemaMkey=res.results.mkey;return res.results.children[schemaMkey]&&res.results.children[schemaMkey].hasOwnProperty("size")&&(params.maxLength=res.results.children[schemaMkey].size),slideOpen()},()=>slideOpen())};return cmdbClone.wfProfile=function({mkey:mkey,bwordMkey:bwordMkey,urlfilterMkey:urlfilterMkey,global:global,webProxyProfileMkey:webProxyProfileMkey}){var cloneProfile=cmdbClone({mkey:mkey,mkey_type:"string",path:"webfilter",name:"profile",global:global});return global?cloneProfile:cloneProfile.then(function(newProfileMkey){var cloneBword,cloneUrlfilter,cloneWebProxyProfile;bwordMkey&&(cloneBword=CMDB.clone("webfilter","content",bwordMkey,0,{},{name:newProfileMkey}));urlfilterMkey&&(cloneUrlfilter=CMDB.clone("webfilter","urlfilter",urlfilterMkey,0,{},{name:newProfileMkey}));webProxyProfileMkey&&(cloneWebProxyProfile=CMDB.clone("web-proxy","profile",webProxyProfileMkey,newProfileMkey));return $.when(cloneBword,cloneUrlfilter,newProfileMkey,cloneWebProxyProfile).fail(function(failData){failed(failData&&"object"==typeof failData&&failData.error?$.getInfo("unable to create profile subtable ({0})",[$.getInfo(failData.error)]):$.getInfo("unable to create profile subtable"),newProfileMkey,bwordMkey,urlfilterMkey,webProxyProfileMkey)})}).then(function(newBwordId,newUrlfilterId,newProfileMkey,newWebProxyProfileId){var editProfileIds,newIds={};let newUrlfilterMkey,newBwordMkey,newWebProxyProfileMkey;bwordMkey||urlfilterMkey?(bwordMkey&&(newBwordMkey=newBwordId[0].mkey,newIds["bword-table"]=newBwordMkey),urlfilterMkey&&(newUrlfilterMkey=newUrlfilterId[0].mkey,newIds["urlfilter-table"]=newUrlfilterMkey),newWebProxyProfileId&&(newWebProxyProfileMkey=newWebProxyProfileId[0].mkey),editProfileIds=function(urlfilterId,newWebProxyProfileMkey){const isGoogleDomainFilter=filter=>"*.google.com"===filter.url&&"wildcard"===filter.type&&"allow"===filter.action&&!!filter["web-proxy-profile"];if(urlfilterId&&newWebProxyProfileMkey)return(id=>CMDB.fetch("webfilter","urlfilter",{key:"id",pattern:id}).then(data=>data.results[0].entries))(urlfilterId).then(entries=>{for(let filter of entries)isGoogleDomainFilter(filter)&&(filter["web-proxy-profile"]=newWebProxyProfileMkey);return CMDB.edit("webfilter","urlfilter",urlfilterId,{entries:entries})});return Promise.resolve()}(newUrlfilterMkey,newWebProxyProfileMkey).then(()=>CMDB.edit("webfilter","profile",newProfileMkey,{web:newIds}).fail(function(){failed($.getInfo("failed to store subtable IDs"),newProfileMkey,newBwordMkey,newUrlfilterMkey,newWebProxyProfileMkey)}))):editProfileIds={mkey:newProfileMkey};return editProfileIds});function failed(reason,newProfileMkey,newBwordId,newUrlfilterId,newWebProxyProfileMkey){var msg=$.getInfo("Failed to create new webfilter profile {0}: {1}",[newProfileMkey,reason]);newBwordId&&CMDB.delete("webfilter","content",newBwordId),newUrlfilterId&&CMDB.delete("webfilter","urlfilter",newUrlfilterId),newWebProxyProfileMkey&&CMDB.delete("web-proxy","profile",newWebProxyProfileMkey),newProfileMkey&&(CMDB.delete("webfilter","profile",newProfileMkey),Notify.post(msg,"error"))}},cmdbClone.emailFilterProfile=function(mkey,bwlMkey){return cmdbClone({mkey:mkey,mkey_type:"string",path:"emailfilter",name:"profile"}).then(function(newProfileMkey){var cloneBwl;bwlMkey&&(cloneBwl=CMDB.clone("emailfilter","bwl",bwlMkey,0,{},{name:newProfileMkey}));return $.when(cloneBwl,newProfileMkey).fail(function(failData){failed(failData&&"object"==typeof failData&&failData.error?$.getInfo("unable to create profile subtable ({0})",[$.getInfo(failData.error)]):$.getInfo("unable to create profile subtable"),newProfileMkey,0)})}).then(function(newBwlId,newProfileMkey){var editProfileId;editProfileId=bwlMkey?CMDB.edit("emailfilter","profile",newProfileMkey,{"spam-bwl-table":newBwlId[0].mkey}).fail(function(){failed($.getInfo("failed to store subtable ID"),newProfileMkey,newBwlId)}):{mkey:newProfileMkey};return editProfileId});function failed(reason,newProfileMkey,newBwlId){var msg=$.getInfo("Failed to create new email filter profile {0}: {1}",[newProfileMkey,reason]);newBwlId&&CMDB.delete("emailfilter","bwl",newBwlId),newProfileMkey&&(CMDB.delete("emailfilter","profile",newProfileMkey),Notify.post(msg,"error"))}},cmdbClone.avProfile=function(mkey,awlMkey,ablMkey,global){var cloneProfile=cmdbClone({mkey:mkey,mkey_type:"string",path:"antivirus",name:"profile",global:global});return global?cloneProfile:cloneProfile.then(function(newProfileMkey){var cloneAwl,cloneAbl;awlMkey&&(cloneAwl=CMDB.clone("dlp","filepattern",awlMkey,0,{},generateFilepatternProperties(newProfileMkey)));ablMkey&&(cloneAbl=CMDB.clone("dlp","filepattern",ablMkey,0,{},generateFilepatternProperties(newProfileMkey)));return $.when(cloneAwl,cloneAbl,newProfileMkey).fail(function(failData){failed(failData&&"object"==typeof failData&&failData.error?$.getInfo("unable to create profile subtable ({0})",[$.getInfo(failData.error)]):$.getInfo("unable to create profile subtable"),newProfileMkey,awlMkey,ablMkey)});function generateFilepatternProperties(profileMkey){return{name:"av_"+profileMkey,comment:"Automatically generated by AntiVirus profile: "+profileMkey}}}).then(function(newAwlId,newAblId,newProfileMkey){var editProfileIds,newIds={};awlMkey||ablMkey?(awlMkey&&(newIds["analytics-wl-filetype"]=newAwlId[0].mkey),ablMkey&&(newIds["analytics-bl-filetype"]=newAblId[0].mkey),editProfileIds=CMDB.edit("antivirus","profile",newProfileMkey,newIds).fail(function(){failed($.getInfo("failed to store subtable IDs"),newProfileMkey,newAwlId.mkey,newAblId.mkey)})):editProfileIds={mkey:newProfileMkey};return editProfileIds});function failed(reason,newProfileMkey,newAwlId,newAblId){var msg=$.getInfo("Failed to create new AntiVirus filter profile {MKEY}: {REASON}",[newProfileMkey,reason]);newAwlId&&CMDB.delete("dlp","filepattern",newAwlId),newAblId&&CMDB.delete("dlp","filepattern",newAblId),newProfileMkey&&(CMDB.delete("antivirus","profile",newProfileMkey),Notify.post(msg,"error"))}},cmdbClone}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(28)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(patterns){"use strict";const isFunction=val=>"function"==typeof val;var IP_HOST_PARTIAL=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){1,2}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])?\.?$/,IP_RANGE2_GROUPS=/^([^[]+)\[(\d+)-(\d+)\]/,subnet=function(){function subnet_first(address,mask){var mask_raw=mask.toNumber(),shift_amount=6===address.getVersion()?128-mask_raw:32-mask_raw;return address.toInteger().shiftRight(shift_amount).shiftLeft(shift_amount)}function subnet_last(address,mask){var mask_raw=mask.toNumber(),shift_amount=6===address.getVersion()?128-mask_raw:32-mask_raw;return address.toInteger().shiftRight(shift_amount).add(goog.math.Integer.ONE).shiftLeft(shift_amount).subtract(goog.math.Integer.ONE)}function subnet_contains(subnet_address,mask,address){return isFunction(address.toInteger)&&(address=address.toInteger()),address.greaterThanOrEqual(subnet_first(subnet_address,mask))&&address.lessThanOrEqual(subnet_last(subnet_address,mask))}function between(start,end,value){return value.greaterThanOrEqual(start)&&value.lessThanOrEqual(end)}return{first:subnet_first,last:subnet_last,contains:subnet_contains,intersects:function(a_address,a_mask,b_address,b_mask){return subnet_contains(a_address,a_mask,subnet_first(b_address,b_mask))||subnet_contains(a_address,a_mask,subnet_last(b_address,b_mask))||subnet_contains(b_address,b_mask,subnet_first(a_address,a_mask))||subnet_contains(b_address,b_mask,subnet_last(a_address,a_mask))},range_contains:function(first,last,value){return isFunction(first.toInteger)&&(first=first.toInteger()),isFunction(last.toInteger)&&(last=last.toInteger()),isFunction(value.toInteger)&&(value=value.toInteger()),between(first,last,value)},range_intersects:function(a_first,a_last,b_first,b_last){return isFunction(a_first.toInteger)&&(a_first=a_first.toInteger()),isFunction(a_last.toInteger)&&(a_last=a_last.toInteger()),isFunction(b_first.toInteger)&&(b_first=b_first.toInteger()),isFunction(b_last.toInteger)&&(b_last=b_last.toInteger()),between(a_first,a_last,b_first)||between(a_first,a_last,b_last)||between(b_first,b_last,a_last)||between(b_first,b_last,a_last)}}}();var ip6_object={search:function(entry,query){var _ref,address,mask,query_address,query_mask,str;return str=query,query=patterns.commonRegExp.IP6_HOST.test(str)||patterns.commonRegExp.IP6_SUBNET.test(str)?str:str.indexOf("::")>-1?":"!==str[str.length-2]&&":"===str[str.length-1]?str.substr(str.length-1):str:":"===str[str.length-1]?str+":":str+"::",_ref=entry.indexOf("/"),address=goog.net.IpAddress.fromString(entry.substring(0,_ref)),mask=goog.math.Integer.fromString(entry.substring(_ref+1)),patterns.commonRegExp.IP6_HOST.test(query)?subnet.contains(address,mask,goog.net.IpAddress.fromString(query))?[!0]:[]:patterns.commonRegExp.IP6_SUBNET.test(query)?(_ref=query.indexOf("/"),query_address=goog.net.IpAddress.fromString(query.substring(0,_ref)),query_mask=goog.math.Integer.fromString(query.substring(_ref+1)),subnet.intersects(address,mask,query_address,query_mask)?[!0]:[]):[]}};function ip4_range_calculate(str){var _ref,address,mask,mask_str,mask_int;return patterns.commonRegExp.IP_SUBNET.test(str)?(_ref=str.indexOf("/"))<0?[address=goog.net.IpAddress.fromString(str),address]:(mask_str=str.substring(_ref+1),patterns.commonRegExp.IP_MASK.test(mask_str)?((mask_int=goog.net.IpAddress.fromString(mask_str).toInteger()).toString=goog.math.Integer.prototype.toString,mask=goog.math.Integer.fromNumber(mask_int.toString(2).lastIndexOf("1")+1)):mask=goog.math.Integer.fromString(mask_str),address=goog.net.IpAddress.fromString(str.substring(0,_ref)),[subnet.first(address,mask),subnet.last(address,mask)]):patterns.commonRegExp.IP_RANGE.test(str)||patterns.commonRegExp.IP_RANGE_SPACES.test(str)?(_ref=str.split("-"),[goog.net.IpAddress.fromString(_ref[0].trim()),goog.net.IpAddress.fromString(_ref[1].trim())]):patterns.commonRegExp.IP_RANGE2.test(str)?(_ref=IP_RANGE2_GROUPS.exec(str),[goog.net.IpAddress.fromString(_ref[1]+_ref[2]),goog.net.IpAddress.fromString(_ref[1]+_ref[3])]):patterns.commonRegExp.IP_WILDCARD.test(str)?[goog.net.IpAddress.fromString(str.replace("*","0")),goog.net.IpAddress.fromString(str.replace("*","255"))]:void 0}var ip4_basic_search=function(entry_ranges,query){var _ref,query_address,query_first,query_last,range,first,last;if(patterns.commonRegExp.IP_HOST.test(query)?query_address=goog.net.IpAddress.fromString(query):IP_HOST_PARTIAL.test(query)&&(query=function(str){var remaining=3-(str.split(".").length-1),first=str,last=str;for(str.length-str.lastIndexOf(".")<=1&&(first+="0",last+="255");remaining>0;remaining-=1)first+=".0",last+=".255";return first+"-"+last}(query)),null==query_address){if(null==(_ref=ip4_range_calculate(query)))return[];query_first=_ref[0],query_last=_ref[1]}return range=entry_ranges[0],Array.isArray(range)?(first=range[0],last=range[1],(null==query_address?subnet.range_intersects(first,last,query_first,query_last):subnet.range_contains(first,last,query_address))?[[!0]]:[]):[]},IP_ALL_QUERY_PARTIAL=/(^(0\.){1,3}(0)?$)|(^0\.0\.0\.0)/,IP_ALL_QUERY=/^0\.0\.0\.0\/(0|0\.0\.0\.0)$/,cmdb={firewall:{address:function(data,query){var range,range_str,is_address_all;switch(data.type){case"iprange":if(range=[goog.net.IpAddress.fromString(data["start-ip"]),goog.net.IpAddress.fromString(data["end-ip"])],IP_ALL_QUERY.test(query))return[];break;case"ipmask":if((is_address_all="0.0.0.0/0.0.0.0"===(range_str=data.address||(null!=data.subnet?data.subnet.replace(" ","/"):null)))&&!IP_ALL_QUERY_PARTIAL.test(query)||!is_address_all&&IP_ALL_QUERY.test(query))return[];null!=range_str&&(range=ip4_range_calculate(range_str));break;case"wildcard":null!=(range_str=data.address||(null!=data.subnet?data.subnet.replace(" ","/"):null))&&(range=ip4_range_calculate(range_str));break;default:return[]}return null==range||null==range[0]?[]:ip4_basic_search([range],query)}}};return{IP_HOST_PARTIAL:IP_HOST_PARTIAL,IP_RANGE2_GROUPS:IP_RANGE2_GROUPS,IP_ALL:"0.0.0.0/0.0.0.0",IP_ALL_QUERY:IP_ALL_QUERY,IP_ALL_QUERY_PARTIAL:IP_ALL_QUERY_PARTIAL,subnet_util:subnet,ip4_range_calculate:ip4_range_calculate,ip4_basic_search:ip4_basic_search,ip4_wildcard_search:function(ip,mask,query){if(!(ip4_range_calculate(query)&&ip4_range_calculate(ip)&&ip4_range_calculate(mask)))return!1;for(var queryArray=query.split("."),upperBounds=[],lowerBounds=ip.split("."),wildcardMaskArray=mask.split("."),i=0;i<4;i++){var hostsCount=255-wildcardMaskArray[i];if(upperBounds[i]=parseInt(lowerBounds[i])+hostsCount,!(queryArray[i]>=lowerBounds[i]&&queryArray[i]<=upperBounds[i]))return!1}return!0},ip6:ip6_object,ip4:{},cmdb:cmdb}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(49),__webpack_require__(30),__webpack_require__(8),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(persist,fwebLog,ftnt_shared,fwebBuild){"use strict";const Omniselect=ftnt_shared.Omniselect;var module={},get_local_history=function(){var value;try{if(value=persist.get("cmdb_edit_history")){if(!Array.isArray(value))throw new Error}else value=[]}catch(e){fwebLog.warn("Failed to read local CMDB edit history due to invalid format"),value=[]}return value},update_local_history=function(value){value.length>100&&(value=value.slice(0,100)),persist.put("cmdb_edit_history",value)};module.update_history_from_cookie=function(){var local_history,cookie_history,cookie_name=top.state.cmdb_edit_history_cookie_name,cookie_value=persist.getCookie(cookie_name,!0);if(cookie_value)try{if(cookie_history=JSON.parse(cookie_value),!Array.isArray(cookie_history))throw new Error;local_history=get_local_history(),cookie_history.reverse(),local_history.unshift.apply(local_history,cookie_history),update_local_history(local_history)}catch(e){fwebLog.warn("Failed to update CMDB edit history from cookie due to invalid format")}persist.removeCookie(cookie_name,"/")},module.notify_cmdb_edits=function(){var i,entry,local_history=get_local_history(),to_notify=[];for(i=0;i<local_history.length&&!(entry=local_history[i])._notified;i++)to_notify.push(entry.path+"."+entry.name),entry._notified=!0;to_notify.length&&(Omniselect.notifySourceChanged(to_notify),update_local_history(local_history))},module.get_edit_history=function(){return get_local_history()},module.clear_edit_history=function(){persist.remove("cmdb_edit_history")},module.record_cmdb_edit=function(path,name,mkey){var local_history=get_local_history();local_history.unshift({path:path,name:name,mkey:mkey}),update_local_history(local_history)};const SYMBOLS=fwebBuild.SYMBOLS||{},CMDB_NAME_LEN_MAP={NAME:SYMBOLS.NAMELEN,NAME2:SYMBOLS.NAMELEN2,NAME3:SYMBOLS.NAMELEN3,NAME80:SYMBOLS.NAMELEN80};return module.CMDB_NAME_TYPE={NAME:"NAME",NAME2:"NAME2",NAME3:"NAME3",NAME80:"NAME80"},module.uniqueCmdbObjectName=((cmdbPath,cmdbName,nameType)=>{const uniqueId=ftnt_shared.util.uniqueID(),maxPrefixLen=(CMDB_NAME_LEN_MAP[nameType]||SYMBOLS.NAMELEN)-uniqueId.length-1;return`${`Auto-${cmdbPath}-${cmdbName}`.slice(0,maxPrefixLen)}${uniqueId}`}),module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,,function(module,exports,__webpack_require__){"use strict";const fastXmlParser=__webpack_require__(749);function getAWSSetItem(obj,setName){const item=obj&&obj[setName]&&obj[setName].item;return item?Array.isArray(item)?item:[item]:[]}function processAwsInstances(xmlDoc){const instances=[];try{const data=fastXmlParser.parse(xmlDoc);getAWSSetItem(data&&data.DescribeInstancesResponse,"reservationSet").forEach(function(reservation){getAWSSetItem(reservation,"instancesSet").forEach(function(instance){instances.push(instance)})})}catch(e){}return instances}module.exports={processAwsInstances:processAwsInstances,getAWSSetItem:getAWSSetItem,processNetworkInterfaceSet:function(ec2Response){try{const result=Object.keys(ec2Response.results||{}).reduce(function(results,key){const data=ec2Response.results[key];return results.concat(processAwsInstances(data))},[]).reduce((acc,instance)=>(getAWSSetItem(instance,"networkInterfaceSet").forEach(intf=>{intf.macAddress&&(acc[intf.macAddress]={q_origin_key:intf.macAddress,instanceId:instance.instanceId,subnetId:intf.subnetId,instance:instance})}),acc),{}),resultArr=Object.values(result);return resultArr.mapping=resultArr,resultArr}catch(e){return[]}},processAwsFindings:function(inspectorResponse){try{const findingsMap=inspectorResponse&&inspectorResponse.results||{},results=[],map={};let instance;return Object.keys(findingsMap).forEach(function(connectorKey){(findingsMap[connectorKey]&&findingsMap[connectorKey].findings||[]).forEach(function(finding){let instanceID,cveID;(finding.attributes||[]).forEach(function(attribute){"INSTANCE_ID"===attribute.key&&(instanceID=attribute.value),"CVE_ID"===attribute.key&&(cveID=attribute.value)}),instanceID&&cveID&&(map[instanceID]||(instance={q_origin_key:instanceID,cve:[]},results.push(instance),map[instanceID]=instance),map[instanceID].cve.indexOf(cveID)<0&&map[instanceID].cve.push(cveID))})}),results.mapping=results.reduce((prev,_instance)=>(prev[_instance.q_origin_key]=_instance,prev),{}),results}catch(e){return[]}}}},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71),FosState=__webpack_require__(175),FosCommonSymbols=__webpack_require__(67),RiskScore=__webpack_require__(429).util.RiskScore,utilAws=__webpack_require__(133),UserDevice=__webpack_require__(417),CLOUD_VM_ICON_NAME_MAP={amazon:"ftnt-fortigate-aws",azure:"ftnt-fortigate-azure",gcp:"ftnt-fortigate-gcp",opc:"ftnt-fortigate-opc"},notEmptyIp=function(ip){return ip&&"0.0.0.0"!==ip?ip:""};function _getPathInfo(csfEntry,proxyRootSerial){let path,pathFromRoot;const isCurrent=csfEntry.serial===proxyRootSerial;if(isCurrent)path=void 0,pathFromRoot=void 0;else{path=(pathFromRoot=csfEntry.path)&&pathFromRoot.includes(proxyRootSerial)&&!pathFromRoot.startsWith(proxyRootSerial)?pathFromRoot.substring(pathFromRoot.indexOf(proxyRootSerial)):pathFromRoot}let parentFortigateId=csfEntry.parent_serial||csfEntry.upstream_serial;if(!parentFortigateId){const pathComponents=csfEntry.path.split(":");parentFortigateId=pathComponents[pathComponents.length-2]}return{isCurrent:isCurrent,path:path,pathFromRoot:pathFromRoot,parentFortigateId:parentFortigateId}}class HA{constructor(csfEntry,peerFortigateSerial){this.csfEntry=csfEntry,this.peerFortigateSerial=peerFortigateSerial,this.hostname=csfEntry.hostname,this.serial=csfEntry.serial_no}}class CsfFortiGate extends BaseCsfDevice{constructor(csfEntry={},proxyRootSerial="",stateResponse={},fwebBuildResponse={},objectUrlsResponse={results:{by_type:{}}},interfacesResponse={},csfSettings={},fortilinkDetectedDevices=[],userDevices=[],bannedUsers=[],quarantinedUsers=[],logThreatWeight={},resourceUsageResponse={results:{}},awsEc2Response={results:{}},awsInspectorResponse={results:{}},sdWanMembersResponse={results:{}},isFirmwareCompatible=!0){const{parentFortigateId:parentFortigateId}=_getPathInfo(csfEntry,proxyRootSerial);super(csfEntry,csfEntry.serial,parentFortigateId),this.serial=csfEntry.serial,this.proxyRootSerial=proxyRootSerial,this.action="accept",this.csfEntry=null,this.parentDownstreamIP=null,this.adminPort=null,this.mgmtPort=null,this.upstreamStatus=null,this.upstreamInterfaceName=null,this.haMode=null,this.isHaMaster=!1,this.haGroupId=null,this.parentFortigateHostname=void 0,this.isCurrent=!1,this.path=void 0,this.pathFromRoot=void 0,this.state=null,this.model=null,this.modelLabel=null,this.version=null,this.build=null,this.upstreamIP=null,this.managementIP=null,this.isPreAuthorized=!1,this.isRoot=!1,this.ha=[],this.fortilinkDevices=[],this.fortilinkDeviceMapping={},this.userDevices=[],this.userDeviceMapping={},this.quarantinedUsers=[],this.quarantinedUserMapping={},this.bannedUsers=[],this.bannedUserMapping={},this.logThreatWeight={},this.resourceUsage={},this.awsInstance=null,this.awsInstanceId="",this.awsInstanceCVEs=[],this.awsInstances=[],this.awsInstancesCVEs=[],this.sdWanMembersInfo={},this.state=null,Object.defineProperty(this,"vdom",{get:()=>this.state?this.state.current_vdom:void 0}),this.samlRole=null,this._updatePath(csfEntry,proxyRootSerial),this.updateCsfEntry(csfEntry),this._updateStateInformation(stateResponse,fwebBuildResponse,objectUrlsResponse),this._updateInterfaces(interfacesResponse),this._updateCsfSettings(csfSettings),this._updateFortilinkDetectedDevices(fortilinkDetectedDevices),this._updateQuarantinedUsers(quarantinedUsers),this._updateBannedUsers(bannedUsers),this._updateLogThreatWeight(logThreatWeight),this._updateResourceUsage(resourceUsageResponse),this._updateUserDevicesAndAwsInstanceInfo(userDevices,awsEc2Response,awsInspectorResponse),this._updateSdWanMemberInfo(sdWanMembersResponse),this._updateHA(),Object.defineProperty(this,"isFirmwareCompatible",{get:()=>isFirmwareCompatible,configurable:!0})}updateCsfEntry(csfEntry){this.csfEntry=csfEntry,this.hostname=csfEntry.host_name,this.parentDownstreamIP=csfEntry.ip_str,this.adminPort=csfEntry.admin_port,this.managementIP=csfEntry.mgmt_ip_str,this.mgmtPort=csfEntry.mgmt_port,this.upstreamStatus=csfEntry.upstream_status,this.upstreamInterfaceName=this.isCurrent?csfEntry.upstream_intf:csfEntry.downstream_intf,this.haMode=csfEntry.ha_mode,this.haGroupName=csfEntry.ha_group_name,this.haGroupId=csfEntry.ha_group_id,this.isHaMaster=csfEntry.is_ha_master,this.parentFortigateHostname=csfEntry.parent_hostname,this.firmware=csfEntry.firmware_version_major&&{major:csfEntry.firmware_version_major,minor:csfEntry.firmware_version_minor,build:csfEntry.firmware_version_build,patch:csfEntry.firmware_version_patch}}static getPathInfo(csfEntry,proxyRootSerial){return _getPathInfo(csfEntry,proxyRootSerial)}_updatePath(csfEntry,proxyRootSerial){const{isCurrent:isCurrent,path:path,pathFromRoot:pathFromRoot,parentFortigateId:parentFortigateId}=this.constructor.getPathInfo(csfEntry,proxyRootSerial);this.isCurrent=isCurrent,this.path=path,this.pathFromRoot=pathFromRoot,this.parentFortigateId||(this.parentFortigateId=parentFortigateId)}_updateStateInformation(stateResponse,fwebBuildResponse,objectUrlsResponse){if(!this.state){const fortigate=this;this.state=new FosState(stateResponse,this.proxyRootSerial,{fwebBuildResponse:fwebBuildResponse,objectUrlsResponse:objectUrlsResponse,fortigate:fortigate}),this.state.current_vdom=this.isCurrent?stateResponse.current_vdom:stateResponse.initial_vdom}this.model=this.state.model,this.state.model_name&&this.state.model_number&&(this.modelLabel=`${this.state.model_name} ${this.state.model_number}`),this.version=this.state.version,this.build=this.state.build,this.hostname=this.state.hostname}_updateInterfaces(interfacesResponse){this.interfaces=interfacesResponse.list||[],this.interfaceMap=interfacesResponse.map||{},this.upstreamInterfaceName&&(this.upstreamInterface=this.isFirmwareCompatible?this.interfaceMap[this.upstreamInterfaceName]:this.createDummyInterface(this.upstreamInterfaceName),this.upstreamInterface.q_origin_key=this.upstreamInterface.name)}_updateCsfSettings(csfSettings){var obj;obj=csfSettings,0!==Object.keys(obj).length||obj.constructor!==Object?(this.upstreamIP=csfSettings["upstream-ip"],this.managementIP=csfSettings["management-ip"],this.isPreAuthorized=!csfSettings["group-password"],this.isRoot="enable"!==csfSettings.status||!notEmptyIp(this.upstreamIP)):this.isRoot=!this.pathFromRoot}_updateFortilinkDetectedDevices(fortilinkDetectedDevices){this.fortilinkDeviceMapping=fortilinkDetectedDevices.reduce((prev,device)=>{let mac=device.mac&&device.mac.toLowerCase();if(mac){let existing=prev[mac];(!existing||device.last_seen<existing.last_seen)&&(prev[mac]=device)}return prev},{}),this.fortilinkDevices=Object.keys(this.fortilinkDeviceMapping).map(mac=>this.fortilinkDeviceMapping[mac])}_updateQuarantinedUsers(quarantinedUsers){this.quarantinedUsers=quarantinedUsers,this.quarantinedUserMapping=quarantinedUsers.reduce((prev,target)=>(Array.isArray(target.macs)?target.macs.forEach(mac=>{mac.mac&&(prev[mac.mac]=mac)}):target.mac&&(prev[target.mac]=target),prev),{})}_updateBannedUsers(bannedUsers){this.bannedUsers=bannedUsers.filter(item=>item.ip_address),this.bannedUserMapping=this.bannedUsers.reduce((prev,item)=>(prev[item.ip_address]=item,prev),{})}_updateLogThreatWeight(logThreatWeight){this.logThreatWeight=logThreatWeight,this.riskScore=new RiskScore(this.logThreatWeight.level)}_updateResourceUsage(resourceUsageResponse){const TYPE_AVERAGE="average",MAPPING={cpuUsage:{key:"cpu",type:TYPE_AVERAGE},memoryUsage:{key:"mem",type:TYPE_AVERAGE},sessionCount:{key:"session",type:"latest"}},results=resourceUsageResponse.results,usage={};for(let[property,{key:key,type:type}]of Object.entries(MAPPING)){const firstSample=results[key]&&results[key][0];let value;if(firstSample&&type===TYPE_AVERAGE){const lastMinuteSamples=firstSample.historical["1-min"].values;value=Math.round(lastMinuteSamples.reduce((previous,current)=>previous+current[1],0)/lastMinuteSamples.length)}else firstSample&&(value=firstSample.current);usage[property]=value}this.resourceUsage=usage}_updateUserDevicesAndAwsInstanceInfo(userDevices,awsEc2Response,awsInspectorResponse){if(this.isAWS()){const awsInstances=utilAws.processNetworkInterfaceSet(awsEc2Response),awsInstancesCVEs=utilAws.processAwsFindings(awsInspectorResponse);Object.keys(this.interfaceMap).some(intfName=>{const intfMac=this.interfaceMap[intfName].mac_address,awsInstance=awsInstances.mapping[intfMac];if(awsInstance)return this.awsInstance=awsInstance,this.awsInstanceId=awsInstance.instanceId,this.interfaceMap[intfName].awsSubnetId=awsInstance.subnetId,this.awsInstanceCVEs=this.awsInstanceId&&awsInstancesCVEs.mapping[this.awsInstanceId]&&awsInstancesCVEs.mapping[this.awsInstanceId].cve||[],this.awsSecurityGroups=awsInstance.groupSet,!0}),this.awsInstances=awsInstances,this.awsInstancesCVEs=awsInstancesCVEs,this._updateUserDevices(userDevices,awsInstances,awsInstancesCVEs)}else{const awsInstances=[],awsInstancesCVEs=[];awsInstances.mapping={},awsInstancesCVEs.mapping={},this._updateUserDevices(userDevices,awsInstances,awsInstancesCVEs)}}_updateUserDevices(userDevices,awsInstances,awsInstancesCVEs){this.userDeviceMapping=userDevices.reduce((prev,device)=>{let mac=device.mac&&device.mac.toLowerCase();if(mac){let existing=prev[mac];if(!existing||device.last_seen<existing.last_seen){const awsInstance=awsInstances.mapping[mac],awsInstanceId=awsInstance&&awsInstance.instanceId,CVEs=awsInstanceId&&awsInstancesCVEs.mapping[awsInstanceId]&&awsInstancesCVEs.mapping[awsInstanceId].cve||[],userDevice=new UserDevice(device,this.serial,awsInstanceId,CVEs,!1);prev[mac]=userDevice,(device.other_macs||[]).forEach(entry=>{let otherMac=entry.mac.toLowerCase();prev[otherMac]=userDevice})}}return prev},{}),this.userDevices=Object.keys(this.userDeviceMapping).map(mac=>this.userDeviceMapping[mac])}_updateSdWanMemberInfo(sdWanMembersResponse){this.sdWanMembersInfo=sdWanMembersResponse.results}createDummyInterface(intfName){if(this.interfaceMap[intfName])return this.interfaceMap[intfName];return this.interfaceMap[intfName]={name:intfName,isDummy:!0}}_updateHA(){this.state.ha_mode>0&&(this.ha=(this.csfEntry.ha_list||[]).filter(entry=>this.serial!==entry.serial_no).map(entry=>new HA(entry,this.serial)))}isAWS(){return"FGTAWS"===this.model||"FGVMA6"===this.model}isAzure(){return"FGTAZR"===this.model||"FGVMAZ"===this.model}isGCP(){return"FGTGCP"===this.model||"FGVMGC"===this.model}isOPC(){return"FGVMO6"===this.model}cloudVM(){return(this.isAWS()?"amazon":this.isAzure()&&"azure")||this.isGCP()&&"gcp"||this.isOPC()&&"opc"||void 0}getIconClass(isClusterIcon){if("deny"===this.action)return"fa-disabled";let fortigateType="ftnt-standard-fortigate";if(this.state&&(fortigateType=this.ha.length&&(isClusterIcon?"ftnt-fortigate-marketing-ha":"ftnt-fortigate-marketing-master")||this.state.is_vm&&"ftnt-standard-fortigate-vm"||"FortiWiFi"===this.state.model_name&&"ftnt-standard-fortiwifi"||"ftnt-standard-fortigate"),this.isFirmwareCompatible){let cloudVmIcon=CLOUD_VM_ICON_NAME_MAP[this.cloudVM()];cloudVmIcon&&(fortigateType=`${fortigateType} ${cloudVmIcon}`)}else fortigateType=`${fortigateType} ftnt-incompatible-fortigate disabled`;return this.action||(fortigateType=`${fortigateType} discovered`),`${fortigateType} security-fabric-node`}getLabel(){return this.hostname||this.state&&this.state.hostname||this.serial}getLabelClass(){return(this.isCurrent?"current-fortigate":!this.isFirmwareCompatible&&"disabled")||""}getManagementPort(){return this.mgmtPort||this.adminPort}getManagementIP(){const intf=this.upstreamInterface||{},outgoingIP=intf.ipv4_addresses&&intf.ipv4_addresses[0]&&intf.ipv4_addresses[0].ip;return notEmptyIp(this.managementIP)?this.managementIP||"":outgoingIP||this.parentDownstreamIP||""}getManagementURL(){const port=this.getManagementPort(),portStr=port&&443!==port?`:${port}`:"",ip=this.getManagementIP();return ip?`https://${ip}${portStr}`:""}isAuthorized(){return!0}isConnected(){return!0}requiresAuthorizationDecision(){return!1}createCSFURI(uri){let result=uri;return this.isCurrent||(result=`/csf/${this.path}${uri}`),result}[FosCommonSymbols.SERIALIZE_TO_TOPOLOGY_REPORT](){const serialized=JSON.parse(JSON.stringify(this));return["interfaces","interfaceMap","userDevices","userDeviceMapping","fortilinkDevices","fortilinkDeviceMapping"].forEach(key=>delete serialized[key]),serialized.csfEntry={path:this.csfEntry.path,serial:this.csfEntry.serial,upstream_serial:this.csfEntry.upstream_serial,parent_serial:this.csfEntry.parent_serial},delete serialized.state.responseData,serialized}static[FosCommonSymbols.DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData){const instance=new this(instanceJSONData.csfEntry,instanceJSONData.proxyRootSerial);return instanceJSONData.state=Object.assign(instance.state,instanceJSONData.state),Object.assign(instance,instanceJSONData),instance}}class CsfGlobalFortiGate extends CsfFortiGate{constructor(csfEntry,proxyRootSerial){super(csfEntry,proxyRootSerial),this.updateCsfEntry(csfEntry),this.isGlobal=!0,this.ipAddress=this.parentDownstreamIP,this.isRoot=this.pathFromRoot===this.serial}[FosCommonSymbols.SERIALIZE_TO_TOPOLOGY_REPORT](){const serialized=super[FosCommonSymbols.SERIALIZE_TO_TOPOLOGY_REPORT]();return["state","ha","quarantinedUsers","quarantinedUserMapping","bannedUsers","bannedUserMapping","logThreatWeight","resourceUsage","awsInstance","awsInstanceId","awsInstanceCVEs","awsInstances","awsInstancesCVEs","riskScore","modelLabel"].forEach(key=>delete serialized[key]),serialized}}module.exports={CsfFortiGate:CsfFortiGate,CsfGlobalFortiGate:CsfGlobalFortiGate,CsfSlaveFortiGate:class extends CsfFortiGate{constructor(masterFgt,serial,hostname){super(masterFgt.csfEntry,masterFgt.proxyRootSerial),this.id=serial,this.hostname=hostname,this.isHaMaster=!1,this.isHaSlave=!0,this.ha=[masterFgt]}getIconClass(){return"ftnt-fortigate-marketing-slave security-fabric-node"}getLabel(){return this.hostname||this.id}},CsfUpstreamFortiGate:class extends CsfGlobalFortiGate{constructor(currentFortigate){const pathComponents=currentFortigate.csfEntry.path.split(":"),length=pathComponents.length,upstreamPath=pathComponents.slice(0,length-1).join(":");super({ip_str:currentFortigate.state.csf_upstream_ip,host_name:currentFortigate.parentFortigateHostname,serial:currentFortigate.parentFortigateId,path:upstreamPath},currentFortigate.id),this.isUpstreamFgt=!0}},HA:HA}},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(79),__webpack_require__(31),__webpack_require__(188)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fUtilFirmware,fUtilDom){function ExtensionDeviceFirmware(injector,params){if(injector.injectMarked(this),!params.firmwareVersion)throw new Error("No firmware version provided.");if(!params.deviceType)throw new Error("No device type provided.");this._reset(),this._firmwareVersion=params.firmwareVersion,this._deviceType=params.deviceType,this.available=params.available,this.imageId=params.imageId}function UpgradableExtensionDevice(injector,params){injector.injectMarked(this),this._init(params)}return ExtensionDeviceFirmware.prototype._reset=function(){this._versionComponents=null,this._versionStrings={compact:null,complete:null}},ExtensionDeviceFirmware.prototype.VERSION_STRING_TYPES={COMPACT:"compact",COMPLETE:"complete"},ExtensionDeviceFirmware.prototype._PATCH_TEMPLATE=".{{ patch }}",ExtensionDeviceFirmware.prototype.VERSION_TEMPLATES={COMPACT:"v{{ major }}.{{ minor }}{{ patchTemplate }}",COMPLETE:"{{ model }}-v{{ major }}.{{ minor }}{{ patchTemplate }}-build{{ build }}",NO_MODEL:"v{{ major }}.{{ minor }}{{ patchTemplate }}-build{{ build }}"},ExtensionDeviceFirmware.prototype.VERSION_REGEX=/^(\S+)-v(\d+)\.(\d+)\.?(\d+)?-build(\d+)/g,ExtensionDeviceFirmware.prototype.getReleaseNoteDeviceType=function(){return this._deviceType},ExtensionDeviceFirmware.prototype.getVersionComponents=function(){return this._versionComponents||this._updateVersionComponents(),this._versionComponents},ExtensionDeviceFirmware.prototype._updateVersionComponents=function(){this.VERSION_REGEX.lastIndex=0;var versionComponents=this.VERSION_REGEX.exec(this._firmwareVersion)||[],components={model:versionComponents[1]||"",major:+versionComponents[2]||0,minor:+versionComponents[3]||0,build:+versionComponents[5]||0};versionComponents[4]&&(components.patch=+versionComponents[4]||0),this.setVersionStrings(components),void 0!==components.patch&&(components.notes_path=fUtilFirmware.getReleaseNotesLinkPath(this.getReleaseNoteDeviceType(),this.getCompactVersionString().slice(1))),this._versionComponents=components},ExtensionDeviceFirmware.prototype.setVersionStrings=function(versionComponents){this.setCompactVersionString(versionComponents),this.setCompleteVersionString(versionComponents)},ExtensionDeviceFirmware.prototype.getVersionString=function(type){return type===this.VERSION_STRING_TYPES.COMPLETE?this.getCompleteVersionString():this.getCompactVersionString()},ExtensionDeviceFirmware.prototype._getVersionTemplate=function(versionComponents,template){return template=template.replace("{{ patchTemplate }}",versionComponents.patch?this._PATCH_TEMPLATE:"")},ExtensionDeviceFirmware.prototype.setCompactVersionString=function(versionComponents){this._versionStrings[this.VERSION_STRING_TYPES.COMPACT]=fUtilDom.renderTemplate(this._getVersionTemplate(versionComponents,this.VERSION_TEMPLATES.COMPACT),versionComponents)},ExtensionDeviceFirmware.prototype.getCompactVersionString=function(){return this._versionStrings[this.VERSION_STRING_TYPES.COMPACT]||this.setCompactVersionString(this.getVersionComponents()),this._versionStrings[this.VERSION_STRING_TYPES.COMPACT]},ExtensionDeviceFirmware.prototype.setCompleteVersionString=inject.mark(function($filter){var buildNumber=$filter("buildNumber");return function(versionComponents){this._versionStrings[this.VERSION_STRING_TYPES.COMPLETE]=fUtilDom.renderTemplate(this._getVersionTemplate(versionComponents,this.VERSION_TEMPLATES.COMPLETE),Object.assign({},versionComponents,{build:buildNumber(versionComponents.build)}))}}),ExtensionDeviceFirmware.prototype.getCompleteVersionString=function(){return this._versionStrings[this.VERSION_STRING_TYPES.COMPLETE]||this.setCompleteVersionString(this.getVersionComponents()),this._versionStrings[this.VERSION_STRING_TYPES.COMPLETE]},ExtensionDeviceFirmware.prototype.setNoModelVersionString=inject.mark(function($filter){var buildNumber=$filter("buildNumber");return function(versionComponents){this._versionStrings[this.VERSION_STRING_TYPES.NO_MODEL]=fUtilDom.renderTemplate(this._getVersionTemplate(versionComponents,this.VERSION_TEMPLATES.NO_MODEL),Object.assign({},versionComponents,{build:buildNumber(versionComponents.build)}))}}),ExtensionDeviceFirmware.prototype.getNoModelVersionString=function(){return this._versionStrings[this.VERSION_STRING_TYPES.NO_MODEL]||this.setNoModelVersionString(this.getVersionComponents()),this._versionStrings[this.VERSION_STRING_TYPES.NO_MODEL]},UpgradableExtensionDevice.prototype._init=inject.mark(function($injector){return function(params){if(!params.serial)throw new Error('"serial" not defined for upgradable extension device "'+this.constructor.name+'"');if(!params.deviceType)throw new Error('"deviceType" not defined for upgradable extension device "'+this.constructor.name+'"');this._serial=params.serial,this._deviceType=params.deviceType,params.firmwareVersion&&(this._currentFirmware=$injector.instantiate(ExtensionDeviceFirmware,{params:{firmwareVersion:params.firmwareVersion,deviceType:params.deviceType}})),this._name=params.name,this._model=null,this._upgradeStatus=this.UPGRADE_STATUS.NOT_STARTED,this._upgradeProgress=0,this._recommendedFirmware=null,this._rebooting=!1,this.upgradeErrorMessage=null,this._modelFormatter=params.modelFormatter}}),UpgradableExtensionDevice.prototype.DEVICE_TYPES={FORTI_AP:"fortiap",FORTI_SWITCH:"fortiswitch"},UpgradableExtensionDevice.prototype.UPGRADE_STATUS={NOT_STARTED:"notStarted",IN_PROGRESS:"inProgress",ERROR:"error",SUCCESS:"success"},UpgradableExtensionDevice.prototype.URLS={MONITOR:null,UPGRADE:null,FIRMWARE:null},UpgradableExtensionDevice.prototype.ERROR_MESSAGE={RECOMMENDED_FIRMWARE_GET:"Failed to get recommended firmware",RECOMMENDED_FIRMWARE_DOWNLOAD:"Failed to retrieve firmware from FortiGuard",UPGRADE_PROGRESS:"Failed to retrieve upgrade progress",PUSH_FIRMWARE:"Firmware installation failed"},UpgradableExtensionDevice.prototype.VERSION_STRING_START_INDEX=10,UpgradableExtensionDevice.prototype.FIRMWARE_HEADER_LENGTH=39,UpgradableExtensionDevice.prototype.SERIAL_MODEL_PREFIX=6,UpgradableExtensionDevice.prototype.getLabel=function(){return this._name&&this._name!==this._serial?this._name+" ("+this._serial+")":this._serial},UpgradableExtensionDevice.prototype.getModel=function(){return this._model||(this._model=this.getSerial().substring(0,this.SERIAL_MODEL_PREFIX)),this._model},UpgradableExtensionDevice.prototype.setSerial=function(serial){this._serial=serial},UpgradableExtensionDevice.prototype.getSerial=function(){return this._serial},UpgradableExtensionDevice.prototype.getUpgradeStatus=function(){return this._upgradeStatus},UpgradableExtensionDevice.prototype.setUpgradeStatus=function(status){this._upgradeStatus=status},UpgradableExtensionDevice.prototype.getUpgradeProgress=function(){return this._upgradeProgress},UpgradableExtensionDevice.prototype.getDeviceType=function(){return this._deviceType},UpgradableExtensionDevice.prototype.getReleaseNoteDeviceType=function(){return this._deviceType},UpgradableExtensionDevice.prototype.getRecommendedFirmware=inject.mark(function(recommendedFirmware,$injector){return function(){if(!this._recommendedFirmware){var firmware=recommendedFirmware.get(this.getModel(),this.getDeviceType());firmware&&firmware.available?this._recommendedFirmware=$injector.instantiate(ExtensionDeviceFirmware,{params:{firmwareVersion:firmware.version,deviceType:this.getDeviceType(),available:firmware.available,imageId:firmware.image_id}}):this._recommendedFirmware=firmware}return this._recommendedFirmware}}),UpgradableExtensionDevice.prototype.isRecommendedFirmwareAvailable=function(){if(this.getRecommendedFirmware(),!this._recommendedFirmware||!this._recommendedFirmware.available)return!1;var components=this._recommendedFirmware.getVersionComponents();return!(0===components.major&&0===components.minor&&0===components.patch)},UpgradableExtensionDevice.prototype.isFirmwareUpToDate=function(){return this._recommendedFirmware||this.getRecommendedFirmware(),this._currentFirmware&&this._recommendedFirmware&&!fUtilFirmware.isFirmwareUpdate(this._currentFirmware.getVersionComponents(),this._recommendedFirmware.getVersionComponents())},UpgradableExtensionDevice.prototype.isUpgrade=function(firmware){return this._currentFirmware&&fUtilFirmware.isFirmwareUpdate(this._currentFirmware.getVersionComponents(),firmware)},UpgradableExtensionDevice.prototype.monitorUpgradeProgress=function(){throw new Error('"monitorUpgradeProgress" not implemented.')},UpgradableExtensionDevice.prototype.upgrade=inject.mark(function($q){return function(){return $q.reject('"upgrade" not implemented.')}}),UpgradableExtensionDevice.prototype.restart=inject.mark(function($q){return function(){return $q.reject('"restart" not implemented.')}}),UpgradableExtensionDevice.prototype.getCurrentFirmware=function(){return this._currentFirmware},UpgradableExtensionDevice.prototype.isRebooting=function(){return this._rebooting},UpgradableExtensionDevice.prototype.DEFAULT_MODEL_FORMATTER=function(){return this.getModel()},UpgradableExtensionDevice.prototype.getFormattedModel=function(){var formatted;if("function"==typeof this._modelFormatter)try{formatted=this._modelFormatter.call(this)}catch(e){formatted=this.DEFAULT_MODEL_FORMATTER()}else formatted=this.DEFAULT_MODEL_FORMATTER();return formatted},UpgradableExtensionDevice}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(34)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(datetime){"use strict";return{timeSpanFilter:function(timeRange,toFortiGateTimeZone){var startStr,endStr,start,end;start=timeRange.start*datetime.S_TO_MS,end=timeRange.end*datetime.S_TO_MS,toFortiGateTimeZone&&(start=utcToFortiGateTimeZone(start),end=utcToFortiGateTimeZone(end));return startStr=datetime.formatDateTime(start),endStr=datetime.formatDateTime(end),{id:"rel_time",value:[startStr,endStr],logic:{RANGE:1,is:{date:1}}}}};function utcToFortiGateTimeZone(utc){return utc-top.state.getBrowserTZOffsetFromFortiGate()*datetime.MIN_TO_S*datetime.S_TO_MS}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";const SSLVPN="SSL-VPN tunnel interface";module.exports={getSdWanBandwidth:function(sdWanMembersMonitorResponse,firewallInterfacesEntry){const results=sdWanMembersMonitorResponse.results,entry=firewallInterfacesEntry;if(!entry.is_virtual_wan_link_member)return{};const bandwidthStats=results[entry.name];let usage,rxBandwidth=bandwidthStats.rx_bandwidth||0,txBandwidth=bandwidthStats.tx_bandwidth||0,data={bandwidth:{rx_bandwidth:rxBandwidth,tx_bandwidth:txBandwidth},bandwidthUtilization:{}},available=function(firewallInterfacesEntry){const entry=firewallInterfacesEntry,results={};return Object.entries({tx_bandwidth:"estimated_upstream_bandwidth",rx_bandwidth:"estimated_downstream_bandwidth"}).forEach(([key,estimatedKey])=>{let available=0,estimated=entry[estimatedKey]||0;estimated?available=estimated:"up"!==entry.status&&"up"!==entry.link||(available=1e3*(entry.speed||0)),results[key]=available}),results}(entry),totalBandwidth=0,totalAvailable=0;if(available.tx_bandwidth>0){let tx=.001*txBandwidth;tx>0&&(totalBandwidth+=tx,totalAvailable+=available.tx_bandwidth,usage=(100*tx/available.tx_bandwidth).toFixed(2),data.bandwidthUtilization.tx_bandwidth=usage)}if(available.rx_bandwidth>0){let rx=.001*rxBandwidth;rx>0&&(totalBandwidth+=rx,totalAvailable+=available.rx_bandwidth,usage=(100*rx/available.rx_bandwidth).toFixed(2),data.bandwidthUtilization.rx_bandwidth=usage)}return totalBandwidth>0&&totalAvailable>0&&(data.bandwidthUtilization.total=(100*totalBandwidth/totalAvailable).toFixed(2)),data},getLabel:function(entry){let text=entry.name,extra=entry.alias;return entry.is_sslvpn?(text=SSLVPN,extra=entry.name):entry.is_wifi?(text=entry.ssid,extra=entry.name):entry.alias&&(text=entry.alias,extra=entry.name),extra?`${text} (${extra})`:text}}},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(43),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fweb_lang,fweb_dom){"use strict";$.getInfo=function(id,interpolate_or_strict,silent){var interpolate,options={silent:silent};return Array.isArray(interpolate_or_strict)?interpolate=interpolate_or_strict:options.strict=interpolate_or_strict,fweb_lang.translate(id,interpolate,options)},$.hasInfo=function(id){return fweb_lang.translationExistsFor(id)},$.updateInfo=function(id,trans){fweb_lang.getLanguageMap()[id]=trans},$.addScript=function(opt,force){"string"==typeof opt&&(opt={url:opt,async:!1});var exists,src=opt.url;if($("script").each(function(){return!(exists=$(this).attr("src")===src)}),exists&&!force)return $.Deferred().resolve().promise();var loaded=$.loadedScript||[];if($(loaded).each(function(){return this.url===src&&(exists=this.ajax),!exists}),exists&&!force)return exists;var options=$.extend({dataType:"script",cache:!0,url:src},opt),ajax=$.ajax(options);return loaded.push({url:src,ajax:ajax}),$.loadedScript=loaded,ajax},$.addStyle=function(src,reload){return fweb_dom.addStyle(src,reload)},$.addLang=function(objs,langs){var obj;"string"==typeof objs&&"string"==typeof langs&&(objs=[{path:objs,sec:langs}]);for(var i=0;obj=objs[i];i++){var path=obj.path,section=obj.sec;"/"!==path.charAt(path.length-1)&&(path+="/");for(var sections=section.split(":"),j=0,len=sections.length;j<len;j++){var prefix=path+sections[j];"lang_prefixes"in window?window.lang_prefixes.splice(0,0,prefix):window.lang_prefixes=[prefix]}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(10),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,$,structure){"use strict";var module=ftnt_shared.shortcuts;return module.listen=function(){var checker=module.createShortcutChecker(null,function(shortcut){structure.topPostMessage({messageType:"shortcutPressed",shortcut:shortcut})});$("body").on("keyup",function(event){event.target&&!$(event.target).is("input,textarea")&&checker(event)})},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared){"use strict";return ftnt_shared.browser}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared){"use strict";const BfsVisitor=ftnt_shared.graph.BfsVisitor;var truncatedLabelMap={LOCAL_TRUNCATED_DEVICES:"{0} Fabric Devices",UPSTREAM_TRUNCATED_DEVICES:"{0} Upstream Fabric Devices",DOWNSTREAM_TRUNCATED_DEVICES:"{0} Downstream Fabric Devices"};function TruncatedDevices(serial,count){this.serial=serial,this.parentSerial=void 0,this.icon="ftnt-truncated-security-fabric",this.label=$.getInfo(truncatedLabelMap[serial],[count])}function CsfDevice(config,device,isFocused){const ID=config&&config.ID||"id";this.serial=device[ID],this.parentSerial=void 0,this.icon=device.getIconClass(),this.label=device.getLabel(),this.labelClass=device.getLabelClass(),this.isCurrentFortigate=device.constructor&&"FortiGate"===device.constructor.name&&device.isCurrent,this.isFocused=isFocused}function FortiviewDevice(entry){const device=entry.device;this.serial=(device.detected_interface===entry.dstintf?entry.dstmac:entry.srcmac)||entry.sourceMac||entry.destinationMac,this.parentSerial=void 0,this.icon=device["css-class"]||entry.iconName||entry.iconCode&&entry.iconCode.name,this.label=device.mac_firewall_address||device.hostname||device.mac,this.isFocused=!0}function TopologyEndpoint(entry){this.serial=entry.mac,this.parentSerial=void 0,this.icon=entry["css-class"],this.label=entry.mac_firewall_address||entry.hostname||entry.mac,this.isFocused=!0}function TreeNode(id,node,parent,index){this.id=id,this.node=this.source=node,this.parent=parent,this.ancestors=[],this.path=[],this.children=[],this.sourceIndex=index}function getTruncatedDownstreamPath(config,spanningTreeMap,csfDevice){for(var visited={},startingNodeSerial=csfDevice[config&&config.ID||"id"],stack=[startingNodeSerial],numVisited=0,path=[];stack.length;){var nodeSerial=stack.pop();if(!visited[nodeSerial]){var instance=spanningTreeMap[nodeSerial].node;nodeSerial!==startingNodeSerial&&"PendingDevice"!==instance.constructor.name&&"PreauthorizedDevice"!==instance.constructor.name&&numVisited++,visited[nodeSerial]=!0;var children=(spanningTreeMap[nodeSerial]||{}).children||[];stack=stack.concat(children)}}if(numVisited>0){var truncatedNode=new TruncatedDevices("DOWNSTREAM_TRUNCATED_DEVICES",numVisited);truncatedNode.parentSerial=startingNodeSerial,path.push(truncatedNode)}return path}function getTruncatedUpstreamPath(config,spanningTreeMap,parentCsfDevice,parentFortigate){const ID=config&&config.ID||"id";for(var parentSerial=parentCsfDevice?parentCsfDevice[ID]:void 0,path=[];spanningTreeMap[parentSerial];){path.push(spanningTreeMap[parentSerial].node);const parentDevice=spanningTreeMap[parentSerial].parent;parentSerial=parentDevice?parentDevice.id:null}var closest_fgtFswFap=0,closest_fgt=parentCsfDevice!==parentFortigate?path.indexOf(parentFortigate):0,truncatedPath=[],localFabricDeviceCount=0,upstreamFabricDeviceCount=0;return path.forEach(function(node,index){if(index===closest_fgtFswFap)truncatedPath.unshift(new CsfDevice(config,node));else if(index>closest_fgtFswFap&&index<closest_fgt)localFabricDeviceCount++;else if(index===closest_fgt){if(localFabricDeviceCount){var localNode=localFabricDeviceCount>1?new TruncatedDevices("LOCAL_TRUNCATED_DEVICES",localFabricDeviceCount):new CsfDevice(config,path[index-1]);truncatedPath.unshift(localNode)}truncatedPath.unshift(new CsfDevice(config,node))}else if(index>closest_fgt&&index<path.length-1)upstreamFabricDeviceCount++;else if(index===path.length-1){if(upstreamFabricDeviceCount){var upstreamNode=upstreamFabricDeviceCount>1?new TruncatedDevices("UPSTREAM_TRUNCATED_DEVICES",upstreamFabricDeviceCount):new CsfDevice(config,path[index-1]);truncatedPath.unshift(upstreamNode)}truncatedPath.unshift(new CsfDevice(config,node))}}),truncatedPath.forEach(function(node,index){index>0&&(node.parentSerial=truncatedPath[index-1].serial)}),truncatedPath}return{genTruncatedTopologyAroundCsfDevice:function(spanningTreeMap,csfDevice){var parentFortigate=spanningTreeMap[csfDevice.parentFortigateId],parentCsfDevice=(spanningTreeMap[csfDevice.id]||{}).parent,truncatedDownstreamPath=getTruncatedDownstreamPath(null,spanningTreeMap,csfDevice),truncatedUpstreamPath=getTruncatedUpstreamPath(null,spanningTreeMap,parentCsfDevice,parentFortigate),device=new CsfDevice(null,csfDevice,!0);return device.parentSerial=truncatedUpstreamPath[truncatedUpstreamPath.length-1]?truncatedUpstreamPath[truncatedUpstreamPath.length-1].serial:void 0,truncatedUpstreamPath.concat(device).concat(truncatedDownstreamPath)},genTruncatedTopologyAroundFortiviewDevice:function(spanningTreeMap,fortiviewDevice){var parentSerial,parentCsfDevice,parentFortigateId=fortiviewDevice.meta.fortigate,parentFortigate=(spanningTreeMap[parentFortigateId]||{}).node;const userDevice=fortiviewDevice.device;userDevice&&userDevice.fortiap_id?(parentSerial=userDevice.fortiap_id,parentCsfDevice=parentFortigate.fortiapMapping[parentSerial]):userDevice&&userDevice.fortiswitch_id?(parentSerial=userDevice.fortiswitch_id,parentCsfDevice=parentFortigate.fortiswitchMapping[parentSerial]):(parentSerial=parentFortigateId,parentCsfDevice=parentFortigate);var truncatedUpstreamPath=getTruncatedUpstreamPath(null,spanningTreeMap,parentCsfDevice,parentFortigate),device=new FortiviewDevice(fortiviewDevice);return device.parentSerial=truncatedUpstreamPath[truncatedUpstreamPath.length-1]?truncatedUpstreamPath[truncatedUpstreamPath.length-1].serial:void 0,truncatedUpstreamPath.concat(device)},genTruncatedTopologyAroundTopologyNode:function(spanningTreeMap,csfDevice){var parentFortigate=spanningTreeMap[csfDevice.parentFortigateId],parentCsfDevice=(spanningTreeMap[csfDevice.id]||{}).parent;const config={ID:"id"};var truncatedDownstreamPath=getTruncatedDownstreamPath(config,spanningTreeMap,csfDevice),truncatedUpstreamPath=getTruncatedUpstreamPath(config,spanningTreeMap,parentCsfDevice,parentFortigate),device=new CsfDevice(config,csfDevice,!0);return device.parentSerial=truncatedUpstreamPath[truncatedUpstreamPath.length-1]?truncatedUpstreamPath[truncatedUpstreamPath.length-1].serial:void 0,truncatedUpstreamPath.concat(device).concat(truncatedDownstreamPath)},genTruncatedTopologyAroundTopologyEndpoint:function(spanningTreeMap,topologyNodeEndpoint,vdom){var parentFortigateId=topologyNodeEndpoint.parentFortigateId,parentFortigate=(spanningTreeMap[parentFortigateId]||{}).node;let parentCsfDevice=parentFortigate;if(topologyNodeEndpoint.fortiap_id){const fapParentCsfDevice=(spanningTreeMap[`${topologyNodeEndpoint.fortiap_id}::${parentFortigateId}::${vdom}`]||{}).node;fapParentCsfDevice&&(parentCsfDevice=fapParentCsfDevice)}else if(topologyNodeEndpoint.fortiswitch_id){const fswParentCsfDevice=(spanningTreeMap[`${topologyNodeEndpoint.fortiswitch_id}::${parentFortigateId}::${vdom}`]||{}).node;fswParentCsfDevice&&(parentCsfDevice=fswParentCsfDevice)}var truncatedUpstreamPath=getTruncatedUpstreamPath({ID:"id"},spanningTreeMap,parentCsfDevice,parentFortigate),device=new TopologyEndpoint(topologyNodeEndpoint);return device.parentSerial=truncatedUpstreamPath[truncatedUpstreamPath.length-1]?truncatedUpstreamPath[truncatedUpstreamPath.length-1].serial:void 0,truncatedUpstreamPath.concat(device)},getSpanningTreeMap:function(graph,rootNode,postVisitCallback){const treeMap={};let index=0;const bfsVisitor=new BfsVisitor(function(bfsState){const nodeId=bfsState.node.id,nodeData=bfsState.node.data,parentNodeId=bfsState.parent?bfsState.parent.id:null,parentNodeData=bfsState.parent?bfsState.parent.data:null;treeMap[nodeId]=new TreeNode(nodeId,nodeData,parentNodeData,index),parentNodeId&&(treeMap[parentNodeId].children.push(nodeId),treeMap[nodeId].ancestors=treeMap[parentNodeId].ancestors.concat([treeMap[parentNodeId]]),treeMap[nodeId].path=treeMap[parentNodeId].path.concat([parentNodeId])),postVisitCallback&&postVisitCallback(bfsState),index++});return graph.breadthFirstSearch(rootNode,bfsVisitor),treeMap},nodeComparator:ftnt_shared.treeUtil.nodeComparator,createNodeComparator:ftnt_shared.treeUtil.createNodeComparator,TreeNode:TreeNode}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){"use strict";const iconUtil=__webpack_require__(38),BETA_PATTERNS=[/^Beta \d+$/,/^Release Candidate \d+$/],BASE_OBJECT_URL_PATHS={"system.sdwan.members":{edit:"/ng/network/virtualwan/members/edit/<mkey>"},"system.sdwan.zone":{edit:"/ng/network/virtualwan/zone/edit/<mkey>"},"system.sdwan.health-check":{edit:"/ng/network/virtualwan/health-check/edit/<mkey>"},"system.sdwan.health-check.sla":{edit:"/ng/network/virtualwan/health-check/edit/<mkey>"}};class FosState{constructor(stateResponse={},proxyRootSerial,{fwebBuildResponse:fwebBuildResponse,objectUrlsResponse:objectUrlsResponse,fortigate:fortigate}={}){Object.assign(this,stateResponse.results),Object.defineProperty(this,"responseData",{value:stateResponse,enumerable:!1,writable:!0}),this.serial=stateResponse.serial,this.version=stateResponse.version,this.build=stateResponse.build,this.proxyRootSerial=proxyRootSerial,Object.defineProperty(this,"_fwebBuild",{value:fwebBuildResponse,enumerable:!1}),Object.defineProperty(this,"_objectUrls",{value:objectUrlsResponse.results,enumerable:!1}),Object.defineProperty(this,"_fortigate",{value:fortigate,enumerable:!1}),this._objectUrls.by_path=Object.assign({},BASE_OBJECT_URL_PATHS);for(const type in this._objectUrls.by_type){const objUrl=this._objectUrls.by_type[type];objUrl.type=type,this._objectUrls.by_path[objUrl.path]=objUrl}this.platform_errors=[],this._processVdoms()}_processVdoms(){if(this.admin&&this.admin.vdom_info){const vdomInfo=this.admin.vdom_info;this.admin.vdom_info=Object.keys(vdomInfo).reduce((prev,name)=>{const vd=vdomInfo[name],iconKey=iconUtil.genVdomIconKey(name,this),iconClass=iconUtil.iconClass(iconUtil.ICON_TYPE.VDOM,iconKey)||"ftnt-vdom";return prev[name]=Object.assign({name:name,q_origin_key:name,datasource:"system.vdom","css-class":iconClass,operation_mode:vd.transparent_mode?"transparent":"nat"},vd),prev},{})}}getBuildInformation(){return this._fwebBuild}_getEditUrl(config,mkey,vdom){const MKEY_PATTERN=/<mkey>/;let strUrl;config&&(!mkey&&config.new?strUrl=config.new:config.edit&&(strUrl=config.edit,mkey?(mkey="string"==typeof mkey?mkey.split("#")[0]:mkey,config.mkey_url_param?strUrl+=`?mkey=${mkey}`:strUrl=strUrl.replace(MKEY_PATTERN,mkey)):strUrl=strUrl.replace(MKEY_PATTERN,"").replace(/\/{2,}/g,"/")));let url=new URL(strUrl);return vdom&&url.searchParams.set("vdom",vdom),url.href}getEditUrl(path,name,mkey,vdom){let config;if(name&&(path=`${path}.${name}`),config=this._objectUrls.by_path[path])return this._getEditUrl(config,mkey,vdom)}getEditUrlByType(qtype,mkey,vdom){var config=this._objectUrls.by_type[String(qtype)];if(config)return this._getEditUrl(config,mkey,vdom)}getListUrl(path,name){var config=this._objectUrls.by_path[`${path}.${name}`];if(config)return config.list}getListUrlByType(qType){var config=this._objectUrls.by_type[qType];if(config)return config.list}getPathNameByType(qtype){var config=this._objectUrls.by_type[String(qtype)];if(config)return config.path}getTypeByPath(path){return this._objectUrls.by_path[path].type}getObjectUrls(path,name){return this._objectUrls.by_path[`${path}.${name}`]}_showInvalidSignatureWarning(){const fwebBuild=this.getBuildInformation();return!fwebBuild.CONFIG.CONFIG_DEBUG&&(this.bios_security_level===fwebBuild.SYMBOLS.BIOS_SECURITY_LEVEL_1||this.bios_security_level===fwebBuild.SYMBOLS.BIOS_SECURITY_LEVEL_2)&&this.image_sign_status===fwebBuild.SYMBOLS.INVALID_SIGNATURE}_updateplatformError(){this.platform_errors=[],this._showInvalidSignatureWarning()&&this.platform_errors.push(this.PLATFORM_ERROR.NON_SIGNED_IMAGE),this.conserve_mode&&this.platform_errors.push(this.PLATFORM_ERROR.CONSERVE_MODE)}usingDefaultHostname(){return this.hostname===this.serial||this.hostname===`${this.model_name}-${this.model_number}`}isADefaultHostname(hostname){return hostname===this.serial||hostname===`${this.model_name}-${this.model_number}`}getCurrentVDOMScope(defaultScope){return this.vdom_mode?this.current_vdom===this.GLOBAL_VDOM?this.VDOM_SCOPE.GLOBAL:this.VDOM_SCOPE.VDOM:defaultScope||this.VDOM_SCOPE.GLOBAL}isGlobalVDOM(){return this.getCurrentVDOMScope(this.VDOM_SCOPE.VDOM)===this.VDOM_SCOPE.GLOBAL}isGlobalScopeAdmin(){return"global"===this.admin.profile.scope}isMultiVDOMAdmin(){return this.isGlobalScopeAdmin()||this.getVDOMs().length>1}getOperatingVDOM(){return this.current_vdom?this.current_vdom:this.admin.vdom_info[this.management_vdom]?this.management_vdom:Object.keys(this.admin.vdom_info)[0]}getVDOMs(){return this.admin.vdoms.filter(vdom=>vdom!==this.GLOBAL_VDOM)}getOperationMode(){let result=this.OPERATION_MODE.NAT;const vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].transparent_mode&&(result=this.OPERATION_MODE.TRANSPARENT),result}isComplianceCheckEnabled(){const vdom=this.getOperatingVDOM(),vdomInfo=this.admin.vdom_info[vdom];return this.compliance_check&&vdomInfo.compliance_check}isNgfwPolicyMode(){const vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].ngfw_mode===this.NGFW_MODE.POLICY_BASED}isConsolidatedFirewallMode(){const vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].consolidated_firewall_mode_enabled}getVdomSslSshProfile(){const vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].default_ssl_ssh_profile}hasVdomWithNgfwPolicyMode(){return Object.keys(this.admin.vdom_info).some(key=>this.admin.vdom_info[key].ngfw_mode===this.NGFW_MODE.POLICY_BASED)}centralNatEnabled(options){const vdom=this.getOperatingVDOM();return(options=options||{}).skipNgfwCheck?this.admin.vdom_info[vdom].central_nat_enabled:this.admin.vdom_info[vdom].central_nat_enabled||this.admin.vdom_info[vdom].ngfw_mode===this.NGFW_MODE.POLICY_BASED}featureEnabled(name){const vdom=this.getOperatingVDOM();return this.admin.vdom_info[vdom].features[name]||this.features[name]||!1}featureEnabledInAnyVDOM(name){return Object.keys(this.admin.vdom_info).some(key=>this.admin.vdom_info[key].features[name])||this.features[name]||!1}_getPermission(accessGroup){let permission,split,group,granular;return accessGroup.indexOf("#")>=0?(group=(split=accessGroup.split("#"))[0],granular=split[1],permission="custom"===this.admin.profile[group]?this.admin.profile[`${group}-permission`][granular]:this.admin.profile[group]):permission=this.admin.profile[accessGroup],permission}_getTablePermissionValue(path,name,key){var config,permission=!1;return name&&(path=`${path}.${name}`),(config=this._objectUrls.by_path[path])&&null!=config[key]&&(permission=config[key]),permission}adminHasReadPermission(accessGroup){var permission=this._getPermission(accessGroup);return permission?0===permission.indexOf("read"):null}adminHasReadPermissionForTable(path,name){return this._getTablePermissionValue(path,name,"read_access")}adminHasWritePermission(accessGroup,ignoreReadOnly){return"read-write"===this._getPermission(accessGroup)&&(ignoreReadOnly||!this.readOnlyAdmin())}adminHasWritePermissionForTable(path,name,ignoreReadOnly){return this._getTablePermissionValue(path,name,"write_access")&&(ignoreReadOnly||!this.readOnlyAdmin())}getFortiGateTimeUTC(){return(new Date).getTime()-this.browser_utc_offset}getFortiGateLocalTime(){return this.getFortiGateTimeUTC()-6e4*this.getBrowserTZOffsetFromFortiGate()}fortiGateUTCToBrowserUTC(timestamp){return 1e3*timestamp+this.browser_utc_offset}getBrowserTZOffsetFromFortiGate(){return this.time_zone_offset-this.browser_time_zone_offset}isVdomLogDeviceEnabled(vdom,device){const vdomInfo=this.admin.vdom_info[vdom];return!!(vdomInfo&&vdomInfo.log_device_state&&vdomInfo.log_device_state[device]&&vdomInfo.log_device_state[device].is_enabled)}isLogDeviceEnabled(device){const vdom=this.getOperatingVDOM();return this.isVdomLogDeviceEnabled(vdom,device)}getVdomLogDeviceDefault(vdom){const vdomInfo=this.admin.vdom_info[vdom],defaultDevice=vdomInfo&&vdomInfo.log_device_default,enabledDevices=this.getEnabledLogDevices();return defaultDevice&&enabledDevices.includes(defaultDevice)?defaultDevice:enabledDevices[0]}getLogDeviceDefault(){const vdom=this.getOperatingVDOM();return this.getVdomLogDeviceDefault(vdom)}getEnabledLogDevices(){let devices=Object.values(this.LOG_DEVICES).filter(device=>this.isLogDeviceEnabled(device)).sort(device=>Number(device===this.LOG_DEVICES.MEMORY));return devices.length||(devices=[this.LOG_DEVICES.MEMORY]),devices}isHistoricalDiskFortiViewSupported(){let vdoms;return(vdoms=this.getCurrentVDOMScope()===this.VDOM_SCOPE.GLOBAL?this.getVDOMs():[this.getOperatingVDOM()]).some(this.isVdomHistoricalDiskFortiViewSupported.bind(this))}isVdomHistoricalDiskFortiViewSupported(vdom){const vdomInfo=this.admin.vdom_info[vdom];return!(!vdomInfo||!vdomInfo.log_device_state.disk.is_fortiview_supported)}isHistoricalFortiViewSupported(){let vdoms;return(vdoms=this.getCurrentVDOMScope()===this.VDOM_SCOPE.GLOBAL?this.getVDOMs():[this.getOperatingVDOM()]).some(this.isVdomHistoricalFortiViewSupported.bind(this))}isVdomHistoricalFortiViewSupported(vdom){const logDevice=this.getVdomLogDeviceDefault(vdom),usingDisk=logDevice===this.LOG_DEVICES.DISK,usingFortiAnalyzer=logDevice===this.LOG_DEVICES.FORTIANALYZER,usingFortiCloud=logDevice===this.LOG_DEVICES.FORTICLOUD;return usingFortiAnalyzer||usingFortiCloud||usingDisk&&this.isVdomHistoricalDiskFortiViewSupported(vdom)}shouldResolveHostnames(){const vdom=this.getOperatingVDOM(),vdomInfo=this.admin.vdom_info[vdom];return!(!vdomInfo||!vdomInfo.resolve_hostnames)}inSplitTaskManagementVdom(){return this.vdom_mode===this.VDOM_MODE.SPLIT&&this.management_vdom===this.current_vdom}isVdomModeDisabled(){return this.vdom_mode===this.VDOM_MODE.NONE}inSplitTaskVdomMode(){return this.vdom_mode===this.VDOM_MODE.SPLIT}inMultiVdomMode(){return this.vdom_mode===this.VDOM_MODE.MULTI}isReleaseBuild(){return"GA"===this.getBuildInformation().PLATFORM.CONFIG_BUILD_LABEL}isCoverageBuild(){return this.is_coverage_build}isInterimBuild(){return!this.isReleaseBuild()&&!this.isBetaBuild()}isBetaBuild(){const buildLabel=this.getBuildInformation().PLATFORM.CONFIG_BUILD_LABEL;return BETA_PATTERNS.some(pattern=>pattern.test(buildLabel))}getFortiViewTimeframeOptions(forticloudPaid){let timeframeOptions=[this.FORTIVIEW_TIME_PERIODS.REALTIME];const fazEnabled=this.getLogDeviceDefault()===this.LOG_DEVICES.FORTIANALYZER,forticloudEnabled=this.getLogDeviceDefault()===this.LOG_DEVICES.FORTICLOUD;return this.isHistoricalFortiViewSupported()&&(timeframeOptions=timeframeOptions.concat([this.FORTIVIEW_TIME_PERIODS.FIVE_MIN,this.FORTIVIEW_TIME_PERIODS.ONE_HOUR])),(this.isHistoricalFortiViewSupported()&&"low"!==this.model_level||fazEnabled||forticloudEnabled)&&timeframeOptions.push(this.FORTIVIEW_TIME_PERIODS.ONE_DAY),(fazEnabled||forticloudEnabled&&forticloudPaid||this.fortiview_weekly_data)&&timeframeOptions.push(this.FORTIVIEW_TIME_PERIODS.ONE_WEEK),timeframeOptions}isRootFortiGate(){return!this.csf_enabled||"0.0.0.0"===this.csf_upstream_ip}csfObjectSyncEnabled(){return"default"===this.csf_object_sync_mode}getAvailableFeaturePresets(vdom){const _vdom=vdom||this.getOperatingVDOM();return this.admin.vdom_info[_vdom].available_feature_presets}checkPermission(profile){const permLevel={custom:3,"read-write":2,read:1,none:0};return"super_admin"===profile.name?this.admin.super_admin:("global"!==profile.scope||this.admin.global_admin)&&this.AVAILABLE_ACCESS_GROUPS.every(accgroup=>"custom"===profile[accgroup]||permLevel[this.admin.profile[accgroup]]>=permLevel[profile[accgroup]])}get AVAILABLE_ACCESS_GROUPS(){return["APS_GRP_APPDEL","APS_GRP_AUTH","APS_GRP_FTVIEW","APS_GRP_FW","APS_GRP_LOG","APS_GRP_NET","APS_GRP_SECFAB","APS_GRP_SYS","APS_GRP_UTM","APS_GRP_VPN","APS_GRP_WIFI"].filter(symbol=>{const fwebBuild=this.getBuildInformation();return"APS_GRP_APPDEL"===symbol?fwebBuild.PLATFORM.HAVE_WANOPT:"APS_GRP_WIFI"!==symbol||(fwebBuild.PLATFORM.HAVE_CAPWAP_WTP||fwebBuild.PLATFORM.HAVE_CAPWAP_AC)}).map(symbol=>{return this.getBuildInformation().SYMBOLS[symbol]})}}FosState.prototype.VDOM_SCOPE={GLOBAL:"global",VDOM:"vdom"},FosState.prototype.VDOM_MODE={NONE:!1,SPLIT:"split-vdom",MULTI:"multi-vdom"},FosState.prototype.GLOBAL_VDOM="",FosState.prototype.PLATFORM_ERROR={CONSERVE_MODE:"error_conserve_mode",NON_SIGNED_IMAGE:"error_non_signed_image"},FosState.prototype.OPERATION_MODE={NAT:"NAT",TRANSPARENT:"Transparent"},FosState.prototype.NGFW_MODE={PROFILE_BASED:"profile-based",POLICY_BASED:"policy-based"},FosState.prototype.ACCESS_GROUP={FABRIC:"secfabgrp",FORTIVIEW:"ftviewgrp",USER_DEVICE:"authgrp",FIREWALL:"fwgrp",FIREWALL_ADDRESS:"fwgrp#address",FIREWALL_OTHERS:"fwgrp#others",FIREWALL_POLICY:"fwgrp#policy",FIREWALL_SCHEDULE:"fwgrp#schedule",FIREWALL_SERVICE:"fwgrp#service",LOG:"loggrp",LOG_CONFIG:"loggrp#config",LOG_DATA_ACCESS:"loggrp#data-access",LOG_REPORT_ACCESS:"loggrp#report-access",LOG_THREAT_WEIGHT:"loggrp#threat-weight",NETWORK:"netgrp",NETWORK_CFG:"netgrp#cfg",NETWORK_PACKET_CAPTURE:"netgrp#packet-capture",NETWORK_ROUTECFG:"netgrp#route-cfg",SYSTEM:"sysgrp",SYSTEM_ADMIN:"sysgrp#admin",SYSTEM_UPD:"sysgrp#upd",SYSTEM_CFG:"sysgrp#cfg",SYSTEM_MNT:"sysgrp#mnt",UTM:"utmgrp",UTM_AV:"utmgrp#antivirus",UTM_APPCTRL:"utmgrp#application-control",UTM_DLP:"utmgrp#data-loss-prevention",UTM_ICAP:"utmgrp#icap",UTM_IPS:"utmgrp#ips",UTM_SPAMFILTER:"utmgrp#spamfilter",UTM_VOIP:"utmgrp#voip",UTM_WF:"utmgrp#WEBFILTER",UTM_ENDPOINT_CONTROL:"utmgrp#endpoint-control",VPN:"vpngrp",WANOPT:"wanoptgrp",WIFI:"wifi"},FosState.prototype.LOG_DEVICES={MEMORY:"memory",DISK:"disk",FORTIANALYZER:"fortianalyzer",FORTICLOUD:"forticloud"},FosState.prototype.FORTIVIEW_TIME_PERIODS={REALTIME:"realtime",FIVE_MIN:"5min",ONE_HOUR:"hour",ONE_DAY:"day",ONE_WEEK:"week"},module.exports=FosState},function(module,exports,__webpack_require__){"use strict";const IpMask=__webpack_require__(127),iconUtil=__webpack_require__(38),iconCode=__webpack_require__(69),{SERVER_TO_CLIENT_SORT_MAP:SERVER_TO_CLIENT_SORT_MAP}=__webpack_require__(425),SORT_TO_ENTRY_MAP={data_bytes:["sentBytes","receivedBytes"],data_packets:["sentPackets","receivedPackets"],data_shaper_drops:["sentShaperDropped","receivedShaperDropped"],data_bandwidth:["sentBandwidth","receivedBandwidth"]},TYPES={TABLE:"table",BUBBLE:"bubble",BUBBLE_CLUSTER:"bubble_cluster",COUNTRY:"country",VPN_MAP:"vpn_map"},MAP_FORMAT={[TYPES.COUNTRY]:!0};function deviceFilter(d,visualizationState){const value=d.chartValue?d.chartValue(visualizationState):d.value,device=d.device,mismatchedDetectionIntf=!d.detection_interface||![d.sourceInterface,d.destinationInterface].includes(d.detection_interface);if(!d.sourceInterface||"unknown-0"===d.sourceInterface)return!1;if(mismatchedDetectionIntf){const isBehindFAP=device&&device.fortiap_id,isBehindFSW=device&&device.fortiswitch_id;if(!isBehindFAP&&!isBehindFSW&&d.detection_interface)return!1}return d.name&&value}module.exports=class{get TYPES(){return TYPES}static get TYPES(){return TYPES}get TYPES_LIST(){return Object.keys(TYPES).map(key=>TYPES[key])}getValue(entry,valueKeys){let value=0;return valueKeys.forEach(function(key){value+=isNaN(entry[key])?0:entry[key]}),value}shouldUseHostVisibilityInfo(entry,segment){if(!entry.device)return!1;const isDst="destination"===segment,detectionIntf=entry.detection_interface,detectedFromSrc=detectionIntf&&detectionIntf===entry.srcintf,detectedFromDst=detectionIntf&&detectionIntf===entry.dstintf;return isDst?detectedFromDst:detectedFromSrc}simpleKeyFn(key,segment){return(entry,valueKeys)=>{let codeObj;if(["mac","sourceAddress","destinationAddress"].includes(key)&&this.shouldUseHostVisibilityInfo(entry,segment)){const icon=iconUtil.getDeviceIcon(entry.device);codeObj=iconCode.getIconCode(icon.iconClass)}return Object.assign(entry,{name:entry.fortigate?`${entry.fortigate}-${entry[key]}`:entry[key],label:entry[key],value:this.getValue(entry,valueKeys),_segmentType:segment,iconCode:codeObj&&codeObj.unicode,iconFontFamily:codeObj&&codeObj.fontFamily})}}deviceTopologyProcessFn(details,config,valueKeys,visualizationState){return config.fn&&config.fn.default&&(details=details.map(function(detail){return config.fn.default(detail,valueKeys)})),config.filterFn&&config.filterFn.default&&(details=details.filter(d=>config.filterFn.default(d,visualizationState))),details}getDeviceEntryLabel(entry){if(entry.server)return`Server::type.${entry.server}`;if(entry.device){const device=entry.device;return device.mac_firewall_address||device.hostname||device.os_name}return entry.mac||entry.address}deviceTopologyFn(entry,valueKeys){let name=entry.mac||entry.address;const getValue=this.getValue.bind(this),getValueKeys=this.getValueKeys.bind(this),getDeviceEntryLabel=this.getDeviceEntryLabel.bind(this);return Object.assign(entry,{name:`${entry.meta.fortigate}-${name}`,label:getDeviceEntryLabel(entry),value:getValue(entry,valueKeys),chartValue:function(visualizationState){if(visualizationState.isVulnRiskMetric())return entry.vulnScore;if(visualizationState.isThreatRiskMetric())return entry.threatScore;if(visualizationState.isCompromisedHostRiskMetric())return entry.iocScore;if(visualizationState.isAllRiskMetric())return entry.allRiskValue;const visStateValueKeys=getValueKeys(visualizationState.metric)||valueKeys;return getValue(entry,visStateValueKeys)},_segmentType:"device"})}get VISUALIZATION_CONFIG(){const getValue=this.getValue.bind(this),shouldUseHostVisibilityInfo=this.shouldUseHostVisibilityInfo.bind(this);return{destination:{supported:[TYPES.TABLE,TYPES.BUBBLE,TYPES.BUBBLE_CLUSTER],fn:{default:function(entry,valueKeys){let codeObj;if(shouldUseHostVisibilityInfo(entry,"destination")){const icon=iconUtil.getDeviceIcon(entry.device);codeObj=iconCode.getIconCode(icon.iconClass)}const id=entry.destinationDomainName||entry.destinationAddress,isPublicIP=entry.destinationAddress&&IpMask.isPublic(entry.destinationAddress);return Object.assign(entry,{name:entry.fortigate?`${entry.fortigate}-${id}`:id,label:id,addressType:isPublicIP?"internet":"internal",value:getValue(entry,valueKeys),_segmentType:"destination",iconCode:codeObj&&codeObj.unicode,iconFontFamily:codeObj&&codeObj.fontFamily})}}},owner:{supported:[TYPES.TABLE,TYPES.BUBBLE,TYPES.BUBBLE_CLUSTER],fn:{default:function(entry,valueKeys){const owner=entry.destinationOwner,isIP=owner&&IpMask.IPV4_ADDR_EXPR.test(owner),isPublicIP=isIP&&IpMask.isPublic(owner);return Object.assign(entry,{name:owner,label:owner,addressType:!isIP||isPublicIP?"internet":"internal",value:getValue(entry,valueKeys),_segmentType:"owner"})}}},country:{supported:[TYPES.TABLE,TYPES.BUBBLE,TYPES.COUNTRY,TYPES.BUBBLE_CLUSTER],filterFn:{country:function(entry){return"Reserved"!==entry.country}},fn:{default:function(entry,valueKeys){let shortLabel=String.fromCharCode(255&entry.country_id)+String.fromCharCode(entry.country_id>>8);return"ZZ"===shortLabel&&(shortLabel="?"),Object.assign(entry,{name:entry.country,label:entry.country,value:getValue(entry,valueKeys),shortLabel:shortLabel,_segmentType:"country"})}}},physicalTopology:{supported:[TYPES.BUBBLE_CLUSTER],processFn:{[TYPES.BUBBLE_CLUSTER]:this.deviceTopologyProcessFn.bind(this)},filterFn:{default:deviceFilter},fn:{default:this.deviceTopologyFn.bind(this)}},logicalTopology:{supported:[TYPES.BUBBLE_CLUSTER],processFn:{[TYPES.BUBBLE_CLUSTER]:this.deviceTopologyProcessFn.bind(this)},filterFn:{default:deviceFilter},fn:{default:this.deviceTopologyFn.bind(this)}}}}getValueKeys(sortBy){const key=SERVER_TO_CLIENT_SORT_MAP[sortBy||"bytes"]||sortBy;return SORT_TO_ENTRY_MAP[key]||[key]}getVisualizationConfig(reportBy){return this.VISUALIZATION_CONFIG[reportBy]}getD3Source(details,sortBy,visualizationConfig,visualizationState){let promises=[];return visualizationConfig?(visualizationConfig.loadDependencies&&(promises=promises.concat(visualizationConfig.loadDependencies())),Promise.all(promises).then(()=>this.processSource(details,sortBy,visualizationConfig,visualizationState))):Promise.resolve({})}processSource(details,sortBy,config,visualizationState){const supported=(config||{}).supported,result={};return supported&&supported.length&&supported.forEach(supportedType=>{let fn,dataMap;const data=[],meta={},detailsLength=details.length;if(config.processFn&&config.processFn[supportedType])return void(result[supportedType]=config.processFn[supportedType](details,config,this.getValueKeys(sortBy),visualizationState));const filterFn=config.filterFn&&config.filterFn[supportedType];filterFn&&(details=details.filter(d=>filterFn(d,visualizationState))),supportedType!==TYPES.TABLE&&(fn=config.fn.default,MAP_FORMAT[supportedType]&&(dataMap={}),detailsLength&&(meta.sum=0),details.forEach(entry=>{entry=fn(entry,this.getValueKeys(sortBy)),data.push(entry),dataMap&&(dataMap[entry.name]=entry),meta.sum+=entry.value,(null==meta.max||entry.value>meta.max)&&(meta.max=entry.value),(null==meta.min||entry.value<meta.min)&&(meta.min=entry.value),(null==meta.minNonZero||entry.value<meta.minNonZero)&&entry.value>0&&(meta.minNonZero=entry.value)}),detailsLength&&(meta.average=meta.sum/detailsLength),result[supportedType]=dataMap||data,result[supportedType]._meta=meta)}),result}}},,,,function(module,exports,__webpack_require__){"use strict";const{BaseCsfExtensionDevice:BaseCsfExtensionDevice,BaseCsfDevice:BaseCsfDevice}=__webpack_require__(432);class CsfFortiSwitch extends BaseCsfExtensionDevice{constructor(csfEntry={ports:[]},parentFortigateId=""){super(csfEntry,parentFortigateId),this.ports=csfEntry.ports,this.fgtPeerIntfName=csfEntry.fgt_peer_intf_name||csfEntry["fsw-wan1-peer"],this.isDirectlyConnected=csfEntry.is_directly_connected||csfEntry.ports.some(port=>port.fortilink_port||port["fortilink-port"]),this.hasFortilink=this.isDirectlyConnected&&this.fgtPeerIntfName}getStatusIconClass(){return this.isConnected()?"fa-connected":"fa-warning"}getStatusLabel(){let msg;return msg=this.isAuthorized()?this.isConnected()?"connected":"Offline":"discovered"}getIconClass(){const iconClasses=["ftnt-standard-fortiswitch","security-fabric-node"];return this.isAuthorized()?this.isConnected()||iconClasses.push("disconnected"):iconClasses.push("discovered"),iconClasses.join(" ")}addPort(port){this.ports.push(port),this.interfaces.push(port),this.interfaceMap[port.name]=port}_populateInterfaces(){this.ports.forEach(port=>{this.interfaces.push(port),this.interfaceMap[port.name]=port})}}class CsfFortiSwitchHA extends BaseCsfDevice{constructor(fortiswitches,fortigate){super(fortiswitches,fortiswitches.map(fsw=>fsw.id).sort().join("::"),fortigate.id),this.hasFortilink=!0,this.fortiswitchMembers=fortiswitches,this.fortiswitchMemberMapping=this.fortiswitchMembers.reduce((prev,fsw)=>(prev[fsw.id]=fsw,prev),{}),this.fgtPeerIntfName=fortiswitches[0].fgtPeerIntfName,this.fgtPeerIntf=fortigate.interfaceMap[this.fgtPeerIntfName],this.haType=this.fgtPeerIntf.has_switchctl_split_interface?"active-passive":"active-active",this.vdom=this.fortiswitchMembers[0].vdom}get isFswHa(){return!0}getLabel(){return""}getIconClass(){return"ftnt-fortiswitch-ha security-fabric-node"}requiresAuthorizationDecision(){return this.csfEntry.some(fsw=>fsw.requiresAuthorizationDecision())}isAuthorized(){return!0}isConnected(){return!0}canAuthorize(){return!1}canDeauthorize(){return!1}canDenyAuthorization(){return!1}canConnectToGui(){return!1}}module.exports={CsfFortiSwitch:CsfFortiSwitch,CsfFortiSwitchHA:CsfFortiSwitchHA,CsfFortiSwitchBlock:class extends BaseCsfDevice{constructor(component,componentRootId,componentCyclicArrangement){const fortiswitches=component.nodes.reduce((prev,node)=>{const data=node.data;return data instanceof CsfFortiSwitchHA?prev=prev.concat(data.csfEntry):data instanceof CsfFortiSwitch&&prev.push(data),prev},[]),parentFortigateId=fortiswitches[0].parentFortigateId,id=fortiswitches.map(fsw=>fsw.id).join("::");super(component.nodes.map(node=>node.data),id,parentFortigateId),this.component=component,this.componentRootId=componentRootId,this.fortiswitchMembers=fortiswitches,this.fortiswitchMemberMapping=this.fortiswitchMembers.reduce((prev,fsw)=>(prev[fsw.id]=fsw,prev),{}),this.fgtPeerIntfName=this.fortiswitchMembers[0].fgtPeerIntfName,this.cyclicArrangement=componentCyclicArrangement.map(node=>node.data)}get isFswBlock(){return!0}getLabel(){return""}isAuthorized(){return!0}isConnected(){return!0}getIconClass(){return"ftnt-fortiswitch-block security-fabric-node"}requiresAuthorizationDecision(){return this.csfEntry.some(fsw=>fsw.requiresAuthorizationDecision())}canAuthorize(){return!1}canDeauthorize(){return!1}canDenyAuthorization(){return!1}canConnectToGui(){return!1}}}},,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(28),__webpack_require__(31),__webpack_require__(93),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,notify,patterns,dom,fQuarantine,ftnt_shared){const Omniselect=ftnt_shared.Omniselect;var fQuarantineDialog={bindings:{entries:"<",removeMode:"<"},controller:QuarDlg,templateUrl:__webpack_require__(851)},QUARANTINE_URL="/api/v2/cmdb/user/quarantine/";function uniqueCombine(dst,src,key,merge){Array.isArray(src)&&Array.isArray(dst)&&src.forEach(function(item){var existing=isExisting(dst,item,key);existing?merge&&Object.assign(existing,item):dst.push(item)})}function isExisting(array,item,key){return(array||[]).find(function(old){return old[key]===item[key]})}function QuarDlg(slide,injector,$scope){injector.injectMarked(this,{$scope:$scope}),this.patterns=patterns.commonRegExp,this.loading=!0;var doneLoading=function(){this.loading=!1}.bind(this);this.initSources().then(doneLoading)}function getCsfPathUri(csfPath){return csfPath?"/csf/"+csfPath+QUARANTINE_URL:QUARANTINE_URL}QuarDlg.prototype.QUARANTINED_TYPES_MAP=inject.mark(function(lang){return{mac:{lang:"MAC address",multiEntryKey:"macs",initSourceFn:function(entry,addSourceFn){var baseSource={description:function(fromEntry){var result=[],hostname=fromEntry.hostname,username=fromEntry.username;hostname&&result.push(lang("hostname").toString()+": "+hostname);username&&result.push(lang("Username").toString()+": "+username);return dom.escapeHTML("manual-qtn "+result.join(", "))}(entry)};addSourceFn([entry.mac,...entry.otherMacs?entry.otherMacs:[]].filter(mac=>"string"==typeof mac).map(mac=>Object.assign({mac:mac},baseSource)),entry.hostname||entry.username)},getDevice:function(entry){var mac=entry.mac,device=this.detectedDevices[mac];return device&&device.master_mac&&device.mac!==device.master_mac&&(device=this.detectedDevices[device.master_mac]),device}.bind(this)}}}),QuarDlg.prototype.forEachType=inject.mark(function(){return function(processFn){Object.keys(this.QUARANTINED_TYPES_MAP).forEach(function(type){processFn(type,this.QUARANTINED_TYPES_MAP[type])}.bind(this))}}),QuarDlg.prototype.loadQuarantines=inject.mark(function($http,$q,lang){return function(){this.quarantines={},this.quarantinesSchema={};var promises=Object.keys(this.sources).map(function(fortigate){var detectedDevicesPromise,url=getCsfPathUri(this.sources[fortigate].csfPath);return["devices"].some(function(source){try{return detectedDevicesPromise=Omniselect.getSourceData(source),this.deviceDataSource=source,!0}catch(e){detectedDevicesPromise=$q.resolve([])}}.bind(this)),$q.all({data:$http.get(url),schema:$http.get(url,{params:{action:"schema"}}),detectedDevices:detectedDevicesPromise}).then(function(responses){var data=responses.data.data.results,schema=responses.schema.data.results;if(this.detectedDevices=responses.detectedDevices.mapping||{},!data)return $q.reject("Invalid response");this.quarantines[fortigate]=data,data.quarantine="enable",this.quarantinesSchema[fortigate]=schema,this.extendEntries()}.bind(this))}.bind(this));return $q.all(promises).catch(function(){return notify.post(lang("Failed to retrieve quarantine info"),notify.LEVEL.ERROR),$q.reject()})}}),QuarDlg.prototype.extendEntries=inject.mark(function(){return function(){this.entries.forEach(function(entry){entry.srcmac&&Object.assign(entry,this.detectedDevices[entry.srcmac])}.bind(this))}}),QuarDlg.prototype.invalidateOmniSelect=inject.mark(function(csfTopology){return function(fortigateSerials,datasources){const fortigates=fortigateSerials.map(fortigateSerial=>csfTopology.fortigateMapping[fortigateSerial]);for(let fortigate of fortigates)for(let datasource of datasources)ftnt_shared.Omniselect.invalidateCacheForSource(fortigate.getOmniselectProxySourceID(datasource))}}),QuarDlg.prototype.submit=inject.mark(function(lang,$q,$http,quarantineData,$rootScope){return function(){const fortigateSerials=Object.keys(this.sources);return $q.all(fortigateSerials.map(fortigateSerial=>{var url=getCsfPathUri(this.sources[fortigateSerial].csfPath);return $http.put(url,this.quarantines[fortigateSerial])})).then(function(){quarantineData.clearCache(),this.invalidateOmniSelect(fortigateSerials,["devices"]),$rootScope.$broadcast("QUARANTINE_EVENTS",{messageType:this.removeMode?"deviceRemoveQuarantineSuccessful":"deviceQuarantineSuccessful",fortigateSerials:fortigateSerials}),notify.post(lang(this.removeMode?"Entries removed from quarantine":"Entries have been added to quarantine."),notify.LEVEL.SUCCESS)}.bind(this)).catch(function(error){notify.post(lang(this.removeMode?"Failed to remove quarantine: {ERROR}":"Failed to add quarantine: {ERROR}",[error.statusText]),notify.LEVEL.ERROR)}.bind(this))}}),QuarDlg.prototype.initSources=inject.mark(function($scope,$timeout,csfTopology){return function(){return this.sources={},this.entries.forEach(entry=>{if(!fQuarantine.isQuarantineRequestEntry(entry))throw new Error("Entries must be instances of QuarantineRequestEntry");this.sources[entry.fortigateSerial]=this.sources[entry.fortigateSerial]||{},this.sources[entry.fortigateSerial].csfPath=csfTopology.fortigateMapping[entry.fortigateSerial].path}),this.loadQuarantines().then(function(){this.entries.forEach(function(entry){this.forEachType(function(type,keys){var addSourceFn=this.createAddSourceFn(entry.fortigateSerial,type);keys.initSourceFn&&keys.initSourceFn(entry,addSourceFn)}.bind(this))}.bind(this)),$timeout(function(){$scope.$broadcast("validation-msg_show")})}.bind(this))}}),QuarDlg.prototype.createUniqueItemName=function(prefix,fortigate){var count=0;prefix||(prefix="manual-qtn-1",count++);for(var result=prefix,existingNames=this.quarantines[fortigate].targets.map(function(item){return item.entry}),targetsSchema=this.getTargetsSchema(fortigate),maxLength=targetsSchema&&targetsSchema.entry&&targetsSchema.entry.size;!result||existingNames.includes(result)||maxLength&&result.length>maxLength;)if(count++,result=prefix+String(count),maxLength&&result.length>maxLength){var nextLength=prefix.length>maxLength?maxLength:prefix.length-1;result=prefix=prefix.substring(0,nextLength),count=0}return result},QuarDlg.prototype.getTargetsSchema=function(fortigate){return this.quarantinesSchema[fortigate]&&this.quarantinesSchema[fortigate].children&&this.quarantinesSchema[fortigate].children.targets&&this.quarantinesSchema[fortigate].children.targets.children},QuarDlg.prototype.isMultiEntrySupported=function(fortigate,type){var multiEntryKey=this.QUARANTINED_TYPES_MAP[type].multiEntryKey;return!!(this.getTargetsSchema(fortigate)||{})[multiEntryKey]},QuarDlg.prototype.createAddSourceFn=function(fortigate,type){return this.sources[fortigate][type]=this.sources[fortigate][type]||[],this.isMultiEntrySupported(fortigate,type)?this.addMultiEntrySource(fortigate,type):this.addSingleEntrySource(fortigate,type)},QuarDlg.prototype.addMultiEntrySource=inject.mark(function(lang){return function(fortigate,type){return function(sourceList,preferredName){var quarantineEntry,createBaseEntry=function(){return{entry:this.createUniqueItemName(preferredName,fortigate),description:lang("Manually quarantined").toString()}}.bind(this),multiEntryKey=this.QUARANTINED_TYPES_MAP[type].multiEntryKey,displayList=this.sources[fortigate][type];if(sourceList.forEach(function(source){var existing,existingIdx=this.findExistingIdx(source,type,fortigate);-1!==existingIdx&&(existing=this.quarantines[fortigate].targets[existingIdx],quarantineEntry?quarantineEntry&&quarantineEntry!==existing&&(existing[multiEntryKey].forEach(function(item){item&&(delete item.entry,delete item["entry-id"],delete item.parent)}),uniqueCombine(quarantineEntry[multiEntryKey],existing[multiEntryKey],type),this.quarantines[fortigate].targets.splice(existingIdx,1)):(quarantineEntry=existing,this.removeMode&&this.quarantines[fortigate].targets.splice(existingIdx,1)))}.bind(this)),quarantineEntry){var existingList=quarantineEntry[multiEntryKey],overrideDescription=!this.removeMode&&preferredName;uniqueCombine(existingList,sourceList,type,!!overrideDescription),this.patterns.MAC_ADDRESS.test(quarantineEntry.entry)&&(Object.assign(quarantineEntry,createBaseEntry()),existingList.forEach(function(item){item.parent=quarantineEntry.entry,delete item["entry-id"],delete item.entry})),this.removeMode||preferredName||sourceList.forEach(function(item){var existing=isExisting(existingList,item,type);existing&&existing.description&&(item.description=existing.description)}),uniqueCombine(displayList,this.removeMode?existingList:sourceList,type)}else uniqueCombine(displayList,sourceList,type),this.removeMode||((quarantineEntry=createBaseEntry())[multiEntryKey]=[],uniqueCombine(quarantineEntry[multiEntryKey],sourceList,type),this.quarantines[fortigate].targets.push(quarantineEntry))}.bind(this)}}),QuarDlg.prototype.addSingleEntrySource=function(fortigate,type){return function(sourceList){var displayList=this.sources[fortigate][type];sourceList.forEach(function(source){var existingIdx;if(-1!==(existingIdx=this.findExistingIdx(source,type,fortigate))){var existingSource=this.quarantines[fortigate].targets[existingIdx];this.removeMode?(Object.assign(source,existingSource),this.quarantines[fortigate].targets.splice(existingIdx,1)):source.description&&Object.assign(existingSource,source)}else this.removeMode||this.quarantines[fortigate].targets.push(source)}.bind(this)),uniqueCombine(displayList,sourceList,type)}.bind(this)},QuarDlg.prototype.findExistingIdx=function(entry,type,fortigate){var isMultiEntrySupported=this.isMultiEntrySupported(fortigate,type),multiEntryKey=this.QUARANTINED_TYPES_MAP[type].multiEntryKey;return(this.quarantines[fortigate]&&this.quarantines[fortigate].targets||[]).findIndex(function(item){return isMultiEntrySupported?isExisting(item[multiEntryKey],entry,type):item[type]===entry[type]})},ngModule.component("fQuarantineDialog",fQuarantineDialog)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";module.exports=[__webpack_require__(454),__webpack_require__(455),__webpack_require__(891)]},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(30),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fLog,ftnt_shared){const LOG_VIEW_PARAMS={SRC_FIELD1:"src_field1",SRC_FIELD2:"src_field2",DST_FIELD1:"dst_field1",DST_FIELD2:"dst_field2"},REQUEST_TYPE_MAIN="main",REQUEST_TYPE_SUMMARY="summary";function Fortiview($scope,$element,injector){if(injector.injectMarked(this,{$scope:$scope}),$element[0].classList.add("flex-column","absolute-fill"),!this.dashboardWidget&&!this.embedded)throw new Error("[dashboard|embedded] is required");this.controller=this,this.loading=!0,this.originalInputFilters=this.inputFilters,this.supported=!0,this.DYNAMIC_TRANSLATE_FIELDS={unauth_src1:LOG_VIEW_PARAMS.SRC_FIELD1,unauth_src2:LOG_VIEW_PARAMS.SRC_FIELD2,unauth_target1:LOG_VIEW_PARAMS.DST_FIELD1,unauth_target2:LOG_VIEW_PARAMS.DST_FIELD2},this.init().then(()=>{this.setupWatches(),this.refreshAndSyncParams(!0)},error=>fLog.warn(error))}Fortiview.prototype.init=inject.mark((fortiviewDevices,fortiviewConfig)=>(async function(){if(await fortiviewDevices.initializeTooltips(),this.config=fortiviewConfig.getFortiviewConfig(this.type),!this.config)return this.notSupportedMessage="Invalid FortiView type",this.loading=!1,Promise.reject(`Invalid FortiView type "${this.type}"`);if([this.supported,this.notSupportedMessage]=await fortiviewConfig.isFortiviewSupported(this.type),!this.supported)return this.loading=!1,Promise.reject(`"${this.type}" FortiView isn't supported`);if(this.returnPath=this.returnPath,this.compareBy=null,this.sessionsFortigate=null,this.tab=null,this.tabs=null,this.drilldownConfig=null,null!=this.drilldownValue){this.tabs=fortiviewConfig.getDrilldownTabs(this.config);const tab=this.tabs.find(tab=>tab.value===this.inputTab)||this.tabs[0];this.tab=tab.value,this.drilldownConfig=this.config,this.config=fortiviewConfig.getFortiviewConfig(this.tab)}this.timeframeType=this.drilldownConfig&&this.drilldownConfig.timeframeType||this.config.timeframeType,await this.initializeDevice(),this.timeframeOption||this.initializeTimeframe(),this.initializeVisualization(),await this.initializeFilters(),this.updateSummaryColumns(),this.updateSessionsTabOptions(),this.checkDependencies(),this.setupColumns(),this.setupMutable(),this.listenForOmniselectSourceChange(),this.listenForQuarantineEvents()})),Fortiview.prototype.listenForOmniselectSourceChange=inject.mark(($scope,fortiviewDevices)=>(function(){$scope.$on(ftnt_shared.Omniselect.NOTIFY_SOURCE_CHANGED_MESSAGE,(event,sourceID)=>{const fortiViewTypes=["source","sessions","compromisedHosts"];sourceID.includes("firewall.address")&&(fortiViewTypes.includes(this.type)||fortiViewTypes.includes(this.tab))&&(fortiviewDevices.resetOmniselect(),this.refreshFromAction())})})),Fortiview.prototype.listenForQuarantineEvents=inject.mark(($scope,fortiviewDevices,csfTopology,$q)=>(function(){$scope.$on("QUARANTINE_EVENTS",async(event,{messageType:messageType,fortigateSerials:fortigateSerials})=>{const isBanMessage=["deviceBanSuccessful","deviceRemoveBanSuccessful"].includes(messageType),isQuaratineMessage=["deviceRemoveQuarantineSuccessful","deviceQuarantineSuccessful"].includes(messageType);try{isBanMessage?await $q.all(fortigateSerials.map(serial=>csfTopology.fortigateMapping[serial]._populateBannedUsers())):isQuaratineMessage&&await $q.all(fortigateSerials.map(serial=>csfTopology.fortigateMapping[serial]._populateQuarantinedUsers()))}catch(e){fLog.error(e)}fortiviewDevices.resetOmniselect(fortigateSerials),this.refreshFromAction()})})),Fortiview.prototype.SEGMENT_FILTERS=inject.mark(fortiviewConfig=>({[fortiviewConfig.SEGMENT_TYPE.LAN_DMZ]:{srcintfrole:["lan","dmz","undefined"]},[fortiviewConfig.SEGMENT_TYPE.WAN]:{srcintfrole:["wan"]}})),Fortiview.prototype.initializeDevice=inject.mark((fortiviewData,state)=>(async function(){const configSupportedDevices=new Set(this.config.devices||[]);this.devices=fortiviewData.getDevices(state),configSupportedDevices.size&&(this.devices=this.devices.filter(device=>configSupportedDevices.has(device)));const device=this.devices.includes(this.inputDevice)?this.inputDevice:fortiviewData.getDefaultDevice(state);await this.setDeviceAndUpdateTimeframes(device)})),Fortiview.prototype.initializeTimeframe=function(){this.availableTimeframeOptions=this.getAvailableTimeframeOptions(),this.inputTimeframe&&"custom"===this.inputTimeframe||this.availableTimeframeOptions.includes(this.inputTimeframe)?this.setTimeframeOption(this.inputTimeframe,this.inputEndTimestamp,this.inputStartTimestamp):this.setTimeframeOption(this.availableTimeframeOptions[0])},Fortiview.prototype.reValidateTimeframe=function(){this.availableTimeframeOptions.includes(this.timeframeOption)||this.setTimeframeOption(this.availableTimeframeOptions[this.availableTimeframeOptions.length-1])},Fortiview.prototype.initializeVisualization=function(){const options=this.config.visualization.options;this.inputVisualization&&options.includes(this.inputVisualization)?this.visualizationOption=this.inputVisualization:this.visualizationOption=options[0]},Fortiview.prototype.initializeLogFilters=function(){this.logFilters={},this.logFilterTranslate={};const RESERVED_LOG_VIEW_PARAMS=new Set(Object.values(LOG_VIEW_PARAMS));Object.entries(this.inputFilters||{}).forEach(([key,value])=>{RESERVED_LOG_VIEW_PARAMS.has(key)&&(this.logFilterTranslate[key]=Array.isArray(value)?value:[value])})},Fortiview.prototype.initializeFilters=inject.mark(fortiviewCommonFilters=>(function(){this.initializeLogFilters(),this.filters={};let config=this.drilldownConfig||this.config;this.segmentFilter=this.SEGMENT_FILTERS[config.segment],fortiviewCommonFilters.getFilterConfig().then(filterConfigs=>{if(this.filterConfigs=filterConfigs,this.isDrilldown()){const id=this.drilldownConfig.primaryFilters[0];this.filters[id]=[this.drilldownValue]}const RESERVED_LOG_VIEW_PARAMS=new Set(Object.values(LOG_VIEW_PARAMS));Object.entries(this.inputFilters||{}).forEach(([key,value])=>{RESERVED_LOG_VIEW_PARAMS.has(key)||(this.filters[key]=Array.isArray(value)?value:[value])}),this.overrideLogType=this.overrideLogType,this.updateFilters()})})),Fortiview.prototype.getAvailableTimeframeOptions=inject.mark(fortiviewData=>(function(){return this.deviceSupportedTimeframeOptions.filter(option=>option===fortiviewData.TIME_PERIODS.REALTIME?!this.isRealtimeDisabled():!this.isHistoricalDisabled())})),Fortiview.prototype.getLogType=function(){let logType;return this.config.universalSessions&&(logType=this.overrideLogType),logType||this.config.logType||this.isDrilldown()&&this.drilldownConfig.logType||"traffic/fortiview"},Fortiview.prototype.updateLogFilters=function(){this.initializeLogFilters(),Object.entries(this.filters).forEach(([id,filter])=>{let config=this.filterConfigs[id];try{config.meta&&(!config.meta||config.meta.excludeFromAllRequests||config.meta.excludeFromLogRequest)||(this.logFilters[id]=filter)}catch(e){throw new Error(`Unregistred filter ${id} is used for log filter`)}})},Fortiview.prototype.getExtraLogFilters=inject.mark((ApiFilter,fortiviewConfig)=>(function(){let filters=[];if(!this.isRealtime()&&this.timeframeType!==fortiviewConfig.TIMEFRAME_TYPE.NONE){const KEY="_metadata.timestamp";filters.push(new ApiFilter(KEY,1e3*this.startTimestamp,ApiFilter.OP.GREATER_OR_EQUAL)),filters.push(new ApiFilter(KEY,1e3*this.endTimestamp,ApiFilter.OP.LESS_OR_EQUAL))}return this.segmentFilter&&this.segmentFilter.srcintfrole&&filters.push(new ApiFilter("srcintfrole",this.segmentFilter.srcintfrole)),this.config.logFilters&&(filters=filters.concat(this.config.logFilters)),filters})),Fortiview.prototype.updateFilters=inject.mark(csfTopology=>(function(){const isCsfEnabled=csfTopology.csfEnabled,isTopLevelSessions=this.isTopLevelSessions();if(isCsfEnabled&&isTopLevelSessions){let filter=this.filters.fortigate;filter&&(filter=filter.filter(serial=>csfTopology.fortigateMapping[serial])),filter&&filter.length||(filter=[csfTopology.thisFortigate.serial]),this.filters.fortigate=[filter[0]]}this.extraLogFilters=this.getExtraLogFilters()})),Fortiview.prototype.updateFilter=function(key,value){this.filters[key]=value};var optionalFunctionValue=value=>"function"==typeof value?value():value;function FortiviewStreamableSource(fortiview){this.fortiview=fortiview}return Fortiview.prototype.checkDependencies=inject.mark($q=>(function(){var realtime=this.isRealtime();$q.all((this.config.dependencies||[]).filter(dependency=>!realtime||realtime&&!dependency.historicalOnly).map(dependency=>$q.resolve(!dependency.enabled||dependency.enabled()).then(enabled=>enabled?dependency:null))).then(enabledDependencies=>this.dependencies=enabledDependencies.filter(dependency=>null!=dependency).map(dependency=>({message:optionalFunctionValue(dependency.message),url:optionalFunctionValue(dependency.url)})))})),Fortiview.prototype.getColumns=inject.mark((csfTopology,fortiviewConfig)=>(function(columns){var isRealtime=this.isRealtime();return columns.filter(column=>isRealtime?!column.historicalOnly:!column.realtimeOnly).concat(csfTopology.csfEnabled?fortiviewConfig.FORTIVIEW_COLUMNS.fortigate:[])})),Fortiview.prototype.getDefaultColumns=function(config,forDashboardWidget){let defaultColumns;return forDashboardWidget&&config.defaultDashboardWidgetColumns?defaultColumns=[...config.defaultDashboardWidgetColumns]:config.defaultColumns&&(defaultColumns=[...config.defaultColumns]),defaultColumns||(defaultColumns=[],fLog.error(`Default columns are not specified for "${config.type}"`)),defaultColumns},Fortiview.prototype.getCompareByColumns=function(config,columns){return columns.filter(column=>column.sorting)},Fortiview.prototype.setCompareBy=function(column){this.compareBy=column},Fortiview.prototype.setupColumns=function(){this.columns=this.getColumns(this.config.columns),this.config.visualization&&this.config.visualization.tooltipColumns?this.tooltipColumns=this.getColumns(this.config.visualization.tooltipColumns):this.tooltipColumns=null,this.compareByColumns=this.isTypeSessions()?[]:this.getCompareByColumns(this.config,this.columns);let compareByID=this.inputCompareBy,matchedColumn=compareByID&&this.compareByColumns.find(column=>column.compareByID?column.compareByID===compareByID:column.id===compareByID);this.muTableFormatter=new ftnt_shared.MuTableEntryFormatter({columns:this.columns}),matchedColumn?this.compareBy=matchedColumn:this.compareByColumns.length?this.compareBy=this.compareByColumns[0]:this.compareBy=null},Fortiview.prototype.calculateNumberOfVisibleColumns=function(){let number=Number.MAX_VALUE;return this.embedded||this.fullScreenWidget||this.dashboardWidget.isZoomed||(number=Math.floor(1.3*this.dashboardWidget.widgetModel.getRelativeWidth())),number},Fortiview.prototype.setupMutable=function(){const realtimeKey=this.isRealtime()?"realtime":"historical";let defaultColumns=this.getDefaultColumns(this.config,this.dashboardWidget);if(this.visibleColumnsCount=this.calculateNumberOfVisibleColumns(),defaultColumns.length>this.visibleColumnsCount){const columnsMap=this.columns.reduce((map,column)=>(map[column.id]=column,map),{});let sizeAwareDefaultColumns=[];if(sizeAwareDefaultColumns.push(defaultColumns[0]),defaultColumns.splice(0,1),this.compareBy){let compareByIndex=defaultColumns.indexOf(this.compareBy.id);sizeAwareDefaultColumns.push(this.compareBy.id),compareByIndex>=0&&defaultColumns.splice(compareByIndex,1)}for(;this.visibleColumnsCount>sizeAwareDefaultColumns.length&&defaultColumns.length;)columnsMap[defaultColumns[0]]&&sizeAwareDefaultColumns.splice(1,0,defaultColumns[0]),defaultColumns.splice(0,1);defaultColumns=sizeAwareDefaultColumns}else this.compareBy&&!defaultColumns.includes(this.compareBy.id)&&defaultColumns.push(this.compareBy.id);this.mutableSettings=Object.assign({id:[window.location.pathname,this.inputWidgetId||0,this.getType(),realtimeKey].join("#"),defaultColumns:defaultColumns,defaultSortColumn:Array.from(new Set([...this.compareBy?[this.compareBy.id]:[],...this.compareByColumns.map(column=>column.id)])),columns:this.columns,sorting:!this.isTypeSessions()},this.dashboardWidget.isZoomed?null:{persistSortingColumn:!1,persistSelectedColumns:!1})},Fortiview.prototype.setupWatches=inject.mark(function(fortiviewData,$scope){return function(){$scope.$watch("$ctrl.filters",function(filters,oldFilters){this.updateLogFilters(),filters===oldFilters||this.loading||(this.updateSessionsTabOptions(),this.setupMutable(),this.refreshAndSyncParams())}.bind(this),!0),$scope.$watch("$ctrl.compareBy",(compareBy,oldCompareBy)=>{compareBy&&compareBy!==oldCompareBy&&"table"!==this.visualizationOption&&(this.setCompareBy(compareBy),this.setupMutable(),this.refreshAndSyncParams())},!0),$scope.$watchGroup(["$ctrl.dashboardWidget.widgetModel.getRelativeWidth()","$ctrl.dashboardWidget.widgetModel.getRelativeHeight()"],([width,height],[previousWidth,previousHeight])=>{let widthChanged=!1;if("table"===this.visualizationOption&&!this.loading){if(width&&width!==previousWidth){if(this.calculateNumberOfVisibleColumns()!==this.visibleColumnsCount)return void this.setupMutable();widthChanged=!0}this.muTableInstance&&(widthChanged||height&&height!==previousHeight)&&this.muTableInstance.updateDisplay()}}),this.fullScreenWidget||$scope.$watch("$ctrl.dashboardWidget.isZoomed",(zoomed,previous)=>{"table"===this.visualizationOption&&!this.loading&&zoomed!==previous&&this.setupMutable()})}}),Fortiview.prototype.getType=function(){return this.tab||this.type},Fortiview.prototype.isTypeSessions=function(){return!!this.config.sessions},Fortiview.prototype.isRealtime=inject.mark(fortiviewData=>(function(){return this.timeframeOption===fortiviewData.TIME_PERIODS.REALTIME})),Fortiview.prototype.isTimeframeSelectionDisabled=inject.mark(fortiviewConfig=>(function(){return this.timeframeType===fortiviewConfig.TIMEFRAME_TYPE.LARGEST_HISTORICAL||this.timeframeType===fortiviewConfig.TIMEFRAME_TYPE.LATEST||this.timeframeType===fortiviewConfig.TIMEFRAME_TYPE.NONE})),Fortiview.prototype.isRealtimeDisabled=function(){return this.isTimeframeSelectionDisabled()||this.drilldownConfig&&this.drilldownConfig.realtimeDisabled||this.config.realtimeDisabled},Fortiview.prototype.isHistoricalDisabled=function(){return this.isTimeframeSelectionDisabled()||this.drilldownConfig&&this.drilldownConfig.historicalDisabled||this.config.historicalDisabled},Fortiview.prototype.isLogViewMode=function(){return!this.isRealtime()&&this.isTypeSessions()},Fortiview.prototype.isDrilldown=function(){return!!this.drilldownConfig},Fortiview.prototype.isSandboxFileDetails=function(){return this.config&&"sandboxFileDetails"===this.config.type},Fortiview.prototype.showTabs=function(){return this.isDrilldown()&&!(this.config&&this.config.hideTabs)},Fortiview.prototype.showChart=function(){return this.chartSupport&&!this.isRealtime()&&!this.isTopLevelSessions()},Fortiview.prototype.showSummaryTable=function(){return this.isDrilldown()&&!(this.config&&this.config.hideSummaryTable)},Fortiview.prototype.showMutableTable=function(){return this.supported&&"table"===this.visualizationOption&&!this.isLogViewMode()&&!this.isSandboxFileDetails()},Fortiview.prototype.showExtraTimingControls=function(){return!(this.config&&this.config.hideExtraTimingControls)},Fortiview.prototype.isTopLevelSessions=function(){return!this.isDrilldown()&&this.isTypeSessions()},Fortiview.prototype.refreshAndSyncParams=inject.mark(csfTopology=>(async function(){await csfTopology.buildIfNecessary(csfTopology.BUILD_TYPES.WITH_DETAILED_DEVICES),this.pendingGetData=!0,this.mutableSource=new FortiviewStreamableSource(this),("table"!==this.visualizationOption||this.isLogViewMode())&&this.getData(),this.loading=!1})),Fortiview.prototype.getOffsetTime=inject.mark(state=>(function(){return Math.floor((Date.now()-state.browser_utc_offset)/1e3)})),Fortiview.prototype.updateTimestampAndRefresh=inject.mark(($scope,fortiviewData)=>(function(){fortiviewData.clearCache(),this.setTimeframeOption(this.timeframeOption),this.setupMutable(),this.refreshAndSyncParams(),$scope.$broadcast("logViewerRefresh")})),Fortiview.prototype.refreshFromAction=inject.mark(fortiviewData=>(function(){fortiviewData.clearCache(),this.refreshAndSyncParams()})),Fortiview.prototype.createRequestParams=inject.mark(($q,$scope,fortiviewConfig,state)=>(async function(requestType,extraParams){const TIMEFRAME_TYPE=fortiviewConfig.TIMEFRAME_TYPE;let fortigate,isRealtime=this.isRealtime(),isMainRequest=requestType===REQUEST_TYPE_MAIN,config=isMainRequest?this.config:this.drilldownConfig,timeframeType=config.timeframeType,compareByColumn=isMainRequest?this.compareBy:this.summaryCompareBy,isSessionsRequest="sessions"===config.reportBy,filters={},filterPromises=[];this.config.extraFilters&&Object.assign(filters,this.config.extraFilters),isSessionsRequest&&this.sessionsFortigate&&(fortigate=this.sessionsFortigate),Object.entries(this.filters).forEach(([id,filter])=>{let filterPromise;const filterConfig=this.filterConfigs[id];filterConfig.meta&&(filterConfig.meta.excludeFromAllRequests||filterConfig.meta.excludeFromMainRequest&&isMainRequest||filterConfig.meta.excludeFromSummaryRequest&&!isMainRequest)||(filterPromise=isSessionsRequest&&filterConfig.tweakFilter&&filterConfig.tweakFilter.session?Promise.resolve(filterConfig.tweakFilter.session(filter)):filterConfig.tweakFilter&&filterConfig.tweakFilter.fortiview?Promise.resolve(filterConfig.tweakFilter.fortiview(filter,{timeframeOption:this.timeframeOption,filters:filters})):Promise.resolve(filter),filterPromises.push(filterPromise.then(resolvedFilter=>{Array.isArray(resolvedFilter)&&(resolvedFilter=resolvedFilter[0]),filters[id]=resolvedFilter})))}),await $q.all(filterPromises),Object.assign(filters,this.segmentFilter);const params=Object.assign({cache:!0,device:this.device,requestID:requestType,reportBy:config.reportBy,sortByColumn:compareByColumn&&compareByColumn.id,filters:filters,realtime:isRealtime,latest:timeframeType===TIMEFRAME_TYPE.LATEST||null,withChart:this.chartSupport&&(isMainRequest||this.isLogViewMode()),fortigate:fortigate,scope:$scope,vdom:state.current_vdom},extraParams);return timeframeType!==TIMEFRAME_TYPE.USER_SELECTED&&timeframeType!==TIMEFRAME_TYPE.LARGEST_HISTORICAL||(params.startTime=this.startTimestamp,params.endTime=this.endTimestamp),params})),Fortiview.prototype.getData=inject.mark(($scope,$q,$timeout,state,fortiviewData)=>{return function(func,amount){var _debouncePromise;return function(...args){var currentDebouncePromise=_debouncePromise=(_amount=>$timeout(null,_amount,!1))(amount).then(()=>_debouncePromise===currentDebouncePromise?func.call(this,...args):_debouncePromise);return _debouncePromise}}(function(extraParams){let logViewMode=this.isLogViewMode(),realtime=this.isRealtime();return this.logEntries=null,this.chartData=null,this.resolvedSummaryData=null,logViewMode||(this.mainRequest=this.createRequestParams(REQUEST_TYPE_MAIN,extraParams).then(requestParams=>(this.isTypeSessions()&&this.sessionsFortigate&&(requestParams.fortigate=this.sessionsFortigate),fortiviewData.get(requestParams).then(responseData=>responseData.results))),this.source=this.mainRequest.then(results=>results.details),this.visualizationSource=this.mainRequest.then(results=>this.prepareDataForVisualization(results.details)),realtime||(this.chartData=this.mainRequest.then(results=>results.summary))),this.isDrilldown()&&(this.summaryRequest=this.createRequestParams(REQUEST_TYPE_SUMMARY,extraParams).then(summaryRequestParams=>fortiviewData.get(summaryRequestParams).then(responseData=>responseData.results)),this.summaryData=this.summaryRequest.then(results=>{let data=results.details&&results.details[0];if(data)return this.resolvedSummaryData=data,data}),this.summaryData.then(this.updateSessionsTabOptions.bind(this)),logViewMode&&(this.chartData=this.summaryRequest.then(results=>results.summary))),this.pendingGetData=!1,this.mainRequest},100)}),Fortiview.prototype.prepareDataForVisualization=inject.mark($q=>(function(details){const dataFn=this.config.visualization&&this.config.visualization.data&&this.config.visualization.data[this.visualizationOption];if(dataFn)return dataFn(details,this.columns,this.compareBy);{const results=details.map(entry=>{let label,value,formattedValue;const labelColumn=this.columns[0],compareByColumn=this.compareBy;if(labelColumn){const formatter=labelColumn.visualization&&labelColumn.visualization.formatter;label=formatter?formatter(entry):this.muTableFormatter.getEntryValue({entry:entry,columnID:labelColumn.id})}if(compareByColumn){const formatter=compareByColumn.visualization&&compareByColumn.visualization.formatter;formattedValue=formatter?formatter(entry):this.muTableFormatter.formatEntry({entry:entry,columnID:compareByColumn.id}),value=this.muTableFormatter.getEntryValue({entry:entry,columnID:compareByColumn.id})}return $q.all([label,value,formattedValue]).then(([resolvedLabel,resolvedValue,resolvedFormattedValue])=>{let name=entry.getVisualizationKey?entry.getVisualizationKey():resolvedLabel;return resolvedFormattedValue instanceof HTMLElement?resolvedFormattedValue=resolvedFormattedValue.textContent:null!=resolvedFormattedValue&&(resolvedFormattedValue=resolvedFormattedValue.toString()),{name:name,label:resolvedLabel,entry:entry,value:resolvedValue,formattedValue:resolvedFormattedValue,icon:entry.iconCode}})});return $q.all(results).then(data=>(data._meta={columns:this.tooltipColumns||this.columns,compareByColumn:this.compareBy},data))}})),Fortiview.prototype.viewStandalonePage=inject.mark($location=>(function(){$location.path(`/fortiview/${this.type}`)})),Fortiview.prototype.timeframeToSeconds=inject.mark(fortiviewData=>(function(timeframe){return{[fortiviewData.TIME_PERIODS.FIVE_MIN]:300,[fortiviewData.TIME_PERIODS.ONE_HOUR]:3600,[fortiviewData.TIME_PERIODS.ONE_DAY]:86400,[fortiviewData.TIME_PERIODS.ONE_WEEK]:604800}[timeframe]})),Fortiview.prototype.setTimeframeOption=inject.mark(fortiviewConfig=>(function(option,end,start){this.timeframeType===fortiviewConfig.TIMEFRAME_TYPE.LARGEST_HISTORICAL?option=this.deviceSupportedTimeframeOptions[this.deviceSupportedTimeframeOptions.length-1]:this.timeframeType!==fortiviewConfig.TIMEFRAME_TYPE.USER_SELECTED&&(option=null),this.timeframeOption=option,"custom"===option?(this.startTimestamp=start,this.endTimestamp=end):option&&!this.isRealtime()?(this.endTimestamp=end||this.getOffsetTime(),this.startTimestamp=this.endTimestamp-this.timeframeToSeconds(option)):(this.startTimestamp=null,this.endTimestamp=null),this.validateAndUpdateTimestamps(),this.extraLogFilters=this.getExtraLogFilters()})),Fortiview.prototype.validateAndUpdateTimestamps=function(){if(this.startTimestamp&&this.endTimestamp){const EARLIEST_BUFFER=3600;let longestTimeframe=this.availableTimeframeOptions[this.availableTimeframeOptions.length-1],earliestStart=this.getOffsetTime()-this.timeframeToSeconds(longestTimeframe)-EARLIEST_BUFFER;this.startTimestamp<earliestStart&&("custom"===this.timeframeOption?(fLog.warn(`Changing start timestamp from "${this.startTimestamp}" to `+`"${earliestStart}" as it is too far in the past`),this.startTimestamp=earliestStart):(fLog.warn(`Ignoring end timestamp of "${this.endTimestamp}" as it is `+"too far in the past for the requested time period"),this.setTimeframeOption(this.timeframeOption))),this.endTimestamp<=this.startTimestamp&&(fLog.warn("Start timestamp must be before end timestamp. Falling back to first time period"),this.setTimeframeOption(this.availableTimeframeOptions[0]))}},Fortiview.prototype.updateSummaryColumns=inject.mark(csfTopology=>(function(){if(this.isDrilldown()){let columnIDs,columnsMap=this.getColumns(this.drilldownConfig.columns).reduce((map,column)=>(map[column.id]=column,map),{});columnIDs=this.drilldownConfig.summaryTableColumns?[...this.drilldownConfig.summaryTableColumns]:this.getDefaultColumns(this.drilldownConfig),csfTopology.csfEnabled&&columnIDs.push("fortigate"),this.summaryColumns=columnIDs.map(columnID=>columnsMap[columnID]).filter(column=>column),this.summaryCompareBy=this.summaryColumns.find(column=>column.sorting)}})),Fortiview.prototype.afterTimeframeOrDeviceChange=function(){this.updateSummaryColumns(),this.checkDependencies(),this.updateFilters(),this.setupColumns(),this.setupMutable(),this.refreshAndSyncParams()},Fortiview.prototype.timeframeUpdated=function(option,end,start){this.setTimeframeOption(option,end,start),this.afterTimeframeOrDeviceChange()},Fortiview.prototype.deviceUpdated=inject.mark(state=>(async function(device){state.setPreferredLogDevice(device),await this.setDeviceAndUpdateTimeframes(device),this.reValidateTimeframe(),this.afterTimeframeOrDeviceChange()})),Fortiview.prototype.visualizationUpdated=function(visualization){this.source.then(function(details){this.visualizationOption=visualization,this.visualizationSource=this.prepareDataForVisualization(details)}.bind(this))},Fortiview.prototype.viewTypeUpdated=inject.mark(function($location){return function(view){$location.path(`/fortiview/${view}`).search({})}}),Fortiview.prototype.setDeviceAndUpdateTimeframes=inject.mark(fortiviewData=>(async function(device){this.device=device,this.deviceSupportedTimeframeOptions=this.isTopLevelSessions()?[fortiviewData.TIME_PERIODS.REALTIME]:await fortiviewData.getTimeframeOptions(this.device),this.availableTimeframeOptions=this.getAvailableTimeframeOptions(),this.historicalSupport=this.deviceSupportedTimeframeOptions.length>1,this.chartSupport=!this.config.noChartSupport&&this.device!==fortiviewData.DEVICE.FORTICLOUD})),Fortiview.prototype.determineSessionsDrilldownFortigate=inject.mark(csfTopology=>(function(entry,selectedFortigate){let possibleFortigates;csfTopology.csfEnabled?(possibleFortigates=entry.meta.fortigate.map(serial=>csfTopology.fortigateMapping[serial]).filter(value=>value),selectedFortigate||1!==possibleFortigates.length||(selectedFortigate=possibleFortigates[0])):selectedFortigate=csfTopology.thisFortigate,this.selectedDrilldownFortigate=selectedFortigate,this.possibleDrilldownFortigates=possibleFortigates})),Fortiview.prototype.canDrilldown=function(entry){let canDrillDownByEntry=!0;return entry&&this.config.drilldown&&"function"==typeof this.config.drilldown.canDrilldown&&(canDrillDownByEntry=this.config.drilldown.canDrilldown(entry)),(!this.config.drilldown||!this.config.drilldown.disabled)&&canDrillDownByEntry},Fortiview.prototype.drilldown=inject.mark(function(csfTopology,fortiviewConfig){return function(entry,event,fortigate){if(!this.canDrilldown(entry)||this.embedded)return;ftnt_shared.Tooltip.cleanupElementTooltips();let drilldownFilters={},primaryFilterIDs=[...this.config.primaryFilters,...this.config.optionalPrimaryFilters||[]];primaryFilterIDs.forEach(id=>{const config=this.filterConfigs[id];config.id=id;let value=entry.getValueForFilter(config);null!=value&&(Array.isArray(value)||(value=[value]),drilldownFilters[id]=value)}),this.overrideLogType="function"==typeof entry.getLogType?entry.getLogType():this.config.logType,csfTopology.csfEnabled&&entry.drilldownWithFortigate()&&(drilldownFilters.fortigate=entry.meta.fortigate);const translateMap=entry.$dynamicTranslateMap;if(translateMap)for(let key in this.DYNAMIC_TRANSLATE_FIELDS){if(drilldownFilters[key]){const hiddenFieldName=this.DYNAMIC_TRANSLATE_FIELDS[key];drilldownFilters[hiddenFieldName]=translateMap[hiddenFieldName]}}if(this.isDrilldown())if(this.determineSessionsDrilldownFortigate(entry,fortigate),this.selectedDrilldownFortigate){let sessionsTab=this.tabs.find(tab=>{return fortiviewConfig.getFortiviewConfig(tab.value).universalSessions});Object.assign(this.filters,drilldownFilters),this.drilldownFilterIDs=primaryFilterIDs,this.tabUpdated(sessionsTab.value,this.selectedDrilldownFortigate.serial)}else this.contextMenuPopUp.toggle({top:event.clientY,left:event.clientX});else{const firstFilterID=primaryFilterIDs[0],firstFilterValue=drilldownFilters[firstFilterID][0];delete drilldownFilters[firstFilterID],this.loading=!0,this.drilldownValue=firstFilterValue,this.inputFilters=drilldownFilters,this.init().then(()=>this.refreshAndSyncParams(!0))}this.clickedEntry=entry}}),Fortiview.prototype.returnToTopLevel=function(){this.loading=!0,this.drilldownValue=null,this.inputFilters=this.originalInputFilters,this.init().then(()=>this.refreshAndSyncParams(!0))},Fortiview.prototype.showContextMenu=function(entry,entries,event){this.embedded||(this.isDrilldown()&&this.determineSessionsDrilldownFortigate(entry),this.selectedEntries=entries,this.clickedEntry=entry,this.contextMenuPopUp.toggle({top:event.clientY,left:event.clientX}))},Fortiview.prototype.tabUpdated=inject.mark(fortiviewConfig=>(function(tab,sessionsFortigateSerial){this.tab=tab,this.tabConfig=this.tabs.find(_tab=>_tab.value===tab);let config=this.config=fortiviewConfig.getFortiviewConfig(tab);config.visualization.options.includes(this.visualizationOption)||(this.visualizationOption=config.visualization.options[0]),this.isDrilldown()&&sessionsFortigateSerial&&(this.sessionsFortigate=sessionsFortigateSerial),this.availableTimeframeOptions=this.getAvailableTimeframeOptions(),"custom"===this.timeframeOption||this.availableTimeframeOptions.includes(this.timeframeOption)||(this.setTimeframeOption(this.availableTimeframeOptions[0]),this.updateSummaryColumns(),"function"==typeof this.forcedTimeframeChangeCallback&&this.forcedTimeframeChangeCallback()),config.universalSessions||(this.overrideLogType=null,this.drilldownFilterIDs&&this.drilldownFilterIDs.forEach(id=>delete this.filters[id]),this.drilldownFilterIDs=null),this.checkDependencies(),this.updateFilters(),this.setupColumns(),this.setupMutable(),this.refreshAndSyncParams()})),Fortiview.prototype.updateSessionsTabOptions=inject.mark(($location,csfTopology,fortiviewConfig)=>(function(){if(this.tabs){let sessionTabs=[],sessionTabIndices=[];this.tabs.forEach((tab,index)=>{fortiviewConfig.getFortiviewConfig(tab.value).sessions&&((tab=Object.assign({},tab)).dropdown=null,sessionTabs.push(tab),sessionTabIndices.push(index))});let isRealtime=this.isRealtime(),sessionsTabOptions=null;if(csfTopology.csfEnabled){let serials,primaryOptions=new Set,validFortigates=this.resolvedSummaryData&&this.resolvedSummaryData.meta.fortigate.map(serial=>csfTopology.getDevice(serial))||this.filters.fortigate&&[csfTopology.getDevice(this.filters.fortigate)]||csfTopology.fortigates,secondaryOptions=new Set(validFortigates);const addOptions=function(key,set){sessionsTabOptions[key]=Array.from(set.values()).map(fortigate=>({isCurrentFortigate:fortigate.isCurrent,value:fortigate.serial,label:fortigate.getLabel(),icon:fortigate.getIconClass()}))};this.filters.fortigate?serials=Array.isArray(this.filters.fortigate)?this.filters.fortigate:[this.filters.fortigate]:this.resolvedSummaryData&&(serials=this.resolvedSummaryData.meta.fortigate),Array.isArray(serials)&&serials.length&&serials.forEach(serial=>{let fortigate=csfTopology.fortigateMapping[serial];fortigate&&(primaryOptions.add(fortigate),secondaryOptions.delete(fortigate))}),sessionsTabOptions={},addOptions("primary",primaryOptions),addOptions("secondary",secondaryOptions)}if(sessionTabs.forEach((tab,index)=>{sessionsTabOptions&&(tab.dropdown=sessionsTabOptions.primary,tab.dropdownSecondary=sessionsTabOptions.secondary),this.tabs[sessionTabIndices[index]]=tab}),this.tabs=[...this.tabs],this.sessionsTabOptions=sessionsTabOptions,this.isTypeSessions()&&this.sessionsTabOptions&&!this.sessionsFortigate){const validOption=option=>isRealtime||option.isCurrentFortigate;let firstValidOption=this.sessionsTabOptions.primary.find(validOption)||this.sessionsTabOptions.secondary.find(validOption);this.sessionsFortigate=firstValidOption?firstValidOption.value:null}}})),Fortiview.prototype.onForcedTimeframeChange=function(callback){this.forcedTimeframeChangeCallback=callback},Fortiview.prototype.endSessions=inject.mark(($q,$http,lang,slide)=>(function(entries){slide.confirm(lang("Are you sure you wish to end the session(s)?")).then(()=>$q.all(entries.map(session=>$http.post("/api/v2/monitor/firewall/session/close",{pro:session.protocol,saddr:session.sourceAddress,daddr:session.destinationAddress,sport:session.sourcePort,dport:session.destinationPort})))).then(this.refreshFromAction)})),Fortiview.prototype.endAllSessions=inject.mark(($http,lang,slide)=>(function(){slide.confirm(lang("confirm_end_all_sessions")).then(()=>$http.post("/api/v2/monitor/firewall/session/clear_all")).finally(this.refreshFromAction)})),FortiviewStreamableSource.prototype=Object.create(ftnt_shared.MuTable.StreamableSource.prototype),FortiviewStreamableSource.prototype.constructor=FortiviewStreamableSource,FortiviewStreamableSource.prototype.fetchEntries=function(start,end,params){const sortColumn=this.fortiview.compareByColumns.find(column=>column.id===params.sortColumn),isSessions=this.fortiview.isTypeSessions();sortColumn&&sortColumn!==this.fortiview.compareBy&&this.fortiview.setCompareBy(sortColumn);let extraParams={};return isSessions&&(extraParams={start:start,count:end-start+1}),this.fortiview.getData(extraParams).then(results=>(isSessions?this.setCount(results.summary.matched_count):this.setCount(results.details.length),results.details))},FortiviewStreamableSource.prototype.REFRESHABLE=!1,function(providers,moduleLoader){return providers.$compile.component("fFortiview",{bindings:{controller:"=?",dashboardWidget:"<",type:"<",inputWidgetId:"<widgetId",inputDevice:"<device",inputTimeframe:"<timeframe",inputStartTimestamp:"<startTimestamp",inputEndTimestamp:"<endTimestamp",inputVisualization:"<visualization",inputCompareBy:"<compareBy",inputFilters:"<filters",inputTab:"<tab",fullScreenWidget:"<",drilldownValue:"<?",embedded:"<"},templateUrl:__webpack_require__(905),controller:Fortiview}),moduleLoader.initModules([__webpack_require__(906),__webpack_require__(908),__webpack_require__(911),__webpack_require__(913),__webpack_require__(915),__webpack_require__(459),__webpack_require__(184),__webpack_require__(923)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fLog){function RecommendedFirmware(injector){injector.injectMarked(this),this._cached={fortiap:{},fortiswitch:{}}}return Object.assign(RecommendedFirmware.prototype,{DEVICE_TYPES:{FORTI_AP:"fortiap",FORTI_SWITCH:"fortiswitch"},FIRMWARE_URIS:{fortiap:"/api/v2/monitor/wifi/firmware",fortiswitch:"/api/v2/monitor/switch-controller/fsw-firmware"},_parseLoaded:inject.mark(function($filter){var buildNumber=$filter("buildNumber");return function(data,deviceType){return deviceType===this.DEVICE_TYPES.FORTI_AP?data.models:Object.keys(data).reduce(function(models,serial){var firmware=data[serial];return models[firmware.model]=firmware,firmware.hasOwnProperty("error")?models[firmware.model].available=!1:(models[firmware.model].available=!0,models[firmware.model].version=firmware.model+"-v"+firmware.major+"."+firmware.minor+"."+firmware.patch+"-build"+buildNumber(firmware.build)),models},{})}}),load:inject.mark(function($q,$http){return function(deviceType,force){return!force&&this._cached[deviceType]&&Object.keys(this._cached[deviceType]).length>0?$q.resolve(this._cached[deviceType]):$http.get(this.FIRMWARE_URIS[deviceType]).then(function(result){return this._cached[deviceType]=this._parseLoaded(result.data.results,deviceType),this._cached[deviceType]}.bind(this))}}),get:function(model,deviceType){return this._cached[deviceType][model]},markDownload:function(model,deviceType){return this._cached[deviceType][model]?(this._cached[deviceType][model].downloaded=!0,!0):(fLog.error("Firmware for model "+model+" type "+deviceType+" is not loaded."),!1)},isDownloaded:function(model,deviceType){return this._cached[deviceType][model]&&this._cached[deviceType][model].downloaded}}),function(providers){providers.$provide.service("recommendedFirmware",RecommendedFirmware)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30),__webpack_require__(42),__webpack_require__(46),__webpack_require__(26),__webpack_require__(463),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((fLog,fLocation,fStructure,inject,csfModels,notify)=>{const MENU_ITEMS_STATS=__webpack_require__(948),MENU_ITEMS_SEQ=__webpack_require__(949),CMDB_URL="/api/v2/cmdb/",CENTRAL_SNAT_POLICY_PATH="central-snat-map",USE_CMDB_DEFAULT_COLUMNS={policy:!0},logError=(error,customLog)=>{var errorMsg;errorMsg="string"==typeof error?error:error?error.message:"",fLog.error(`${customLog} ${errorMsg}`)},successOrFailure=function(promise,logName){return promise.then(()=>{},function(){logName&&fLog(`Failed to retrieve ${logName}`)})};class PolicyList extends inject.Collectable{async $onInit(){this.setupControllerProperties(),await this.loadData(),this.setupWatchers(),this.setupTableSettings(),this._locateOnNextRender()}$onDestroy($INJECTABLE$,PolicySource,policyStats,policyListTableSettings,policyListViewType,policyInit,policyListIpVersionFilter){return()=>{PolicySource.invalidateCache(),policyStats.clearListeners(),policyStats.clearCache(),policyInit.resetTypes(),policyListTableSettings.clearCache(),this.source&&(this.source.destroy(),this.source=null),this.settings=null,policyListViewType.clearCache(),policyListIpVersionFilter.clearCache()}}refresh(clearCache){try{clearCache?this.loadPolicies():this.mutableInstance.updateSource(this.source)}catch(e){logError(e,"Failed to refresh policy list for: ")}}showLoadingMask(){this.mutableInstance.showLoadingMask()}deleteRows(rows){this.mutableInstance.deleteRows(rows)}_cmdbGet($INJECTABLE$,$http){return async(path,name,mkey)=>{mkey=mkey?encodeURIComponent(mkey):"";const url=`${CMDB_URL}${path}/${name}/${mkey}?with_meta=1&datasource=1`;try{return(await $http.get(url)).data.results}catch(e){return logError(e,`Failed to fetch ${path}.${name}.${mkey} for: `),e}}}_locateOnNextRender($INJECTABLE$,$routeParams){return()=>{let showInList=$routeParams.showInList;if(showInList)try{showInList=JSON.parse(showInList),this.locateFunction=(entry=>entry.policyId===Number(showInList.q_origin_key))}catch(e){fLog.error("Failed to parse showInList")}else this.locateFunction=null}}setupControllerProperties($INJECTABLE$,$routeParams,state,policyVWP,policyInit){return()=>{policyInit.setType(this.type||$routeParams.type),policyInit.setSubType(this.subType||$routeParams.subType),this.showImplicitPolicy=state.featureEnabled("gui-implicit-policy")&&policyInit.IMPLICIT_POLICY[policyInit.type],this.isVirtualWirePolicy=policyVWP.isVirtualWirePolicy()}}allowDrilldownFromSlide($INJECTABLE$,state){return()=>!this.slideController||state.isVdomModeDisabled()}setupWatchers($INJECTABLE$,$scope,$routeParams,policyVWP,policyListViewType,policyListIpVersionFilter){return()=>{if(this.isVirtualWirePolicy){const vwpFilterName=$routeParams.vwpname;vwpFilterName&&policyVWP.setCurrent(vwpFilterName),$scope.$watch(()=>policyVWP.current,(value,previous)=>{value!==previous&&(this.refresh(!0),this._locateOnNextRender())})}$scope.$watch(()=>policyListViewType.value,(value,previous)=>{value&&value!==previous&&(this.refresh(),this.setupTableSettings(),this._locateOnNextRender())}),policyListIpVersionFilter.supported($routeParams.type)&&$scope.$watch(()=>policyListIpVersionFilter.current.value,(value,previous)=>{value&&value!==previous&&(this.refresh(!0),this._locateOnNextRender())})}}_cacheData({systemGlobal:systemGlobal,logSettings:logSettings,webProxy:webProxy,ftpProxy:ftpProxy,systemSettings:systemSettings}){this.systemGlobal=systemGlobal,this.logSettings=logSettings,this.webProxy=webProxy,this.ftpProxy=ftpProxy,this.systemSettings=systemSettings}loadData($INJECTABLE$,CMDB,policyStats,policyVWP,$q,policyOmniselectConfig,policyInit){return async()=>{CMDB.model(csfModels);const systemCsfCMDB=new CMDB("system","csf"),nat64CMDB=new CMDB("system","nat64"),logSettingsCMDB=this._cmdbGet("log","setting"),webProxyCMDB=this._cmdbGet("web-proxy","explicit"),ftpProxyCMDB=this._cmdbGet("ftp-proxy","explicit"),systemSettingsCMDB=this._cmdbGet("system","settings"),systemGlobalCMDB=this._cmdbGet("system","global"),type=policyInit.type;this.systemCsf=systemCsfCMDB.fetch();let cmdbPromises={systemCsf:successOrFailure(this.systemCsf.$promise,"system.csf")},promises={systemGlobal:systemGlobalCMDB,logSettings:logSettingsCMDB,policyOmniselectConfig:policyOmniselectConfig.init()};this.showImplicitPolicy&&"proxy-policy"===type&&(promises.webProxy=webProxyCMDB,promises.ftpProxy=ftpProxyCMDB),USE_CMDB_DEFAULT_COLUMNS[type]&&(promises.systemSettings=systemSettingsCMDB),policyStats.SUPPORTED[type]&&policyStats.load(type),this.isVirtualWirePolicy&&(promises.policyVWP=policyVWP.init()),"policy64"===type&&(this.nat64Settings=nat64CMDB.fetch(),cmdbPromises.nat64Settings=successOrFailure(this.nat64Settings.$promise,"system.nat64"));try{const results=await $q.all(Object.assign(promises,cmdbPromises));this._cacheData(results),await this.loadPolicies()}catch(e){return logError(e,"Failed to load data"),Promise.reject(e)}}}setupTableSettings($INJECTABLE$,policyListTableSettings,$scope){return()=>{const defaultColumnsOverride=this.systemSettings&&(this.systemSettings["gui-default-policy-columns"]||[]).map(entry=>entry.name);try{this.settings=policyListTableSettings.create({defaultColumnsOverride:defaultColumnsOverride,ctrlScope:$scope,isDefaultSyncMode:this.systemCsf&&this.systemCsf.isDefaultSyncMode(),slideController:this.slideController})}catch(e){logError(e,"Failed to create muTable settings for: ")}}}loadPolicies($INJECTABLE$,PolicySource,policyInit,lang,state,policyListViewType,policyListIpVersionFilter){return async()=>{const type=policyInit.type,policySupportsIpVersionFilter=policyListIpVersionFilter.supported(type),generateImplicitPolicy=()=>{let implicitPolicy;(implicitPolicy=policyInit.implicitPolicy(type)).name=lang("implicit_deny").toString(),implicitPolicy.category=lang("implicit").toString();const LOG_OPTION=policyInit.IMPLICIT_POLICY_LOG_PROPERTY[type];if(implicitPolicy.logtraffic=this.logSettings[LOG_OPTION]||"unknown","proxy-policy"===type){const actionMatched=this.webProxy["sec-default-action"]===this.ftpProxy["sec-default-action"],PROXY_POLICY_PROTOCOL_KEY="ProxyPolicy::protocol.";implicitPolicy.action=actionMatched?this.webProxy["sec-default-action"]:[{title:lang(`${PROXY_POLICY_PROTOCOL_KEY}web`).toString(),value:this.webProxy["sec-default-action"]},{title:lang(`${PROXY_POLICY_PROTOCOL_KEY}ftp`).toString(),value:this.ftpProxy["sec-default-action"]}]}else if("policy"===type&&!state.isNgfwPolicyMode()||"security-policy"===type){const v4LogSetting=this.logSettings[policyInit.IMPLICIT_POLICY_LOG_PROPERTY.policy],v6LogSetting=this.logSettings[policyInit.IMPLICIT_POLICY_LOG_PROPERTY.policy6],logSettingMatched=v4LogSetting===v6LogSetting;implicitPolicy.logtraffic=!state.featureEnabled("gui-ipv6")||logSettingMatched?v4LogSetting:[{title:lang("IPv4").toString(),value:v4LogSetting},{title:lang("IPv6").toString(),value:v6LogSetting}]}else"shaping-policy"===type&&(implicitPolicy.name="",implicitPolicy["traffic-shaper"]=`${lang("priority")}: ${this.systemGlobal["traffic-priority-level"]}`);return!state.featureEnabled("gui-ipv6")||policySupportsIpVersionFilter?(implicitPolicy=>(state.featureEnabled("gui-ipv6")||(implicitPolicy.srcaddr6=implicitPolicy.srcaddr6&&[],implicitPolicy.dstaddr6=implicitPolicy.dstaddr6&&[]),policySupportsIpVersionFilter&&("ipv4"===policyListIpVersionFilter.current.value&&(implicitPolicy.srcaddr6=[],implicitPolicy.dstaddr6=[]),"ipv6"===policyListIpVersionFilter.current.value&&(implicitPolicy.srcaddr=[],implicitPolicy.dstaddr=[])),implicitPolicy))(implicitPolicy):implicitPolicy};try{const cmdbPath="firewall",cmdbName=type;policySupportsIpVersionFilter&&policyListIpVersionFilter.update(type,policyInit.subType,state.current_vdom),this.source=new PolicySource(cmdbPath,cmdbName,{skip:"proxy-policy"===type,extraEntries:this.showImplicitPolicy?generateImplicitPolicy():[],filter:this.filter,onFetchComplete:()=>policyListViewType.update()}),PolicySource.cacheInstance(this.source),await this.source.manuallyFetchEntries()}catch(e){logError(e,"Failed to process policies for: ")}}}}const IFRAME_DIALOG_URI={"DoS-policy":"/ng/firewall/policy/DoS-policy/standard/edit/","DoS-policy6":"/ng/firewall/policy/DoS-policy6/standard/edit/",acl:"/ng/firewall/policy/acl/standard/edit/",acl6:"/ng/firewall/policy/acl6/standard/edit/","central-snat-map":"/ng/firewall/policy/central-snat-map/standard/edit/","shaping-policy":"/ng/firewall/shaper/policy/edit/"},LOG_TYPES={types:{"multicast-policy":"traffic/multicast","multicast-policy6":"traffic/multicast","DoS-policy":"anomaly","DoS-policy6":"anomaly"},default:"traffic/forward"},POLICY_LOOKUP={policy:!0};class PolicyListMenu extends inject.Collectable{constructor(){super(),this.MENU_ITEMS_STATS=MENU_ITEMS_STATS,this.MENU_ITEMS_SEQ=MENU_ITEMS_SEQ}$onInit($INJECTABLE$,policyStats,$location,structure,policyListViewType,state,policyVWP,policyListIpVersionFilter,policyInit){return()=>{const type=policyInit.type;this.policyType=type,this.policyStats=policyStats,this.policyStatsSupported=policyStats.SUPPORTED[type],this.viewType=policyListViewType,this.policyVWP=policyVWP,this.dialogURI=IFRAME_DIALOG_URI[type]?structure.ngURI(IFRAME_DIALOG_URI[type]):`${$location.path()}/edit/`,this.policyLookupSupported=POLICY_LOOKUP[type]&&"standard"===policyInit.subType&&state.getOperationMode()!==state.OPERATION_MODE.TRANSPARENT,this.IMPLICIT_MATCHING_LOGS_DISABLE_POLICY=["shaping-policy"],this.ipVersionFilter=policyListIpVersionFilter,this.setupWatchers()}}setupWatchers($INJECTABLE$,$routeParams,$scope){return()=>{this.ipVersionFilter&&this.ipVersionFilter.supported($routeParams.type)&&$scope.$watch(()=>this.listCtrl.settings,(value,previous)=>{value&&value!==previous&&this.setupCustomSequenceGrouping()})}}setupCustomSequenceGrouping(){this.listCtrl.settings.sequenceGroupingValueFunction=(entry=>this.listCtrl.settings.customSequenceGrouping&&"both"===this.ipVersionFilter.current.value&&entry.cmdbModel["global-label"]||"")}ipVersionFilterSetCurrent(option){"both"===option.value?this.listCtrl.settings.customSequenceGrouping=!0:this.listCtrl.settings.customSequenceGrouping=!1,this.ipVersionFilter.setCurrent(option)}ipVersionFilterSupported(){return this.ipVersionFilter.supported(this.policyType)}policyIncompatibleForLogs($INJECTABLE$,state){return()=>["acl","acl6"].includes(this.policyType)||"policy"===this.policyType&&state.isNgfwPolicyMode()}insertEnabled(){return["policy","policy64","multicast-policy","proxy-policy"].includes(this.policyType)}insertSequenceGroupingEnabled(){return!this.ipVersionFilterSupported()||this.ipVersionFilter.current&&"both"===this.ipVersionFilter.current.value}cloneReverseEnabled(){const isAny=obj=>"any"===obj.name,entry=this.menu.lastSelectedEntry;if(null==entry)return!1;const cmdbPolicy=entry.cmdbModel;return!("policy46"===entry.policyType||"disable"!==cmdbPolicy.nat||"ipsec"===cmdbPolicy.action||cmdbPolicy.srcintf.some(isAny)||cmdbPolicy.dstintf.some(isAny)||cmdbPolicy.dstaddr&&cmdbPolicy.dstaddr.some(addr=>{return(addr.datasource||`${addr.q_path}.${addr.q_name}`).includes("firewall.vip")}))}multiplePoliciesSelected(){return this.menu.entries&&this.menu.entries.length>1}implicitPolicySelected(){return this.menu.entries&&this.menu.entries.some(entry=>entry.implicit)}create($INJECTABLE$,$location){return()=>{$location.url(this.dialogURI)}}canCreate(){return this.listCtrl&&!this.listCtrl.slideController}edit($INJECTABLE$,$location){return $entry=>{$entry.implicit?$location.url(`${this.dialogURI}implicit`):$location.url(`${this.dialogURI}${$entry.policyId}`)}}deleteEntries($INJECTABLE$,$http){return rows=>{this.listCtrl.showLoadingMask();const promises=rows.map(row=>{const entry=row.entry,path=entry.cmdbModel.q_path,name=entry.cmdbModel.q_name,mkey=entry.policyId,uri=`${CMDB_URL}${path}/${name}/${mkey}`;return $http.delete(uri)});return Promise.all(promises).then(this._postChangeSuccess,this._postChangeFailure).finally(()=>{this.listCtrl.deleteRows(rows)})}}editCliEnabled($entries){return $entries&&1===$entries.length&&$entries[0]&&$entries[0].cmdbModel&&void 0!==$entries[0].cmdbModel.q_type}editCli($INJECTABLE$,cliConsole){return entry=>cliConsole.openObjectInCLI({path:entry.cmdbModel.q_path,name:entry.cmdbModel.q_name,mkey:entry.cmdbModel.q_origin_key,vdom:entry.cmdbModel.vdom})}createEmptyPolicy($INJECTABLE$,PolicyEntry){return entry=>PolicyEntry.createNewFrom(entry)}cloneReverse(entry){return entry.reverse()}saveCMDBEntry(entry){entry.$save().$promise.then(this._postChangeSuccess,this._postChangeFailure)}_postChangeSuccess($INJECTABLE$,lang){return()=>notify.post(lang("changes_saved").toString(),"success")}_postChangeFailure($INJECTABLE$,lang){return err=>(notify.post(lang("Failed to save some changes").toString(),"error"),Promise.reject(err))}showMatchingLogs($INJECTABLE$,structure,$location,ApiFilter){return()=>{const policyType=this.policyType,entry=this.menu.entries[0],uuid=entry.cmdbModel.uuid,mkey=entry.policyId.toString(),briefTrafficFormat=this.listCtrl.logSettings&&"enable"===this.listCtrl.logSettings["brief-traffic-format"],logType=LOG_TYPES.types[policyType]||LOG_TYPES.default,filters=[];policyType===CENTRAL_SNAT_POLICY_PATH?filters.push(new ApiFilter("centralnatid",mkey)):uuid&&!briefTrafficFormat?filters.push(new ApiFilter("poluuid",uuid)):filters.push(new ApiFilter("policyid",mkey),new ApiFilter("policytype",policyType));const uri=`/ng/log/view/${logType}?${filters.map(f=>f.toParam()).join("&")}`;$location.url(structure.ngURI(uri))}}showInFortiview($INJECTABLE$,state,$location){return()=>{const entry=this.menu.entries[0];fLocation.drilldownFortiviewPolicy({policyId:entry.policyId,policyType:entry.cmdbModel.q_name,fortigate:state.serial,returnPath:$location.url()})}}policyLookup($INJECTABLE$,slide,$rootScope,lang){return function(){const ipVersion=this.ipVersionFilter.current?this.ipVersionFilter.current.value:"ipv4",title=lang("Policy Lookup"),scope=$rootScope.$new(!0);return scope.ipVersion=ipVersion,slide.open("F_POLICY_LOOKUP",{template:'<f-policy-lookup\n                                    ip-version="::ipVersion"\n                                    f-read-only-manager>\n                                </f-policy-lookup>',parentScope:scope,options:{fullHeight:!0,title:title}}).then(policyid=>{this.listCtrl.mutableInstance.locate(entry=>Number(entry.cmdbModel.policyid)===Number(policyid))}).finally(function(){scope.$destroy()})}}showClearCounters(){return"active_sessions"!==this.menu.targetColumnID}}return(providers,loaderProvider)=>(providers.$compile.component("fPolicyList",{controller:PolicyList,templateUrl:__webpack_require__(950),require:{slideController:"?^fSlideContainer"},bindings:{filter:"<?",type:"<?",subType:"<?"}}),providers.$compile.component("fPolicyListMenu",{controller:PolicyListMenu,bindings:{menu:"<",listCtrl:"<"},templateUrl:__webpack_require__(951)}),loaderProvider.initModules([__webpack_require__(952),__webpack_require__(464),__webpack_require__(465),__webpack_require__(955),__webpack_require__(956),__webpack_require__(957),__webpack_require__(958),__webpack_require__(959),__webpack_require__(960),__webpack_require__(961),__webpack_require__(466),__webpack_require__(467),__webpack_require__(468),__webpack_require__(243),__webpack_require__(962)]))}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";const SKIPPED_COUNTRY_CODES=new Set(["A1","A2","ZZ"]);module.exports={getCountryCodeForID:function(countryID){const low=255&countryID,high=countryID>>8,code=String.fromCharCode(low)+String.fromCharCode(high);return SKIPPED_COUNTRY_CODES.has(code)?null:code}}},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($){"use strict";var API_URL="/api/ldap",FILTER_TYPE={DEFAULT:"def",USER:"usr",WORKSTATION:"ws",GROUP:"grp",OU:"ou",CONTAINER:"ctn",CUSTOM:"cus"},SECURE_TYPE={NONE:0,STARTTLS:1,LDAPS:2},DATA_TYPE={FILTER:1,CONTAINER:2},AUTH_TYPE={SIMPLE:0,ANONYMOUS:1,REGULAR:2},FLAGS={LDAP_SUCCESS:0,SCHEMA_VALIDATION_FAILED:-1},OVRD_FILTERS={1:{usr:["(&(objectCategory=person)(objectClass=user))","(sAMAccountType=805306368)"],grp:["(objectCategory=group)"],ws:["(objectCategory=computer)"],ou:["(objectCategory=organizationalUnit)"],ctn:["(objectClass=container)","(objectCategory=container)","(objectClass=organizationalUnit)","(objectCategory=organizationalUnit)"]},2:{usr:["(objectClass=user)","(objectClass=person)","(objectClass=organizationalPerson)","(objectClass=inetOrgPerson)"],grp:["(objectClass=groupOfNames)"],ws:["(objectClass=computer)"],ou:["(objectClass=organizationalUnit)"],ctn:["(objectClass=organizationalUnit)","(objectClass=organization)","(objectClass=ndsContainerLoginProperties)","(objectClass=dcObject)"]}},LDAP_FILTERS={usr:["(objectClass=user)","(objectClass=person)","(objectClass=organizationalPerson)","(objectClass=inetOrgPerson)","(objectClass=account)","(objectClass=posixAccount)","(objectClass=shadowAccount)","(objectClass=organizationalRole)","(objectClass=residentialPerson)","(objectClass=dominoPerson)"],grp:["(objectClass=group)","(objectClass=groupOfNames)","(objectClass=groupOfUniqueNames)","(objectClass=posixGroup)","(objectClass=sambaGroupMapping)","(objectCategory=group)"],ws:["(objectClass=computer)","(objectCategory=computer)"],ou:["(objectClass=organizationalUnit)","(objectClass=organization)"],ctn:["(objectClass=container)","(objectClass=nsContainer)","(objectClass=nsview)","(objectClass=organizationalUnit)","(objectClass=organization)","(objectClass=domain)","(objectClass=domainDNS)","(objectClass=dcObject)","(&(numSubordinates=*)(numSubordinates>=1))"]};function trim_parentheses(e){return e.slice(1,-1)}function get_filter(filter_type,server_type,schema){if(filter_type===FILTER_TYPE.CUSTOM)throw new Error("For custom filter, please supply filter string directly to API");if(filter_type===FILTER_TYPE.DEFAULT)return"";var i,tmp_str,is_defined_schema=$.isPlainObject(schema),object_classes=is_defined_schema&&schema.objectClasses&&schema.objectClasses.map(cls=>cls.toLowerCase()),attribute_types=is_defined_schema&&schema.attributeTypes&&Object.keys(schema.attributeTypes).map(type=>type.toLowerCase()),filters=[],ori_filter=LDAP_FILTERS[filter_type],ovrd_svr=OVRD_FILTERS[server_type],ovrd_filter=ovrd_svr&&ovrd_svr[filter_type],len=ori_filter.length;function schema_validation_fail(e){var parts=e.split(/[=><!]+/);if(!parts||2!==parts.length)return!0;var key=parts[0].toLowerCase(),val=parts[1].toLowerCase();const is_valid_key=object_classes.includes(key)||attribute_types.includes(key);var is_valid_val=attribute_types.includes(val)||object_classes.includes(val)||"organizationalunit"===val||"*"===val||$.isNumeric(val);return!(is_valid_key&&is_valid_val)}if($.isArray(ovrd_filter)&&ovrd_filter.length>0)return 1===ovrd_filter.length?ovrd_filter[0]:"(|"+ovrd_filter.join("")+")";if(object_classes&&attribute_types)for(i=0;i<len;i++){0===(tmp_str=ori_filter[i]).match(/\([^()]*\)/g).map(trim_parentheses).filter(schema_validation_fail).length&&filters.push(tmp_str)}return filters.length?1===filters.length?filters[0]:"(|"+filters.join("")+")":FLAGS.SCHEMA_VALIDATION_FAILED}function isSameParams(newParams,oldParams){if(!oldParams||!newParams)return!1;var different=["mkey","revision"].some(function(key){return oldParams[key]!==newParams[key]});return!different&&oldParams.ldap&&newParams.ldap&&(different=["server","port","cn_id","username","password","dn","secure","ca","type"].some(function(key){return oldParams.ldap[key]!==newParams.ldap[key]})),!different}function new_api_request(req,csfPath){const FULL_URL=`${csfPath?`/csf/${csfPath}`:""}${API_URL}`;return $.ajax({dataType:"json",url:FULL_URL,data:{json:JSON.stringify(req)}})}var requests,get_info_request=(requests={},function(ldap_cfg){var mkey=ldap_cfg.mkey,ldap=ldap_cfg.ldap;mkey&&(ldap_cfg.noCache||ldap_cfg.clearCache)&&delete requests[mkey];var cache=requests[mkey];if(!cache||!isSameParams(ldap_cfg,cache.params)){var info_req={info_only:1,mkey:mkey};ldap&&(info_req.ldap=ldap);var request=new_api_request(info_req,ldap_cfg.csfPath);return request.then(function(data){data&&!data.error&&mkey&&!ldap_cfg.noCache&&(requests[mkey]={params:ldap_cfg,data:request})}),request}return requests[mkey].data});function parseDN(dnstr){let rdns=[];do{let rdn,rdnResult=parseRDN(dnstr);if(!rdnResult)return null;if([rdn,dnstr]=rdnResult,rdns.push(rdn),","!==(dnstr=skipSpace(dnstr))[0]&&";"!==dnstr[0])break;dnstr=skipSpace(dnstr=dnstr.slice(1))}while(dnstr.length>0);return rdns;function parseRDN(str){let attributes=[];do{let attribute,attributeResult=parseAttribute(str);if(!attributeResult)return null;if([attribute,str]=attributeResult,attributes.push(attribute),"+"!==(str=skipSpace(str))[0])break;str=skipSpace(str=str.slice(1))}while(str.length>0);return[attributes,str]}function parseAttribute(str){let type,value,typeResult=function(str){let match=str.match(/^[0-9]+(?:\.[0-9]+)*/);if(match)return[match[0],str.slice(match[0].length)];return(match=str.match(/^[a-zA-Z][a-zA-Z0-9-]*/))?[match[0],str.slice(match[0].length)]:null}(str);if(!typeResult)return null;if([type,str]=typeResult,"="!==(str=skipSpace(str))[0])return null;let valueResult=function(str){let match;if(match=str.match(/^#((?:[a-zA-Z0-9]{2})+)/)){let result=match[1].replace(/[a-zA-Z0-9]{2}/g,function(hex){return String.fromCharCode(parseInt(hex,16))}),rest=str.slice(match[0].length);return[result,rest]}const escRe=/(?:\\(?:\\|["+,'<> #=]|[a-fA-F0-9]{2}))/,cRe=[/[^# "+,;<>\\]/,/[^"+,;<>\\]/,/[^ "+,;<>\\]/].map(re=>new RegExp(`(?:${escRe.source}|${re.source})`)),stringRe=new RegExp(`^${cRe[0].source}(?:${cRe[1].source}*${cRe[2].source})?`);if(match=str.match(stringRe)){let result=function(str){return str.replace(/\\(?:(\\)|(["+,'<> #=])|([a-fA-F0-9]{2}))/g,function(match,slash,esc,hex){return slash?"\\":esc||String.fromCharCode(parseInt(hex,16))})}(match[0]),rest=str.slice(match[0].length);return[result,rest]}return null}(str=skipSpace(str=str.slice(1)));return valueResult?([value,str]=valueResult,[{type:type,value:value},str]):null}function skipSpace(str){let match=str.match(/^\s*/);return str.slice(match[0].length)}}return{fetch:function(ldap_cfg,data_type,filter_cfg){void 0===data_type&&(data_type=0);var with_filter=data_type&DATA_TYPE.FILTER,with_container=data_type&DATA_TYPE.CONTAINER,info_dfd=get_info_request(ldap_cfg),fetch_dfd=$.Deferred();return info_dfd.always(function(info_data){var schema=info_data&&info_data.schema,general=info_data&&info_data.general,dse=info_data&&info_data.rootdse;if(schema&&general&&dse)if(with_filter||with_container){var f_str,dfds=[];if(with_filter){if(filter_cfg.filter_str)f_str=filter_cfg.filter_str;else if((f_str=get_filter(filter_cfg.filter_type,general.server_type,schema))===FLAGS.SCHEMA_VALIDATION_FAILED)return void fetch_dfd.reject(f_str);var filter_req={filter:f_str};ldap_cfg.mkey&&(filter_req.mkey=ldap_cfg.mkey),ldap_cfg.ldap&&(filter_req.ldap=ldap_cfg.ldap),dfds.push(new_api_request(filter_req,ldap_cfg.csfPath))}if(with_container){if((f_str=get_filter(FILTER_TYPE.CONTAINER,general.server_type,schema))===FLAGS.SCHEMA_VALIDATION_FAILED)return void fetch_dfd.reject({error:{message:"Failed initializing filter"}});var container_req={filter:f_str};ldap_cfg.mkey&&(container_req.mkey=ldap_cfg.mkey),ldap_cfg.ldap&&(container_req.ldap=ldap_cfg.ldap);var container_dfd=new_api_request(container_req,ldap_cfg.csfPath);dfds.push(container_dfd)}$.when.apply($,dfds).always(function(){var res_objs=$.makeArray(arguments);1===dfds.length&&(res_objs=[res_objs]);var filter_data,container_data,success=!0;res_objs.forEach(function(r){if("success"!==(res=r)[1]||!res[0]||res[0].error||!res[0].results)return fetch_dfd.reject(r[0]),success=!1,!1;var res}),success&&(with_filter&&(filter_data=res_objs[0][0]),with_container&&(container_data=with_filter?res_objs[1][0]:res_objs[0][0]),fetch_dfd.resolve({filter_data:filter_data,container_data:container_data}))})}else fetch_dfd.resolve({info:info_data});else fetch_dfd.reject(info_data)}),fetch_dfd},api_request:new_api_request,transform_server_params:function(params){var secure,protocol,type_str,config={server:params.server,port:params.port,cn_id:params.cnid,username:params.username,password:params.password,dn:params.dn};return params.secure&&(config.secure=(secure=params.secure,protocol=params.protocol,"enable"!==secure?SECURE_TYPE.NONE:{starttls:SECURE_TYPE.STARTTLS,ldaps:SECURE_TYPE.LDAPS}[protocol])),params.certificate&&(config.ca=params.certificate),params.type&&(config.type=(type_str=params.type,{simple:AUTH_TYPE.SIMPLE,anonymous:AUTH_TYPE.ANONYMOUS,regular:AUTH_TYPE.REGULAR}[type_str])),config},isSameParams:isSameParams,split_dn:function(dn){return dn?dn.replace(/([^\\]),/g,"$1\v").split("\v"):[]},get_cn_from_rdn:function(rdn,attr){if(attr=attr||"cn",rdn){var parts=rdn.split("=");if(parts[0].toLowerCase()===attr&&parts[1])return parts[1]}return""},dn_to_obj:function(dn){var rdns=parseDN(dn);if(rdns&&rdns.length>=2)return{cn:rdns[0][0].value,dn:dn};return null},parseDN:parseDN,FILTER_TYPE:FILTER_TYPE,DATA_TYPE:DATA_TYPE}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(92),__webpack_require__(62),__webpack_require__(80),__webpack_require__(42),__webpack_require__(38),__webpack_require__(169)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,firewallInterfaces,fweb_objects,fweb_sort,fweb_location,utilIcon){"use strict";const CMDB_MEMBER_ATTRIBUTES={"system.virtual-switch":"port","system.switch-interface":"member","system.interface":"member"};var POE_ICONS={POWERED:"fa-status-poe-powered",CONNECTED:"fa-status-poe-up",DISCONNECTED:"fa-status-poe-down",DISABLED:"fa-status-poe-disabled"};Object.keys(firewallInterfaces.SORT_VALUES).reduce(function(result,key){return result[firewallInterfaces.SORT_VALUES[key]]=result[key],result},POE_ICONS);var module={processInterface:function(entry,poeCapablePorts){firewallInterfaces.processInterface(entry),poeCapablePorts&&poeCapablePorts[entry.name]&&(entry.poe_capable=1,entry.icon=POE_ICONS[entry.sortValue],entry.icon===POE_ICONS.CONNECTED&&"enable"===entry.poe&&entry.poe_data&&"delivering_power"===entry.poe_data.status&&(entry.icon=POE_ICONS.POWERED))},formatFunction:function(entry,value){return'<f-icon class="'+entry.icon+'"></f-icon><span>'+value+"</span>"},switchMemberSource:function(intfsByType,poeCapablePorts,isGlobal){var viewTypes=[];poeCapablePorts&&Object.keys(poeCapablePorts).length&&viewTypes.push("poe");var linkData=firewallInterfaces.get(isGlobal,null,viewTypes),intfs=function flattenAndTag(obj,tagKey){return Object.keys(obj).reduce(function flatten(flattenObj){return function(result,key){var value=flattenObj[key];return Array.isArray(value)||(value=function flattenAndTag(obj,tagKey){return Object.keys(obj).reduce(flatten(obj),[]);function flatten(flattenObj){return function(result,key){var value=flattenObj[key];return Array.isArray(value)||(value=flattenAndTag(value,key)),result.concat(value.map(function(tagObj){return tagObj._tags=tagObj._tags||{},tagObj._tags[tagKey]=key,tagObj}))}}}(value,key)),result.concat(value.map(function(tagObj){return tagObj._tags=tagObj._tags||{},tagObj._tags[tagKey]=key,tagObj}))}}(obj),[]);function flatten(flattenObj){return function(result,key){var value=flattenObj[key];return Array.isArray(value)||(value=flattenAndTag(value,key)),result.concat(value.map(function(tagObj){return tagObj._tags=tagObj._tags||{},tagObj._tags[tagKey]=key,tagObj}))}}}(intfsByType,"switch_type");return{name:$.getInfo("Ports"),data:function(){return $.when(intfs,linkData).then(mergeLinkData)},sortFunction:fweb_sort.interfaceName,formatFunction:module.formatFunction,valueFunction:function(intf){return intf.name},preProcessSelected:!0};function mergeLinkData(mergeIntfs,intfsWithLinkData){var canonicalIntfs=mergeIntfs.reduce(function(result,intf){const copyIntf=Object.assign({},intf);var instance=result[intf.name];if(instance)mergeTags(instance,intf);else{var intfLookup=copyIntf.interface||copyIntf.name;intfsWithLinkData.forEach(function(_intf){_intf.name===intfLookup&&(copyIntf.link=_intf.link,_intf.poe&&(copyIntf.poe_data=_intf.poe),_intf.media&&(copyIntf.media=_intf.media),_intf.icon&&(copyIntf.icon=_intf.icon))}),result[copyIntf.name]=copyIntf,module.processInterface(copyIntf,poeCapablePorts),copyIntf.datasource="available-switch-members",copyIntf.q_origin_key=copyIntf.name,mergeTags(copyIntf,null),"hard-switch"===copyIntf.switch_type&&(copyIntf["hard-switch"]=[copyIntf["hard-switch"]])}return result},{});return mergeIntfs=fweb_objects.values(canonicalIntfs)}function mergeTags(instance,other){function unfreeze(obj,key){Object.isFrozen(obj[key])&&(obj[key]=Object.assign({},obj[key]))}unfreeze(instance,"_tags"),Object.keys(instance._tags).forEach(function(key){var tag=instance._tags[key];"object"!=typeof tag&&(instance._tags[key]={},instance._tags[key][tag]=!0)}),other&&Object.keys(other._tags).forEach(function(key){instance._tags[key]=instance._tags[key]||{},unfreeze(instance._tags,key);var tag=other._tags[key];instance._tags[key][tag]=!0})}},getInterfaceMap:function(noCache,csfPath){var promise=fweb_location.get_cache("interface_map_promise",null),uri="/api/v2/cmdb/system/interface/";return csfPath&&(uri="/csf/"+csfPath+uri),(!promise||noCache||csfPath)&&(promise=$.ajax({url:uri,cache:!1,dataType:"json",data:{format:"name|alias|description|type|allowaccess|role|vdom"}}).then(function(r){return r.results.reduce(makeMap,{})},function(){return{}})),fweb_location.set_cache("interface_map_promise",promise),promise;function makeMap(previous,current){return previous[current.name]=current,previous}},interfaceFormatFn:function(intfName,intf,showType){var title,value="",name=intfName;return intf?(title=intf.description||name,intf.alias&&(name+=" ("+intf.alias+")"),showType&&(value=utilIcon.formatIcon(utilIcon.ICON_TYPE.INTERFACE,intf.type)),value+='<span class="qtip-popup" title="'+title+'">'+name+"</span>"):intfName},getDHCPLeases:function(params){if(params.global||"*"===params.vdom)throw new Error("DHCP API for multiple VDOMs is unsupported. Use scope=global instead.");let url="/api/v2/monitor/system/dhcp";return params.csfPath&&(url=`/csf/${params.csfPath}${url}`,delete params.csfPath),$.ajax({url:url,data:params})},getUniqueNamePreferences(fwebBuild,type){const preferences=[{path:"system",name:"interface",format:"name|q_name|q_path"},{path:"system",name:"switch-interface",format:"name|q_name|q_path|member"},{path:"system",name:"zone",format:"name|q_name|q_path"},{path:"system",name:"sdwan",child_path:"zone",format:"name|q_name|q_path"}];return fwebBuild.PLATFORM.HAVE_VIRTUAL_SWITCH&&preferences.push({path:"system",name:"virtual-switch",format:"name|q_name|q_path|port"}),"vap-switch"===type&&preferences.push({path:"wireless-controller",name:"vap-group",format:"name|q_name|q_path"}),preferences},uniqueNameComparator(value,item){const datasource=`${item.q_path}.${item.q_name}`;return(item[CMDB_MEMBER_ATTRIBUTES[datasource]]||[]).some(member=>member.name===value)||item.name===value}};return module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){"use strict";return function(...funcs){return 0===funcs.length?arg=>arg:1===funcs.length?funcs[0]:funcs.reduce((a,b)=>(...args)=>a(b(...args)))}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(28)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(patterns){"use strict";let module={isValid:mac=>patterns.commonRegExp.MAC_ADDRESS.test(mac),toNumber:mac=>mac.split(":").reduce((result,octet,index)=>{const shiftBits=8*(6-index-1);return result+(parseInt(octet,16)<<shiftBits)},0),isAscending:function(start,end){return!(!module.isValid(start)||!module.isValid(end))&&module.toNumber(start)<=module.toNumber(end)},contains:function(start,end,mac){let value;return!!(module.isValid(start)&&module.isValid(end)&&module.isValid(mac))&&((value=module.toNumber(mac))>=module.toNumber(start)&&value<=module.toNumber(end))}};return module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(27),__webpack_require__(32)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,Notify,f_formatters){"use strict";var API_URL="/api/v2/cmdb/";function error_filter(response,textStatus,jqXHR){var result=$.Deferred();return"error"in response||"error"===response.status?result.rejectWith(result,[response,textStatus,jqXHR]).promise():result.resolveWith(result,arguments).promise()}function fail(jqXHR,textStatus,errorThrown){var err=0===jqXHR.status?new Error("Request failed"):jqXHR.responseJSON;return $.Deferred().rejectWith(this,[err,textStatus,jqXHR,errorThrown])}function api_url(path,parameters){if("/"===path.slice(0,2).join("/")&&parameters.type){var path_name=top.state.getPathNameByType(parameters.type);path=[(path_name=f_formatters.path_name_format(path_name)).path,path_name.name].concat(path.slice(2)),delete parameters.type}var parameterStr=$.param(parameters);return parameterStr&&(parameterStr="?"+parameterStr),API_URL+path.filter(Boolean).map(encodeURIComponent).join("/")+parameterStr}function __api_cmdb_edit_object(action,cmdb_path,cmdb_name,mkey,cmdb_object,preferences){var csfProxy,path=[cmdb_path,cmdb_name],parameters={};if(preferences&&(csfProxy=preferences.csfProxy,delete preferences.csfProxy),mkey&&path.push(mkey),-1===["edit","append"].indexOf(action)&&(parameters.action=action),Array.isArray(cmdb_object)||Array.isArray(mkey))throw new Error("Unable to edit multiple objects with a single request");if("boolean"==typeof csfProxy)throw new Error("csfProxy needs to be FortiGate instance");return $.extend(parameters,preferences),$.ajax({url:csfProxy?csfProxy.createCSFURI(api_url(path,parameters)):api_url(path,parameters),type:"edit"===action?"PUT":"POST",dataType:"json",data:JSON.stringify(cmdb_object)}).then(error_filter,fail)}return{fetch:function(cmdb_path,cmdb_name,preferences){var path=[cmdb_path,cmdb_name],parameters={};return $.extend(parameters,preferences),$.ajax({url:api_url(path,parameters),type:"GET",dataType:"json"}).then(error_filter,fail)},edit:function(cmdb_path,cmdb_name,mkey,cmdb_object,preferences){return __api_cmdb_edit_object("edit",cmdb_path,cmdb_name,mkey,cmdb_object,preferences)},append:function(cmdb_path,cmdb_name,cmdb_object,preferences){return __api_cmdb_edit_object("append",cmdb_path,cmdb_name,null,cmdb_object,preferences)},clone:function(cmdb_path,cmdb_name,mkey,nkey,preferences,cmdb_obj){return preferences&&"object"==typeof preferences?preferences.nkey=nkey:preferences={nkey:nkey},__api_cmdb_edit_object("clone",cmdb_path,cmdb_name,mkey,cmdb_obj,preferences)},schema:function(cmdb_path,cmdb_name,preferences){var path=[cmdb_path,cmdb_name],parameters={action:"schema"};return $.extend(parameters,preferences),$.ajax({url:api_url(path,parameters),dataType:"json"}).then(error_filter,fail)},delete:function(cmdb_path,cmdb_name,mkey,preferences){var path=[cmdb_path,cmdb_name,mkey];if(Array.isArray(mkey))throw new Error("Unable to delete multiple objects with a single request");return function(path,preferences){var parameters={};return $.extend(parameters,preferences),$.ajax({url:api_url(path,parameters),type:"DELETE",dataType:"json"}).then(error_filter,fail)}(path,preferences)},notify_failure:function notify_failure(response){if(Array.isArray(response))return $.when.apply($,response.map(notify_failure));response.user_notified===Notify.LEVEL.ERROR||response instanceof Error&&0===response.status||Notify.post($.getInfo(response.error||response.http_status||response.message),Notify.LEVEL.ERROR);var args=Array.from(arguments);return args[0]=$.extend({user_notified:Notify.LEVEL.ERROR},response),$.Deferred().rejectWith(this,args).promise()},notify_failure_message:function(lang_key,level){return level=level||Notify.LEVEL.ERROR,function failure_with_message(response){if(Array.isArray(response))return $.when.apply($,response.map(failure_with_message));if(response.user_notified!==level){var error=$.getInfo(response.error||response.http_status||response.message),msg=lang_key?$.getInfo(lang_key,[error]):error;Notify.post(msg,level),response=$.extend({user_notified:level},response)}var result=$.Deferred(),args=Array.from(arguments);return args[0]=response,level===Notify.LEVEL.ERROR?result.rejectWith(result,args).promise():result.resolveWith(result,args).promise()}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(37),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fwebIp,fwebLog){"use strict";class IPLocation{constructor(ip){this.ip=ip;try{this.ipVersion=fwebIp.ipVersion(ip),4===this.ipVersion&&(this.isPrivate=!fwebIp.IpMask.isPublic(ip)),this.isValid=!0}catch(e){this.isValid=!1}}get city(){return this._city}get country(){return this._country}get countryISOCode(){return this._countryISOCode}get countryFlag(){return this._countryFlag}get continent(){return this._continent}get subdivisions(){return this._subdivisions.join(", ")}parseLocation(location){const _location=location[this.ip].location;this._parseCity(_location&&_location.city||null),this._parseCountry(_location&&_location.country||null),this._parseContinent(_location&&_location.continent||null),this._parseSubdivisions(_location&&_location.subdivisions||[]),this.coordinates=_location&&_location.location||null,this.isValid=!!(this.toString()&&this.coordinates&&this.coordinates.latitude&&this.coordinates.longitude)}toString(){const location=[this.city,...this._subdivisions,this.country].filter(entry=>null!==entry);return Array.from(new Set(location)).join(", ")}_extractName(object){let name;return object&&object.names&&object.names.en&&(name=object.names.en),name}_parseCity(city){this._city=this._extractName(city)||null}_parseCountry(country){this._country=this._extractName(country)||null,this._countryISOCode=country&&country.iso_code||null,this._countryFlag=this._countryISOCode?`country_${this._countryISOCode}`:null}_parseContinent(continent){this._continent=this._extractName(continent)||null}_parseSubdivisions(subdivisions=[]){this._subdivisions=subdivisions.map(subdivision=>this._extractName(subdivision)||null).filter(name=>null!==name)}}class IPLocationService{static _loadCountryCenters(){return $.ajax(IPLocationService.URLS.COUNTRY_CENTERS,{cache:!0})}static async _loadFallbacksOnDemand(queryResults){if(Object.keys(queryResults).some(ip=>queryResults[ip].fallback))try{const countryCenters=await IPLocationService._loadCountryCenters();countryCenters&&Object.keys(queryResults).forEach(ip=>{let location=queryResults[ip];if(location.fallback){const fallbackCoordinates=countryCenters[location.location.country.iso_code];location.location.location={latitude:fallbackCoordinates&&fallbackCoordinates.lat,longitude:fallbackCoordinates&&fallbackCoordinates.long}}})}catch(e){fwebLog.error("Failed to load country centers.")}return queryResults}static async _query(queryParams){"string"==typeof queryParams&&(queryParams=[queryParams]);try{return(await $.post({url:IPLocationService.URLS.GEOIP_QUERY,data:JSON.stringify({ip_addresses:queryParams})})).results}catch(e){return{}}}static async getIPLocation(ip){if(""===ip)return fwebLog.error("IP is an empty string."),new IPLocation(ip);let ipLocation=new IPLocation(ip);if(ipLocation.isValid&&!ipLocation.isPrivate)try{const locationQueryResult=await IPLocationService._query(ipLocation.ip);await IPLocationService._loadFallbacksOnDemand(locationQueryResult),ipLocation.parseLocation(locationQueryResult)}catch(e){fwebLog.error("Failed to query IP location.")}return ipLocation}static async getIPLocations(ips){if(!ips.length)return[];let ipLocations=ips.map(ip=>new IPLocation(ip)),publicIPs=ipLocations.filter(ipLocation=>ipLocation.isValid&&!ipLocation.isPrivate).map(ipLocation=>ipLocation.ip);if(publicIPs.length)try{let locationQueryResults=await IPLocationService._query(publicIPs);await IPLocationService._loadFallbacksOnDemand(locationQueryResults),ipLocations.forEach(ipLocation=>{if(locationQueryResults[ipLocation.ip]){let location={};location[ipLocation.ip]=locationQueryResults[ipLocation.ip],ipLocation.parseLocation(location)}})}catch(e){fwebLog.error("Failed to query IP locations.")}return ipLocations}}return IPLocationService.URLS={GEOIP_QUERY:"/api/v2/monitor/geoip/geoip-query",COUNTRY_CENTERS:"/geo/country_centers.json"},{IPLocation:IPLocation,IPLocationService:IPLocationService}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return{call:(instance,ParentClass,methodName,...args)=>{return Reflect.get(ParentClass.prototype,methodName,instance).apply(instance,args)}}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71);module.exports=class extends BaseCsfDevice{constructor(csfEntry){const pathArr=csfEntry.path.split(":"),parentFortigateId=pathArr[pathArr.length-2];super(csfEntry,csfEntry.serial,parentFortigateId),this.serial=csfEntry.serial,this.managementIP=csfEntry.mgmt_ip_str,this.ha=csfEntry.ha_list||[],this.path=csfEntry.path,this.action=""}getIconClass(){return this.isAuthorized()?"ftnt-fabric-device security-fabric-node disconnected":"deny"===this.action?"fa-disabled":"ftnt-fabric-device security-fabric-node discovered"}getLabel(){return this.serial}getStatusLabel($INJECTABLE$,lang){return()=>{let status=this._AUTH_STATUS_LANG_MAPPING[this.action]||"discovered";return lang(status)}}getStatusIconClass(){return this._AUTH_STATUS_ICON_MAPPING[this.action]||"fa-enabled"}isAuthorized(){return"accept"===this.action}requiresAuthorizationDecision(){return""===this.action}}},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71);module.exports=class extends BaseCsfDevice{constructor(csfEntry,parentFortigateId){super(csfEntry,csfEntry.serial,parentFortigateId),this.proxyRootSerial=parentFortigateId,this.serial=csfEntry.serial,this.action=csfEntry.action,this.ha_list=csfEntry.ha_list}getLabel(){return this.serial}getStatusLabel($INJECTABLE$,lang){return()=>lang(this.isConnected()?"connected":"idle")}getIconClass(){if("deny"===this.action)return"fa-disabled";const iconClasses=["ftnt-fabric-device security-fabric-node"];return this.isConnected()||iconClasses.push("disconnected"),iconClasses.join(" ")}isAuthorized(){return"accept"===this.action}isDiscovered(){return!1}getStatusIconClass(){return this.isConnected()?"fa-enabled":"fa-warning"}getActionIconClass(){return this.isAuthorized()?"fa-enabled":"fa-disabled"}canAuthorize(){return!this.isAuthorized()}canDeauthorize(){return!1}canDenyAuthorization(){return this.isAuthorized()}requiresAuthorizationDecision(){return!1}}},function(module,exports,__webpack_require__){"use strict";const BaseCsfExtensionDevice=__webpack_require__(433);module.exports=class extends BaseCsfExtensionDevice{constructor(csfEntry={},parentFortigateId=""){super(csfEntry,parentFortigateId),this.mac=csfEntry.board_mac&&csfEntry.board_mac.toLowerCase(),this.meshUplink=csfEntry.mesh_uplink,this.meshHopCount=csfEntry.mesh_hop_count,this.parentFortiApSerial=csfEntry.parent_wtp_id,this.uplinkInterfaceName=csfEntry.mesh_uplink_intf,this.cliEnabled=csfEntry.cli_enabled,this.ssids=this._getSsids(csfEntry),this._populateInterfaces()}getStatusIconClass(){return this.isConnected()?"fa-connected":"fa-warning"}getStatusLabel(){let msg;return msg=this.isAuthorized()?this.isConnected()?"connected":"Offline":"discovered"}getIconClass(){var iconClasses=["ftnt-fortiap-marketing","security-fabric-node"];return this.isAuthorized()?this.isConnected()||iconClasses.push("disconnected"):iconClasses.push("discovered"),iconClasses.join(" ")}_getSsids(csfEntry){const radios=csfEntry.radio||[],ssids={},MAP_KEY=Symbol("MAP_KEY");let allSsids=!1;return radios.forEach(radio=>{const ssidObj=radio.ssid||{};allSsids=allSsids||radio.all_ssids,Object.keys(ssidObj).forEach(ifName=>{const ssid=ssidObj[ifName],mapKey=ifName+ssid;ssids[mapKey]={ifName:ifName,ssid:ssid,[MAP_KEY]:mapKey}})}),this.allSsids=allSsids,Object.keys(ssids).map(key=>ssids[key]).sort((a,b)=>a[MAP_KEY]-b[MAP_KEY])}_populateInterfaces(){(this.ssids||[]).forEach(ssid=>{this.interfaces.push(ssid),this.interfaceMap[ssid.ifName]=ssid})}}},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71),ICON_MAP={default:"ftnt-fabric-device",fortiadc:"ftnt-fortiadc",fortiauthenticator:"ftnt-fortiauthenticator",fortiddos:"ftnt-fortiddos",forticasb:"ftnt-forticasb",fortimail:"ftnt-fortimail",fortiweb:"ftnt-fortiweb",fortiwlc:"ftnt-fortiwlc"};module.exports=class extends BaseCsfDevice{constructor(csfEntry={},status={},parentFortigateId="",type="default"){const deviceName=csfEntry.device_name||csfEntry.name;super(csfEntry,[deviceName,parentFortigateId].join("::"),parentFortigateId),this.status=status,this.type=type,this.deviceName=deviceName,this.serial=this.deviceName,this.updateCsfEntry(csfEntry),Object.assign(this,status)}updateCsfEntry(csfEntry){const ip=csfEntry.device_ip_str||csfEntry.device_ip||csfEntry["device-ip"],port=csfEntry.https_port;this.connected&&ip===this.connectionIP&&port===this.port||(this.connectionIP=ip,this.port=port)}getStatusIconClass(){return this.connected?"fa-connected":"fa-warning"}getIconClass(){const iconClasses=["security-fabric-node"];return iconClasses.push(ICON_MAP[this.getType()]),this.isConnected()||iconClasses.push("disconnected"),iconClasses.join(" ")}getLabel(){return this.hostname||this.serial||this.deviceName}getStatusLabel(){let msg;return msg=this.connected?"connected":this.invalidToken?"Invalid access token":"Failed to connect"}isAuthorized(){return!0}isConnected(){return this.connected}requiresAuthorizationDecision(){return!1}getType(){return ICON_MAP[this.type]?this.type:"default"}static get TYPES(){return Object.keys(ICON_MAP)}}},,function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71),{SERIALIZE_TO_TOPOLOGY_REPORT:SERIALIZE_TO_TOPOLOGY_REPORT}=__webpack_require__(67);module.exports=class extends BaseCsfDevice{constructor(csfEntry={},proxyRootSerial=""){const pathArr=csfEntry.path.split(":"),parentFortigateId=pathArr[pathArr.length-2];super(csfEntry,csfEntry.serial,parentFortigateId),this.serial=csfEntry.serial,this.proxyRootSerial=proxyRootSerial,this.parentFortigateId=parentFortigateId,this.uniqueBcTreeParentSerial=parentFortigateId,this.bcTreeParentId=null,this.managementIP=csfEntry.mgmt_ip_str,this.adminPort=csfEntry.admin_port,this.mgmtPort=csfEntry.mgmt_port,this.path=csfEntry.path,this.action=""}[SERIALIZE_TO_TOPOLOGY_REPORT](){const copy=Object.assign({},this);return copy.csfEntry=Object.assign({},{path:this.path,serial:this.serial}),JSON.parse(JSON.stringify(copy))}getStatusIconClass(){return this.isConnected()?"fa-connected":"fa-warning"}getStatusLabel(){let msg;return msg=this.isAuthorized()?this.isConnected()?"connected":"Offline":"discovered"}getIconClass(){const iconClasses=["ftnt-fortinac","security-fabric-node"];return this.isConnected()||iconClasses.push("disconnected"),iconClasses.join(" ")}getManagementPort(){return this.mgmtPort||this.adminPort}getManagementIP(){return this.managementIP||""}isConnected(){return!0}isAuthorized(){return!0}getLabel(){return this.id}getManagementURL(){const port=this.getManagementPort(),portStr=port&&443!==port?`:${port}`:"",ip=this.getManagementIP();return ip?`https://${ip}${portStr}`:""}}},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular){function FacetedSearch(injector,$scope,$element,$timeout,$document,KEYS){this.activeFacets=[],this.inputs=[],this.editQueue=null,this.scope=$scope,this.getValues=injector.partial(this.getValues,this,["facet"]),["addFacet","syncFromModel","syncToModel","mergeComplexValues","focusedElement","scrubEmptyFacetValues"].forEach(function(fn){this[fn]=injector.bind(this[fn],this)}.bind(this)),["focus","focused","focusedElement","editing"].forEach(function(fn){this[fn]=this[fn].bind(this)}.bind(this)),this.blockBackspace($scope,KEYS),this.monitorFocus($timeout,$document,$element),$scope.$watch(function(){var fe=this.focusedElement();return fe&&fe.$activeFacet&&!!fe.$activeFacet.focused}.bind(this),function(value){this.$overlay.toggleClass("ng-hide",!value)}.bind(this)),$scope.$watch("[facets, options, model]",this.update.bind(this),!0)}function editingAfm(afm){return afm.$editing()}function fFacetedSearch(){return{scope:{facets:"=",options:"=",model:"="},templateUrl:__webpack_require__(872),controller:FacetedSearch,require:"fFacetedSearch",link:function(scope,elem,attr,controller){elem.addClass("f-faceted-search-container"),controller.fallback=function(){elem.addClass("f-fi-fallback")},scope.$activeFacets=controller.activeFacets,scope.$editing=controller.editing,scope.$focused=controller.focused,scope.$newFacet=function($event){controller.addFacet(),$event&&$event.stopPropagation()},scope.$cancel=function(){scope.$activeFacets.length=0,controller.syncToModel()}}}}function fFacetedSearchOverlay(){return{scope:!1,require:"^fFacetedSearch",link:function(scope,elem,attr,facetedSearch){facetedSearch.$overlay=elem,elem.addClass("f-faceted-search-overlay"),elem.on("mousedown mouseup mouseout",function(event){facetedSearch.overlayState=event.type}),elem.on("mousedown click contextmenu",function(event){return facetedSearch.editFacet(null),event.preventDefault(),!1})}}}function FacetedSearchUtil(injector){this.jsonForModel=injector.partial(this.jsonForModel,this,["model","inplace"])}return FacetedSearch.prototype={editQueue:null,lastActiveFacet:null,update:function(){this.facetsById=null,this.syncFromModel()},facets:function(){return this.scope.facets},isComplex:function(){return this.scope.options&&this.scope.options.complex},getValues:function(ActiveFacet,facet){var options=this.scope.options;if(facet&&options&&angular.isFunction(options.entries)){var entries=options.entries();return entries?facet.populate(entries,options.source):[]}return ActiveFacet.emptyArray},addFacet:function(ActiveFacetModel){for(var af=this.activeFacets,i=af.length-1;i>=0;--i)af[i].name&&(af[i].value||af[i].editing)||af.splice(i,1);var afm=new ActiveFacetModel;af.push(afm),this.editFacet(afm,"facet")},syncFromModel:function(ActiveFacetModel,$q,ComplexValue,$log){var scope=this.scope;if(scope.facets&&scope.facets.length&&scope.model){this.facetsById||(this.facetsById=scope.facets.reduce(FacetedSearch.indexById,{}));for(var keys,found,afs=this.activeFacets,model=scope.model,facetsById=this.facetsById,editingFacets=new Set(afs.filter(editingAfm).map(function(afm){return afm.facet&&afm.facet.id})),clearModel=angular.copy(model),i=afs.length-1;i>=0;--i){var af=afs[i];af.facet&&af.value&&!af.$editing()&&(null!=(found=(keys=clearModel[af.facet.id])&&af.value&&af.value.intersection(keys,!0))&&af.facet.id in this.facetsById?af.facet=facetsById[af.facet.id]:afs.splice(i,1),found&&(clearModel[af.facet.id]=keys.filter(notIn(found))))}for(var id in model)editingFacets.has(id)||model[id].forEach(addMissing(id));this.scrubEmptyFacetValues(),this.mergeComplexValues()}function notIn(aSet){return function(key){return-1===aSet.indexOf(key)}}function addMissing(id){return function(key){var facet=facetsById[id];if(facet){if(!afs.some(function(id,key){return function(af){var facet=af.facet;return facet&&facet.id===id&&af.value&&af.value.intersection([key])}}(id,key))){var value=key;value instanceof ComplexValue||(value=facet.normalizeOption(key));var afm=new ActiveFacetModel(facet,value);afs.push(afm)}}else $log.warn("Can't add missing facet from model: "+id+" Available facets: "+Object.keys(facetsById))}}},syncToModel:function(ComplexValue,facetedSearchUtil){this.mergeComplexValues();var scope=this.scope;this.facetsById||(this.facetsById=scope.facets.reduce(FacetedSearch.indexById,{}));var newModel=this.activeFacets.reduce(function(model,af){if(af.facet&&af.value){var id=af.facet.id,values=model[id];values||(values=model[id]=[]),af.value instanceof ComplexValue?values.push(af.value):values.push(af.value.key)}return model},{}),facetsById=this.facetsById;for(var id in scope.model)id in facetsById||(newModel[id]=scope.model[id]);angular.copy(newModel,scope.model),this.isComplex()&&facetedSearchUtil.jsonForModel(scope.model,!0)},scrubEmptyFacetValues:function(ComplexValue){this.activeFacets.forEach(function(af){!af.$editing()&&af.value instanceof ComplexValue&&af.value.removeEmptyValues()})},mergeComplexValues:function(ComplexValue,SearchFacet){if(this.isComplex()){var afmGroups=this.activeFacets.reduce(function(result,afm){afm.$valid=!0,afm.facet&&void 0!==afm.value&&(afm.facet.id in result||(result[afm.facet.id]=[]),result[afm.facet.id].push(afm));return result},{}),options=this.scope.options.filterMerge||{};Object.keys(afmGroups).forEach(function(k){var group=afmGroups[k];group.length>1&&!group.some(editingAfm)&&(options.useLast&&group.reverse(),function(activeFacets,group,options){var remove=[],filterCount=1,value=makeCV(group[0]),origValue=group[0].value;if(group.slice(1).reduce(function(result,afm){return result.merge(makeCV(afm),",")?remove.push(afm):++filterCount,afm.$valid=null==options.max||filterCount<=options.max,result},value),remove.length){if(origValue instanceof SearchFacet.ValueOption&&(origValue=origValue.key),origValue instanceof ComplexValue&&origValue.values===value.values)throw new Error("shared array fail");group[0].value=value.getSimple(),remove.forEach(function(afm){var i=activeFacets.indexOf(afm);i>-1&&activeFacets.splice(i,1)})}}(this.activeFacets,group,options))}.bind(this))}function makeCV(afm){var value=afm.value,facet=afm.facet;value instanceof SearchFacet.ValueOption&&(value=value.key);var ovalue=value;if((value=facet.complexValue(value,!0))===ovalue&&(value=new ComplexValue(value)),value.values===ovalue.values)throw new Error("shared array fail!");return value}},addInput:function(input){this.inputs.push(input)},removeInput:function(input){var index=this.inputs.indexOf(input);index>-1&&this.inputs.splice(index,1)},editing:function(){return this.activeFacets.some(function(af){return af.$editing()})},focusedElement:function(){return this.inputs.filter(this._isFocused)[0]},focused:function(){return this.inputs.some(this._isFocused)},_isFocused:function(input){return input.focused},focus:function(value){if(this.focused()||!1===value||-1!==[this.overlayState,this.mouseState].indexOf("mousedown"))!1===value&&this.scope.$broadcast("editFacet",-1,"facet");else{var inputs=this.inputs.slice();inputs.sort(function(a,b){var order=["addFilter","value","facet","selectValue","selectFacet","remove","cancelAll"];return a=order.indexOf(a.name),b=order.indexOf(b.name),(a>=0?a:order.length)-(b>=0?b:order.length)});var input=inputs.filter(function(input){return input.$elem.is(":visible")})[0]||this.inputs.filter(function(input){return"addFilter"===input.name})[0];input&&input.focus()}},editPrev:function(model,remove){var af=this.activeFacets,index=af.indexOf(model);if(index>-1&&remove&&af.splice(index,1),index>0){var result=this.scope.$broadcast("editFacet",index-1);result.defaultPrevented||(this._editQueued=[result,index,index])}},editNext:function(model,addFacet){var index=this.activeFacets.indexOf(model);if(index<this.activeFacets.length-1){var result=this.scope.$broadcast("editFacet",index+1,"facet");result.defaultPrevented||(this._editQueued=[result,index,"facet"])}else if(addFacet)return void this.addFacet()},editFacet:function(model,input){var index=this.activeFacets.indexOf(model);if(index<this.activeFacets.length){var result=this.scope.$broadcast("editFacet",index,input);result.defaultPrevented||(this._editQueued=[result,index,input])}},popEditQueue:function(){var r=this._editQueued;return this._editQueued=null,r},blockBackspace:function(scope,KEYS){var eventName="keydown.facetedSearchBlockBackspace_"+scope.$id;angular.element(document).on(eventName,function(e){var elem=this.focusedElement();e.keyCode===KEYS.BACKSPACE&&elem&&"button"===elem.type&&e.preventDefault()}.bind(this)),scope.$on("$destroy",function(){angular.element(document).off(eventName)})},monitorFocus:function($timeout,$document,element){var scope=this.scope,focusEvents=["focusout","focusin"].map(ns).join(" "),mouseEvents=["mousedown","mouseup","mouseout"].map(ns).join(" "),clickEvent=ns("click");function ns(eventName){return eventName+".facetedSearchFocusMonitor_"+scope.$id}element.on(focusEvents,function(){$timeout(function(){(!$document[0].activeElement||"body"===String($document[0].activeElement.tagName).toLowerCase())&&!this.focused()&&this.focus()}.bind(this),0,!0)}.bind(this)),element.on(mouseEvents,function(event){this.mouseState=event.type}.bind(this)),$document.on(clickEvent,function(e){0===element.find(e.target).length&&this.focus(!1)}.bind(this)),scope.$on("$destroy",function(){element.off(focusEvents+" "+clickEvent+" "+mouseEvents),$document.off(clickEvent)})}},FacetedSearch.indexById=function(index,facet){return index[facet.id]=facet,index},FacetedSearchUtil.prototype={jsonForModel:function(ComplexValue,model,inplace){var result=inplace?model:angular.copy(model);return Object.keys(result).forEach(function(k){var searchFacet=this.facets[k];result[k]=result[k].map(function(v){return ComplexValue.probablyComplex(v)?searchFacet.complexValue(v,!0):v})}.bind(this)),result},facets:null,purgeState:function(){this.facets=null}},function(providers,loader){var result=loader.initModules([__webpack_require__(873),__webpack_require__(874),__webpack_require__(878),__webpack_require__(880)]);return providers.$provide.service("facetedSearchUtil",FacetedSearchUtil),providers.$compile.directive({fFacetedSearchOverlay:fFacetedSearchOverlay,fFacetedSearch:fFacetedSearch}),result}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(136),__webpack_require__(26),__webpack_require__(30),__webpack_require__(188)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(UpgradableExtensionDevice,inject,fLog){function FortiSwitch($injector,params){$injector.invoke(UpgradableExtensionDevice,this,{params:{serial:params.serial,deviceType:UpgradableExtensionDevice.prototype.DEVICE_TYPES.FORTI_SWITCH,name:params.name,firmwareVersion:params.firmwareVersion,modelFormatter:params.modelFormatter}})}return FortiSwitch.prototype=Object.create(UpgradableExtensionDevice.prototype),FortiSwitch.prototype.constructor=FortiSwitch,FortiSwitch.prototype.URLS={MONITOR:"/api/v2/monitor/switch-controller/managed-switch",FIRMWARE:"/api/v2/monitor/switch-controller/fsw-firmware",DOWNLOAD:"/api/v2/monitor/switch-controller/fsw-firmware/download",UPGRADE:"/api/v2/monitor/switch-controller/fsw-firmware/push",UPLOAD:"/api/v2/monitor/switch-controller/fsw-firmware/upload"},FortiSwitch.prototype.VERSION_STRING_START_INDEX=13,FortiSwitch.prototype.upgrade=inject.mark(function($http){return function(){return this._upgradeProgress=0,this._upgradeStatus=this.UPGRADE_STATUS.IN_PROGRESS,$http.post(this.URLS.UPGRADE,{serial:this.getSerial(),image_id:this.getRecommendedFirmware().imageId})}}),FortiSwitch.prototype.downloadFirmware=inject.mark(function($http,recommendedFirmware,$q){return function(){return recommendedFirmware.load(recommendedFirmware.DEVICE_TYPES.FORTI_SWITCH).then(function(){var firmware=recommendedFirmware.get(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_SWITCH);return firmware?recommendedFirmware.isDownloaded(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_SWITCH)?$q.resolve({downloaded:!0,imageId:firmware.image_id}):$http.post(this.URLS.DOWNLOAD,{image_id:firmware.image_id}).then(function(response){return recommendedFirmware.markDownload(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_SWITCH),response.data.results}.bind(this),function(){return fLog.error("Failed to retrieve firmware from FortiGuard for "+this.getModel()),$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_DOWNLOAD)}.bind(this)):$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_GET)}.bind(this),function(){return fLog.error("Failed to get recommended firmware for "+this.getModel()),$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_GET)}.bind(this))}}),FortiSwitch.prototype.monitorUpgradeProgress=inject.mark(function($timeout){return function(onUpgradeFinish,onUpgradeFailed){var monitorFn=function(){this._updateUpgradeProgress().then(function(upgradeProgress){Number.isInteger(upgradeProgress)?100===upgradeProgress?(this._upgradeStatus=this.UPGRADE_STATUS.SUCCESS,onUpgradeFinish()):$timeout(monitorFn,2e3):onUpgradeFailed(this.ERROR_MESSAGE.UPGRADE_PROGRESS)}.bind(this),function(){onUpgradeFailed(this.ERROR_MESSAGE.UPGRADE_PROGRESS)}.bind(this))}.bind(this);$timeout(monitorFn)}}),FortiSwitch.prototype._updateUpgradeProgress=inject.mark(function($http){return function(){return $http.get(this.URLS.MONITOR,{params:{mkey:this.getSerial()}}).then(function(response){var results=response.data.results;return this._upgradeProgress=results.length?results[0].image_download_progress:null,this._upgradeProgress}.bind(this))}}),FortiSwitch.prototype.restart=function(){this._rebooting=!0},FortiSwitch}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(ftnt_shared=>{const Omniselect=ftnt_shared.Omniselect;function UtmProfileConfigFactory(VisibilityCheck,state){class MutableEditableCheck{constructor({checks:checks}){this._checks=checks}checkPassed(entry){return!this._checks||Object.keys(this._checks).every(check=>{if(!MutableEditableCheck.CHECKS[check])throw new Error(`Editable check "${check}" isn't defined`);let expectedValue=this._checks[check],contextData=null;return"object"==typeof expectedValue&&(contextData=expectedValue.contextData,expectedValue=expectedValue.expectedValue),MutableEditableCheck.IS_EXPECTED(MutableEditableCheck.CHECKS[check])(entry,contextData,expectedValue)})}}MutableEditableCheck.IS_EXPECTED=(checkFn=>(entry,contextData,expectedValue)=>checkFn(entry,contextData)===expectedValue),MutableEditableCheck.CHECKS={implicitPolicy:entry=>entry.implicit,denyPolicy:entry=>entry.isDenyPolicy(),internetServicePolicy:entry=>entry.isInternetServiceSourcePolicy(),internetServiceSourcePolicy:entry=>entry.isInternetServiceSourcePolicy(),ngfwPolicyMode:()=>state.isNgfwPolicyMode(),flowModePolicy:entry=>entry.isFlowModePolicy(),profileTypeGroup:entry=>entry.isProfileTypeGroup(),proxyTypeCheck:(entry,supportedProxyTypes)=>VisibilityCheck.PER_POLICY_CHECKS.proxyTypeCheck(entry.cmdbModel,supportedProxyTypes)};const SHARED_EDITABLE_CHECKS={implicitPolicy:!1,denyPolicy:!1,profileTypeGroup:!1},UTM_PROFILE_CONFIGS={"av-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-antivirus"],perPolicyChecks:{proxyTypeCheck:["explicit-web","transparent-web","ftp","wanopt"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({proxyTypeCheck:{contextData:["explicit-web","transparent-web","ftp","wanopt"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)}),featureSetCheck:!0},"emailfilter-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-spamfilter"],perPolicyChecks:{proxyTypeCheck:["wanopt"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({proxyTypeCheck:{contextData:["wanopt"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)}),featureSetCheck:!0},"webfilter-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-webfilter"],perPolicyChecks:{proxyTypeCheck:["explicit-web","transparent-web","wanopt"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({proxyTypeCheck:{contextData:["explicit-web","transparent-web","wanopt"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)}),featureSetCheck:!0},"file-filter-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-file-filter"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)}),featureSetCheck:!0},"dnsfilter-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","security-policy"],featureChecks:["gui-dnsfilter"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)})},"waf-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy"],featureChecks:["gui-waf-profile"],dependencyChecks:["ngfwProfileMode"],perPolicyChecks:{proxyModePolicy:!0,proxyTypeCheck:["explicit-web","transparent-web"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({flowModePolicy:!1,proxyTypeCheck:{contextData:["explicit-web","transparent-web"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)})},"application-list":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy"],featureChecks:["gui-application-control"],dependencyChecks:["ngfwProfileMode"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)})},"ips-sensor":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-ips"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)})},"icap-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy"],featureChecks:["gui-icap"],dependencyChecks:["ngfwProfileMode"],perPolicyChecks:{proxyModePolicy:!0,proxyTypeCheck:["explicit-web","transparent-web"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({flowModePolicy:!1,proxyTypeCheck:{contextData:["explicit-web","transparent-web"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)})},"voip-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy"],featureChecks:["gui-voip-profile"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)})},"profile-protocol-options":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],perPolicyChecks:{profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({},SHARED_EDITABLE_CHECKS)}),proxyOnlyFeatures:["http.fortinet-bar"]},"ssl-ssh-profile":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","ngfw-firewall-policy"],perPolicyChecks:{proxyTypeCheck:["explicit-web","transparent-web","wanopt","ssh","ssh-tunnel"],profileTypeSingle:!0}}),mutableEditableCheck:new MutableEditableCheck({checks:Object.assign({proxyTypeCheck:{contextData:["explicit-web","transparent-web","wanopt","ssh","ssh-tunnel"],expectedValue:!0}},SHARED_EDITABLE_CHECKS)})},"profile-group":{visibilityCheck:new VisibilityCheck({policyTypes:["policy","proxy-policy","security-policy"],featureChecks:["gui-dynamic-profile-display"]}),mutableEditableCheck:new MutableEditableCheck({checks:{implicitPolicy:!1,denyPolicy:!1,profileTypeGroup:!0}})}},UTM_PROFILES=new Set(Object.keys(UTM_PROFILE_CONFIGS)),UTM_PROFILES_WITH_FEATURE_SET=new Set(Object.keys(UTM_PROFILE_CONFIGS).filter(key=>UTM_PROFILE_CONFIGS[key].featureSetCheck));return new class{visible(cmdbPolicy,profileName){return!UTM_PROFILE_CONFIGS[profileName]||!UTM_PROFILE_CONFIGS[profileName].visibilityCheck||UTM_PROFILE_CONFIGS[profileName].visibilityCheck.checkPassed(cmdbPolicy)}editable(policyEntry,profileName){return!UTM_PROFILE_CONFIGS[profileName]||!UTM_PROFILE_CONFIGS[profileName].mutableEditableCheck||UTM_PROFILE_CONFIGS[profileName].mutableEditableCheck.checkPassed(policyEntry)}isUtmProfile(profileName){return UTM_PROFILES.has(profileName)}isUtmProfileWithFeatureSet(profileName){return UTM_PROFILES_WITH_FEATURE_SET.has(profileName)}isPreselectedProfileInFlowPolicy({policyInspectionMode:policyInspectionMode,originalPolicyInspectionMode:originalPolicyInspectionMode,profile:profile,originalProfile:originalProfile}){return"flow"===originalPolicyInspectionMode&&originalPolicyInspectionMode===policyInspectionMode&&originalProfile&&profile&&originalProfile.q_origin_key===profile.q_origin_key}_getDetailedInfo(obj){try{const mapping=Omniselect.getSourceDataSync(obj.datasource).mapping;return mapping&&mapping[obj.q_origin_key]||obj}catch(e){return obj}}_hasProxyProfiles(policyOrProfileGroup){return[...UTM_PROFILES_WITH_FEATURE_SET].some(key=>{const profile=policyOrProfileGroup[key];return!!profile&&"proxy"===this._getDetailedInfo(profile)["feature-set"]})}profileGroupHasProxyProfiles(profileGroup,isDetailed){return isDetailed?this._hasProxyProfiles(profileGroup):this._hasProxyProfiles(this._getDetailedInfo(profileGroup))}policyHasProxyProfiles(policy){return this._hasProxyProfiles(policy)}skipProfileFeatureSetCheck({isNgfwPolicyMode:isNgfwPolicyMode,policyType:policyType,policyInspectionMode:policyInspectionMode}){return isNgfwPolicyMode||"policy"!==policyType||"flow"!==policyInspectionMode}filterUnsupportedProfile({profile:profile,profileType:profileType,policyInspectionMode:policyInspectionMode}){return UTM_PROFILE_CONFIGS[profileType]&&("proxy"===policyInspectionMode||!Array.isArray(UTM_PROFILE_CONFIGS[profileType].proxyOnlyFeatures)||!UTM_PROFILE_CONFIGS[profileType].proxyOnlyFeatures.some(feature=>(feature=>{const path=feature.split(".").reverse();let property=profile;for(;path.length;){if(!(property=property[path.pop()]))return!1;if("string"==typeof property)return"enable"===property}})(feature)))}}}return providers=>{providers.$provide.factory("utmProfileConfig",UtmProfileConfigFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){"use strict";var module={convertToBase64:function(bytes){var i,uint8Buf=new Uint8Array(bytes),chars=[];for(i=0;i<uint8Buf.length;i++)chars.push(String.fromCharCode(uint8Buf[i]));return window.btoa(chars.join(""))},getImageType:function(bytes){for(var imageType,arr=new Uint8Array(bytes).subarray(0,4),header="",i=0;i<arr.length;i++)header+=arr[i].toString(16);switch(header){case"89504e47":imageType="image/png";break;case"47494638":imageType="image/gif";break;case"ffd8ffe0":case"ffd8ffe1":case"ffd8ffe2":imageType="image/jpeg";break;case"49492a0":case"4d4d02a":imageType="image/tiff";break;default:imageType="unknown"}return imageType}};return module}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(31),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,dom,fwebLog){"use strict";const{Omniselect:Omniselect,Tooltip:Tooltip,muTableUtil:muTableUtil}=ftnt_shared,{TooltipKey:TooltipKey}=Omniselect,BUBBLE_TOOLTIP_OPTIONS={class:"mutable-collection-tooltip flex-column flex-grow hidden-overflow",fixed:!0,padContent:!1},COLLECTION_ITEM_MARGIN_PIXELS=4,COLLECTION_ENTRY_HEIGHT=22;class TooltipRow extends TooltipKey{constructor(label,formatter,present,extraKey){super(label,formatter,present,extraKey)}createElement(entry,lastExtraKey){const value=this.getFormattedValue(entry);let className,valueElem;if(value)return className=this.extraKey!==lastExtraKey&&null!=lastExtraKey?"divider":"",valueElem=dom.elem("td"),muTableUtil.setCellElementContent(valueElem,value,{allowHTML:!0}),dom.elem("tr",{className:className},{children:[dom.elem("td",{textContent:this.label}),valueElem]})}getFormattedValue(entry){return this.formatter(entry)}}class TooltipTable{constructor(tooltipKeys,className){this.tooltipRows=Object.values(tooltipKeys),this.className=className||TooltipTable.DEFAULT_CLASS}createElement(entry){const tbodyElem=dom.elem("tbody");let lastExtraKey;for(const tooltipRow of this.tooltipRows){const rowElem=tooltipRow.createElement(entry,lastExtraKey);rowElem&&(lastExtraKey=tooltipRow.extraKey,tbodyElem.appendChild(rowElem))}return dom.elem("table",{className:this.className},{children:[tbodyElem]})}}return TooltipTable.DEFAULT_CLASS="table key-value slightly-condensed select-tooltip-table",{TooltipRow:TooltipRow,TooltipCollectionRow:class extends TooltipRow{constructor(label,formatter,present,extraKey,{collectionValueFunction:collectionValueFunction,collectionEntryFormatter:collectionEntryFormatter,collectionLimit:collectionLimit=5}={}){super(label,formatter,present,extraKey),this.collectionValueFunction=collectionValueFunction,this.collectionEntryFormatter=collectionEntryFormatter,this.collectionLimit=collectionLimit}getFormattedValue(entry){if("function"==typeof this.collectionValueFunction&&"function"==typeof this.collectionEntryFormatter){const collectionEntries=this.collectionValueFunction(entry);return this._createCollectionElement(collectionEntries)}}_createCollectionEntryElement(entry){const entryHeight=COLLECTION_ENTRY_HEIGHT,content=dom.elem("div",{className:"collection-entry-content",style:{height:`${entryHeight}px`}}),element=dom.elem("div",{className:"collection-entry"},{children:[content]});try{const formatted=this.collectionEntryFormatter(entry);muTableUtil.setCellElementContent(content,formatted,{allowHTML:!0})}catch(e){fwebLog(e)}return element}_createCollectionElement(entries){const marginTop=`${COLLECTION_ITEM_MARGIN_PIXELS}px`;if(!Array.isArray(entries)||!entries.length)return;let i,element=dom.elem("div",{className:"collection-entries"}),limit=parseInt(this.collectionLimit)||entries.length;for(limit<entries.length&&limit>0&&limit--,limit=Math.min(limit,entries.length),i=0;i<limit;i++){const entryElement=this._createCollectionEntryElement(entries[i]);i>0&&(entryElement.style["margin-top"]=marginTop),element.appendChild(entryElement)}if(i<entries.length){const bubbleElement=dom.elem("span",{className:"number-bubble hidden-collection-count",style:{"margin-top":marginTop},textContent:`+${entries.length-i}`});element.appendChild(bubbleElement);const tooltip=new Tooltip(BUBBLE_TOOLTIP_OPTIONS),tooltipContent=dom.elem("div",{className:"padded-collection-list flex-grow auto-overflow"});tooltip.tooltipContentSet=!1,tooltip.showOnElementHover(bubbleElement),tooltip.setContent(tooltipContent),tooltip.onShow(()=>{if(!tooltip.tooltipContentSet){for(let j=i;j<entries.length;j++){const entryElement=this._createCollectionEntryElement(entries[j]);j>i&&(entryElement.style["margin-top"]=marginTop),tooltipContent.appendChild(dom.elem("div",null,{children:[entryElement]}))}tooltip.tooltipContentSet=!0}}),Tooltip._ELEMENT_BASED_INSTANCES[tooltip._id]=tooltip}return element}},TooltipTable:TooltipTable}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71),utilIcon=__webpack_require__(38);module.exports=class extends BaseCsfDevice{constructor(csfEntry={},parentFortigateId="",awsInstanceId="",awsInstanceCVEs=[],guiEndpointControlAdvancedEnabled=!1,csfPath,datasource="devices"){super(csfEntry,`${csfEntry.mac}::${parentFortigateId}`,parentFortigateId),this.awsInstanceId=awsInstanceId,this.awsInstanceCVEs=awsInstanceCVEs,this.guiEndpointControlAdvancedEnabled=guiEndpointControlAdvancedEnabled;const icon=utilIcon.getDeviceIcon(this.csfEntry);Object.assign(this,csfEntry),this["css-class"]=icon.iconClass,this.iconType=icon.iconKey,this.online_status=this.getStatus(),this.joinedAddresses=this.getJoinedAddresses(),this.q_origin_key=csfEntry.mac,this.csfPath=csfPath,this.fortigate=parentFortigateId,this.datasource=datasource}getJoinedAddresses(){const addressTypeMap={ipv4_address:{type:"ipv4"},ipv6_address:{type:"ipv6"},mac:{type:"mac"}},copyKeys=(dst,src,keys)=>{keys.forEach(key=>{void 0!==src[key]&&(dst[key]=src[key])})};let addresses=[];for(const device of[this.csfEntry,...this.csfEntry.other_devices||[]])Object.keys(addressTypeMap).forEach(key=>{if(device[key]){let address={type:addressTypeMap[key].type,value:device[key],q_origin_key:`${device[key]}-${addressTypeMap[key].type}`};copyKeys(address,device,["mac","detected_interface","mac_firewall_address","is_detected_interface_role_wan"]),"ipv4_address"===key&&device.dhcp_lease_status&&copyKeys(address,device,["dhcp_lease_status","dhcp_lease_expire","dhcp_lease_reserved","dhcp_server_id"]),addresses.push(address)}});return addresses}getIconClass(){return this["css-class"]}getLabel(){let value;return value=this.csfEntry.mac_firewall_address?this.csfEntry.mac_firewall_address:this.csfEntry.hostname?this.csfEntry.hostname:this.csfEntry.mac,this.csfEntry.is_master_device||(value=`${value} (${this.csfEntry.mac})`),value}isAuthorized(){return!0}requiresAuthorizationDecision(){return!1}getStatus(){let key;const entry=this.csfEntry;return key=entry.is_forticlient_endpoint?entry.quarantined_on_forticlient?"quarantined":entry.is_online?this.guiEndpointControlAdvancedEnabled?entry.on_net?"registered-online-onnet":"registered-online-offnet":"registered-online":"registered-offline":entry.is_online?"online":"offline"}}},,,,function(module,exports){var path="/migadmin/ng/directives/f-system-power.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="$ctrl.hideTitle" submit="$ctrl.submit()">\n    <section>\n        <div class="warning-message">\n            <f-icon class="fa-warning"></f-icon>\n            <div class="message-content">\n                {{:: "Are you sure you want to {ACTION} the device?" | lang:[$ctrl.powerType] }}\n            </div>\n        </div>\n    </section>\n    <section>\n        <div class="field">\n            <label>\n                <span>{{:: \'Event log message\' | lang }}</span>\n            </label>\n            <div>\n                <div class="textarea-wrapper">\n                    <textarea rows="1" expand ng-model="$ctrl.logMsg"></textarea>\n                </div>\n            </div>\n        </div>\n    </section>\n</f-dialog>\n')}]),module.exports=path},,,function(module,exports,__webpack_require__){"use strict";const REPORT_BY={DEVICE:"device",SOURCE:"source",DESTINATION:"destination",OWNER:"owner",COUNTRY:"country",INTFPAIR:"intfpair",SRCINTF:"srcintf",DSTINTF:"dstintf",POLICY:"policy",WIFICLIENT:"wificlient",SHAPER:"shaper",SESSIONS:"sessions",ENDPOINT_VULNERABILITY:"endpoint-vulnerability",ENDPOINT_VULNERABILITY_DETAIL:"endpoint-vulnerability-detail",ENDPOINT_DEVICE:"endpoint-device",APPLICATION:"application",CLOUD_APPLICATION:"cloud-app",CLOUD_USER:"cloud-user",WEB_DOMAIN:"web-domain",WEB_CATEGORY:"web-category",SEARCH_PHRASE:"web-search-phrase",SEARCH_PHRASE_DETAIL:"web-search-phrase-detail",THREATS:"threat",SANDBOX_FILE:"sandbox-file",SANDBOX_SOURCE:"sandbox-source",SYSTEM_EVENTS:"system",FAILED_AUTHENTICATION:"unauth",ADMIN_LOGIN:"admin",VPN:"vpn",SECURITY_FABRIC_SCORE:"history-security-fabric-score",VPN_DETAIL:"vpn-detail",IOC:"ioc",IOC_BLACKLIST:"ioc-blacklist",IOC_SUSPICIOUS:"ioc-suspicious",SRCUUID:"srcuuid",DSTUUID:"dstuuid"},DEVICE={DISK:"disk",FORTIANALYZER:"fortianalyzer",FORTICLOUD:"forticloud"},SORTABLE_COLUMNS={browsingTime:{compareByID:"browsingtime"},bytes:{compareByID:"bytes"},sessions:{compareByID:"sessions"},historicalSessions:{compareByID:"sessions"},bandwidth:{compareByID:"bandwidth"},packets:{compareByID:"packets"},shaperDroppedBytes:{compareByID:"shaper_drops"},score:{compareByID:"score"},threatLevel:{compareByID:"threatlevel"},searchCount:{compareByID:"search_count"},files:{compareByID:"files"},verdict:{compareByID:"verdict"},connections:{compareByID:"connections"},vulnerabilities:{compareByID:"vuln_count"},severity:{compareByID:"severity"},scanTime:{compareByID:"scantime"},count:{compareByID:"count"},eventLevel:{compareByID:"level"},failedAttempts:{compareByID:"failure_attempt"},loginCount:{compareByID:"login_count"},loginFailureCount:{compareByID:"failure_count"},configChanges:{compareByID:"config_changes"},submitted:{compareByID:"submitted"}};module.exports=class{get REPORT_BY(){return REPORT_BY}get DEVICE(){return DEVICE}get SORTABLE_COLUMNS(){return SORTABLE_COLUMNS}static get REPORT_BY(){return REPORT_BY}static get DEVICE(){return DEVICE}static get SORTABLE_COLUMNS(){return SORTABLE_COLUMNS}}},function(module,exports,__webpack_require__){"use strict";const CLIENT_TO_SERVER_SORT_MAP={data_bytes:"bytes",data_packets:"packets",data_bandwidth:"bandwidth",data_shaper_drops:"shaper_drops",score:"score",files:"files",sessions:"sessions",connections:"connections",count:"count",login_count:"login_count",failure_count:"failure_count",config_changes:"config_changes",last_conn_time:"last_conn_time",failure_attempt:"failure_attempt",search_count:"search_count",severity:"severity",host_count:"host_count",vuln_count:"vuln_count",scantime:"scantime",threatlevel:"level_score",browsingtime:"browsingtime"},SERVER_TO_CLIENT_SORT_MAP=Object.keys(CLIENT_TO_SERVER_SORT_MAP).reduce((result,key)=>(result[CLIENT_TO_SERVER_SORT_MAP[key]]=key,result),{}),DEFAULT_WEIGHT={low:5,medium:10,high:30,critical:50};module.exports={CLIENT_TO_SERVER_SORT_MAP:CLIENT_TO_SERVER_SORT_MAP,SERVER_TO_CLIENT_SORT_MAP:SERVER_TO_CLIENT_SORT_MAP,RiskScore:class{constructor(threatWeight){this.WEIGHT=threatWeight||DEFAULT_WEIGHT}vulnerabilityScore(entry){var score=0;return entry.device&&entry.device.is_forticlient_endpoint&&entry.device.vuln_count&&Object.keys(this.WEIGHT).forEach(level=>{var key=`vuln_count_${level}`;entry.device[key]&&(score+=entry.device[key]*this.WEIGHT[level])}),score}severityScore(entry){var value=entry.severity;return this.WEIGHT[value]}allRiskScore(entry){return entry.getIOCVerdict()?entry.chartIocScore:this.vulnerabilityScore(entry)?entry.vulnScore:entry.threatScore?entry.threatScore:0}}}},function(module,exports,__webpack_require__){"use strict";const DEFAULT_COUNT=100,REALTIME_COUNT_FACTOR=3,FORTIVIEW_STATS_URL="/api/v2/monitor/fortiview/statistics",FORTIVIEW_SESSIONS_URL="/api/v2/monitor/firewall/session",TIME_PERIODS={REALTIME:"realtime",FIVE_MIN:"5min",ONE_HOUR:"hour",ONE_DAY:"day",ONE_WEEK:"week"};module.exports=class{constructor(fortiviewConfig){this.fortiviewConfig=fortiviewConfig}get TIME_PERIODS(){return TIME_PERIODS}get DEVICE(){return this.fortiviewConfig.DEVICE}get MODELS(){throw new Error("Not implemented")}get _REALTIME_NO_COUNT_LIMIT_REPORT_BYS(){return new Set([this.fortiviewConfig.REPORT_BY.DEVICE])}get _SORT_REQUIRED_REPORT_BYS(){return new Set([this.fortiviewConfig.REPORT_BY.ENDPOINT_DEVICE,this.fortiviewConfig.REPORT_BY.SANDBOX_SOURCE])}_translateStateDevice(fosState,stateDeviceName){return{[fosState.LOG_DEVICES.DISK]:this.DEVICE.DISK,[fosState.LOG_DEVICES.FORTIANALYZER]:this.DEVICE.FORTIANALYZER,[fosState.LOG_DEVICES.FORTICLOUD]:this.DEVICE.FORTICLOUD}[stateDeviceName]}getDevices(fosState){let logDevices=fosState.getEnabledLogDevices().map(device=>this._translateStateDevice(fosState,device)).filter(value=>value);return logDevices.length||(logDevices=[this.DEVICE.DISK]),logDevices}getDefaultDevice(fosState){return this._translateStateDevice(fosState,fosState.getLogDeviceDefault())||this.DEVICE.DISK}getPreferredDevice(fosState,vdom){return this._translateStateDevice(fosState,fosState.getVdomLogDeviceDefault(vdom))||this.DEVICE.DISK}getRequestConfigs(params,csfFortigates){const realtimeOrLatest=params.realtime||params.latest,currentFortigate=csfFortigates.find(f=>f.isCurrent);let sortByColumn,sortBy,fortigates,serials,device=params.device||this.getPreferredDevice(currentFortigate.state,currentFortigate.state.management_vdom);if(realtimeOrLatest&&(device=this.DEVICE.DISK),["reportBy"].forEach(key=>{if(!params[key])throw new Error(`Missing required parameter "${key}"`)}),params.sortByColumn){if(!(sortByColumn=this.fortiviewConfig.SORTABLE_COLUMNS[params.sortByColumn]))throw new Error(`Sort by column "${params.sortByColumn}" does not exist`);sortBy=sortByColumn.compareByID}params.fortigate?serials=params.fortigate:params.filters&&params.filters.fortigate&&(serials=params.filters.fortigate),(fortigates=(serials=Array.isArray(serials)?serials:[serials]).map(serial=>csfFortigates.find(f=>f.serial===serial)).filter(fortigate=>!!fortigate)).length||(fortigates=null);const requestFilters=Object.assign({},params.filters);if(delete requestFilters.fortigate,device===this.DEVICE.FORTIANALYZER&&fortigates&&(requestFilters.fortigate=fortigates.map(f=>f.serial)),this._alterRequestFilters({reportBy:params.reportBy,filters:requestFilters}),params.reportBy===this.fortiviewConfig.REPORT_BY.SESSIONS)return this.getRealtimeSessionsRequestConfigs({scope:params.scope,start:params.start,count:params.count,filters:requestFilters,csfBuildType:params.csfBuildType,fortigate:fortigates?fortigates[0].serial:null,vdom:params.vdom},csfFortigates);let countLimit;realtimeOrLatest&&this._REALTIME_NO_COUNT_LIMIT_REPORT_BYS.has(params.reportBy)||(countLimit=params.count||DEFAULT_COUNT);const requestParams=Object.assign({report_by:params.reportBy,sort_by:sortBy,filter:requestFilters,device:device,ip_version:"ipboth",realtime:params.realtime,latest:params.latest,start:params.startTime,end:params.endTime,chart_only:params.chartOnly},params.extraRequestParams);currentFortigate.state.csf_enabled&&(realtimeOrLatest?requestParams.filter["filter-csf"]=!0:device===this.DEVICE.FORTIANALYZER&&(requestParams.csf=currentFortigate.state.csf_group_name)),countLimit&&(requestParams.count=realtimeOrLatest?countLimit*REALTIME_COUNT_FACTOR:countLimit);const requestFortigates=device===this.DEVICE.FORTIANALYZER?[currentFortigate]:fortigates||csfFortigates,requestConfigs=[];return requestFortigates.forEach(f=>{let vdoms;f.isCurrent&&f.state.current_vdom===f.state.GLOBAL_VDOM?vdoms=f.state.admin.vdoms:f.isCurrent?vdoms=params.vdom?[params.vdom]:f.state.admin.vdoms:f.isCurrent||(vdoms=f.state.admin.vdoms),vdoms.forEach(vdom=>{vdom!==f.state.GLOBAL_VDOM&&requestConfigs.push({method:"GET",fortigate:f,realtimeOrLatest:realtimeOrLatest,sortByColumn:sortByColumn,countLimit:countLimit,uri:f.createCSFURI(FORTIVIEW_STATS_URL,vdom),params:Object.assign({},requestParams,{vdom:vdom}),originalParams:Object.assign({},params,{vdom:vdom})})})}),requestConfigs}getRealtimeSessionsRequestConfigs(params,csfFortigates){const fortigate=params.fortigate&&csfFortigates.find(f=>f.serial===params.fortigate)||csfFortigates.find(f=>f.isCurrent),requestParams=Object.assign({},params.filters,{summary:!0,start:params.start||0,count:params.count||DEFAULT_COUNT,"filter-csf":fortigate.state.csf_enabled,ip_version:"ipboth",fortigate:null});return(params.vdom?[params.vdom]:fortigate.state.admin.vdoms).filter(vdom=>!!vdom).map(vdom=>({method:"GET",uri:fortigate.createCSFURI(FORTIVIEW_SESSIONS_URL,vdom),fortigate:fortigate,params:Object.assign({},requestParams,{vdom:vdom}),originalParams:Object.assign({},params,{vdom:vdom})}))}_alterRequestFilters(params){const filters=params.filters;params.reportBy===this.fortiviewConfig.REPORT_BY.THREATS&&delete filters.logcat}async handleResponses(requests,responses,csfFortigates,currentFortigate){const requestResponseMap=new Map(requests.map((r,i)=>[r,responses[i]])),realtimeOrLatest=requests[0].params.realtime||requests[0].params.latest;let combinedResponse=await this._concatResponsesAndInstantiate(requestResponseMap,csfFortigates,currentFortigate);return(realtimeOrLatest||this._SORT_REQUIRED_REPORT_BYS.has(requests[0].originalParams.reportBy))&&(combinedResponse=this._aggregateResults(combinedResponse)),combinedResponse}async _concatResponsesAndInstantiate(requestResponseMap,csfFortigates,currentFortigate){const[combinedRequests,combinedResponse]=requestResponseMap.entries().next().value;let classMetadata;if(!combinedResponse.results.details)return Promise.resolve(combinedResponse);const ModelClass=this.MODELS[combinedRequests.originalParams.reportBy]||combinedRequests.originalParams.legacy&&this.MODELS.FortiViewLegacyEntry;if(!ModelClass)throw new Error(`No FortiView model defined for "${combinedRequests.originalParams.reportBy}"`);ModelClass.prepareClassMetadata&&(classMetadata=ModelClass.prepareClassMetadata(csfFortigates,currentFortigate,combinedRequests.originalParams));const entries=[];for(let[requestConfig,response]of requestResponseMap.entries())response.results.details.map(detail=>{const params=requestConfig.originalParams,entry=new ModelClass(detail,{legacy:params.legacy,reportBy:params.reportBy,realtime:params.realtime,fortigate:detail.fortigate&&detail.fortigate.split(",")||[response.serial],startTime:params.startTime,endTime:params.endTime},response.vdom,classMetadata);if(!entry.shouldSkip()){try{entry.validate()}catch(e){console.log(e)}entries.push(entry)}});return combinedResponse.results.details=await this._resolveModelClassMetadata(ModelClass,csfFortigates,currentFortigate,combinedRequests.originalParams,classMetadata,entries),combinedResponse}async _resolveModelClassMetadata(ModelClass,csfFortigates,currentFortigate,originalParams,classMetadata,entries){const resolveArgs=[csfFortigates,currentFortigate,originalParams,classMetadata,this];return await ModelClass.resolveClassMetadata(...resolveArgs),await Promise.all(entries.map(entry=>entry.resolve(...resolveArgs))),ModelClass.postResolve(...resolveArgs,entries)}_aggregateResults(response){const entryMap={},details=[];return(response.results.details||[]).forEach(entry=>{if(entry.shouldAggregate()){const entryKey=entry.getAggregationKey(),mappedEntry=entryMap[entryKey];null==mappedEntry?(entryMap[entryKey]=entry,details.push(entry)):mappedEntry.aggregateWith(entry)}else details.push(entry)}),response.results.details=details,response}}},,,function(module,exports,__webpack_require__){"use strict";module.exports={mixins:__webpack_require__(75),data:__webpack_require__(426),config:__webpack_require__(424),visualizationConfig:__webpack_require__(176),visualizationState:__webpack_require__(430),util:__webpack_require__(425)}},function(module,exports,__webpack_require__){"use strict";const{queryParameters:metadata}=__webpack_require__(811);class DfsState{constructor(node,parentNode,data,key){this.node=node,this.parentNode=parentNode,this.data=data,this.key=key}}module.exports=class{constructor(params={},locale="en"){if("string"==typeof params.filter)try{params.filter=JSON.parse(params.filter)}catch(e){params.filter={}}this.params=this._updateAndValidateParams(params),this.locale=locale,this.metadata=metadata}_updateAndValidateParams(params){const FALLBACK_VALUE={string:()=>null,boolean:()=>!1,object:()=>({})},stack=[new DfsState(params,null,metadata,"queryParameters")];for(;stack&&stack.length;){const dfsState=stack.pop();if("object"===dfsState.data.type)Object.keys(dfsState.data.properties).reverse().forEach(key=>{const data=dfsState.data.properties[key];let node=null;"object"===data.type?(node=dfsState.node[key])||(node=dfsState.node[key]=FALLBACK_VALUE[data.type]()):"string"!==data.type&&"boolean"!==data.type||(node=dfsState.node[key]),stack.push(new DfsState(node,dfsState.node,data,key))});else if("string"===dfsState.data.type||"boolean"===dfsState.data.type){const values=dfsState.data.values;let matchingProps=values.find(entry=>{const providedValue=dfsState.node;return entry.value===providedValue&&this._checkParamConditions(params,entry.conditions)});matchingProps||(matchingProps=values.find(entry=>this._checkParamConditions(params,entry.conditions))),dfsState.parentNode[dfsState.key]=matchingProps?matchingProps.value:FALLBACK_VALUE[dfsState.data.type]()}}return params}setLocale(locale){this.locale=locale}_checkParamConditions(params,conditions){return!conditions||!conditions.length||conditions.every(condition=>{const attributeValue=condition.attribute.reduce((prev,attr)=>prev[attr],params);return Array.isArray(condition.any)&&condition.any.length?condition.any.some(value=>value===attributeValue):!Array.isArray(condition.all)||!condition.all.length||condition.all.every(value=>value===attributeValue)})}get displayMode(){return this.params.displayMode}get filter(){return this.params.filter}get endpointDisplayMode(){return this.params.endpointDisplayMode}get metric(){return this.params.metric}get endpointGroupBy(){return this.params.endpointGroupBy}get upstreamDisplayMode(){return this.params.upstreamDisplayMode}get sortByColumn(){return["bytes","sessions","bandwidth","packets"].includes(this.metric)?this.metric:"bytes"}isLogicalTopology(){return"logicalTopology"===this.displayMode}isPhysicalTopology(){return"physicalTopology"===this.displayMode}showDevice(){throw new Error("Base Class method must be implemented.")}showEndpointDevices(){return"none"!==this.endpointDisplayMode}showDestinations(currentFgt){return currentFgt.isRoot}showDestinationCloudIcon(currentFgt){return this.showDestinations(currentFgt)&&"none"===this.upstreamDisplayMode}isTrafficEndpointDisplayMode(){return"traffic"===this.endpointDisplayMode}isDeviceCountEndpointDisplayMode(){return"count"===this.endpointDisplayMode}isDeviceOsEndpointDisplayMode(){return"os"===this.endpointDisplayMode}isDeviceVendorEndpointDisplayMode(){return"hardware_vendor"===this.endpointDisplayMode}isRiskDisplayMode(){return"risk"===this.endpointDisplayMode}isVulnRiskMetric(){return"vulnerability"===this.metric}isThreatRiskMetric(){return"threatScore"===this.metric}isCompromisedHostRiskMetric(){return"compromisedHosts"===this.metric}isAllRiskMetric(){return"allRisks"===this.metric}getAllEndpointDisplayModes(){return this.metadata.properties.endpointDisplayMode.values}getValidEndpointDisplayModes(){return this.getAllEndpointDisplayModes().filter(mode=>this._checkParamConditions(this.params,mode.conditions))}getAllMetrics(){return this.metadata.properties.metric.values}getValidMetrics(){return this.getAllMetrics().filter(metric=>this._checkParamConditions(this.params,metric.conditions))}getAllUpstreamDisplayModes(){return this.metadata.properties.upstreamDisplayMode.values}getValidUpstreamDisplayModes(){return this.getAllUpstreamDisplayModes().filter(mode=>this._checkParamConditions(this.params,mode.conditions))}}},function(module,exports,__webpack_require__){"use strict";module.exports={FWEB_BUILD_URI:"/api/v2/static/fweb_build.json",CMDB_CSF_URI:"/api/v2/cmdb/system/csf",CMDB_USER_QUARANTINE_URI:"/api/v2/cmdb/user/quarantine",CMDB_LOG_THREATWEIGHT_URI:"/api/v2/cmdb/log/threat-weight",FORTISWITCH_REVISION_URI:"/api/v2/cmdb/switch-controller/managed-switch?action=revision",FORTIAP_REVISION_URI:"/api/v2/cmdb/wireless-controller/wtp?action=revision",AWS_INSPECTOR_URI:"/api/v2/monitor/aws/inspector",AWS_EC2_URI:"/api/v2/monitor/aws/ec2",BANNED_USERS_URI:"/api/v2/monitor/user/banned",CSF_INFO_URI:"/api/v2/monitor/system/csf",FABRIC_DEVICE_URI:"/api/v2/monitor/system/fabric-device",FMG_STATUS_URI:"/api/v2/monitor/system/fortimanager/status",FORTIAPS_URI:"/api/v2/monitor/wifi/managed_ap",FORTISWITCHES_URI:"/api/v2/monitor/switch-controller/managed-switch",FSW_DETECTED_DEVICE_URI:"/api/v2/monitor/switch-controller/detected-device",HA_URI:"/api/v2/monitor/system/ha-statistics",LOG_STATE_URI:"/api/v2/monitor/log/device/state",OBJECT_URLS_URI:"/api/v2/monitor/web-ui/object-urls",RESOURCE_USAGE_URI:"/api/v2/monitor/system/resource/usage",STATE_URI:"/api/v2/monitor/web-ui/state",USER_DEVICES_URI:"/api/v2/monitor/user/detected-device",FABRIC_DEVICE_STATUS_URI:"/api/fabric/device/status"}},function(module,exports,__webpack_require__){"use strict";module.exports={BaseCsfDevice:__webpack_require__(71),BaseCsfExtensionDevice:__webpack_require__(433),CsfPendingDevice:__webpack_require__(233),CsfPreauthorizedDevice:__webpack_require__(234)}},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71);class BaseCsfExtensionDevice extends BaseCsfDevice{constructor(csfEntry={},parentFortigateId=""){const serial=csfEntry.serial,vdom=csfEntry.vdom;super(csfEntry,BaseCsfExtensionDevice.genId(serial,parentFortigateId,vdom),parentFortigateId),this.serial=serial,this.vdom=vdom,this.name=csfEntry.name,this.version=csfEntry.os_version,this.connectionIP=csfEntry.connecting_from,this.authorizationState=csfEntry.state,this.connectionState=csfEntry.connection_state||csfEntry.status}getLabel(){return this.name||this.serial}canAuthorize(){return!this.isAuthorized()}canDeauthorize(){return this.isAuthorized()}canDenyAuthorization(){return!1}isAuthorized(){return this.authorizationState&&"authorized"===this.authorizationState.toLowerCase()}requiresAuthorizationDecision(){const authorizationState=this.authorizationState&&this.authorizationState.toLowerCase();return["discovered","deauthorized"].includes(authorizationState)}isConnected(){return this.isAuthorized()&&this.connectionState&&!["disconnected","idle"].includes(this.connectionState.toLowerCase())}getStatusLabel(){throw new Error("Interface method must be implemented")}getStatusIconClass(){return this.isAuthorized()&&this.status&&"Idle"!==this.status&&"Disconnected"!==this.status?"fa-enabled":"fa-warning"}canConnectToGui(){return!1}canConnectToCli(){throw new Error("Interface method must be implemented")}canUpgradeFirmware(){throw new Error("Interface method must be implemented")}canReboot(){throw new Error("Interface method must be implemented")}reboot(){return Promise.reject("Interface method must be implemented")}upgradeFirmware(){return Promise.reject("Interface method must be implemented")}connectToCli(){throw new Error("Interface method must be implemented")}static genId(serial,parentFortigateId,vdom){return[serial,parentFortigateId,vdom].join("::")}}module.exports=BaseCsfExtensionDevice},function(module,exports,__webpack_require__){"use strict";module.exports={CondensedGraph:__webpack_require__(823),Graph:__webpack_require__(435)}},function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71),{CsfFortiGate:CsfFortiGate,CsfUpstreamFortiGate:CsfUpstreamFortiGate}=__webpack_require__(134),CsfFabricDevice=__webpack_require__(236),CsfPendingDevice=__webpack_require__(233),CsfPreauthorizedDevice=__webpack_require__(234),{CsfFortiSwitch:CsfFortiSwitch}=__webpack_require__(180),CsfFortiAP=__webpack_require__(235),CsfFortiNAC=__webpack_require__(238),iconUtil=__webpack_require__(38),firewallInterfacesUtil=__webpack_require__(168),{Node:Node,Edge:Edge,Graph:Graph}=__webpack_require__(165),groupDeviceInstancesByTypes=function(devices){const pushAndMap=(device,arr)=>{arr.push(device),arr.mapping||(arr.mapping={}),arr.mapping[device.id]=device},fortigates=[],fortiswitches=[],fortiaps=[],fortinacs=[],fabricDevices=[],upstreamFortigates=[],pendingDevices=[],preauthorizedDevices=[];return devices.forEach(device=>{device instanceof CsfUpstreamFortiGate?pushAndMap(device,upstreamFortigates):device instanceof CsfFortiGate?pushAndMap(device,fortigates):device instanceof CsfFortiSwitch?pushAndMap(device,fortiswitches):device instanceof CsfFortiAP?pushAndMap(device,fortiaps):device instanceof CsfFortiNAC?pushAndMap(device,fortinacs):device instanceof CsfFabricDevice?pushAndMap(device,fabricDevices):device instanceof CsfPendingDevice?pushAndMap(device,pendingDevices):device instanceof CsfPreauthorizedDevice&&pushAndMap(device,preauthorizedDevices)}),{fortigates:fortigates,fortiswitches:fortiswitches,fortiaps:fortiaps,fortinacs:fortinacs,fabricDevices:fabricDevices,upstreamFortigates:upstreamFortigates,pendingDevices:pendingDevices,preauthorizedDevices:preauthorizedDevices}};class TopologyNode extends Node{constructor(csfDevice){if(!(csfDevice instanceof BaseCsfDevice))throw new Error("Invalid device instance for TopologyNode");const data=csfDevice;super(csfDevice.id,data),this.parentFortigateId=data.parentFortigateId}}class TopologyEndpointCluster extends Node{constructor(clusterType,csfDeviceId,csfDeviceIntfName,parentFortigateId){super(`${clusterType}::${csfDeviceId}::${csfDeviceIntfName}`,[]),this.csfDeviceId=csfDeviceId,this.csfDeviceIntfName=csfDeviceIntfName,this.clusterType=clusterType,this.parentFortigateId=parentFortigateId}}class TopologyDestinationCluster extends Node{constructor(clusterType,csfDeviceId,csfDeviceIntfName){super("uniqueInternetCloud"===clusterType?clusterType:`${clusterType}::${csfDeviceId}::${csfDeviceIntfName}`,[]),this.csfDeviceId=csfDeviceId,this.csfDeviceIntfName=csfDeviceIntfName,this.clusterType=clusterType}}class TopologyEndpointGroup extends Node{constructor(groupType,csfDeviceId,csfDeviceIntfName,parentFortigateId){super(`${groupType}::${csfDeviceId}::${csfDeviceIntfName}`,{}),this.csfDeviceId=csfDeviceId,this.csfDeviceIntfName=csfDeviceIntfName,this.groupType=groupType,this.parentFortigateId=parentFortigateId}}module.exports={TopologyNode:TopologyNode,TopologyEndpointCluster:TopologyEndpointCluster,TopologyEndpointNode:class extends Node{constructor(clusterType,csfDeviceId,csfDeviceIntfName,fortiviewEntry){const clusterId=`${clusterType}::${csfDeviceId}::${csfDeviceIntfName}`;super(`${clusterId}::${fortiviewEntry.mac}`,fortiviewEntry),this.csfDeviceId=csfDeviceId,this.csfDeviceIntfName=csfDeviceIntfName,this.clusterType=clusterType,this.clusterId=clusterId}},TopologyEndpointGroup:TopologyEndpointGroup,TopologyEndpointGroupMember:class extends Node{constructor(groupType,groupSubType,csfDeviceId,csfDeviceIntfName){const groupId=`${groupType}::${csfDeviceId}::${csfDeviceIntfName}`;super(`${groupSubType}::${groupId}`,[]),this.csfDeviceId=csfDeviceId,this.csfDeviceIntfName=csfDeviceIntfName,this.groupType=groupType,this.groupSubType=groupSubType,this.groupId=groupId}get iconClass(){let iconType,iconKey,iconClass;const device=this.data[0]&&this.data[0].device;if(device){if("server"===this.groupType&&device.server)return iconType=iconUtil.ICON_TYPE.SERVER_TYPE,iconKey=device.server,iconClass=iconUtil.iconClass(iconType,iconKey)||"fa-server";"os-name"===this.groupType&&(device.os_name||device.os)?(iconType=iconUtil.ICON_TYPE.DEVICE_CATEGORY,iconKey=iconUtil.getDeviceIconCategory(device),iconClass=iconUtil.iconClass(iconType,iconKey)||"ftnt-device"):"hardware-vendor"===this.groupType&&device.hardware_vendor&&(iconType=iconUtil.ICON_TYPE.HARDWARE_VENDOR,iconKey=device.hardware_vendor,iconClass=iconUtil.iconClass(iconType,iconKey)||"ftnt-device")}return iconClass||"ftnt-device"}get displayNameLang(){return"server"===this.groupType?`Server::type.${this.groupSubType}`:"unknown"===this.groupSubType?`User::Device::OS.${this.groupSubType}`:this.groupSubType}},TopologyDestinationCluster:TopologyDestinationCluster,TopologyDestinationNode:class extends Node{constructor(entry){super(entry.name,entry)}},TopologyEdge:class extends Edge{constructor(nodeA,nodeB,intfA,intfB,vdomA,vdomB,type){if(super([nodeA.id,nodeB.id].filter(id=>!!id)),!this.constructor.hasValidIncidentNodes(nodeA,nodeB))throw new Error("Invalid node instances for TopologyEdge");this.incidentNodes=[nodeA,nodeB],this.type=type,this._initProperties(nodeA,nodeB,intfA,intfB,vdomA,vdomB)}static get TYPES(){return{FORTIGATE_TELEMETRY:"FORTIGATE_TELEMETRY",INTERGATE_LINK:"INTERGATE_LINK",INTERSWITCH_LINK:"INTERSWITCH_LINK",FORTILINK:"FORTILINK",ENDPOINT:"ENDPOINT",DESTINATION:"DESTINATION"}}static hasValidIncidentNodes(incidentNodeA,incidentNodeB){const isValid=incidentNode=>[TopologyNode,TopologyEndpointCluster,TopologyEndpointGroup,TopologyDestinationCluster].some(nodeClass=>incidentNode instanceof nodeClass);return isValid(incidentNodeA)&&isValid(incidentNodeB)}_initProperties(nodeA,nodeB,intfA,intfB,vdomA,vdomB){this.properties=new Map([[nodeA,{id:nodeA.id,intf:intfA,vdom:vdomA}],[nodeB,{id:nodeB.id,intf:intfB,vdom:vdomB}]])}setDirection(fromNode,toNode){if(!this.incidentNodes.includes(fromNode)||!this.incidentNodes.includes(toNode))throw new Error("Invalid direction for edge");this.from=fromNode,this.to=toNode}get hasRouterNAT(){const TYPES=this.constructor.TYPES;if(this.type===TYPES.FORTIGATE_TELEMETRY&&!this.hasVPNTunnel){const downstream=this.to,intf=this.properties.get(downstream).intf,interfaceIP=intf.ipv4_addresses&&intf.ipv4_addresses[0]&&intf.ipv4_addresses[0].ip;return interfaceIP&&downstream.data.parentDownstreamIP!==interfaceIP}return!1}get hasVPNTunnel(){const TYPES=this.constructor.TYPES;if(this.type===TYPES.FORTIGATE_TELEMETRY){const downstream=this.to,downstreamProps=this.properties.get(downstream);return downstreamProps&&downstreamProps.intf&&downstreamProps.intf.is_tunnel}if(this.type===TYPES.ENDPOINT){const csfDeviceNode=this.incidentNodes.find(node=>node.data instanceof BaseCsfDevice);if(csfDeviceNode){const csfNodeProps=this.properties.get(csfDeviceNode);return csfNodeProps.intf&&csfNodeProps.intf.is_tunnel}return!1}return!1}get isSDWan(){const TYPES=this.constructor.TYPES;if([TYPES.FORTIGATE_TELEMETRY,TYPES.DESTINATION].includes(this.type)){const downstream=this.to,downstreamProps=this.properties.get(downstream);return downstreamProps&&downstreamProps.intf&&downstreamProps.intf.is_virtual_wan_link_member}return!1}get sdWanTotalUtilization(){if(this.isSDWan){const fortigateNode=this.to,fortigateInstance=fortigateNode.data,fortigateProps=this.properties.get(fortigateNode),sdWanMember=fortigateProps&&fortigateProps.intf;return firewallInterfacesUtil.getSdWanBandwidth({results:fortigateInstance.sdWanMembersInfo},sdWanMember).bandwidthUtilization.totalUtilization}return-1}},TopologyMultiEdge:class extends Edge{constructor(topologyEdges){super(Array.from(topologyEdges[0].values())),this.members=topologyEdges}},TopologyGraph:class extends Graph{constructor(nodes,edges){super(nodes,edges)}},TopologyGraphObjects:class{static constructNodesAndEdges(devices=[],nodeConstructor,edgeConstructor,addUpstream){const{nodes:nodes,nodeMap:nodeMap,upstreamFgtNode:upstreamFgtNode,currentFgtNode:currentFgtNode}=this._constructNodes(devices,nodeConstructor,addUpstream);return{nodes:nodes,edges:this._constructEdges(devices,nodeMap,upstreamFgtNode,currentFgtNode,edgeConstructor),nodeMap:nodeMap,currentFgtNode:currentFgtNode,upstreamFgtNode:upstreamFgtNode}}static constructEndpointClusters(fortiviewDeviceEntries,nodeMap,edgeInfoCallback,clusterConstructor,clusterEdgeConstructor,clusterMemberConstructor){const clusterNodeMap={},clusterNodes=[],clusterEdges=[];return fortiviewDeviceEntries.forEach(entry=>{if(!entry.mac)return;const{csfDeviceId:csfDeviceId,csfDeviceNode:csfDeviceNode,csfDeviceIntf:csfDeviceIntf,csfDeviceIntfName:csfDeviceIntfName,vdom:vdom,parentFortigateId:parentFortigateId}=edgeInfoCallback(entry,nodeMap),clusterType=entry.server?"square-pack":"circle-pack",clusterId=`${clusterType}::${csfDeviceId}::${csfDeviceIntfName}`;let clusterNode=clusterNodeMap[clusterId];if(!clusterNode){clusterNode=clusterNodeMap[clusterId]=Reflect.construct(clusterConstructor,[clusterType,csfDeviceId,csfDeviceIntfName,parentFortigateId]);const edgeType=clusterEdgeConstructor.TYPES.ENDPOINT,edge=Reflect.construct(clusterEdgeConstructor,[clusterNode,csfDeviceNode,null,csfDeviceIntf,vdom,vdom,edgeType]);edge.setDirection(csfDeviceNode,clusterNode),nodeMap[clusterNode.id]=clusterNode,clusterNodes.push(clusterNode),clusterEdges.push(edge)}const clusterMemberNode=Reflect.construct(clusterMemberConstructor,[clusterType,csfDeviceId,csfDeviceIntfName,entry]);clusterNode.data.push(clusterMemberNode)}),{clusterNodes:clusterNodes,clusterEdges:clusterEdges,clusterNodeMap:clusterNodeMap}}static constructEndpointGroups(fortiviewDeviceEntries,nodeMap,edgeInfoCallback,groupBy,groupConstructor,groupEdgeConstructor,groupMemberConstructor){const groupNodeMap={},groupNodes=[],groupEdges=[];return fortiviewDeviceEntries.forEach(entry=>{const{csfDeviceId:csfDeviceId,csfDeviceNode:csfDeviceNode,csfDeviceIntf:csfDeviceIntf,csfDeviceIntfName:csfDeviceIntfName,vdom:vdom,parentFortigateId:parentFortigateId}=edgeInfoCallback(entry,nodeMap),{type:groupType,subType:groupSubType}=this._getEndpointGroupType(entry,groupBy),groupId=`${groupType}::${csfDeviceId}::${csfDeviceIntfName}`;let groupNode=groupNodeMap[groupId];if(!groupNode){groupNode=groupNodeMap[groupId]=Reflect.construct(groupConstructor,[groupType,csfDeviceId,csfDeviceIntfName,parentFortigateId]);const edgeType=groupEdgeConstructor.TYPES.ENDPOINT,edge=Reflect.construct(groupEdgeConstructor,[groupNode,csfDeviceNode,null,csfDeviceIntf,vdom,vdom,edgeType]);edge.setDirection(csfDeviceNode,groupNode),nodeMap[groupNode.id]=groupNode,groupNodes.push(groupNode),groupEdges.push(edge)}let groupMemberNode=groupNode.data[groupSubType];groupMemberNode||(groupMemberNode=groupNode.data[groupSubType]=Reflect.construct(groupMemberConstructor,[groupType,groupSubType,csfDeviceId,csfDeviceIntfName])),groupMemberNode.data.push(entry)}),{groupNodes:groupNodes,groupEdges:groupEdges,groupNodeMap:groupNodeMap}}static _getEndpointGroupType(entry,groupBy){let type="device",subType="unknown";const device=entry.device;if(device)switch(groupBy){case"os_name":device.server?(type="server",subType=device.server):(type="os-name",subType=device[groupBy]||"unknown");break;case"hardware_vendor":type="hardware-vendor",subType=device[groupBy]||"unknown";break;default:type=groupBy,subType=device[groupBy]||"unknown"}return{type:type,subType:subType}}static constructDestination(fortiviewDestinationEntries,nodeMap,showIcon,rootNode,clusterConstructor,clusterEdgeConstructor,clusterMemberConstructor){const linkUpSdWanMembers=rootNode.data.interfaces.filter(intf=>intf.is_sdwan_zone).reduce((prev,intf)=>(intf.members.forEach(memberName=>{const mapped=rootNode.data.interfaceMap[memberName];mapped&&"up"===mapped.link&&prev.push(rootNode.data.interfaceMap[memberName])}),prev),[]);let validWanIntfs;validWanIntfs=linkUpSdWanMembers.length?linkUpSdWanMembers:rootNode.data.interfaces.filter(intf=>"wan"===intf.role&&"up"===intf.link&&!intf.is_sdwan_zone).splice(0,1);let clusterType=showIcon?"uniqueInternetCloud":"circle-pack";const csfDeviceId=rootNode.id,data=[];fortiviewDestinationEntries.forEach(entry=>{if(entry.name){const destinationNode=Reflect.construct(clusterMemberConstructor,[entry]);data.push(destinationNode)}}),data.length||(clusterType="uniqueInternetCloud");const wanIntfName=validWanIntfs.length?validWanIntfs[0].name:null,destinationClusterNode=Reflect.construct(clusterConstructor,[clusterType,csfDeviceId,wanIntfName]);let destinationClusterEdges;if(destinationClusterNode.data=data,validWanIntfs.length)destinationClusterEdges=validWanIntfs.map(wanIntf=>{const vdom=wanIntf&&wanIntf.vdom,edge=Reflect.construct(clusterEdgeConstructor,[destinationClusterNode,rootNode,null,wanIntf,vdom,vdom,clusterEdgeConstructor.TYPES.DESTINATION]);return edge.setDirection(destinationClusterNode,rootNode),edge});else{const edge=Reflect.construct(clusterEdgeConstructor,[destinationClusterNode,rootNode,null,null,void 0,void 0,clusterEdgeConstructor.TYPES.DESTINATION]);edge.setDirection(destinationClusterNode,rootNode),destinationClusterEdges=[edge]}return nodeMap[destinationClusterNode.id]=destinationClusterNode,{destinationClusterNode:destinationClusterNode,destinationClusterEdges:destinationClusterEdges}}static _constructNodes(devices,nodeConstructor,addUpstream){const nodes=[],nodeMap={};let currentFgt,currentFgtNode,upstreamFgtNode;if(devices.forEach(device=>{const node=Reflect.construct(nodeConstructor,[device]);nodes.push(node),nodeMap[node.id]=node,device instanceof CsfFortiGate&&device.isCurrent&&(currentFgt=device)}),currentFgtNode=currentFgt?nodeMap[currentFgt.id]:null,addUpstream&&currentFgt&&!currentFgt.isRoot&&currentFgt.parentFortigateId)if(nodeMap[currentFgt.parentFortigateId])upstreamFgtNode=nodeMap[currentFgt.parentFortigateId];else{const upstreamFgt=new CsfUpstreamFortiGate(currentFgt);upstreamFgtNode=Reflect.construct(nodeConstructor,[upstreamFgt]),nodes.push(upstreamFgtNode),nodeMap[upstreamFgtNode.id]=upstreamFgtNode}return{nodes:nodes,nodeMap:nodeMap,upstreamFgtNode:upstreamFgtNode,currentFgtNode:currentFgtNode}}static _constructEdges(devices,nodeMap,upstreamFgtNode,currentFgtNode,edgeConstructor){const{fortigates:fortigates,fortiswitches:fortiswitches,fortiaps:fortiaps,fortinacs:fortinacs,fabricDevices:fabricDevices,upstreamFortigates:upstreamFortigates,pendingDevices:pendingDevices,preauthorizedDevices:preauthorizedDevices}=groupDeviceInstancesByTypes(devices);fortigates.push(...upstreamFortigates);const edges=[...this._constructFgtEdges(fortigates,nodeMap,edgeConstructor),...this._constructFabricDeviceEdges(fabricDevices,nodeMap,edgeConstructor),...this._constructFswEdges(fortiswitches,nodeMap,edgeConstructor),...this._constructFapEdges(fortiaps,nodeMap,edgeConstructor),...this._constructFnacEdges(fortinacs,nodeMap,edgeConstructor),...this._constructPendingDeviceEdges(pendingDevices,nodeMap,edgeConstructor),...this._constructPreauthorizedDeviceEdges(preauthorizedDevices,nodeMap,edgeConstructor)];return upstreamFgtNode&&currentFgtNode&&edges.push(this._constructUpstreamFgtEdge(upstreamFgtNode,currentFgtNode,edgeConstructor)),edges}static _constructFgtEdges(fortigates,nodeMap,edgeConstructor){const edges=[];return fortigates.forEach(fgt=>{if(fgt.isHaSlave){const parentFgtId=fgt.ha[0].serial,parentFgt=nodeMap[parentFgtId]&&nodeMap[parentFgtId].data;if(parentFgt){let vdomA,vdomB;const nodeB=nodeMap[parentFgt.id],intfB=parentFgt.createDummyInterface("portHB"),nodeA=nodeMap[fgt.id],intfA=fgt.createDummyInterface(intfB.name);vdomA=vdomB=void 0;const edgeType=edgeConstructor.TYPES.INTERGATE_LINK,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,intfA,intfB,vdomA,vdomB,edgeType]);edge.setDirection(nodeB,nodeA),edges.push(edge)}}else{const parentFgt=nodeMap[fgt.parentFortigateId]&&nodeMap[fgt.parentFortigateId].data;if(parentFgt){let nodeB,intfB,vdomB,fswNode,nodeA=nodeMap[fgt.id],intfA=fgt.isFirmwareCompatible&&fgt.upstreamInterfaceName?fgt.interfaceMap[fgt.upstreamInterfaceName]:fgt.createDummyInterface(fgt.csfEntry.downstream_intf),vdomA=intfA?intfA.vdom:void 0;const fortilinkDeviceEntry=parentFgt.fortilinkDevices.filter(device=>fgt.interfaces.some(intf=>{const mac=intf.mac_address;return device.mac&&device.mac===mac}))[0];if(fortilinkDeviceEntry){const fswId=CsfFortiSwitch.genId(fortilinkDeviceEntry.switch_id,parentFgt.id,fortilinkDeviceEntry.vdom);fswNode=nodeMap[fswId]}fswNode?(nodeB=fswNode,intfB=fswNode.data.interfaceMap[fortilinkDeviceEntry.port_id],vdomB=fortilinkDeviceEntry.vdom):(nodeB=nodeMap[parentFgt.id],vdomB=(intfB=parentFgt.isFirmwareCompatible?parentFgt.interfaceMap[fgt.csfEntry.upstream_intf]:parentFgt.createDummyInterface(fgt.csfEntry.upstream_intf))?intfB.vdom:void 0);const edgeType=edgeConstructor.TYPES.FORTIGATE_TELEMETRY,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,intfA,intfB,vdomA,vdomB,edgeType]);edge.setDirection(nodeB,nodeA),edges.push(edge)}}}),edges}static _constructFswEdges(fortiswitches,nodeMap,edgeConstructor){const edges=[],nodesWithEdges={};fortiswitches.forEach(fsw=>{const nodeA=nodeMap[fsw.id],vdomA=fsw.vdom;if(fsw.isDirectlyConnected){const intfA=fsw.ports.find(port=>port.fortilink_port||port["fortilink-port"]),nodeB=nodeMap[fsw.parentFortigateId],intfB=nodeB.data.interfaceMap[fsw.fgtPeerIntfName],vdomB=intfB.vdom,edgeType=edgeConstructor.TYPES.FORTILINK,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,intfA,intfB,vdomA,vdomB,edgeType]);edge.setDirection(nodeB,nodeA),edges.push(edge),nodesWithEdges[nodeA.id]=!0}fsw.ports.forEach(port=>{const peerFswSerial=port["isl-peer-device-name"]||port.isl_peer_device_name,peerFswId=peerFswSerial?CsfFortiSwitch.genId(peerFswSerial,fsw.parentFortigateId,fsw.vdom):void 0,nodeB=peerFswId?nodeMap[peerFswId]:void 0;if(nodeB){const intfA=nodeA.data.ports.find(portA=>portA["isl-peer-device-name"]===nodeB.data.serial||portA.is_peer_port_name===nodeB.data.serial),intfB=nodeB.data.ports.find(portB=>portB["isl-peer-device-name"]===fsw.serial||portB.is_peer_port_name===fsw.serial),vdomB=nodeB.data.vdom,edgeType=edgeConstructor.TYPES.INTERSWITCH_LINK,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,intfA,intfB,vdomA,vdomB,edgeType]);edges.push(edge),nodesWithEdges[nodeA.id]=!0,nodesWithEdges[nodeB.id]=!0}})});const defaultEdges=[],fswNodes=new Set(fortiswitches.map(fsw=>nodeMap[fsw.id])),fgtNodes=new Set(fortiswitches.map(fsw=>nodeMap[fsw.parentFortigateId]));return new Graph([...fswNodes,...fgtNodes],edges).components.forEach(component=>{if(!component.nodes.some(node=>node.data instanceof CsfFortiGate)){const fswNode=component.nodes[0],fgtPeerIntfName=fswNode.data.fgtPeerIntfName,fgtNode=nodeMap[fswNode.data.parentFortigateId],fgtPeerIntf=fgtNode.data.interfaceMap[fgtPeerIntfName],edge=Reflect.construct(edgeConstructor,[fswNode,fgtNode,fgtPeerIntf,null,fgtPeerIntf.vdom,null,null]);defaultEdges.push(edge)}}),edges.push(...defaultEdges),edges}static _constructFapEdges(fortiaps,nodeMap,edgeConstructor){const edges=[];return fortiaps.forEach(fap=>{const nodeA=nodeMap[fap.id],vdomA=fap.vdom,vdomB=fap.vdom,parentFgt=nodeMap[fap.parentFortigateId].data,uplinkIntf=parentFgt.interfaceMap[fap.uplinkInterfaceName];let nodeB=nodeMap[fap.parentFortigateId],intfB=uplinkIntf;if(uplinkIntf){const fortilinkDeviceEntry=parentFgt.fortilinkDeviceMapping[fap.mac];let fswNode=null;if(fortilinkDeviceEntry){const fswId=CsfFortiSwitch.genId(fortilinkDeviceEntry.switch_id,parentFgt.id,fortilinkDeviceEntry.vdom);fswNode=nodeMap[fswId]}fswNode&&(nodeB=fswNode,intfB=fswNode.data.interfaceMap[fortilinkDeviceEntry.port_id])}else if(fap.parentFortiApSerial){const parentFapId=CsfFortiAP.genId(fap.parentFortiApSerial,fap.parentFortigateId,fap.vdom),parentFap=nodeMap[parentFapId]&&nodeMap[parentFapId].data;parentFap&&(nodeB=nodeMap[parentFapId],intfB=parentFap.ssids[0])}const edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,null,intfB,vdomA,vdomB,null]);edge.setDirection(nodeB,nodeA),edges.push(edge)}),edges}static _constructFnacEdges(fortinacs,nodeMap,edgeConstructor){const edges=[];return fortinacs.forEach(fortinac=>{const from=nodeMap[fortinac.parentFortigateId],to=nodeMap[fortinac.id],edge=Reflect.construct(edgeConstructor,[to,from,null,null,null,null,null]);edge.setDirection(from,to),edges.push(edge)}),edges}static _constructFabricDeviceEdges(fabricDevices,nodeMap,edgeConstructor){const edges=[];return fabricDevices.forEach(fabricDevice=>{const from=nodeMap[fabricDevice.parentFortigateId],to=nodeMap[fabricDevice.id],edge=Reflect.construct(edgeConstructor,[to,from,null,null,null,null,null]);edge.setDirection(from,to),edges.push(edge)}),edges}static _constructUpstreamFgtEdge(upstreamFgtNode,currentFgtNode,edgeConstructor){const currentFgt=currentFgtNode.data,intf=currentFgt.interfaceMap[currentFgt.upstreamInterfaceName],vdom=intf&&intf.vdom||null,edge=Reflect.construct(edgeConstructor,[upstreamFgtNode,currentFgtNode,null,intf,null,vdom,null]);return edge.setDirection(upstreamFgtNode,currentFgtNode),edge}static _constructPendingDeviceEdges(pendingDevices,nodeMap,edgeConstructor){const edges=[];return pendingDevices.forEach(fgt=>{const nodeA=nodeMap[fgt.id],nodeB=nodeMap[fgt.parentFortigateId],edgeType=edgeConstructor.TYPES.FORTIGATE_TELEMETRY,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,void 0,void 0,void 0,void 0,edgeType]);edges.push(edge)}),edges}static _constructPreauthorizedDeviceEdges(preauthorizedDevices,nodeMap,edgeConstructor){const edges=[];return preauthorizedDevices.forEach(fgt=>{const nodeA=nodeMap[fgt.id],nodeB=nodeMap[fgt.parentFortigateId],edgeType=edgeConstructor.TYPES.FORTIGATE_TELEMETRY,edge=Reflect.construct(edgeConstructor,[nodeA,nodeB,void 0,void 0,void 0,void 0,edgeType]);edges.push(edge)}),edges}}}},,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(26),__webpack_require__(29),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,inject,ngModule,notify){var IGNORE_KEYS=[/^q_[A-Za-z\-_]+$/,/^datasource$/,/^css-class$/];function ObjectAttributes($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.config?this.init(this.config):this.error(),$scope.$watchCollection(function(){return this.config}.bind(this),function(newVal,oldVal){oldVal&&newVal!==oldVal&&this.init(this.config)}.bind(this))}ObjectAttributes.prototype.error=inject.mark(function(lang){return function(){notify.post(lang("Failed to load data.").toString(),notify.LEVEL.ERROR)}}),ObjectAttributes.prototype.unauthorized=inject.mark(function(lang){return function(){notify.post(lang("unauthorized").toString(),notify.LEVEL.WARNING)}}),ObjectAttributes.prototype.init=inject.mark(function($q){return function(config){this.highlightedKeys=[];var promises=[this.loadSchema(config),this.loadObjectData(config)];this.muTableSource=$q.all(promises).then(function(responses){var schema=responses[0],schemaWithValues=this.combineData(schema,config);return this.muTableSettings=this.generateMuTableSettings(config),this.generateMuTableSource(schemaWithValues,config)}.bind(this))}}),ObjectAttributes.prototype.loadObjectData=inject.mark(function($q,$http){var getSource=function(path,name,mkey,vdom,fortigate){var params={skip:"1"};vdom&&(params.vdom=vdom);var uri="/api/v2/cmdb/"+path+"/"+name+"/"+encodeURIComponent(mkey);return fortigate&&(uri=fortigate.createCSFURI(uri)),$http.get(uri,{params:params}).then(function(response){return Array.isArray(response.data.results)?response.data.results[0]:response.data.results},function(errorResponse){return 403===errorResponse.status||"system"===path&&"admin"===name&&404===errorResponse.status?this.unauthorized():this.error(),{}}.bind(this))}.bind(this);return function(config){var promises=[];return config.objects.forEach(function(object){object.data?promises.push($q.resolve(object.data)):promises.push(getSource(config.path,config.name,object.mkey,config.vdom,config.fortigate))}),$q.all(promises).then(function(responses){responses.forEach(function(response,i){config.objects[i].data=response})})}}),ObjectAttributes.prototype.loadSchema=inject.mark(function($http){return function(config){var uri="/api/v2/cmdb/"+config.path+"/"+config.name;return $http.get(uri,{params:{action:"schema"}}).then(function(response){return response.data.results},function(){return this.error(),{}}.bind(this))}}),ObjectAttributes.prototype.combineData=inject.mark(function(){var highlightRows=function(object,value){object.highlight&&object.highlight.forEach(function(mkey){mkey===value&&this.highlightedKeys.push(value)}.bind(this))}.bind(this),flatten=function(object){var subtable,flattened={};return subtable=object,Object.keys(subtable).forEach(function(key){IGNORE_KEYS.forEach(function(ignoredKey){key.match(ignoredKey)&&delete subtable[key]})}),object=subtable,Object.keys(object).forEach(function(key){if(object.hasOwnProperty(key)){var isArray=angular.isObject(object[key]),isObject=angular.isArray(object[key]);if(isArray||isObject){var flattenedSubObject=flatten(object[key]);Object.keys(flattenedSubObject).forEach(function(subKey){flattenedSubObject.hasOwnProperty(subKey)&&(flattened[key+"."+subKey]=flattenedSubObject[subKey])})}else flattened[key]=object[key]}}),flattened};return function(schema,config){var objectAttributes={},children=schema.children;return config.objects.forEach(function(entry,index){var object=flatten(entry.data);Object.keys(children).forEach(function(key){entry.data[key]||(object[key]="")}),Object.keys(object).forEach(function(key){var value=object[key];value&&highlightRows(entry,value),objectAttributes[key]||(objectAttributes[key]={name:key,values:[]}),objectAttributes[key].values[index]=value})}),Object.keys(objectAttributes).filter(function(key){var originalKey=key.split(".")[0];return this.config.objects.some(function(entry){return entry.data[originalKey]})}.bind(this)).map(function(key){return objectAttributes[key]})}}),ObjectAttributes.prototype.generateMuTableSource=inject.mark(function(){return function(schemaWithValues,config){var source=[];return schemaWithValues.forEach(function(attribute){var row={attribute:attribute.name};config.objects.forEach(function(object,index){row["object"+index]=attribute.values[index]}),source.push(row)}),source}}),ObjectAttributes.prototype.generateMuTableSettings=inject.mark(function(){return function(config){var muTableSettings={columns:[{id:"attribute",type:"standard",langKey:"attribute"}],onRowRendered:function(element,entry){if(this.highlightedKeys.length&&Object.keys(entry).forEach(function(key){this.highlightedKeys.includes(entry[key])&&element.classList.add("selected")}.bind(this)),this.config.showDiff){var uniqueValues=new Set;Object.keys(entry).forEach(function(key){if("attribute"!==key){var value=entry[key]||"";uniqueValues.add(value.toString())}}),uniqueValues.size>1&&element.classList.add("selected")}}.bind(this)};return config.objects.forEach(function(object,index){var columnConfig={id:"object"+index,type:"standard",langKey:object.label||"Object "+index,cellValueFunction:function(entry,column){return entry[column.id]}};muTableSettings.columns.push(columnConfig)}),muTableSettings}}),ngModule.component("fObjectAttributes",{template:'<f-mutable source="$ctrl.muTableSource" settings="$ctrl.muTableSettings" context-menu="::false"></f-mutable>',controller:ObjectAttributes,bindings:{config:"<"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(93),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,notify,fQuarantine,ftnt_shared){const BAN_URI="/api/v2/monitor/user/banned/add_users/",REMOVE_BAN_URI="/api/v2/monitor/user/banned/clear_users/";ngModule.component("fBanIpDialog",{bindings:{entries:"<",removeMode:"<"},controller:class extends inject.Collectable{constructor(){super(),this.INTERVAL={SECONDS:"seconds",MINUTES:"minutes",HOURS:"hours",DAYS:"days"},this.permanent=!1,this.duration=30,this.interval=this.INTERVAL.MINUTES,this.mapping=null,this.loading=!0}$onInit($INJECTABLE$,csfTopology){return async()=>{const mapping={};await csfTopology.buildIfNecessary();for(let entry of this.entries){if(!fQuarantine.isBanIPRequestEntry(entry))throw new Error('Entries must be instances of "BanIPRequestEntry"');mapping[entry.fortigateSerial]?mapping[entry.fortigateSerial].push(entry):mapping[entry.fortigateSerial]=[entry]}this.mapping=mapping,this.loading=!1}}getTitle($INJECTABLE$,lang){return entry=>lang(entry.skip?"Click to unskip the IP":"Click to skip the IP")}invalidateOmniSelect($INJECTABLE$,csfTopology){return(fortigateSerials,datasources)=>{const fortigates=fortigateSerials.map(fortigateSerial=>csfTopology.fortigateMapping[fortigateSerial]);for(let fortigate of fortigates)for(let datasource of datasources)ftnt_shared.Omniselect.invalidateCacheForSource(fortigate.getOmniselectProxySourceID(datasource))}}submit($INJECTABLE$,$q,$http,csfTopology,lang,quarantineData,$rootScope){return async()=>{let successMessage,failureMessage;this.removeMode?(successMessage="IP bans have been removed",failureMessage="Failed to remove IP bans"):(successMessage="IPs have been banned",failureMessage="Failed to ban IPs");try{const fortigateSerials=Object.keys(this.mapping);await $q.all(fortigateSerials.map(async fortigateSerial=>{const fortigate=csfTopology.fortigateMapping[fortigateSerial],uri=fortigate.createCSFURI(this.removeMode?REMOVE_BAN_URI:BAN_URI),entries=this.mapping[fortigateSerial].filter(entry=>!entry.skip);entries.length&&(await $http.post(uri,{ip_addresses:entries.map(entry=>entry.ip),expiry:this.removeMode?null:this._getExpiryInSeconds()}),await fortigate._populateBannedUsers())})),quarantineData.clearCache(),this.invalidateOmniSelect(fortigateSerials,["devices"]),$rootScope.$broadcast("QUARANTINE_EVENTS",{messageType:this.removeMode?"deviceRemoveBanSuccessful":"deviceBanSuccessful",fortigateSerials:fortigateSerials}),notify.post(lang(successMessage).toString(),notify.LEVEL.SUCCESS)}catch(e){return notify.post(lang(failureMessage).toString(),notify.LEVEL.ERROR),Promise.reject()}}}updateSkip(entry){entry.skip=!entry.skip}_getExpiryInSeconds(){let expiry=0;return this.permanent||(expiry={[this.INTERVAL.SECONDS]:1,[this.INTERVAL.MINUTES]:60,[this.INTERVAL.HOURS]:3600,[this.INTERVAL.DAYS]:86400}[this.interval]*this.duration),expiry}},templateUrl:__webpack_require__(852)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){function DhcpReservationService(injector){injector.injectMarked(this)}return DhcpReservationService.prototype.open=inject.mark(function($rootScope,slide,lang){return function(lease,createNew,hasMacFirewallAddress,macFirewallAddressName,fortigate){var scope=$rootScope.$new();scope.lease=lease,scope.createNew=createNew,scope.hasMacFirewallAddress=hasMacFirewallAddress,scope.macFirewallAddressName=macFirewallAddressName,scope.fortigate=fortigate;return slide.open("dhcp_reservation_slide",{template:'<f-dhcp-reservation lease="lease" create="createNew" has-mac-firewall-address="hasMacFirewallAddress" mac-firewall-address-name="macFirewallAddressName" fortigate="fortigate"></f-dhcp-reservation>',parentScope:scope,options:{fullHeight:!0,title:lang(createNew?"Create New DHCP Reservation":"Edit DHCP Reservation")}}).finally(function(){scope.$destroy()})}}),function(providers,loader){return providers.$provide.service("fDhcpReservationService",DhcpReservationService),loader.initModules([__webpack_require__(859)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,dom){"use strict";var byod_common={elem:{gen_icon:function(className,value,title,icon_sprite){var props={className:(icon_sprite||"")+" "+className};title&&(props.title=title);var elems=[dom.elem("f-icon",props)];return value&&elems.push(dom.elem("span",{textContent:value})),dom.fragment(elems)}},default_selector:".byod_details",default_tag_selector:".object-tag",gen_icon:function(className,value,title,icon_sprite){var fragment=byod_common.elem.gen_icon(className,value,title,icon_sprite);return fragment?dom.elem("div",{},{children:[fragment]}).innerHTML:""},gen_fw_device_icon:function(mac,device,alias,classNameOnly,csfPath,datasource){var elem=byod_common.elem.gen_fw_device_icon(mac,device,alias,classNameOnly,csfPath,datasource);return elem?elem.outerHTML:""},isDevice:{Windows:function(){return/Windows NT/i.test(navigator.userAgent)},Mac:function(){return/Mac/i.test(navigator.userAgent)},iOS:function(){return/iPhone|iPad|iPod/i.test(navigator.userAgent)},Android:function(){return/Android/i.test(navigator.userAgent)},WindowsPhone:function(){return/Windows Phone/i.test(navigator.userAgent)},Mobile:function(){return this.iOS()||this.Android()||this.WindowsPhone()}}};return byod_common}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,function(module,exports){var path="/migadmin/ng/directives/menu/menu_items.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-controller="QlistCustomMenuItems"\n    ng-include="menu_items_base">\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/menu_items_base.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items" ng-controller="QlistCustomMenuItems"  ng-include="leftMenuItemsTemplate || menu_partials_defaults"></div>\n<div class="center-menu-items" ng-hide="menu.popUpMenu">\n    <div f-menu-item-qlist-search ng-show="showSearch"></div>\n</div>\n<div class="right-menu-items" ng-hide="menu.popUpMenu"></div>\n')}]),module.exports=path},,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(30),__webpack_require__(921),__webpack_require__(34),__webpack_require__(31),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,fLog,D3Controller,datetime,fDom,ftnt_shared){const Tooltip=ftnt_shared.Tooltip;function addTooltips(elem,entry,meta){if(!meta.columns)return;const content=fDom.elem("div",null,{children:[fDom.elem("f-icon",{className:"fa-loading"})]}),tooltip=Tooltip.addToElement(elem,content,{showDelay:!0});let rendered=!1;return tooltip.onShow(()=>{if(!rendered){const tbody=fDom.elem("tbody"),formatter=new ftnt_shared.MuTableEntryFormatter({columns:meta.columns,collectionLimit:2});meta.columns.filter(column=>!column.hidden).forEach(function(column){const rowElement=fDom.elem("tr"),cellElement=fDom.elem("td");column.hideKeyInSummaryTable?cellElement.setAttribute("colspan",2):rowElement.appendChild(fDom.elem("td",{textContent:$.getInfo(column.langKey||column.id)})),cellElement.appendChild(formatter.formatEntry({entry:entry,columnID:column.id,withoutEventListeners:!0})),rowElement.appendChild(cellElement),tbody.appendChild(rowElement)}),content.innerHTML="",content.appendChild(fDom.elem("table",{className:"table slightly-condensed key-value"},{children:[tbody]})),rendered=!0}}),tooltip}function D3BubbleController($scope,$element,$injector){$injector.invoke(D3Controller,this,{$scope:$scope,$element:$element}),this.init(),this.ready.then(function(){!function(that,$scope){var origColor=that.color,origStroke=that.stroke;that.color=function(){var result;return $scope.colorFn&&(result=$scope.colorFn.apply(that,arguments)),result&&$scope.colorFn||(result=origColor.apply(that,arguments)),result},that.stroke=function(){var result;return $scope.strokeFn&&(result=$scope.strokeFn.apply(that,arguments)),result&&$scope.strokeFn||(result=origStroke.apply(that,arguments)),result}}(this,$scope),this.bubble=this.d3.pack().size([this.width,this.height]).padding(2)}.bind(this))}D3BubbleController.prototype=Object.create(D3Controller.prototype),D3BubbleController.prototype.constructor=D3BubbleController,D3BubbleController.prototype.getPackData=function(data){let packRoot=this.d3.hierarchy({children:data}).sum(d=>d.value).sort((a,b)=>b.value-a.value),packNodes=this.bubble(packRoot).descendants().filter(d=>d.data.name&&d.data.value&&!d.children);return packNodes.forEach(d=>{const name=String((d=>{if("destination"===d._segmentType)return d.resolved||d.dstaddr;if("country"===d._segmentType)return d.country;const deviceLabel=d.device||"";return d.mac_firewall_address||d.hostname||deviceLabel||d.label||d.name})(d.data))||"",nameLength=name.length,value=d.data.formattedValue||this.$scope.shownKeyFormatter(d.data),totalLength=nameLength+(value+"").length+2,availableWidth=2*d.r,availableTextHeight=availableWidth/7,textFontSize=Math.min(2*availableWidth/totalLength,availableTextHeight,15);d._textFontSize=textFontSize,d._name=name,d._value=value,d._totalLength=totalLength}),packNodes},D3BubbleController.prototype.update=function(data){var meta=data._meta,compareByColumn=meta.compareByColumn;const updateCircle=selection=>{selection.attr("r",d=>d.r).style("fill",d=>this.color(d.data.name,d.data)).style("stroke",d=>this.stroke(d.data.name,d.data)).style("cursor",this.clickSupported?"pointer":"auto").each(function(d){addTooltips(this,d.data.entry,meta)})};this.bubble.size([this.width,this.height]);var node=this.svg.selectAll(".node").data(this.getPackData(data)),enter=node.enter().append("g").attr("class","node").attr("transform",d=>"translate("+d.x+","+d.y+")");if(enter.append("circle").on("click",this.clickFn).call(updateCircle),this.renderBubbleInner(enter,node),node.select("circle").transition().duration(1e3).call(updateCircle),node.select("text.label").text(d=>{var fullLabel=String(d.data.label||d.data.name),maxLength=d.r/3-2,label=fullLabel.substring(0,maxLength);return label.length<=2&&fullLabel.length>2?label="":fullLabel.length!==label.length&&d.data.shortLabel&&(label=d.data.shortLabel.length>maxLength?"":d.data.shortLabel),label}),node.transition().attr("class","node").attr("transform",d=>"translate("+d.x+","+d.y+")"),node.empty()&&enter.empty()){if(!this.placeholder){let columnLabel=$.getInfo(compareByColumn.langKey||compareByColumn.id);var langs=this.$scope.placeholderLang||["No results for Compare By {0}"],placeholder=this.placeholder=this.svg.append("text").attr("text-anchor","middle").attr("pointer-events","none");langs.forEach(function(lang,index){placeholder.append("tspan").text($.getInfo(lang,[columnLabel])).attr("x","0").attr("dy",index+"em")})}this.placeholder.attr("transform","translate("+this.width/2+","+this.height/2+")")}else this.placeholder&&(this.placeholder.remove(),this.placeholder=null);node.exit().remove()},D3BubbleController.prototype.renderBubbleInner=function(enterNode,deviceNode){const textBaseStyle=selection=>{selection.attr("text-anchor","middle").style("pointer-events","none")},toPx=num=>(num||0).toFixed(4)+"px";enterNode.append("text").call(textBaseStyle).attr("class","name").merge(deviceNode.select("text.name")).transition().duration(1e3).attr("font-size",d=>toPx(d._textFontSize)).attr("dy",d=>toPx(d._textFontSize/2)).text(d=>d._name),enterNode.append("text").call(textBaseStyle).attr("class","value").merge(deviceNode.select("text.value")).transition().duration(1e3).attr("font-size",d=>toPx(d._textFontSize)).attr("dy",d=>toPx(4*d.r/7)).text(d=>d._value),enterNode.append("text").call(textBaseStyle).attr("class","bubble-icon").merge(deviceNode.select("text.bubble-icon")).transition().duration(1e3).attr("font-family",d=>d.data.iconFontFamily||d.data.icon&&d.data.icon.fontFamily||"").attr("font-size",d=>toPx(4*d.r/7)).attr("dy",d=>toPx(-1.5*d.r/7)).text(d=>d.data.iconCode||d.data.icon&&d.data.icon.unicode||"")};var d3BasicBubbleChart=function(){return{restrict:"A",scope:{data:"=",click:"=",tooltipFormatter:"=",colorFn:"=",strokeFn:"=",tooltipCreateBindFn:"=",shownKeyFormatter:"=",placeholderLang:"="},controller:D3BubbleController}};function D3CountryController($scope,$element,$injector,$http,$templateCache,$compile,loader){$injector.invoke(D3Controller,this,{$scope:$scope,$element:$element});var countriesJSON=loader.basePath("/geo/countries.json");this.promises.push($http.get(countriesJSON,{cache:!0}).then(function(result){this.geoData=result.data}.bind(this))),this.COUNTRY_MAP={"Bosnia and Herz.":"Bosnia and Herzegovina","Central African Rep.":"Central African Republic","Czech Rep.":"Czech Republic","Dominican Rep.":"Dominican Republic","Dem. Rep. Congo":"Congo, The Democratic Republic of the","Eq. Guinea":"Equatorial Guinea","Falkland Is.":"Falkland Islands (Malvinas)",Iran:"Iran, Islamic Republic of",Korea:"Korea, Republic of",Libya:"Libyan Arab Jamahiriya",Moldova:"Moldova, Republic of",Russia:"Russian Federation",Syria:"Syrian Arab Republic","S. Sudan":"South Sudan",Tanzania:"Tanzania, United Republic of"},this.COUNTRY_EXEMPT={"Aland Islands":!0,"American Samoa":!0,Andorra:!0,Anguilla:!0,"Anonymous Proxy":!0,Antarctica:!0,"Antigua and Barbuda":!0,Aruba:!0,"Asia/Pacific Region":!0,Bahrain:!0,Barbados:!0,Bermuda:!0,"Bonaire, Saint Eustatius and Saba":!0,"Brunei Darussalam":!0,"Cape Verde":!0,"Cayman Islands":!0,"Christmas Island":!0,"Cook Islands":!0,Curacao:!0,Dominica:!0,Europe:!0,Gibraltar:!0,Guadeloupe:!0,Guam:!0,Guernsey:!0,Grenada:!0,"Faroe Islands":!0,"French Guiana":!0,"French Polynesia":!0,"French Southern Territories":!0,"Hong Kong":!0,"Isle of Man":!0,Jersey:!0,Liechtenstein:!0,Macao:!0,Maldives:!0,Malta:!0,Mauritius:!0,Martinique:!0,"Marshall Islands":!0,Mayotte:!0,"Micronesia, Federated States of":!0,Monaco:!0,Montserrat:!0,Nauru:!0,Niue:!0,"Norfolk Island":!0,"Northern Mariana Islands":!0,Palau:!0,"Palestinian Territory":!0,Pitcairn:!0,Reserved:!0,Reunion:!0,"Saint Bartelemey":!0,"Saint Helena":!0,"Saint Kitts and Nevis":!0,"Saint Martin":!0,"Saint Pierre and Miquelon":!0,"Saint Lucia":!0,"Saint Vincent and the Grenadines":!0,Samoa:!0,"San Marino":!0,"Sao Tome and Principe":!0,Seychelles:!0,Singapore:!0,"Sint Maarten":!0,"Solomon Islands":!0,"South Georgia and the South Sandwich Islands":!0,"Svalbard and Jan Mayen":!0,Tokelau:!0,Tonga:!0,"Turks and Caicos Islands":!0,Tuvalu:!0,"United States Minor Outlying Islands":!0,"Virgin Islands, British":!0,"Virgin Islands, U.S.":!0,"Wallis and Futuna":!0},this.country_warned={},this.scale=1,this.translation=[0,0];var countryCentersJSON=loader.basePath("/geo/country_centers.json");this.promises.push($http.get(countryCentersJSON,{cache:!0}).then(function(result){this.countryCenters=result.data}.bind(this))),this.init(),this.ready=this.ready.then(function(){this.svg=this.svg.append("g"),this.colorScale=this.d3.scaleLinear().range(["#FFEF40","#C7311A"]),this.color=function(value){return 0===value?"#D9D5D4":this.colorScale(value)}.bind(this)}.bind(this))}D3CountryController.prototype=Object.create(D3Controller.prototype),D3CountryController.prototype.constructor=D3CountryController,D3CountryController.prototype.requireComponents=function(){return D3Controller.prototype.requireComponents.call(this,{topojson:__webpack_require__(922)})},D3CountryController.prototype.createPath=function(features){var scale,translate,topLeft={x:null,y:null},bottomRight={x:null,y:null},projection=this.egg?this.d3.geo.orthographic().scale(1.2).translate([0,0]).clipAngle(90).rotate([100,0]).precision(.1):this.d3.geoMercator().scale(this.scale).translate(this.translation),path=this.d3.geoPath().projection(projection);return features.forEach(function(feature){var value,bounds=path.bounds(feature);(null==(value=bounds[0][0])||value<topLeft.x)&&(topLeft.x=value),(null==(value=bounds[0][1])||value<topLeft.y)&&(topLeft.y=value),(null==(value=bounds[1][0])||value>bottomRight.x)&&(bottomRight.x=value),(null==(value=bounds[1][1])||value>bottomRight.y)&&(bottomRight.y=value),this.countryCenters&&this.countryCenters[feature.properties.iso_a2]&&(feature.center=[this.countryCenters[feature.properties.iso_a2].long,this.countryCenters[feature.properties.iso_a2].lat])}.bind(this)),scale=.95/Math.max((bottomRight.x-topLeft.x)/this.width,(bottomRight.y-topLeft.x)/this.height),translate=[(this.width-scale*(topLeft.x+bottomRight.x))/2,(this.height-scale*(topLeft.y+bottomRight.y))/2],projection.scale(scale).translate(translate),path},D3CountryController.prototype.update=function(data){var features=this.topojson.feature(this.geoData,this.geoData.objects.countries).features,path=this.createPath(features),hit={};this.colorScale.domain([0,data._meta.max]),this.$scope.minNonZeroValue=data._meta.max===data._meta.minNonZero?null:data._meta.minNonZero,this.$scope.maxValue=data._meta.max;var getStats=function(d){var name=d.properties.name,value={name:name=this.COUNTRY_MAP[name]||name,country:name};return data[name]&&(value=data[name],hit[name]=!0),value}.bind(this),fillFn=function(d){var stats=getStats(d);return this.color(stats.value||0)}.bind(this);this.tooltipDataGetter=getStats,this.tooltipColorKeyGetter=function(d){var name=d.properties.name;return data[name]?data[name].value:0},this.rendered?this.svg.selectAll("path").attr("d",path).transition().duration(1e3).style("fill",fillFn).style("cursor",this.clickSupported?"pointer":"auto").on("click",d=>{var stats=getStats(d);stats.entry&&this.clickFn(stats)}).each(d=>{var stats=getStats(d);stats.entry?d.tooltip=addTooltips(this,stats.entry,data._meta):d.tooltip&&d.tooltip.destroy()}):(this.svg.selectAll("path").data(features,d=>d.properties.name).enter().append("path").attr("class","country").attr("d",path).style("fill",fillFn).style("cursor",this.clickSupported?"pointer":"auto").on("click",d=>this.clickFn(getStats(d))).each(function(d){var stats=getStats(d);stats.entry?d.tooltip=addTooltips(this,stats.entry,data._meta):d.tooltip&&d.tooltip.destroy()}),this.rendered=!0),Object.keys(data).forEach(function(country){"_meta"===country||hit[country]||this.COUNTRY_EXEMPT[country]||this.country_warned[country]||(fLog('Country "'+country+"\" doesn't exist on map"),this.country_warned[country]=!0)}.bind(this))};var d3CountryChart=function(){return{restrict:"A",scope:{data:"=",click:"=",tooltipFormatter:"=",compareByColumn:"<"},controller:D3CountryController}};function D3ThreatMapController($scope,$element,$injector,shortcuts){$injector.invoke(D3CountryController,this,{$scope:$scope,$element:$element}),this.scale=.8,this.translation=[0,.5],this.attackData=[],this.countryMap=null,this.countryHeat={},this.resizeTransition=null,this.countryColorRange=["#36424A","#7D7E7E"],this.threatLevelNames=["Low","Medium","High","crit"],this.threatLevelColors=["#226093","#f3bb2d","#e28722","#d9534f"],this.api=this.$scope.api=this.$scope.api||{},this.api.attackData=this.attackData,this.api.processThreats=this.processThreats.bind(this),shortcuts.subscribe(shortcuts.SHORTCUTS.CONTRA,function(){this.svg.selectAll("*").remove(),this.egg=!0,this.rendered=!1,this.update(this.$scope.data)}.bind(this),"shortcut::easter_egg")}D3ThreatMapController.prototype=Object.create(D3CountryController.prototype),D3ThreatMapController.prototype.update=function(data){var features=this.topojson.feature(this.geoData,this.geoData.objects.countries).features;this.countryMap=features.reduce(function(map,f){return map[f.properties.iso_a2]=f,map},{});var path=this.path=this.createPath(features);data.device||(data.device={latitude:0,longitude:0}),this.$fortigate=$(data.deviceElement),this.setupFortigateDragging(data.device);var fillFn=d=>{return this.d3.scaleLinear().range(this.countryColorRange)(this.countryHeat[d.properties.iso_a2]||0)};if(this.rendered)this.resizeTransition=this.svg.selectAll("path.country").style("fill",fillFn).transition().duration(1e3).attr("d",path),this.redrawNightMap();else{this.svg.selectAll("path").data(features,d=>d.properties.name).enter().append("path").attr("class","country").attr("d",path).style("fill",fillFn).style("stroke-opacity",.7),this.redrawNightMap=this.renderNightMap();var updateLocked=!1,updateInterval=this.d3.interval(()=>{updateLocked||(updateLocked=!0,(this.resizeTransition||this.svg.selectAll("path.country")).transition().ease(this.d3.easeLinear).duration(1e4).style("fill",fillFn),this.resizeTransition=null,updateLocked=!1)},1e3);if(this.egg)var rotate=[71.03,.37],velocity=[.018,-6e-5],multiPointInterval=this.d3.timer(elapsed=>{if(!this.egg)return!0;var projection=this.path.projection();projection.rotate([rotate[0]+elapsed*velocity[0],rotate[1]+elapsed*velocity[1]]);var position=projection([data.device.longitude,data.device.latitude]),visible=!!this.path({type:"MultiPoint",coordinates:[[data.device.longitude,data.device.latitude]]});this.$fortigate.toggleClass("clipped",!visible),this.$fortigate.css({left:position[0],top:position[1]}),this.svg.selectAll("path").attr("d",this.path)});this.$scope.$on("$destroy",()=>{updateInterval&&updateInterval.stop(),multiPointInterval&&multiPointInterval.stop(),this.egg=!1}),this.rendered=!0}},D3ThreatMapController.prototype.setupFortigateDragging=function(device){var position=this.path.projection()([device.longitude,device.latitude]),maxHeight=this.height-this.$fortigate.height();this.$fortigate.css({left:position[0],top:Math.max(Math.min(position[1],maxHeight),0)}),device.draggable&&(this.$fortigate.draggable(),this.$fortigate.off("drag").on("drag",function(e,ui){var svgBounds=this.svg.node().getBBox();ui.position.left=Math.max(svgBounds.x+10,ui.position.left),ui.position.left=Math.min(svgBounds.x+svgBounds.width-10,ui.position.left),ui.position.top=Math.max(0,ui.position.top),ui.position.top=Math.min(maxHeight,ui.position.top)}.bind(this)),this.$fortigate.off("dragstop").on("dragstop",function(e,ui){if(this.path.projection().invert){var pos=[ui.position.left,ui.position.top],coords=this.path.projection().invert(pos);device.latitude=coords[1],device.longitude=coords[0]}}.bind(this)))},D3ThreatMapController.prototype.processLogLines=function(){var loglines=this.d3.select("#threatlog table").selectAll("tr.log").data(this.filteredData,function(d){return d.threatid}),line=loglines.enter().append("tr").attr("class","log").style("color",function(d){return this.threatLevelColors[d.level]}.bind(this));line.append("td").attr("class","flag").html(function(d){return'<span class="country_flag country_'+d.countrycode+'"></span>'}),line.append("td").attr("class","location").text(function(d){return this.countryMap[d.countrycode].properties.name}.bind(this)),line.append("td").attr("class","threat").text(function(d){return $.getInfo(d.threat)}),line.append("td").attr("class","level").text(function(d){return $.getInfo(this.threatLevelNames[d.level])+" ("+d.score+")"}.bind(this)),line.append("td").attr("class","time").text(function(d){return datetime.formatDateTime(new Date(d.time*datetime.S_TO_MS))});var threatlog=this.d3.select("#threatlog .logs").node();threatlog.scrollTop=threatlog.scrollHeight,loglines.exit().remove()},D3ThreatMapController.prototype.processThreats=function(){var that=this;this.filteredData=this.attackData.filter(function(d){return d.countrycode=that.countryMap[d.src_country]?d.src_country:d.dst_country,!!that.countryMap[d.countrycode]}),this.processLogLines();var groupNodes=this.svg.selectAll("g.threat").data(this.filteredData);groupNodes.exit().remove();var groups=groupNodes.enter().append("g").attr("class","threat");groups.merge(groupNodes).attr("transform",function(d){var country=this.countryMap[d.countrycode];return this.countryHeat[d.countrycode]=(this.countryHeat[d.countrycode]||0)+1,d.origin=country.center?this.path.projection()(country.center):this.path.centroid(country),"translate("+d.origin+")"}.bind(this)).transition().ease(this.d3.easeLinear).duration(2e3).attr("transform",function(d){var position;return d.fortigatePos=[(position=that.$fortigate.position()).left,position.top],d.slopeX=d.origin[0]-d.fortigatePos[0],d.slopeY=d.origin[1]-d.fortigatePos[1],d.length=Math.sqrt(d.slopeX*d.slopeX+d.slopeY*d.slopeY),d.fgtVector=[d.slopeX/d.length,d.slopeY/d.length],"translate("+[d.fortigatePos[0]+20*d.fgtVector[0],d.fortigatePos[1]+20*d.fgtVector[1]]+")"}).transition().ease(this.d3.easeLinear).duration(1e3).attr("transform",function(d){return"translate("+[d.fortigatePos[0]+100*d.fgtVector[0],d.fortigatePos[1]+100*d.fgtVector[1]]+")"}).transition().delay(1e4).on("end",function(d){that.countryHeat[d.countrycode]=(that.countryHeat[d.countrycode]||1)-1,that.d3.select(this).selectAll("*").remove()}),groups.append("circle").attr("stroke",function(d){return this.threatLevelColors[d.level]}.bind(this)).attr("fill",function(d){return this.threatLevelColors[d.level]}.bind(this)).attr("r",1.5).transition().delay(2e3).duration(1e3).attr("fill","none").attr("r",20).style("opacity",0).style("stroke-width",5),groups.append("line").attr("stroke",function(d){return this.threatLevelColors[d.level]}.bind(this)).attr("stroke-width",2).attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",0).transition().ease(this.d3.easeLinear).duration(200).attr("x2",function(d){return d.fgtVector[0]*(d.length/10)}).attr("y2",function(d){return d.fgtVector[1]*(d.length/10)}).transition().delay(2e3).ease(this.d3.easeLinear).duration(1).attr("x2",0).attr("y2",0)},D3ThreatMapController.prototype.renderNightMap=function(){var radians=Math.PI/180,degrees=180/Math.PI,that=this,circle=this.d3.geoCircle().radius(90),night=this.svg.append("path").attr("class","night").style("stroke","black").style("fill","black").style("fill-opacity",".3").style("stroke-opacity",".2").attr("d",this.path),redraw=function(){var position,time,centuries;night.datum(circle.center((time=new Date,centuries=(time-Date.UTC(2e3,0,1,12))/864e5/36525,position=[(that.d3.utcDay.floor(time)-time)/864e5*360-180-equationOfTime(centuries)*degrees,solarDeclination(centuries)*degrees],[position[0]+180,-position[1]]))).attr("d",this.path)}.bind(this);function equationOfTime(centuries){var e=function(centuries){return.016708634-centuries*(42037e-9+1.267e-7*centuries)}(centuries),m=solarGeometricMeanAnomaly(centuries),l=solarGeometricMeanLongitude(centuries),y=Math.tan(obliquityCorrection(centuries)/2);return(y*=y)*Math.sin(2*l)-2*e*Math.sin(m)+4*e*y*Math.sin(m)*Math.cos(2*l)-.5*y*y*Math.sin(4*l)-1.25*e*e*Math.sin(2*m)}function solarDeclination(centuries){return Math.asin(Math.sin(obliquityCorrection(centuries))*Math.sin(function(centuries){return function(centuries){return solarGeometricMeanLongitude(centuries)+function(centuries){var m=solarGeometricMeanAnomaly(centuries);return(Math.sin(m)*(1.914602-centuries*(.004817+14e-6*centuries))+Math.sin(m+m)*(.019993-101e-6*centuries)+289e-6*Math.sin(m+m+m))*radians}(centuries)}(centuries)-(.00569+.00478*Math.sin((125.04-1934.136*centuries)*radians))*radians}(centuries)))}function solarGeometricMeanAnomaly(centuries){return(357.52911+centuries*(35999.05029-1537e-7*centuries))*radians}function solarGeometricMeanLongitude(centuries){var l=(280.46646+centuries*(36000.76983+3032e-7*centuries))%360;return(l<0?l+360:l)/180*Math.PI}function obliquityCorrection(centuries){return function(centuries){return(23+(26+(21.448-centuries*(46.815+centuries*(59e-5-.001813*centuries)))/60)/60)*radians}(centuries)+.00256*Math.cos((125.04-1934.136*centuries)*radians)*radians}return redraw(),redraw};var d3ThreatMap=function(){return{restrict:"A",scope:{data:"=",api:"="},controller:D3ThreatMapController}};return function(providers){providers.$compile.directive("fD3BasicBubbleChart",d3BasicBubbleChart),providers.$compile.directive("fD3CountryChart",d3CountryChart),providers.$compile.directive("fD3ThreatMap",d3ThreatMap)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(136),__webpack_require__(26),__webpack_require__(30),__webpack_require__(188)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(UpgradableExtensionDevice,inject,fLog){function FortiAP($injector,params){$injector.invoke(UpgradableExtensionDevice,this,{params:{serial:params.serial,deviceType:UpgradableExtensionDevice.prototype.DEVICE_TYPES.FORTI_AP,name:params.name,firmwareVersion:params.firmwareVersion,modelFormatter:params.modelFormatter}})}return FortiAP.prototype=Object.create(UpgradableExtensionDevice.prototype),FortiAP.prototype.constructor=FortiAP,FortiAP.prototype.URLS={MONITOR:"/api/v2/monitor/wifi/managed_ap",FIRMWARE:"/api/v2/monitor/wifi/firmware",DOWNLOAD:"/api/v2/monitor/wifi/firmware/download",UPGRADE:"/api/v2/monitor/wifi/firmware/push",RESTART:"/api/v2/monitor/wifi/managed_ap/restart",UPLOAD:"/api/v2/monitor/wifi/firmware/upload"},FortiAP.prototype.FIRMWARE_HEADER_LENGTH=38,FortiAP.prototype.upgrade=inject.mark(function($http){return function(){return this._upgradeProgress=0,this._upgradeStatus=this.UPGRADE_STATUS.IN_PROGRESS,$http.post(this.URLS.UPGRADE,{serial:this.getSerial(),image_id:this.getRecommendedFirmware().imageId})}}),FortiAP.prototype.restart=inject.mark(function($http){return function(){return this._rebooting=!0,$http.post(this.URLS.RESTART,{wtpname:this.getSerial()})}}),FortiAP.prototype.monitorUpgradeProgress=inject.mark(function($timeout){return function(onUpgradeFinish,onUpgradeFailed){var monitorFn=function(){this._updateUpgradeProgress().then(function(upgradeProgress){Number.isInteger(upgradeProgress)?100===upgradeProgress?(this._upgradeStatus=this.UPGRADE_STATUS.SUCCESS,onUpgradeFinish()):$timeout(monitorFn,2e3):onUpgradeFailed(this.ERROR_MESSAGE.UPGRADE_PROGRESS)}.bind(this),function(){onUpgradeFailed(this.ERROR_MESSAGE.UPGRADE_PROGRESS)}.bind(this))}.bind(this);$timeout(monitorFn)}}),FortiAP.prototype._updateUpgradeProgress=inject.mark(function($http){return function(){return $http.get(this.URLS.MONITOR,{params:{wtp_id:this.getSerial()}}).then(function(response){var results=response.data.results;return this._upgradeProgress=results.length?results[0].image_download_progress:null,this._upgradeProgress}.bind(this))}}),FortiAP.prototype.downloadFirmware=inject.mark(function($http,recommendedFirmware,$q){return function(){return recommendedFirmware.load(recommendedFirmware.DEVICE_TYPES.FORTI_AP).then(function(){var firmware=recommendedFirmware.get(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_AP);return firmware?recommendedFirmware.isDownloaded(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_AP)?$q.resolve({downloaded:!0,imageId:firmware.image_id}):$http.post(this.URLS.DOWNLOAD,{image_id:firmware.image_id}).then(function(response){return recommendedFirmware.markDownload(this.getModel(),recommendedFirmware.DEVICE_TYPES.FORTI_AP),response.data.results}.bind(this),function(){return fLog.error("Failed to retrieve firmware from FortiGuard for "+this.getModel()),$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_DOWNLOAD)}.bind(this)):$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_GET)}.bind(this),function(){return fLog.error("Failed to get recommended firmware for "+this.getModel()),$q.reject(this.ERROR_MESSAGE.RECOMMENDED_FIRMWARE_GET)}.bind(this))}}),FortiAP}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";const ftnt_shared=__webpack_require__(8),inject=__webpack_require__(26),fSwitchctrl=__webpack_require__(53),BUILD=__webpack_require__(0),fDatetime=__webpack_require__(34),RESELLERS_RELOAD_EVENT="countryCodeChangedEvent",PASSWORD_RESET_URL="https://support.fortinet.com/Credentials/Account/UserPassword.aspx",STEPS={SELECT_DEVICES:"Select Devices to Authorize",AUTHORIZATION_SUMMARY:"Authorization Summary",REGISTER_STATUS:"Registration Status",REGISTER_FORM:"FortiCloud Account",REGISTER_SUMMARY:"Registration Summary"},STEPS_BUTTON_LABEL={[STEPS.SELECT_DEVICES]:"Authorize",[STEPS.AUTHORIZATION_SUMMARY]:"Close",[STEPS.REGISTER_STATUS]:"Register",[STEPS.REGISTER_SUMMARY]:"Close",[STEPS.REGISTER_FORM]:"submit"},STEPS_SECONDARY_BUTTON_LABEL={[STEPS.SELECT_DEVICES]:"Cancel",[STEPS.REGISTER_STATUS]:"Close",[STEPS.REGISTER_FORM]:"Cancel"},STEPS_PRIMARY_BUTTON_CLASS={[STEPS.SELECT_DEVICES]:"primary",[STEPS.REGISTER_FORM]:"primary",[STEPS.REGISTER_STATUS]:"primary"},STEPS_SECONDARY_BUTTON_CLASS={[STEPS.AUTHORIZATION_SUMMARY]:"primary"},STEPS_PRIMARY_FUNCTION={[STEPS.SELECT_DEVICES]:"submitAndGoNext",[STEPS.REGISTER_STATUS]:"submitAndGoNext",[STEPS.AUTHORIZATION_SUMMARY]:"close",[STEPS.REGISTER_SUMMARY]:"close",[STEPS.REGISTER_FORM]:"submitAndGoNext"},STEPS_SECONDARY_FUNCTION={[STEPS.SELECT_DEVICES]:"close",[STEPS.REGISTER_FORM]:"close",[STEPS.REGISTER_STATUS]:"close"},STEPS_PRIMARY_BUTTON_DISABLE_FUNCTION={[STEPS.SELECT_DEVICES]:"noSelectedDevice",[STEPS.REGISTER_STATUS]:"someFetchingRegistration"},STEPS_PRIMARY_BUTTON_HIDE_FUNCTION={[STEPS.REGISTER_STATUS]:"alreadyRegistered"},STEPS_SECONDARY_BUTTON_DISABLE_FUNCTION={[STEPS.AUTHORIZATION_SUMMARY]:"cannotRegister"},STEPS_SECONDARY_BUTTON_HIDE_FUNCTION={[STEPS.AUTHORIZATION_SUMMARY]:"alreadyRegistered"},MAX_FETCH_COUNTER=60;class StatusLabel{constructor(condition,label,icon){this.condition=condition,this.label=label,this.icon=icon}}class DeviceStatus extends inject.Collectable{constructor(device,fortigate){super(),this.device=device,this.fortigate=fortigate,this.type="csfFortiSwitches"===device.sourceID?"FortiSwitch":"FortiAP",this.isFsw="FortiSwitch"===this.type,this.serial=device.serial,this.model=device.serial.substring(0,6),this.isOnline=!1,this.fetchCounter=0,this.registered=!1,this.startedRegistering=!1,this.authorizing=!1,this.authorized=!1,this.registrationFailed=!1}_getConditionedResults(statusMap,key){let status,result="";for(status of statusMap)if(status.condition){result=status[key];break}return result}_getRegistrationStatusMap(){return[new StatusLabel(this.registered,"Registered","fa-enabled"),new StatusLabel(this.fetchingRegistrationFailed,"Failed to fetch registration information","fa-disabled"),new StatusLabel(this.registrationFailed,"FortiCloud registration failed","fa-disabled"),new StatusLabel(this.fetchingRegistration,"Fetching registration information","fa-loading"),new StatusLabel(this.isWaitingOnline(),"Waiting for device to be online","fa-loading"),new StatusLabel(this.isTimedOut(),"Timed out when waiting for device to be online","fa-warning"),new StatusLabel(this.isPendingRegistration(),"Registration submitted, but information may need a moment to update. Please try again later.","fa-enabled"),new StatusLabel(this.registering,"Registering","fa-loading"),new StatusLabel(!this.registering,"Not Registered","")]}getRegistrationStatusLabel(){return this._getConditionedResults(this._getRegistrationStatusMap(),"label")}getRegistrationStatusIconClass(){return this._getConditionedResults(this._getRegistrationStatusMap(),"icon")}_getAuthorizationStatusMap(){return[new StatusLabel(this.authorizing,"Authorizing","fa-loading"),new StatusLabel(this.authorized,"Authorized","fa-enabled")]}getAuthorizationStatusLabel(){return this._getConditionedResults(this._getAuthorizationStatusMap(),"label")}getAuthorizationStatusIconClass(){return this._getConditionedResults(this._getAuthorizationStatusMap(),"icon")}isPendingRegistration(){return!this.registered&&this.startedRegistering&&!this.registering&&!this.registrationFailed&&!this.fetchingRegistration&&!this.isWaitingOnline()&&!this.isTimedOut()}notRegistered(){return!this.registered&&!this.fetchingRegistration&&!this.registering}isWaitingOnline(){return this.startedRegistering&&!this.isOnline&&this.fetchCounter<MAX_FETCH_COUNTER&&this.fetchCounter}isTimedOut(){return!this.registered&&!this.isOnline&&this.fetchCounter>=MAX_FETCH_COUNTER}getRegistration($INJECTABLE$,deviceRegistration){return()=>(this.fetchingRegistration=!0,this.fetchingRegistrationFailed=!1,this.registered=!1,this.account=null,this.registrationTime=null,deviceRegistration.getRegistration(this.serial,this.fortigate,!0).then(response=>{this.setRegistrationStatus(response.data.results)}).finally(()=>{this.fetchingRegistration=!1,this.fetchingRegistrationFailed=!0}))}setRegistrationStatus(registrationInfo){Array.isArray(registrationInfo)&&(registrationInfo=registrationInfo.find(info=>info.serial===this.serial)),registrationInfo&&"registered"===registrationInfo.status&&(this.registered=!0,this.account=registrationInfo.account,registrationInfo.time&&(this.registrationTime=fDatetime.formatDateTime(fDatetime.fortiGateUTCToBrowserUTC(new Date(1e3*registrationInfo.time))))),this.fetchingRegistration=!1}registerFortiCloud($INJECTABLE$,deviceRegistration){return params=>(this.registering=!0,deviceRegistration.registerFortiCloud(this.serial,params,this.fortigate).then(response=>(response.data.results.success&&(this.registrationFailed=!1),this.getRegistration()),()=>{this.registrationFailed=!0}).finally(()=>{this.registering=!1}))}authorizeDevices(){this.authorizing=!0,this.device.toggleAuthorization(!0,!0).then(()=>{this.authorizing=!1,this.authorized=!0})}fetchDeviceStatus($INJECTABLE$,$http){return()=>{let promise;return this.fetchCounter++,(promise=this.isFsw?$http.get("/api/v2/monitor/switch-controller/managed-switch",{mkey:this.serial}):$http.get("/api/v2/monitor/wifi/managed_ap",{wtp_id:this.serial})).then(response=>{const stats=response.data.results,statsInfo=stats&&stats[0];statsInfo&&(this.isFsw?(this.isOnline=statsInfo.state===fSwitchctrl.STATE.AUTHORIZED&&statsInfo.status===fSwitchctrl.STATUS.CONNECTED,this.authorized=fSwitchctrl.STATE.AUTHORIZED):(this.authorized="authorized",this.isOnline="authorized"===statsInfo.state&&"connected"===statsInfo.status))})}}}class AuthorizeFswFapWizard extends inject.Collectable{constructor($scope){super(),this.PASSWORD_RESET_URL=PASSWORD_RESET_URL,this.RESELLERS_RELOAD_EVENT=RESELLERS_RELOAD_EVENT,this.deviceStatusMap={},this.STEPS=STEPS,$scope.$watch(()=>this.getCurrentStep(),(newValue,oldValue)=>{newValue===STEPS.REGISTER_SUMMARY&&oldValue!==STEPS.REGISTER_SUMMARY&&this.pollAndRegisterAllDevices(),newValue===STEPS.AUTHORIZATION_SUMMARY&&oldValue!==STEPS.AUTHORIZATION_SUMMARY&&this.authorizeDevices(),newValue===STEPS.REGISTER_STATUS&&(this.forEachDeviceStatus(deviceStatus=>{deviceStatus.fetchDeviceStatus()}),this.getRegistration())})}$onDestroy(){this.destroyed=!0}$onInit($INJECTABLE$,$injector,$q,$scope){return async()=>{this.registerOnly?this.planning=[STEPS.REGISTER_STATUS,STEPS.REGISTER_FORM,STEPS.REGISTER_SUMMARY]:this.planning=[STEPS.SELECT_DEVICES,STEPS.AUTHORIZATION_SUMMARY];const datasources=["csfFortiSwitches","csfFortiAPs"];this.selectConfig={sources:datasources,filterFunction:entry=>!entry.isAuthorized()},this.selectedDevices=[],await $q.all(datasources.map(sourceID=>(this.fortigate&&(sourceID=this.fortigate.getOmniselectProxySourceID(sourceID)),ftnt_shared.Omniselect.getSourceData(sourceID).then(devices=>{devices.forEach(device=>{this.serials.find(serial=>serial===device.serial)&&this.selectedDevices.push(device)})})))),$scope.$watch("$ctrl.selectedDevices",devices=>{this.deviceStatusMap={},(devices||[]).forEach(device=>{this.deviceStatusMap[device.serial]=$injector.instantiate(DeviceStatus,{device:device,fortigate:this.fortigate})})}),this.currentIdx=0,this.loading=!0,this.setupOmniselect(),this.fetchFortiCareAccount()}}fetchFortiCareAccount($INJECTABLE$,notificationRequests){return()=>{notificationRequests.license().then(license=>{const forticareLicense=license.forticare,fortiCareSupported=forticareLicense.status!==BUILD.SYMBOLS.LICENSE_STATUS_NO_SUPPORT;this.email=fortiCareSupported?forticareLicense.account:""})}}cannotRegister(){return this.isAuthorizing()||this.alreadyRegistered()}isAuthorizing(){return this.selectedDevices.some(device=>{return this.deviceStatusMap[device.serial].authorizing})}isStartedRegistering(){return this.selectedDevices.some(device=>{return this.deviceStatusMap[device.serial].startedRegistering})}setupOmniselect(){this.countrySelect={sources:["forticareRegistrationLicenseCountries"],singleSelect:!0,tooltips:!1},this.resellerSelect={sources:["forticareRegistrationLicenseResellers"],singleSelect:!0,tooltips:!1}}noSelectedDevice(){return!(this.selectedDevices&&this.selectedDevices.length)}close($INJECTABLE$,$q){return()=>(this.fSlideContainer&&this.fSlideContainer.slide.close(),$q.reject())}authorizeDevices(){Object.keys(this.deviceStatusMap).forEach(key=>{const deviceStatus=this.deviceStatusMap[key];this.selectedDevices.includes(deviceStatus.device)&&deviceStatus.authorizeDevices()})}getCurrentStep(){return this.planning[this.currentIdx]}getNextButtonLabel(){return STEPS_BUTTON_LABEL[this.getCurrentStep()]}getSecondaryNextButtonLabel(){return STEPS_SECONDARY_BUTTON_LABEL[this.getCurrentStep()]||""}getPrimaryButtonClass(){let buttonClass="";this.nextButtonBusy&&(buttonClass+="busy ");const preSetClass=STEPS_PRIMARY_BUTTON_CLASS[this.getCurrentStep()];return preSetClass&&(buttonClass+=`${preSetClass} `),buttonClass}disablePrimaryButton(){const disableFunction=STEPS_PRIMARY_BUTTON_DISABLE_FUNCTION[this.getCurrentStep()];let shouldDisable=this.nextButtonBusy;return disableFunction&&(shouldDisable=shouldDisable||this[disableFunction]()),shouldDisable}shouldHidePrimaryButton(){const hideConditionFunction=STEPS_PRIMARY_BUTTON_HIDE_FUNCTION[this.getCurrentStep()];return!!hideConditionFunction&&this[hideConditionFunction]()}shouldHideSecondaryButton(){const hideConditionFunction=STEPS_SECONDARY_BUTTON_HIDE_FUNCTION[this.getCurrentStep()];return!!hideConditionFunction&&this[hideConditionFunction]()}alreadyRegistered(){return Object.keys(this.deviceStatusMap).every(serial=>this.deviceStatusMap[serial].registered)}someFetchingRegistration(){return Object.keys(this.deviceStatusMap).some(serial=>this.deviceStatusMap[serial].fetchingRegistration)}shouldShowProgressTracker(){return!(this.alreadyRegistered()&&this.registerOnly)}someDeviceHasAccount(){return Object.keys(this.deviceStatusMap).some(serial=>this.deviceStatusMap[serial].account)}disableSecondaryButton(){const disableFunction=STEPS_SECONDARY_BUTTON_DISABLE_FUNCTION[this.getCurrentStep()];let shouldDisable=this.secondaryButtonBusy;return disableFunction&&(shouldDisable=shouldDisable||this[disableFunction]()),shouldDisable}getSecondaryButtonClass(){let buttonClass="";this.secondaryButtonBusy&&(buttonClass+="busy ");const preSetClass=STEPS_SECONDARY_BUTTON_CLASS[this.getCurrentStep()];return preSetClass&&(buttonClass+=`${preSetClass} `),buttonClass}getStepNumber(idx){return idx<this.currentIdx?"✔":idx+1}goNextStep(){this.currentIdx<this.planning.length&&(this.currentIdx+=1)}primaryButtonAction($INJECTABLE$,$q){return()=>{const fnName=STEPS_PRIMARY_FUNCTION[this.getCurrentStep()];let promise;return this.nextButtonBusy=!0,fnName&&(promise=this[fnName]()),promise||(promise=$q.resolve()),promise.then(()=>{this.goNextStep()}).finally(()=>{this.nextButtonBusy=!1})}}secondaryButtonAction($INJECTABLE$,$q){return()=>{const fnName=STEPS_SECONDARY_FUNCTION[this.getCurrentStep()];let promise;return this.secondaryButtonBusy=!0,fnName&&(promise=this[fnName]()),promise||(promise=$q.resolve()),promise.then(()=>{this.goNextStep()}).finally(()=>{this.secondaryButtonBusy=!1})}}pollAndRegisterAllDevices(){this.getRegistration().then(()=>{Object.keys(this.deviceStatusMap).forEach(serial=>{const deviceStatus=this.deviceStatusMap[serial];deviceStatus&&!deviceStatus.registered&&this.pollAndRegisterDevice(serial)})})}pollAndRegisterDevice(serial,reset){const deviceStatus=this.deviceStatusMap[serial];deviceStatus.startedRegistering=!0,this.pollDeviceStatus(serial,reset).then(()=>{if(deviceStatus.isOnline)return deviceStatus.registerFortiCloud({email:this.email,password:this.password,country:this.country.name,reseller:this.reseller.text})})}forEachDeviceStatus(cb){return Object.entries(this.deviceStatusMap).forEach(([serial,deviceStatus])=>{cb(deviceStatus,serial)})}getRegistration($INJECTABLE$,deviceRegistration){return()=>{const serials=this.selectedDevices.map(device=>device.serial);return serials.forEach(serial=>{const deviceStatus=this.deviceStatusMap[serial];deviceStatus.fetchingRegistration=!0,deviceStatus.fetchingRegistrationFailed=!1}),deviceRegistration.getRegistration(serials,this.fortigate,!0).then(response=>{const results=response.data.results;this.forEachDeviceStatus(deviceStatus=>{deviceStatus.setRegistrationStatus(results)})},()=>{this.forEachDeviceStatus(deviceStatus=>{deviceStatus.fetchingRegistrationFailed=!0})})}}pollDeviceStatus($INJECTABLE$,$timeout,$q){return(serial,reset)=>{const deviceStatus=this.deviceStatusMap[serial];if(reset&&(deviceStatus.fetchCounter=0),!this.destroyed)return deviceStatus.fetchDeviceStatus().then(()=>deviceStatus.isWaitingOnline()?$timeout(()=>this.pollDeviceStatus(serial),1e3):deviceStatus.isTimedOut()?$q.reject():void 0)}}submitAndGoNext($INJECTABLE$,$scope,$q){return()=>this.form.$valid?$q.resolve():($scope.$broadcast("validation-msg_show"),$q.reject())}}module.exports=((providers,loader)=>(providers.$compile.component("fAuthorizeFswFapWizard",{controller:AuthorizeFswFapWizard,bindings:{serials:"<",registerOnly:"<",fortigate:"<"},require:{fSlideContainer:"?^"},templateUrl:__webpack_require__(947)}),loader.initModules([__webpack_require__(189)])))},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular){var BASE_POLICY_ADDRESSES={policy:{srcaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}],srcaddr6:[{name:"all",datasource:"firewall.address6","css-class":"ftnt-address-ipv6",q_origin_key:"all"}],dstaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}],dstaddr6:[{name:"all",datasource:"firewall.address6","css-class":"ftnt-address-ipv6",q_origin_key:"all"}]},"proxy-policy":{srcaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}],dstaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}],dstintf:[{name:"any",datasource:"system.interface","css-class":"fa-square-o",q_origin_key:"any"}]},"shaping-policy":{schedule:[{q_origin_key:"always",datasource:"firewall.schedule.recurring"}],service:[{q_origin_key:"ALL",datasource:"firewall.service.custom"}],status:"enable"},policy64:{srcaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}],dstaddr:[{name:"all",datasource:"firewall.address","css-class":"ftnt-address",q_origin_key:"all"}]}};BASE_POLICY_ADDRESSES["security-policy"]=BASE_POLICY_ADDRESSES.policy,BASE_POLICY_ADDRESSES["multicast-policy"]=BASE_POLICY_ADDRESSES.policy64;function PolicyInitService(){this.resetTypes()}return PolicyInitService.prototype.BASE_POLICY={srcintf:[{name:"any",datasource:"system.interface",q_origin_key:"any"}],dstintf:[{name:"any",datasource:"system.interface",q_origin_key:"any"}],schedule:{name:"always",datasource:"firewall.schedule.recurring","css-class":"ftnt-schedule-recurring",q_origin_key:"always"},service:[{name:"ALL",datasource:"firewall.service.custom","css-class":"ftnt-service",q_origin_key:"ALL"}]},PolicyInitService.prototype.BASE_POLICY_ADDRESSES=BASE_POLICY_ADDRESSES,PolicyInitService.prototype.BASE_IMPLICIT_POLICY={policyid:0,implicit:!0,action:"deny"},PolicyInitService.prototype.IMPLICIT_POLICY={policy:BASE_POLICY_ADDRESSES.policy,"proxy-policy":BASE_POLICY_ADDRESSES["proxy-policy"],"security-policy":BASE_POLICY_ADDRESSES["security-policy"],"shaping-policy":BASE_POLICY_ADDRESSES["shaping-policy"]},PolicyInitService.prototype.IMPLICIT_POLICY_LOG_PROPERTY={policy:"fwpolicy-implicit-log",policy6:"fwpolicy6-implicit-log","proxy-policy":"expolicy-implicit-log"},PolicyInitService.prototype.implicitPolicy=function(type){return angular.extend({},this.BASE_POLICY,this.BASE_IMPLICIT_POLICY,this.IMPLICIT_POLICY[type])},PolicyInitService.prototype.UTM_PROFILES={"av-profile":{source:{path:"antivirus",name:"profile"}},"dnsfilter-profile":{source:{path:"dnsfilter",name:"profile"}},"ips-sensor":{source:{path:"ips",name:"sensor"}},"webfilter-profile":{source:{path:"webfilter",name:"profile"}},"application-list":{source:{path:"application",name:"list"}},"emailfilter-profile":{source:{path:"emailfilter",name:"profile"}},"voip-profile":{source:{path:"voip",name:"profile"}},"icap-profile":{source:{path:"icap",name:"profile"}},"waf-profile":{source:{path:"waf",name:"profile"}},"ssl-ssh-profile":{source:{path:"firewall",name:"ssl-ssh-profile"}},"file-filter-profile":{source:{path:"file-filter",name:"profile"}}},PolicyInitService.prototype.setType=function(type){this.type=type||this.type||"policy"},PolicyInitService.prototype.setSubType=function(subType){this.subType=subType||this.subType||"standard"},PolicyInitService.prototype.resetTypes=function(){this.type="policy",this.subType="standard"},function(providers){providers.$provide.service("policyInit",PolicyInitService)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(32)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(formatters){var MONITOR_API_URI="/api/v2/monitor/";function PolicyStats($http,lang){this._$http=$http,this._lang=lang,this._toNotify=null,this._listeners={},this.map={},this._loadPromise=null}function getStatsUrl(type){return`${MONITOR_API_URI}firewall/${type}`}return PolicyStats.prototype.SUPPORTED={policy:!0,"security-policy":!0,"proxy-policy":!0,acl:!0,acl6:!0},PolicyStats.prototype.COMPARE_KEYS=["bytes","packets","active_sessions","hit_count","packets_dropped","software_bytes","software_packets","asic_bytes","asic_packets","nturbo_bytes","nturbo_packets"],PolicyStats.prototype.VALUE_KEYS=["first_used","last_used","oversize"],PolicyStats.prototype.USAGE_KEYS=["software_usage","asic_usage","nturbo_usage"],PolicyStats.prototype.KEYS=PolicyStats.prototype.COMPARE_KEYS.concat(PolicyStats.prototype.VALUE_KEYS,PolicyStats.prototype.USAGE_KEYS),PolicyStats.prototype.USAGE_KEY_MAPPING={software_usage:{value:"software_bytes",max:"bytes"},asic_usage:{value:"asic_bytes",max:"bytes"},nturbo_usage:{value:"nturbo_bytes",max:"bytes"}},PolicyStats.prototype.load=function(type){return this.type=type||this.type,this._loadPromise=this._$http.get(getStatsUrl(this.type)).then(function(response){var meta={};this.COMPARE_KEYS.forEach(function(key){meta["max_"+key]=0}),response.data.results.forEach(function(policy){this.map[policy.policyid]=policy,this.COMPARE_KEYS.forEach(function(key){policy[key]>meta["max_"+key]&&(meta["max_"+key]=policy[key])}),this.USAGE_KEYS.forEach(function(key){var keys=this.USAGE_KEY_MAPPING[key];policy[key]=formatters.percentage(policy[keys.value],policy[keys.max])}.bind(this))}.bind(this)),this.meta=meta,this.notifyListeners()}.bind(this)),this._loadPromise},PolicyStats.prototype.getStats=function(policyId){return this._loadPromise?this._loadPromise.then(()=>this.map[policyId]||{}):Promise.resolve({})},PolicyStats.prototype.getMax=function(selector){return this.meta["max_"+selector]},PolicyStats.prototype.addListener=function(policyID,listenerFn){this._listeners[policyID]=listenerFn},PolicyStats.prototype.clearListeners=function(){this._listeners={}},PolicyStats.prototype.clearCache=function(){this.map={}},PolicyStats.prototype.notifyListeners=function(){Object.keys(this._listeners).forEach(function(policyID){policyID=Number(policyID),this._toNotify&&!this._toNotify.has(policyID)||(0,this._listeners[policyID])()}.bind(this))},PolicyStats.prototype.update=function(){this._toNotify=null,this.load()},PolicyStats.prototype.clearCounters=function(entries){this._toNotify=new Set(entries.map(function(entry){return entry.cmdbModel.policyid})),this._$http.post(getStatsUrl(this.type)+"/clear_counters",{policy:entries.map(function(entry){return entry.cmdbModel.policyid})}).then(function(){this.load()}.bind(this))},PolicyStats.prototype.supportStatsType=function(policyType,statsType){const notSupported={"security-policy":new Set(["last_used","first_used","active_sessions","bytes","bytes_delta"])};return!notSupported[policyType]||!notSupported[policyType].has(statsType)},function(providers){providers.$provide.service("policyStats",PolicyStats)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function PolicyVirtualWirePair($http,persistentStorage,policyInit){this._$http=$http,this._persistentStorage=persistentStorage,this._policyInit=policyInit,this._map={},this.current=null,this.all=[],this.currentInterfaces=[],this.currentInterfacesMap={}}return PolicyVirtualWirePair.prototype.isVirtualWirePolicy=function(){return"virtual-wire"===this._policyInit.subType},PolicyVirtualWirePair.prototype.init=function(){return this._key="policyVirtualWirePair-"+this._policyInit.type+this._policyInit.subType,this._$http.get("/api/v2/cmdb/system/virtual-wire-pair").then(function(response){var current,map={},all=[],results=response.data.results;results.forEach(function(entry){map[entry.name]=entry,all.push(entry.name)}),this._map=map,this.all=all,current=this._persistentStorage.get(this._key),this._validVWP(current)?this.setCurrent(current,!0):this.setCurrent(results[0].name,!0)}.bind(this))},PolicyVirtualWirePair.prototype.setCurrent=function(value,dontPersist){var vwp,interfaces,interfaceMap;if(!this._validVWP(value))throw new Error("Invalid VWP value");dontPersist||this._persistentStorage.put(this._key,value),this.current=value,vwp=this._map[this.current],interfaces=[],interfaceMap={},vwp.member.forEach(function(member){var name=member["interface-name"];interfaces.push(name),interfaceMap[name]=!0}),this.currentInterfaces=interfaces,this.currentInterfacesMap=interfaceMap},PolicyVirtualWirePair.prototype._validVWP=function(value){return!!this._map[value]},PolicyVirtualWirePair.prototype.isBiDirection=function(policy){return Array.isArray(policy.srcintf)&&2===policy.srcintf.length&&Array.isArray(policy.dstintf)&&2===policy.dstintf.length},PolicyVirtualWirePair.prototype.SUPPORTED={policy:!0,"security-policy":!0},function(providers){providers.$provide.service("policyVWP",PolicyVirtualWirePair)}}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(0),__webpack_require__(30),__webpack_require__(8),__webpack_require__(54)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,BUILD,fLog,ftnt_shared,select_setup){const Omniselect=ftnt_shared.Omniselect;let state,policyVWP,$q,$http,policyInit,utmProfileConfig;const DEFAULT_ADDR_KEY_IPV4_SRC="srcaddr",DEFAULT_ADDR_KEY_IPV4_DST="dstaddr",DEFAULT_ADDR_KEY_IPV6_SRC="srcaddr6",DEFAULT_ADDR_KEY_IPV6_DST="dstaddr6";var VALUE_SPLIT_MAP={source:{"firewall.address":{value:"srcaddr"},"firewall.address6":{value:"srcaddr"},"firewall.addrgrp":{value:"srcaddr"},"firewall.addrgrp6":{value:"srcaddr"},"firewall.internet-service-name":{value:"internet-service-src-name"},"firewall.internet-service-custom":{value:"internet-service-src-custom"},"firewall.internet-service-custom-group":{value:"internet-service-src-custom-group"},"firewall.internet-service-group":{value:"internet-service-src-group"},"system.external-resource.address":{value:"srcaddr"},"system.external-resource.address6":{value:"srcaddr"},"user.group":{value:"groups"},"user.local":{value:"users"},"user.adgrp":{value:"fsso-groups"}},destination:{"firewall.address":{value:"dstaddr"},"firewall.addrgrp":{value:"dstaddr"},"firewall.internet-service-name":{value:"internet-service-name"},"firewall.internet-service-custom":{value:"internet-service-custom"},"firewall.internet-service-custom-group":{value:"internet-service-custom-group"},"firewall.internet-service-group":{value:"internet-service-group"},"firewall.vip":{value:"dstaddr"},"firewall.vipgrp":{value:"dstaddr"},"system.external-resource.address":{value:"dstaddr"},"system.external-resource.address6":{value:"dstaddr"}},profile:{"firewall.profile-group":{value:"profile-group"},"antivirus.profile":{value:"av-profile"},"webfilter.profile":{value:"webfilter-profile"},"dnsfilter.profile":{value:"dnsfilter-profile"},"application.list":{value:"application-list"},"ips.sensor":{value:"ips-sensor"},"emailfilter.profile":{value:"emailfilter-profile"},"voip.profile":{value:"voip-profile"},"icap.profile":{value:"icap-profile"},"waf.profile":{value:"waf-profile"},"firewall.ssl-ssh-profile":{value:"ssl-ssh-profile"},"file-filter.profile":{value:"file-filter-profile"}},"proxy-source":{"firewall.address":{value:"srcaddr"},"firewall.addrgrp":{value:"srcaddr"},"firewall.proxy-address":{value:"srcaddr"},"firewall.proxy-addrgrp":{value:"srcaddr"},"system.external-resource.address":{value:"srcaddr"},"firewall.address6":{value:"srcaddr6"},"firewall.addrgrp6":{value:"srcaddr6"},"user.group":{value:"groups"},"user.local":{value:"users"},"system.external-resource.address6":{value:"srcaddr6"}},"proxy-destination":{"firewall.address":{value:"dstaddr"},"firewall.address6":{value:"dstaddr6"},"firewall.addrgrp":{value:"dstaddr"},"firewall.addrgrp6":{value:"dstaddr6"},"firewall.internet-service-name":{value:"internet-service-name"},"firewall.internet-service-custom":{value:"internet-service-custom"},"firewall.internet-service-custom-group":{value:"internet-service-custom-group"},"firewall.internet-service-group":{value:"internet-service-group"},"firewall.proxy-address":{value:"dstaddr"},"firewall.proxy-addrgrp":{value:"dstaddr"},"firewall.vip":{value:"dstaddr"},"firewall.vip46":{value:"dstaddr"},"firewall.vip6":{value:"dstaddr6"},"firewall.vip64":{value:"dstaddr6"},"firewall.vipgrp":{value:"dstaddr"},"firewall.vipgrp46":{value:"dstaddr"},"firewall.vipgrp6":{value:"dstaddr6"},"firewall.vipgrp64":{value:"dstaddr6"},"system.external-resource.address":{value:"dstaddr"},"system.external-resource.address6":{value:"dstaddr6"}},applications:{"application.name":{value:"application"},"application.custom":{value:"application"},"application.category":{value:"app-category"},"application.group":{value:"app-group"}},"consolidated-srcaddr":{"firewall.address":{value:"srcaddr"},"firewall.addrgrp":{value:"srcaddr"},"system.external-resource.address":{value:"srcaddr"},"firewall.address6":{value:"srcaddr6"},"firewall.addrgrp6":{value:"srcaddr6"},"system.external-resource.address6":{value:"srcaddr6"}},"consolidated-dstaddr":{"firewall.address":{value:"dstaddr"},"firewall.addrgrp":{value:"dstaddr"},"firewall.vip":{value:"dstaddr"},"firewall.vipgrp":{value:"dstaddr"},"system.external-resource.address":{value:"dstaddr"},"firewall.address6":{value:"dstaddr6"},"firewall.addrgrp6":{value:"dstaddr6"},"firewall.vip6":{value:"dstaddr6"},"firewall.vipgrp6":{value:"dstaddr6"},"system.external-resource.address6":{value:"dstaddr6"}},"consolidated-poolname":{"firewall.ippool":{value:"poolname"},"firewall.ippool6":{value:"poolname6"}},"security-srcaddr":{"firewall.address":{value:"srcaddr"},"firewall.addrgrp":{value:"srcaddr"},"system.external-resource.address":{value:"srcaddr"},"firewall.address6":{value:"srcaddr6"},"firewall.addrgrp6":{value:"srcaddr6"},"system.external-resource.address6":{value:"srcaddr6"}},"security-dstaddr":{"firewall.address":{value:"dstaddr"},"firewall.addrgrp":{value:"dstaddr"},"firewall.vip":{value:"dstaddr"},"firewall.vipgrp":{value:"dstaddr"},"system.external-resource.address":{value:"dstaddr"},"firewall.address6":{value:"dstaddr6"},"firewall.addrgrp6":{value:"dstaddr6"},"firewall.vip6":{value:"dstaddr6"},"firewall.vipgrp6":{value:"dstaddr6"},"system.external-resource.address6":{value:"dstaddr6"}},"shaping-source":{"firewall.address":{value:"srcaddr"},"firewall.address6":{value:"srcaddr6"},"firewall.addrgrp":{value:"srcaddr"},"firewall.addrgrp6":{value:"srcaddr6"},"firewall.internet-service-name":{value:"internet-service-src-name"},"firewall.internet-service-custom":{value:"internet-service-src-custom"},"firewall.internet-service-custom-group":{value:"internet-service-src-custom-group"},"firewall.internet-service-group":{value:"internet-service-src-group"},"user.group":{value:"groups"},"user.local":{value:"users"}},"shaping-destination":{"firewall.address":{value:"dstaddr"},"firewall.address6":{value:"dstaddr6"},"firewall.addrgrp":{value:"dstaddr"},"firewall.addrgrp6":{value:"dstaddr6"},"firewall.internet-service-name":{value:"internet-service-name"},"firewall.internet-service-custom":{value:"internet-service-custom"},"firewall.internet-service-custom-group":{value:"internet-service-custom-group"},"firewall.internet-service-group":{value:"internet-service-group"}}};VALUE_SPLIT_MAP["consolidated-source"]=Object.assign({"firewall.internet-service-name":{value:"internet-service-src-name"},"firewall.internet-service-custom":{value:"internet-service-src-custom"},"firewall.internet-service-custom-group":{value:"internet-service-src-custom-group"},"firewall.internet-service-group":{value:"internet-service-src-group"},"user.group":{value:"groups"},"user.local":{value:"users"},"user.adgrp":{value:"fsso-groups"}},VALUE_SPLIT_MAP["consolidated-srcaddr"]),VALUE_SPLIT_MAP["consolidated-destination"]=Object.assign({"firewall.internet-service-name":{value:"internet-service-name"},"firewall.internet-service-custom":{value:"internet-service-custom"},"firewall.internet-service-custom-group":{value:"internet-service-custom-group"},"firewall.internet-service-group":{value:"internet-service-group"}},VALUE_SPLIT_MAP["consolidated-dstaddr"]),VALUE_SPLIT_MAP["security-source"]=Object.assign({"firewall.internet-service-name":{value:"internet-service-src-name"},"firewall.internet-service-custom":{value:"internet-service-src-custom"},"firewall.internet-service-custom-group":{value:"internet-service-src-custom-group"},"firewall.internet-service-group":{value:"internet-service-src-group"},"user.group":{value:"groups"},"user.local":{value:"users"},"user.adgrp":{value:"fsso-groups"}},VALUE_SPLIT_MAP["security-srcaddr"]),VALUE_SPLIT_MAP["security-destination"]=Object.assign({"firewall.internet-service-name":{value:"internet-service-name"},"firewall.internet-service-custom":{value:"internet-service-custom"},"firewall.internet-service-custom-group":{value:"internet-service-custom-group"},"firewall.internet-service-group":{value:"internet-service-group"}},VALUE_SPLIT_MAP["security-dstaddr"]);var SNIFFER_UTM_PROFILE="sniffer-profile",GLOBAL_SNIFFER_UTM_PROFILE="g-sniffer-profile",GLOBAL_PROFILE_SELECTOR={"av-profile":!0,"application-list":!0,"ips-sensor":!0,"webfilter-profile":!0},ONE_ADDRESS_MESSAGE=$.getInfo("One address, address group or external resource must be selected"),ONE_USER_MESSAGE=$.getInfo("One user or group is required");const FSAE_GUEST_GROUP_NAME=BUILD.SYMBOLS.FSAE_GUEST_GROUP_NAME;var cmdbGet=function(path,name,mkey){var uri="/api/v2/cmdb/"+path+"/"+name+(mkey?"/"+mkey:"")+"?with_meta=1&datasource=1";return $http.get(uri).then(function(result){return result.data.results},function(err){fLog.info("Failed to fetch "+path+"."+name+"."+mkey+" for: "+err.message)})},mapArray=function(entries,key){return entries.reduce(function(map,entry){return map[entry[key]]=entry,map},{})},required=function(selected){if(!selected||Array.isArray(selected)&&!selected.length)return $.getInfo("One entry must be selected")},createOneOfRequired=function(types,message){return function(selected){if(!selected.some(function(entry){var type=entry.datasource||entry.q_path+"."+entry.q_name;return types.indexOf(type)>=0}))return message}};const noSslInspection=policy=>"proxy-policy"===policyInit.type&&"ftp"===policy.proxy||"security-policy"===policyInit.type,validateProfiles=function(policy){return function(entries){let message,messages=[];if(entries.length?(message=function(selected,policy){if(noSslInspection(policy))return;return createOneOfRequired(["firewall.ssl-ssh-profile"],$.getInfo("SSL/SSH Inspection Profile must be selected"))(selected)}(entries,policy))&&messages.push(message):noSslInspection(policy)||messages.push($.getInfo("SSL/SSH Inspection Profile must be selected")),messages.length)return messages.join(" ")}},ADDR_DATASOURCE_MAPPING={"firewall.address":"ipv4","firewall.addrgrp":"ipv4","firewall.vip":"ipv4","firewall.vipgrp":"ipv4","firewall.vip46":"ipv4","firewall.vipgrp46":"ipv4","system.external-resource.address":"ipv4","firewall.internet-service-name":"ipv4","firewall.internet-service-custom":"ipv4","firewall.internet-service-custom-group":"ipv4","firewall.internet-service-group":"ipv4","firewall.address6":"ipv6","firewall.addrgrp6":"ipv6","firewall.vip6":"ipv6","firewall.vipgrp6":"ipv6","system.external-resource.address6":"ipv6"},validateVIPMixedAddr=function(selected,meta){const requiredError=required(selected);if(requiredError)return requiredError;if(Array.isArray(selected)){let addrCount={ipv4:0,ipv6:0},vipCount={ipv4:0,ipv6:0};const VIP_TYPES=["firewall.vip","firewall.vipgrp","firewall.vip6","firewall.vipgrp6","firewall.vip46","firewall.vipgrp46","firewall.vip64","firewall.vipgrp64"];if(selected.forEach(entry=>{const datasource=entry.datasource||`${entry.q_path}.${entry.q_name}`;let ipVersion=ADDR_DATASOURCE_MAPPING[datasource];(datasource.includes("vip64")||datasource.includes("vipgrp64"))&&(ipVersion={"proxy-policy":"ipv6",policy64:"ipv4"}[meta.policyType]||ipVersion),addrCount[ipVersion]++,VIP_TYPES.includes(datasource)&&vipCount[ipVersion]++}),vipCount.ipv4&&vipCount.ipv4!==addrCount.ipv4||vipCount.ipv6&&vipCount.ipv6!==addrCount.ipv6)return $.getInfo("Addresses/groups cannot be mixed with Virtual IPs")}};var validateAddressInternetServiceDisjoint=function(selected,meta,dir){var hasAddress=!1,hasInternetService=!1;if(Array.isArray(selected)){var addressSources=["firewall.address","firewall.addrgrp","firewall.proxy-address","firewall.proxy-addrgrp","firewall.vip","firewall.vipgrp","firewall.vip46","firewall.vipgrp46","firewall.address6","firewall.addgrp6","firewall.vip6","firewall.vipgrp6","firewall.vip64","firewall.vipgrp64","system.external-resource.address","system.external-resource.address6"],internetServiceSources=["firewall.internet-service-custom-group","firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-group"];hasAddress=selected.some(function(entry){var datasource=entry.datasource||entry.q_path+"."+entry.q_name;return addressSources.includes(datasource)}),hasInternetService=selected.some(function(entry){var datasource=entry.datasource||entry.q_path+"."+entry.q_name;return internetServiceSources.includes(datasource)})}if(hasAddress){var vipMixedAddressError=validateVIPMixedAddr(selected,meta);if(vipMixedAddressError)return vipMixedAddressError}if("source"===dir){if("enable"===meta.policy["internet-service-src"]&&hasAddress)return $.getInfo("This policy has Internet Service enabled for the source. Internet Services must be used.");if("disable"===meta.policy["internet-service-src"]&&hasInternetService)return $.getInfo("This policy has Internet Service disabled for the source. Internet Services cannot be used.")}else if("destination"===dir){if("enable"===meta.policy["internet-service"]&&hasAddress)return $.getInfo("This policy has Internet Service enabled for the destination. Internet Services must be used.");if("disable"===meta.policy["internet-service"]&&hasInternetService)return $.getInfo("This policy has Internet Service disabled for the destination. Internet Services cannot be used.")}};const isSelected=(entry,meta,selector)=>{let selected;const originals=meta.policy.$original[selector];return selected=Array.isArray(originals)?originals.some(function(original){return entry.q_origin_key===original.q_origin_key}):entry.q_origin_key===(originals&&originals.q_origin_key)},guiIPv6Enabled=()=>state.featureEnabled("gui-ipv6"),visibleInGui=(entry,ipv6)=>(!ipv6||guiIPv6Enabled())&&"disable"!==entry.visibility,hidden=function(entry,meta,selector,ipv6=!1){return!isSelected(entry,meta,selector)&&!visibleInGui(entry,ipv6)},addressContainTypes=function(addr,types){return(addr.q_name||addr.datasource).includes("address")?types.includes(addr.type):(addr.$flattenedAddresses||[]).some(function(memberAddr){return types.includes(memberAddr.type)})};var associateWithInterface=function(entry,meta,relatedInterfaceKey){var associated,related,isAssociated=!0;return entry["associated-interface"]&&relatedInterfaceKey&&(associated=entry["associated-interface"],(related=meta.policy[relatedInterfaceKey])&&!Array.isArray(related)&&(related=[related]),related&&1===related.length&&related[0].name===associated.name||(isAssociated=!1),"bi-direction"===meta.policy.virtualWireDirection&&related[0].name===associated.name&&(isAssociated=!1)),isAssociated};const filterInternetService=(entry,direction)=>{const entryDirection=entry["internet-service-id"]&&entry["internet-service-id"].direction;return["both",direction].includes(entryDirection)},filterInternetServiceGroup=(entry,direction)=>{return direction={src:"source",dst:"destination"}[direction]||direction,Array.isArray(entry.member)&&entry.member.length&&["both",direction].includes(entry.direction)},filterProxyPolicyInternetServiceCustom=isdbEntry=>{return Array.isArray(isdbEntry.entry)&&isdbEntry.entry.length&&isdbEntry.entry.some(_entry=>6===_entry.protocol)},getExcludedAddressTypes=(meta,selector)=>{let excludedTypes=[];return((meta,selector)=>{return!!meta.virtualWirePolicy||!!["policy"].includes(meta.policyType)&&("dstaddr"!==selector||"NAT"!==state.getOperationMode())})(meta,selector)||excludedTypes.push("mac"),excludedTypes},filterFabricDevice=entry=>{return"firewall.addrgrp"===(entry.datasource||`${entry.q_path}.${entry.q_name}`)?entry.$flattenedAddresses.every(_addr=>"FABRIC_DEVICE"!==_addr.q_origin_key):"FABRIC_DEVICE"!==entry.q_origin_key};var filterIPv4Address=function(entry,meta,relatedInterfaceKey,selector,skipTypeCheck=!1){return!(hidden(entry,meta,selector)||!skipTypeCheck&&addressContainTypes(entry,getExcludedAddressTypes(meta,selector))||!associateWithInterface(entry,meta,relatedInterfaceKey))},filterNatIPv4Address=function(entry,meta,relatedInterfaceKey,selector){return filterIPv4Address(entry,meta,relatedInterfaceKey,selector)},filterUserGroup=function(entry,meta){return"ipsec"!==meta.policy.action},filterGroup=function(entry,meta){var groupType,srcIntf=meta.policy.srcintf;return!!filterUserGroup(0,meta)&&(!srcIntf||1!==srcIntf.length||srcIntf[0].name!==meta.sslVPNInterface||(null==(groupType=entry["group-type"])&&null==entry.member||"firewall"===groupType||"fsso-service"===groupType||entry.name===FSAE_GUEST_GROUP_NAME))};const filterIPv6Address=(entry,meta,selector)=>!hidden(entry,meta,selector,!0),filterAddressGroup=(entry,meta,selector,skipTypeCheck=!1,ipv6=!1)=>!(hidden(entry,meta,selector,ipv6)||!skipTypeCheck&&addressContainTypes(entry,getExcludedAddressTypes(meta,selector))),nonDialogIPVersionNotMatched=(meta,selectors)=>(Array.isArray(selectors)||(selectors=[selectors]),!meta.isDialog&&selectors.every(selector=>!Array.isArray(meta.policy.$original[selector])||0===meta.policy.$original[selector].length)),filterVirtualServers=(entry,meta,selector)=>{if(!((entry.q_class||entry["css-class"]).indexOf("load-balance")>=0))return!0;const originals=meta.policy.$original[selector];return Array.isArray(originals)&&originals.some(original=>original.q_origin_key===entry.name)||state.featureEnabled("gui-load-balance")&&"proxy"===meta.policy["inspection-mode"]},filterConsolidatedIPv6Address=(entry,meta,thisSelector,theOtherSelector)=>!!isSelected(entry,meta,thisSelector)||!meta.policy["reputation-minimum"]&&(!!guiIPv6Enabled()&&(visibleInGui(entry,!0)&&!nonDialogIPVersionNotMatched(meta,theOtherSelector))),filterConsolidatedIPv6AddressGroup=(entry,meta,thisSelector,theOtherSelector)=>filterConsolidatedIPv6Address(entry,meta,thisSelector,theOtherSelector);var filterAddressGroupIntf=function(entry,meta,relatedInterfaceKey,selector){var groupAssociateWithInterface=(entry.$flattenedAddresses||[]).every(addrMember=>associateWithInterface(addrMember,meta,relatedInterfaceKey));return!(!filterAddressGroup(entry,meta,selector)||!groupAssociateWithInterface)};const isWebProxyPolicy=function(policy){return"explicit-web"===policy.proxy||"transparent-web"===policy.proxy},proxyPolicyIPv4DstAddrTypeCheck=entry=>!addressContainTypes(entry,["mac"]),filterProxyPolicyIPv4DstAddress=function(entry,meta){return!!proxyPolicyIPv4DstAddrTypeCheck(entry)&&(filterFabricDevice(entry)&&filterIPv4Address(entry,meta,"dstintf","dstaddr",!0))},filterProxyPolicyIPv4DstAddressGroup=function(entry,meta){return!!proxyPolicyIPv4DstAddrTypeCheck(entry)&&(filterFabricDevice(entry)&&filterAddressGroup(entry,meta,"dstaddr",!0))},proxyPolicyIPv6Enabled=(meta,ipv6ExplicitProxy)=>"transparent-web"===meta.policy.proxy||"explicit-web"===meta.policy.proxy&&ipv6ExplicitProxy,filterProxyPolicyIPv6Address=function(entry,meta,ipv6ExplicitProxy,selector){return!!isSelected(entry,meta,selector)||proxyPolicyIPv6Enabled(meta,ipv6ExplicitProxy)&&visibleInGui(entry,!0)},filterProxyPolicyIPv6AddressGroup=function(entry,meta,ipv6ExplicitProxy,selector){return filterProxyPolicyIPv6Address(entry,meta,ipv6ExplicitProxy,selector)},filterPolicy64DstAddress=function(address){return["iprange","ipmask","interface-subnet"].includes(address.type)},filterProxyPolicyExternalResource=(entry,meta,selector,ipv6ExplicitProxy,ipv6=!1)=>!!isSelected(entry,meta,selector)||"enable"===entry.status&&(!ipv6||proxyPolicyIPv6Enabled(meta,ipv6ExplicitProxy))&&visibleInGui(entry,ipv6),isAddressNegated=function(meta,selector){return selector.indexOf("-negate")<0&&(selector=selector.includes("src")?"srcaddr-negate":"dstaddr-negate"),"enable"===meta.policy[selector]};const filterProxyPolicyVIP=function(entry,meta,ipv6=!1){if(hidden(entry,meta,ipv6?"dstaddr6":"dstaddr",ipv6)||isAddressNegated(meta,"dstaddr"))return!1;const datasource=entry.q_name||entry.datasource;if(!function(entry){return(entry.q_name||entry.datasource).indexOf("vipgrp")>=0}(entry))if(datasource.includes("vip46")||datasource.includes("vip64")){if("disable"!==entry.portforward&&"any"!==entry.protocol&&"tcp"!==entry.protocol)return!1}else if(datasource.includes("vip6")){if("static-nat"!==entry.type||"disable"!==entry.portforward&&"any"!==entry.protocol&&"tcp"!==entry.protocol)return!1}else if("static-nat"!==entry.type||"disable"!==entry.portforward&&("1-to-1"!==entry["portmapping-type"]||"any"!==entry.protocol&&"tcp"!==entry.protocol))return!1;return!0},filterProxyPolicyIPv6VIP=function(entry,meta,ipv6ExplicitProxy){return!!isSelected(entry,meta,"dstaddr6")||proxyPolicyIPv6Enabled(meta,ipv6ExplicitProxy)&&filterProxyPolicyVIP(entry,meta,!0)},filterConsolidatedVIP4=(entry,meta,params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST})=>(Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST},params),!nonDialogIPVersionNotMatched(meta,params.ipv4SourceAddrKey)&&((entry,meta,selector)=>{selector=selector||"dstaddr";let valid=!0;const restricted=(entry.extintf||entry.interface||{}).name||"any";return!isAddressNegated(meta,selector)&&(state.centralNatEnabled()?valid=!1:"any"!==restricted&&Array.isArray(meta.policy.srcintf)&&(valid=meta.policy.srcintf.some(function(intf){return intf.is_zone||intf.is_sdwan_zone?intf.members.some(function(member){return member===restricted}):intf.name===restricted})),valid&&!filterVirtualServers(entry,meta,selector)&&(valid=!1),valid)})(entry,meta,params.ipv4DestAddrKey)),filterConsolidatedVIP6=(entry,meta,params={ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params);const selector=params.ipv6DestAddrKey;return!(!filterConsolidatedIPv6Address(entry,meta,selector,params.ipv6SourceAddrKey)||!filterVirtualServers(entry,meta,selector)||isAddressNegated(meta,selector))&&(!meta.policy.srcintf||!(Array.isArray(meta.policy.srcintf)?meta.policy.srcintf:[meta.policy.srcintf]).some(intf=>intf.is_sslvpn))};const filterProxyAddress=function(entry,meta,selector){if(!isWebProxyPolicy(meta.policy)||hidden(entry,meta,selector))return!1;const validDstaddrType=["host-regex","url","category","dst-advanced"];return!entry.type||("srcaddr"===selector?!validDstaddrType.includes(entry.type):validDstaddrType.includes(entry.type))},filterProxyAddressGroup=function(entry,meta,selector){return!(!isWebProxyPolicy(meta.policy)||hidden(entry,meta,selector))&&(!entry.type||("srcaddr"===selector?"src"===entry.type:"dst"===entry.type))};const skipProfileFeatureSetCheck=(entry,meta,selector)=>{const originalPolicy=meta.policy.$original;return utmProfileConfig.skipProfileFeatureSetCheck({isNgfwPolicyMode:state.isNgfwPolicyMode(),policyType:meta.policyType,policyInspectionMode:meta.policy["inspection-mode"]})||utmProfileConfig.isPreselectedProfileInFlowPolicy({policyInspectionMode:meta.policy["inspection-mode"],originalPolicyInspectionMode:originalPolicy["inspection-mode"],profile:entry,originalProfile:originalPolicy[selector]})},filterUTMProfileByFeatureSet=(entry,meta,selector)=>!!skipProfileFeatureSetCheck(entry,meta,selector)||(utmProfileConfig.isUtmProfileWithFeatureSet(selector)?"flow"===entry["feature-set"]:utmProfileConfig.filterUnsupportedProfile({profile:entry,profileType:selector,policyInspectionMode:meta.policy["inspection-mode"]})),utmProfileSelected=policy=>Object.keys(policyInit.UTM_PROFILES).some(key=>"ssl-ssh-profile"!==key&&!!policy[key]),filterUTMProfile=function(entry,meta,selector){const NO_DEFAULT_PROFILES=["file-filter-profile"],original=meta.policy.$original[selector];if("group"===meta.policy["profile-type"]&&!((entry,meta,selector)=>{if("profile-group"!==selector||skipProfileFeatureSetCheck(entry,meta,selector))return!0;let result=!["waf-profile","icap-profile","ssh-filter-profile"].some(key=>entry[key]);return result?!utmProfileConfig.profileGroupHasProxyProfiles(entry,!0):result})(entry,meta,selector))return!1;if(!filterUTMProfileByFeatureSet(entry,meta,selector))return!1;if(selector&&original&&entry.name===original.q_origin_key)return!0;if(!function(entry,meta,selector){return"proxy-policy"!==meta.policyType||"waf-profile"!==selector||"enable"!==entry.external}(entry,meta,selector))return!1;if(!state.featureEnabled("gui-multiple-utm-profiles")){if(NO_DEFAULT_PROFILES.includes(selector))return filterUTMProfileByFeatureSet(entry,meta,selector);let defaultProfiles=["default"];if(GLOBAL_PROFILE_SELECTOR[selector]&&state.vdom_mode)defaultProfiles=["g-default"];else if("ssl-ssh-profile"===entry.q_name){const CERTIFICATE_INSPECTION="certificate-inspection";defaultProfiles=utmProfileSelected(meta.policy)?[CERTIFICATE_INSPECTION]:["no-inspection",CERTIFICATE_INSPECTION]}return defaultProfiles.includes(entry.name)}return("ssl-ssh-profile"!==entry.q_name||!utmProfileSelected(meta.policy)||"no-inspection"!==entry.name)&&![GLOBAL_SNIFFER_UTM_PROFILE,SNIFFER_UTM_PROFILE].includes(entry.name)};var utmGenericFilter=function(entry,meta){var path=entry.datasource||entry.q_path+"."+entry.q_name,selector=VALUE_SPLIT_MAP.profile[path]&&VALUE_SPLIT_MAP.profile[path].value;return filterUTMProfile(entry,meta,selector)},filterInterface=function(entry,meta,target){target=target||"srcintf";var originalInterface=meta.policy.$original[target];if(Array.isArray(originalInterface)?originalInterface.some(function(intf){return entry.q_origin_key===intf.q_origin_key}):entry.q_origin_key===originalInterface.q_origin_key)return!0;if(!entry.valid_in_policy||entry.is_zone_member||entry.is_switchctl_interface_mode)return!1;if(["policy","proxy-policy","security-policy"].includes(meta.policyType)&&entry.is_virtual_wan_link_member)return!1;if("policy"===meta.policyType){const srcintf=Array.isArray(meta.policy.srcintf)?meta.policy.srcintf:[meta.policy.srcintf],dstintf=Array.isArray(meta.policy.dstintf)?meta.policy.dstintf:[meta.policy.dstintf];if("srcintf"===target&&entry.is_sslvpn&&dstintf&&dstintf.some(intf=>intf.is_sdwan_zone)||"dstintf"===target&&entry.is_sdwan_zone&&srcintf&&srcintf.some(intf=>intf.is_sslvpn))return!1}return!(!meta.virtualWirePolicy&&entry.is_virtual_wire_pair_member)&&!(!state.featureEnabled("gui-multiple-interface-policy")&&"any"===entry.name&&!meta.policy.implicit)};const filterDestinationInterface=function(entry,meta){return filterInterface(entry,meta,"dstintf")},filterShapingPolicyInterface=function(entry){return entry.valid_in_policy&&!entry.is_zone_member&&!entry.is_sdwan_zone||entry.is_virtual_wan_link},filterNatPolicySrcintf=(entry,meta)=>!entry.is_sdwan_zone&&filterInterface(entry,meta),filterNatPolicyDstintf=(entry,meta)=>!entry.is_sdwan_zone&&filterDestinationInterface(entry,meta),filterDosPolicyInterface=function(entry,meta,target){target=target||"interface";var originalInterface=meta.policy.$original[target];return!!(Array.isArray(originalInterface)?originalInterface.some(function(intf){return entry.q_origin_key===intf.q_origin_key}):entry.q_origin_key===originalInterface.q_origin_key)||(entry.valid_in_policy||entry.is_onearm_sniffer)&&!entry.is_zone_member&&!entry.is_sdwan_zone&&"any"!==entry.label&&!entry.is_switchctl_interface_mode},filterAclPolicyInterface=function(entry){return entry.is_available_for_acl},filterCentralSnatPolicyIface=function(entry){return entry.valid_in_policy&&!entry.is_zone_member&&!entry.is_virtual_wire_pair_member&&!entry.is_sdwan_zone},filterCentralSnatPolicyAddr=function(selector){const isNatMode=state.getOperationMode()===state.OPERATION_MODE.NAT;let excludedTypes=[];return"dst"===selector&&isNatMode&&excludedTypes.push("mac"),function(entry){return"enable"===entry.visibility&&("addrgrp"===entry.q_name?(addrTypes=excludedTypes,!(entry.$flattenedAddresses||[]).some(memberAddr=>addrTypes.includes(memberAddr.type))):!excludedTypes.includes(entry.type));var addrTypes}};var filterMulticastInterface=function(entry,meta,target){var counterpart="srcintf"===(target=target||"srcintf")?"dstintf":"srcintf",originalInterface=meta.policy.$original[target];return!!(Array.isArray(originalInterface)?originalInterface.some(function(intf){return entry.q_origin_key===intf.q_origin_key}):entry.q_origin_key===originalInterface.q_origin_key)||!(!entry.valid_in_policy||entry.is_modem_hidden||entry.used_by_composite||entry.is_zone_member||entry.is_switchctl_interface_mode)&&(!entry.is_sdwan_zone&&(meta.policy[counterpart].name!==entry.name||"any"===entry.name))};const filterProxyPolicyInterface=function(entry,meta){return state.getOperationMode()===state.OPERATION_MODE.TRANSPARENT?"any"===entry.name:filterDestinationInterface(entry,meta)};var filterProxyPolicyWebService=function(entry,meta){return(null==entry.visibility||!hidden(entry,meta,"service"))&&"disable"!==entry.proxy};const applicationsExtraData=async function(){const applications=await Omniselect.getSourceData("application.name"),customApplications=await Omniselect.getSourceData("application.custom");var result={categoryIdsWithApps:{}};return applications.forEach(app=>result.categoryIdsWithApps[app.category]=!0),customApplications.forEach(app=>result.categoryIdsWithApps[app.category]=!0),result};var filterApplication=function(entry,meta){return!meta.policy["url-category"].length||entry.technology.indexOf("Browser-Based")>=0};const filterNgfwApplication=function(entry,meta){return!!filterApplication(entry,meta)&&!entry.isCloudApp};var filterApplicationCategory=function(entry,meta,extraData){return extraData.categoryIdsWithApps[entry.id]};const filterConsolidatedIPPool=(entry,meta,selector,addrSelector,consolidatedDstAddrKey="consolidated-destination")=>{const originals=meta.policy.$original[selector];let addresses=meta.policy[consolidatedDstAddrKey]||meta.policy[addrSelector];"enable"!==meta.policy["internet-service"]||addresses.length||(addresses=meta.policy["internet-service-id"].concat(meta.policy["internet-service-group"],meta.policy["internet-service-custom"],meta.policy["internet-service-custom-group"]));const addrDatasourceSet=new Set("poolname"===selector?["firewall.address","firewall.addrgrp","firewall.vip","firewall.vipgrp","system.external-resource.address","firewall.internet-service-name","firewall.internet-service-group","firewall.internet-service-custom","firewall.internet-service-custom-group"]:["firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6","system.external-resource.address6","firewall.internet-service-name","firewall.internet-service-group","firewall.internet-service-custom","firewall.internet-service-custom-group"]);return!(!Array.isArray(originals)||!originals.some(original=>entry.q_origin_key===original.q_origin_key))||!("poolname"===selector&&!function(entry,meta){return"disable"===meta.policy.fixedport||"fixed-port-range"!==entry.type&&"port-block-allocation"!==entry.type}(entry,meta))&&(Array.isArray(addresses)&&addresses.length&&addresses.some(addr=>{const addrDatasource=addr.datasource||`${addr.q_path}.${addr.q_name}`;return addrDatasourceSet.has(addrDatasource)}))},validateConsolidatedIPVersion=(selected,meta,direction,params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{params=Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params);const collectionAddrSet=(versions,addr)=>{const datasource=addr.datasource||`${addr.q_path}.${addr.q_name}`;return datasource&&ADDR_DATASOURCE_MAPPING[datasource]&&versions.add(ADDR_DATASOURCE_MAPPING[datasource]),versions};if(!((setA,setB)=>{if(setA.size!==setB.size)return!1;for(let item of setA)if(!setB.has(item))return!1;return!0})(selected.reduce(collectionAddrSet,new Set),("source"===direction?[params.ipv4DestAddrKey,params.ipv6DestAddrKey,"internet-service-name","internet-service-custom","internet-service-custom-group","internet-service-group"]:[params.ipv4SourceAddrKey,params.ipv6SourceAddrKey,"internet-service-src-name","internet-service-src-custom","internet-service-src-custom-group","internet-service-src-group"]).reduce((entries,selector)=>{const addrs=meta.policy[selector];return addrs&&(Array.isArray(addrs)?entries=entries.concat(addrs):entries.push(addrs)),entries},[]).reduce(collectionAddrSet,new Set)))return $.getInfo("Firewall::consolidatedPolicy::error.ipVersionMatch")},filterConsolidatedExternalResource=(entry,meta,thisSelector,theOtherSelector,ipv6=!1)=>(!ipv6||!meta.policy["reputation-minimum"])&&(!!isSelected(entry,meta,thisSelector)||"enable"===entry.status&&visibleInGui(entry,ipv6)&&!nonDialogIPVersionNotMatched(meta,theOtherSelector)),getConsolidatedSrcaddrFilters=(params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{const addrCounterpartSelectors=[(params=Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params)).ipv4DestAddrKey,"internet-service-name","internet-service-custom","internet-service-custom-group","internet-service-group"];return{"firewall.address":(entry,meta)=>!nonDialogIPVersionNotMatched(meta,addrCounterpartSelectors)&&filterIPv4Address(entry,meta,"srcintf",params.ipv4SourceAddrKey),"firewall.addrgrp":(entry,meta)=>!nonDialogIPVersionNotMatched(meta,addrCounterpartSelectors)&&filterAddressGroupIntf(entry,meta,"srcintf",params.ipv4SourceAddrKey),"system.external-resource.address":(entry,meta)=>filterConsolidatedExternalResource(entry,meta,params.ipv4SourceAddrKey,params.ipv4DestAddrKey),"firewall.address6":(entry,meta)=>filterConsolidatedIPv6Address(entry,meta,params.ipv6SourceAddrKey,params.ipv6DestAddrKey),"firewall.addrgrp6":(entry,meta)=>filterConsolidatedIPv6AddressGroup(entry,meta,params.ipv6SourceAddrKey,params.ipv6DestAddrKey),"system.external-resource.address6":(entry,meta)=>filterConsolidatedExternalResource(entry,meta,params.ipv6SourceAddrKey,params.ipv6DestAddrKey,!0)}},validateUser=createOneOfRequired(["user.group","user.local","user.adgrp"],ONE_USER_MESSAGE),getSrcintfObject=(srcintf={})=>{try{srcintf=Omniselect.getSourceDataSync("firewallInterfaces").mapping[srcintf.q_origin_key]||srcintf}catch(e){}return srcintf},requireConsolidatedAddressOrInternetService=createOneOfRequired(["firewall.address","firewall.addrgrp","firewall.address6","firewall.addrgrp6","system.external-resource.address","system.external-resource.address6","firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group","firewall.vip","firewall.vipgrp","firewall.vip6","firewall.vipgrp6"],ONE_ADDRESS_MESSAGE),nonDialogIsdbSrcIPVersionNotMatched=(meta,params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST})=>{const theOtherSelectors=[(params=Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST},params)).ipv4DestAddrKey,"internet-service-name","internet-service-custom","internet-service-custom-group","internet-service-group"];return!!nonDialogIPVersionNotMatched(meta,theOtherSelectors)},nonDialogIsdbDstIPVersionNotMatched=(meta,params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST})=>{const theOtherSelectors=[(params=Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST},params)).ipv4SourceAddrKey,"internet-service-src-name","internet-service-src-custom","internet-service-src-custom-group","internet-service-src-group"];return!!nonDialogIPVersionNotMatched(meta,theOtherSelectors)},addInternetServiceSources=sources=>{sources[$.getInfo("Internet Service")]=["firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group"]},setupConsolidatedSourceSelectSetting=(config,params={selectKey:"consolidated-source",hasInternetService:!1,hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{const addrKeys={ipv4SourceAddrKey:(params=Object.assign({selectKey:"consolidated-source",hasInternetService:!1,hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params)).ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey},addressLang=$.getInfo("Address");config[params.selectKey]={sources:{[addressLang]:[],[`${$.getInfo("user")}`]:["user.local","user.group","user.adgrp"]},preProcessSelected:!0,filterFunction:Object.assign({"firewall.internet-service-name":(entry,meta)=>!nonDialogIsdbSrcIPVersionNotMatched(meta,addrKeys)&&filterInternetService(entry,"src"),"firewall.internet-service-group":(entry,meta)=>!nonDialogIsdbSrcIPVersionNotMatched(meta,addrKeys)&&filterInternetServiceGroup(entry,"src"),"firewall.internet-service-custom":(entry,meta)=>!nonDialogIsdbSrcIPVersionNotMatched(meta,addrKeys),"firewall.internet-service-custom-group":(entry,meta)=>!nonDialogIsdbSrcIPVersionNotMatched(meta,addrKeys),"user.group":filterGroup,"user.local":filterUserGroup},getConsolidatedSrcaddrFilters({ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey})),validateFunction:(selected,meta)=>{let msg=requireConsolidatedAddressOrInternetService(selected)||!meta.isDialog&&validateConsolidatedIPVersion(selected,meta,"source",{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey});const srcintf=getSrcintfObject(meta.policy.srcintf[0]);return!msg&&srcintf.is_sslvpn&&(msg=validateUser(selected)),msg||(msg=validateAddressInternetServiceDisjoint(selected,meta,"source")),msg}};const consolidatedAddresses=["firewall.address","firewall.addrgrp","firewall.address6","firewall.addrgrp6"];params.hasThreatFeed&&(consolidatedAddresses.push("system.external-resource.address"),consolidatedAddresses.push("system.external-resource.address6")),config[params.selectKey].sources[addressLang]=consolidatedAddresses,params.hasInternetService&&addInternetServiceSources(config[params.selectKey].sources)},setupConsolidatedSrcaddrSelectSetting=(config,params={selectKey:"consolidated-srcaddr",hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{params=Object.assign({selectKey:"consolidated-srcaddr",hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params);const addressLang=$.getInfo("Address");config[params.selectKey]={sources:{},preProcessSelected:!0,filterFunction:getConsolidatedSrcaddrFilters({ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey}),validateFunction:(selected,meta)=>required(selected)||!meta.isDialog&&validateConsolidatedIPVersion(selected,meta,"source",{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey})};const consolidatedAddresses=["firewall.address","firewall.addrgrp","firewall.address6","firewall.addrgrp6"];params.hasThreatFeed&&(consolidatedAddresses.push("system.external-resource.address"),consolidatedAddresses.push("system.external-resource.address6")),config[params.selectKey].sources[addressLang]=consolidatedAddresses},getConsolidatedDstaddrFilters=(params={ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{const addrCounterpartSelectors=[(params=Object.assign({ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params)).ipv4SourceAddrKey,"internet-service-src-name","internet-service-src-custom","internet-service-src-custom-group","internet-service-src-group"];return{"firewall.address":(entry,meta)=>!nonDialogIPVersionNotMatched(meta,addrCounterpartSelectors)&&filterIPv4Address(entry,meta,"dstintf",params.ipv4DestAddrKey),"firewall.addrgrp":(entry,meta)=>!nonDialogIPVersionNotMatched(meta,addrCounterpartSelectors)&&filterAddressGroupIntf(entry,meta,"dstintf",params.ipv4DestAddrKey),"firewall.vip":(entry,meta)=>filterConsolidatedVIP4(entry,meta,{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey}),"firewall.vipgrp":(entry,meta)=>filterConsolidatedVIP4(entry,meta,{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey}),"system.external-resource.address":(entry,meta)=>filterConsolidatedExternalResource(entry,meta,params.ipv4DestAddrKey,params.ipv4SourceAddrKey),"firewall.address6":(entry,meta)=>filterConsolidatedIPv6Address(entry,meta,params.ipv6DestAddrKey,params.ipv6SourceAddrKey),"firewall.addrgrp6":(entry,meta)=>filterConsolidatedIPv6AddressGroup(entry,meta,params.ipv6DestAddrKey,params.ipv6SourceAddrKey),"firewall.vip6":(entry,meta)=>filterConsolidatedVIP6(entry,meta,{ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey}),"firewall.vipgrp6":(entry,meta)=>filterConsolidatedVIP6(entry,meta,{ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey}),"system.external-resource.address6":(entry,meta)=>filterConsolidatedExternalResource(entry,meta,params.ipv6DestAddrKey,params.ipv6SourceAddrKey,!0)}},setupConsolidatedDstaddrSelectSetting=(config,params={selectKey:"consolidated-dstaddr",hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{params=Object.assign({selectKey:"consolidated-dstaddr",hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params);const addressLang=$.getInfo("Address");config[params.selectKey]={sources:{},preProcessSelected:!0,filterFunction:getConsolidatedDstaddrFilters({ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey}),validateFunction:(selected,meta)=>validateVIPMixedAddr(selected)||!meta.isDialog&&validateConsolidatedIPVersion(selected,meta,"destination",{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey})};const consolidatedAddresses=["firewall.address","firewall.addrgrp","firewall.vip","firewall.vipgrp","firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6"];params.hasThreatFeed&&(consolidatedAddresses.push("system.external-resource.address"),consolidatedAddresses.push("system.external-resource.address6")),config[params.selectKey].sources[addressLang]=consolidatedAddresses},setupConsolidatedCustomSolitaryHandler=(config,selectKeys=["consolidated-source","consolidated-srcaddr","consolidated-destination","consolidated-dstaddr"])=>{selectKeys.forEach(selectKey=>{config[selectKey].solitaryLevel=Omniselect.prototype.SOLITARY_LEVEL.CUSTOM,config[selectKey].getSolitaryIdForEntry=(entry=>(entry=>{const ipv4Datasources=new Set(["firewall.address","firewall.addrgrp","firewall.vip","firewall.vipgrp","system.external-resource.address","firewall.vip46","firewall.vipgrp46"]),ipv6Datasources=new Set(["firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6","system.external-resource.address6","firewall.vip64","firewall.vipgrp64"]),datasource=entry.datasource||`${entry.q_path}.${entry.q_name}`;return ipv4Datasources.has(datasource)?"ipv4":ipv6Datasources.has(datasource)?"ipv6":"NOT_AN_ADDRESS"})(entry))})},setupConsolidatedDestinationSelectSetting=(config,params={selectKey:"consolidated-destination",hasInternetService:!1,hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST})=>{const addrKeys={ipv4SourceAddrKey:(params=Object.assign({selectKey:"consolidated-destination",hasInternetService:!1,hasThreatFeed:!1,ipv4SourceAddrKey:DEFAULT_ADDR_KEY_IPV4_SRC,ipv4DestAddrKey:DEFAULT_ADDR_KEY_IPV4_DST,ipv6SourceAddrKey:DEFAULT_ADDR_KEY_IPV6_SRC,ipv6DestAddrKey:DEFAULT_ADDR_KEY_IPV6_DST},params)).ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey},addressLang=$.getInfo("Address");config[params.selectKey]={sources:{},preProcessSelected:!0,filterFunction:Object.assign({"firewall.internet-service-name":(entry,meta)=>!nonDialogIsdbDstIPVersionNotMatched(meta,addrKeys)&&filterInternetService(entry,"dst"),"firewall.internet-service-group":(entry,meta)=>!nonDialogIsdbDstIPVersionNotMatched(meta,addrKeys)&&filterInternetServiceGroup(entry,"dst"),"firewall.internet-service-custom":(entry,meta)=>!nonDialogIsdbDstIPVersionNotMatched(meta,addrKeys),"firewall.internet-service-custom-group":(entry,meta)=>!nonDialogIsdbDstIPVersionNotMatched(meta,addrKeys)},getConsolidatedDstaddrFilters()),validateFunction:(selected,meta)=>{let msg=requireConsolidatedAddressOrInternetService(selected)||!meta.isDialog&&validateConsolidatedIPVersion(selected,meta,"destination",{ipv4SourceAddrKey:params.ipv4SourceAddrKey,ipv4DestAddrKey:params.ipv4DestAddrKey,ipv6SourceAddrKey:params.ipv6SourceAddrKey,ipv6DestAddrKey:params.ipv6DestAddrKey});return msg||(msg=validateAddressInternetServiceDisjoint(selected,meta,"destination")),msg}};const consolidatedAddresses=["firewall.address","firewall.addrgrp","firewall.vip","firewall.vipgrp","firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6"];params.hasThreatFeed&&(consolidatedAddresses.push("system.external-resource.address"),consolidatedAddresses.push("system.external-resource.address6")),config[params.selectKey].sources[addressLang]=consolidatedAddresses,params.hasInternetService&&addInternetServiceSources(config[params.selectKey].sources)},setupConsolidatedPoolnameSelectSetting=(config,selectKey="consolidated-poolname",consolidatedDstAddrKey="consolidated-destination")=>{config[selectKey]={sources:["firewall.ippool","firewall.ippool6"],filterFunction:{"firewall.ippool":(entry,meta)=>filterConsolidatedIPPool(entry,meta,"poolname",DEFAULT_ADDR_KEY_IPV4_DST,consolidatedDstAddrKey),"firewall.ippool6":(entry,meta)=>filterConsolidatedIPPool(entry,meta,"poolname6",DEFAULT_ADDR_KEY_IPV6_DST,consolidatedDstAddrKey)},preProcessSelected:!0,validateFunction:(selected,meta)=>((selected,meta,v4AddrKey=DEFAULT_ADDR_KEY_IPV4_DST,v6AddrKey=DEFAULT_ADDR_KEY_IPV6_DST,consolidatedDstAddrKey="consolidated-destination")=>{if(!Array.isArray(selected)||0===selected.length)return null;const poolSelected={v4:!1,v6:!1};for(let ippool of selected){if(poolSelected.v4&&poolSelected.v6)break;"firewall.ippool"===(ippool.datasource||`${ippool.q_path}.${ippool.q_name}`)?poolSelected.v4=!0:poolSelected.v6=!0}let v4Addresses=[],v6Addresses=[];const v4AddrDatasourceSet=new Set(["firewall.address","firewall.addrgrp","firewall.vip","firewall.vipgrp","system.external-resource.address","firewall.internet-service-name","firewall.internet-service-group","firewall.internet-service-custom","firewall.internet-service-custom-group"]),v6AddrDatasourceSet=new Set(["firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6","system.external-resource.address6","firewall.internet-service-name","firewall.internet-service-group","firewall.internet-service-custom","firewall.internet-service-custom-group"]);if(Array.isArray(meta.policy[consolidatedDstAddrKey]))for(let addr of meta.policy[consolidatedDstAddrKey]){const addrDatasource=addr.datasource||`${addr.q_path}.${addr.q_name}`;v4AddrDatasourceSet.has(addrDatasource)&&v4Addresses.push(addr),v6AddrDatasourceSet.has(addrDatasource)&&v6Addresses.push(addr)}else v4Addresses=meta.policy[v4AddrKey]||[],v6Addresses=meta.policy[v6AddrKey]||[];return!poolSelected.v4&&v4Addresses.length>0||!poolSelected.v6&&v6Addresses.length>0?$.getInfo("Firewall::consolidatedPolicy::error.requireMatchingIpPool"):void 0})(selected,meta)||required(selected)}};function OmniselectConfigService(_state_,_policyVWP_,_$q_,_$http_,_policyInit_,_utmProfileConfig_){state=_state_,policyVWP=_policyVWP_,$q=_$q_,$http=_$http_,policyInit=_policyInit_,utmProfileConfig=_utmProfileConfig_}return OmniselectConfigService.$inject=["state","policyVWP","$q","$http","policyInit","utmProfileConfig"],OmniselectConfigService.prototype.init=function(){var SSLVPN_INTERFACE="ssl."+state.getOperatingVDOM(),BASE_POLICY={},BASE_MULTICAST_POLICY={},NGFW_POLICY={},PROXY_POLICY={},CENTRAL_SNAT_MAP={};BASE_MULTICAST_POLICY.srcintf=BASE_POLICY.srcintf={sources:["firewallInterfaces"],filterFunction:filterInterface,solitaryEntries:{any:!0},validateFunction:required},BASE_POLICY.srcintf.solitaryEntries[SSLVPN_INTERFACE]=!0,BASE_MULTICAST_POLICY.dstintf=BASE_POLICY.dstintf={sources:["firewallInterfaces"],filterFunction:filterDestinationInterface,validateFunction:required},BASE_POLICY.dstaddr={sources:["firewall.address","firewall.addrgrp"],filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,"dstintf","dstaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroup(entry,meta,"dstaddr")}},validateFunction:required},BASE_POLICY.schedule={sources:["firewall.schedule.recurring","firewall.schedule.onetime","firewall.schedule.group"],singleSelect:!0,validateFunction:required},BASE_POLICY.service={sources:["firewall.service.custom","firewall.service.group"],validateFunction:required,filterFunction:{"firewall.service.custom":function(entry,meta){return!(hidden(entry,meta,"service")||entry.proxy&&filterProxyPolicyWebService(entry,meta))},"firewall.service.group":function(entry,meta){return!entry.proxy||!filterProxyPolicyWebService(entry,meta)}}},BASE_POLICY.users={sources:["user.local"],validateFunction:function(selected,meta){if(getSrcintfObject(meta.policy.srcintf[0]).is_sslvpn)return selected=(selected||[]).concat(meta.policy.groups||[]),validateUser(selected)}},BASE_POLICY.groups={sources:["user.group"],filterFunction:filterGroup,validateFunction:function(selected,meta){if(getSrcintfObject(meta.policy.srcintf[0]).is_sslvpn)return selected=(selected||[]).concat(meta.policy.users||[]),validateUser(selected)}},BASE_POLICY["traffic-shaper"]={sources:["firewall.shaper.traffic-shaper"],singleSelect:!0},BASE_POLICY["per-ip-shaper"]={sources:["firewall.shaper.per-ip-shaper"],singleSelect:!0},BASE_POLICY["replacemsg-override-group"]={sources:["system.replacemsg-group"],singleSelect:!0,filterFunction:entry=>"auth"===entry["group-type"],preProcessSelected:!0,createNewFunction:(sourceID,entry)=>select_setup.inlineEditCreate(sourceID,entry,{type:"auth",vdom:state.current_vdom})},CENTRAL_SNAT_MAP.srcintf=angular.copy(BASE_POLICY.srcintf),CENTRAL_SNAT_MAP.dstintf=angular.copy(BASE_POLICY.dstintf),CENTRAL_SNAT_MAP["dst-addr"]=angular.copy(BASE_POLICY.dstaddr);var config,POLICY_WITH_UTM={};POLICY_WITH_UTM["profile-group"]={sources:"firewall.profile-group",singleSelect:!0,filterFunction:utmGenericFilter,preProcessSelected:!0},POLICY_WITH_UTM["av-profile"]={sources:"antivirus.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["webfilter-profile"]={sources:"webfilter.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["dnsfilter-profile"]={sources:"dnsfilter.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["waf-profile"]={sources:"waf.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["application-list"]={sources:"application.list",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["ips-sensor"]={sources:"ips.sensor",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["emailfilter-profile"]={sources:"emailfilter.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["file-filter-profile"]={sources:"file-filter.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["voip-profile"]={sources:"voip.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["icap-profile"]={sources:"icap.profile",filterFunction:utmGenericFilter,singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["profile-protocol-options"]={filterFunction:function(entry,meta){return filterUTMProfile(entry,meta,"profile-protocol-options")},sources:"firewall.profile-protocol-options",singleSelect:!0,preProcessSelected:!0,validateFunction:required},POLICY_WITH_UTM["ssl-ssh-profile"]={filterFunction:utmGenericFilter,sources:"firewall.ssl-ssh-profile",singleSelect:!0,preProcessSelected:!0},POLICY_WITH_UTM["decrypted-traffic-mirror"]={sources:"firewall.decrypted-traffic-mirror",singleSelect:!0,preProcessSelected:!0},NGFW_POLICY["url-category"]={sources:["webfilter.ftgd-cat","webfilter.ftgd-local-cat"]},NGFW_POLICY.applications={sources:{},extraData:applicationsExtraData,filterFunction:{"application.name":filterApplication,"application.custom":filterApplication,"application.category":filterApplicationCategory}},NGFW_POLICY.applications.sources[$.getInfo("app")]=["application.name","application.custom"],NGFW_POLICY.applications.sources[$.getInfo("cat")]=["application.category"],NGFW_POLICY.applications.sources[$.getInfo("group")]=["application.group"],(PROXY_POLICY=angular.extend({},BASE_POLICY,POLICY_WITH_UTM))["internet-service-name"]={sources:"firewall.internet-service-name"},PROXY_POLICY["internet-service-group"]={sources:"firewall.internet-service-group"},PROXY_POLICY["internet-service-custom"]={sources:"firewall.internet-service-custom"},PROXY_POLICY["internet-service-custom-group"]={sources:"firewall.internet-service-custom-group"};var type=policyInit.type,contextPromises=[cmdbGet("web-proxy","explicit"),state.isNgfwPolicyMode()?cmdbGet("application","custom"):$q.resolve([]),state.isNgfwPolicyMode()?cmdbGet("webfilter","ftgd-local-cat"):$q.resolve([])];return $q.all(contextPromises).then(function(contexts){var proxySetting=contexts[0];if(this.customApps=mapArray(contexts[1],"id"),this.localFtgdCats=mapArray(contexts[2],"id"),"policy"!==type||state.isNgfwPolicyMode())if("policy"===type&&state.isNgfwPolicyMode())config=Object.assign({},BASE_POLICY),setupConsolidatedSourceSelectSetting(config,{selectKey:"consolidated-source",hasThreatFeed:!0,hasInternetService:!0}),setupConsolidatedSrcaddrSelectSetting(config,{selectKey:"consolidated-srcaddr",hasThreatFeed:!0}),setupConsolidatedDestinationSelectSetting(config,{selectKey:"consolidated-destination",hasThreatFeed:!0,hasInternetService:!0}),setupConsolidatedDstaddrSelectSetting(config,{selectKey:"consolidated-dstaddr",hasThreatFeed:!0}),setupConsolidatedCustomSolitaryHandler(config),config["ssl-ssh-profile"]={filterFunction:utmGenericFilter,sources:"firewall.ssl-ssh-profile",singleSelect:!0,preProcessSelected:!0};else if("security-policy"===type)config=Object.assign({},BASE_POLICY,POLICY_WITH_UTM,NGFW_POLICY),setupConsolidatedSourceSelectSetting(config,{selectKey:"security-source",hasInternetService:!0,hasThreatFeed:!0}),setupConsolidatedSrcaddrSelectSetting(config,{selectKey:"security-srcaddr",hasThreatFeed:!0}),setupConsolidatedDestinationSelectSetting(config,{selectKey:"security-destination",hasInternetService:!0,hasThreatFeed:!0}),setupConsolidatedDstaddrSelectSetting(config,{selectKey:"security-dstaddr",hasThreatFeed:!0}),setupConsolidatedCustomSolitaryHandler(config,["security-source","security-srcaddr","security-destination","security-dstaddr"]),Object.assign(config.applications,{filterFunction:{"application.name":filterNgfwApplication,"application.custom":filterNgfwApplication,"application.category":filterApplicationCategory}});else if("policy46"===type)(config=angular.copy(BASE_POLICY)).srcintf.singleSelect=config.dstintf.singleSelect=!0,config.srcintf.filterFunction=filterNatPolicySrcintf,config.dstintf.filterFunction=filterNatPolicyDstintf,config.srcaddr={sources:["firewall.address","firewall.addrgrp"],preProcessSelected:!0,filterFunction:{"firewall.address":function(entry,meta){return filterNatIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required},config.dstaddr={sources:["firewall.vip46","firewall.vipgrp46"],validateFunction:required},config.poolname={sources:["firewallNat46IPPools"]};else if("policy64"===type)(config=angular.copy(BASE_POLICY)).srcintf.singleSelect=config.dstintf.singleSelect=!0,config.srcintf.filterFunction=filterNatPolicySrcintf,config.dstintf.filterFunction=filterNatPolicyDstintf,config.srcaddr={sources:["firewall.address6","firewall.addrgrp6"],filterFunction:{"firewall.address6":function(entry,meta){return filterIPv6Address(entry,meta,"srcaddr")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroup(entry,meta,"srcaddr")}},validateFunction:required},config.dstaddr={sources:["firewall.address","firewall.addrgrp","firewall.vip64","firewall.vipgrp64"],preProcessSelected:!0,filterFunction:{"firewall.address":function(entry,meta){return filterFabricDevice(entry)&&filterNatIPv4Address(entry,meta,"dstintf","dstaddr")&&filterPolicy64DstAddress(entry)},"firewall.addrgrp":function(entry,meta){return filterFabricDevice(entry)&&filterAddressGroupIntf(entry,meta,"dstintf","dstaddr")&&entry.$flattenedAddresses.every(filterPolicy64DstAddress)}},validateFunction:validateVIPMixedAddr},config.poolname={sources:["firewall.ippool"]};else if("multicast-policy"===type)(config=angular.copy(BASE_MULTICAST_POLICY)).srcintf.singleSelect=config.dstintf.singleSelect=!0,config.srcintf.filterFunction=function(entry,meta){return filterMulticastInterface(entry,meta)},config.dstintf.filterFunction=function(entry,meta){return filterMulticastInterface(entry,meta,"dstintf")},config.srcaddr={sources:["firewall.address","firewall.addrgrp"],preProcessSelected:!0,filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required},config.dstaddr={sources:["firewall.multicast-address"],validateFunction:required,filterFunction:{"firewall.multicast-address":function(entry,meta){return function(entry,meta,relatedInterfaceKey){return!(!associateWithInterface(entry,meta,relatedInterfaceKey)||hidden(entry,meta,"dstaddr"))}(entry,meta,"dstintf")}},preProcessSelected:!0},config.protocol={options:[{id:0,name:$.getInfo("any")},{id:1,name:$.getInfo("icmp")},{id:2,name:$.getInfo("IGMP")},{id:6,name:$.getInfo("tcp")},{id:17,name:$.getInfo("udp")},{id:89,name:$.getInfo("ospf")},{id:-1,name:$.getInfo("other")}]};else if("proxy-policy"===type){const ipv6ExplicitProxy="enable"===proxySetting["ipv6-status"],srcaddr4Sources=["firewall.address","firewall.addrgrp","firewall.proxy-address","firewall.proxy-addrgrp","system.external-resource.address"],dstaddr4Sources=["firewall.address","firewall.addrgrp","firewall.proxy-address","firewall.proxy-addrgrp","firewall.vip","firewall.vipgrp","firewall.vip46","firewall.vipgrp46","system.external-resource.address"],srcaddr6Sources=["firewall.address6","firewall.addrgrp6","system.external-resource.address6"],dstaddr6Sources=["firewall.address6","firewall.addrgrp6","firewall.vip6","firewall.vipgrp6","firewall.vip64","firewall.vipgrp64","system.external-resource.address6"],internetServiceSources=["firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group"];var filterFunctions={srcaddr:{"firewall.address":function(entry,meta){return filterFabricDevice(entry)&&filterIPv4Address(entry,meta,null,"srcaddr")},"firewall.addrgrp":function(entry,meta){return filterFabricDevice(entry)&&filterAddressGroup(entry,meta,"srcaddr")},"firewall.proxy-address":function(entry,meta){return filterProxyAddress(entry,meta,"srcaddr")},"firewall.proxy-addrgrp":function(entry,meta){return filterProxyAddressGroup(entry,meta,"srcaddr")},"system.external-resource.address":(entry,meta)=>filterProxyPolicyExternalResource(entry,meta,"srcaddr")},srcaddr6:{"firewall.address6":function(entry,meta){return filterProxyPolicyIPv6Address(entry,meta,ipv6ExplicitProxy,"srcaddr6")},"firewall.addrgrp6":function(entry,meta){return filterProxyPolicyIPv6AddressGroup(entry,meta,ipv6ExplicitProxy,"srcaddr6")},"system.external-resource.address6":(entry,meta)=>filterProxyPolicyExternalResource(entry,meta,"srcaddr6",ipv6ExplicitProxy,!0)},dstaddr:{"firewall.address":filterProxyPolicyIPv4DstAddress,"firewall.addrgrp":filterProxyPolicyIPv4DstAddressGroup,"firewall.proxy-address":function(entry,meta){return filterProxyAddress(entry,meta,"dstaddr")},"firewall.proxy-addrgrp":function(entry,meta){return filterProxyAddressGroup(entry,meta,"dstaddr")},"firewall.vip":filterProxyPolicyVIP,"firewall.vipgrp":filterProxyPolicyVIP,"firewall.vip46":filterProxyPolicyVIP,"firewall.vipgrp46":filterProxyPolicyVIP,"system.external-resource.address":(entry,meta)=>filterProxyPolicyExternalResource(entry,meta,"dstaddr")},dstaddr6:{"firewall.address6":function(entry,meta){return filterProxyPolicyIPv6Address(entry,meta,ipv6ExplicitProxy,"dstaddr6")},"firewall.addrgrp6":function(entry,meta){return filterProxyPolicyIPv6AddressGroup(entry,meta,ipv6ExplicitProxy,"dstaddr6")},"firewall.vip6":function(entry,meta){return filterProxyPolicyIPv6VIP(entry,meta,ipv6ExplicitProxy)},"firewall.vipgrp6":function(entry,meta){return filterProxyPolicyIPv6VIP(entry,meta,ipv6ExplicitProxy)},"firewall.vip64":function(entry,meta){return filterProxyPolicyIPv6VIP(entry,meta,ipv6ExplicitProxy)},"firewall.vipgrp64":function(entry,meta){return filterProxyPolicyIPv6VIP(entry,meta,ipv6ExplicitProxy)},"system.external-resource.address6":(entry,meta)=>filterProxyPolicyExternalResource(entry,meta,"dstaddr6",ipv6ExplicitProxy,!0)},internetService:{"firewall.internet-service-name":entry=>filterInternetService(entry,"dst"),"firewall.internet-service-group":entry=>filterInternetServiceGroup(entry,"dst"),"firewall.internet-service-custom":filterProxyPolicyInternetServiceCustom}};(config=angular.copy(PROXY_POLICY)).srcaddr={filterFunction:filterFunctions.srcaddr},config.srcaddr6={filterFunction:filterFunctions.srcaddr6},config["proxy-source"]={sources:{},filterFunction:angular.extend({},filterFunctions.srcaddr,filterFunctions.srcaddr6)},config.srcaddr.sources=config["proxy-source"].sources[$.getInfo("Address")]=srcaddr4Sources,config.srcaddr6.sources=config["proxy-source"].sources[$.getInfo("firewall.address6")]=srcaddr6Sources,config.srcaddr.preProcessSelected=config.srcaddr6.preProcessSelected=config["proxy-source"].preProcessSelected=!0,config.srcaddr.validateFunction=config.srcaddr6.validateFunction=config["proxy-source"].validateFunction=createOneOfRequired(srcaddr4Sources.concat(srcaddr6Sources),ONE_ADDRESS_MESSAGE),config["proxy-source"].sources[$.getInfo("user")]=["user.local","user.group"],config.dstaddr={filterFunction:filterFunctions.dstaddr},config.dstaddr6={filterFunction:filterFunctions.dstaddr6},config["proxy-destination"]={sources:{},filterFunction:angular.extend({},filterFunctions.dstaddr,filterFunctions.dstaddr6,filterFunctions.internetService)},config.dstaddr.sources=config["proxy-destination"].sources[$.getInfo("Address")]=dstaddr4Sources,config.dstaddr6.sources=config["proxy-destination"].sources[$.getInfo("firewall.address6")]=dstaddr6Sources,config["proxy-destination"].sources[$.getInfo("Internet Service")]=internetServiceSources,config.dstaddr.preProcessSelected=config.dstaddr6.preProcessSelected=config["proxy-destination"].preProcessSelected=!0,config.dstaddr.validateFunction=config.dstaddr6.validateFunction=config["proxy-destination"].validateFunction=function(selected,meta){var requiredError=required(selected);return requiredError||validateAddressInternetServiceDisjoint(selected,meta,"destination")},config.srcintf.filterFunction=filterProxyPolicyInterface,config.dstintf.filterFunction=filterProxyPolicyInterface,config.service.filterFunction={"firewall.service.custom":filterProxyPolicyWebService,"firewall.service.group":filterProxyPolicyWebService},config["webproxy-forward-server"]={sources:["web-proxy.forward-server","web-proxy.forward-server-group"],singleSelect:!0},config.poolname={sources:["firewall.ippool","firewall.ippool6"],filterFunction:function(entry,meta){return!(meta.policy.dstaddr6.length>0&&"firewall.ippool"===entry.datasource)&&"overload"===entry.type},preProcessSelected:!0}}else if("shaping-policy"===type){config=Object.assign({},BASE_POLICY,NGFW_POLICY);const REQUIRE_ADDRESS_MESSAGE=$.getInfo("One address or address group is required"),REQUIRE_ADDRESS_OR_INTERNET_SERVICE_MESSAGE=$.getInfo("One address, address group or Internet Service is required");let requireAddressOrInternetService=createOneOfRequired(["firewall.address","firewall.addrgrp","firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group"],REQUIRE_ADDRESS_OR_INTERNET_SERVICE_MESSAGE),validateAddress=createOneOfRequired(["firewall.address6","firewall.addrgrp6"],REQUIRE_ADDRESS_MESSAGE);config.dstintf.filterFunction=filterShapingPolicyInterface,config.dstintf.sources="dummySdwanFirewallInterfaces",config["shaping-source"]={preProcessSelected:!0,sources:{[$.getInfo("Address")]:["firewall.address","firewall.addrgrp"],[$.getInfo("user")]:["user.local","user.group"],[$.getInfo("Internet Service")]:["firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group"]},filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,null,"srcaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,null,"srcaddr")},"firewall.internet-service-name":function(entry){return filterInternetService(entry,"src")},"firewall.internet-service-group":function(entry){return filterInternetServiceGroup(entry,"src")}},validateFunction:function(selected,meta){var requiredError=requireAddressOrInternetService(selected);return requiredError||validateAddressInternetServiceDisjoint(selected,meta,"source")}},config["shaping-source6"]={preProcessSelected:!0,sources:{[$.getInfo("Address")]:["firewall.address6","firewall.addrgrp6"],[$.getInfo("user")]:["user.local","user.group"]},filterFunction:{"firewall.address6":function(entry,meta){return filterIPv6Address(entry,meta,"srcaddr6")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroup(entry,meta,"srcaddr6")}},validateFunction:function(selected){return validateAddress(selected)}},config["shaping-destination"]={preProcessSelected:!0,sources:{[$.getInfo("Address")]:["firewall.address","firewall.addrgrp"],[$.getInfo("Internet Service")]:["firewall.internet-service-name","firewall.internet-service-custom","firewall.internet-service-custom-group","firewall.internet-service-group"]},filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,null,"dstaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,null,"dstaddr")},"firewall.internet-service-name":function(entry){return filterInternetService(entry,"dst")},"firewall.internet-service-group":function(entry){return filterInternetServiceGroup(entry,"dst")}},validateFunction:function(selected,meta){var requiredError=requireAddressOrInternetService(selected);return requiredError||validateAddressInternetServiceDisjoint(selected,meta,"source")}},config["shaping-destination6"]={preProcessSelected:!0,sources:{[$.getInfo("Address")]:["firewall.address6","firewall.addrgrp6"]},filterFunction:{"firewall.address6":function(entry,meta){return filterIPv6Address(entry,meta,"dstaddr6")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroup(entry,meta,"dstaddr6")}},validateFunction:function(selected){return validateAddress(selected)}},config["traffic-shaper"]={sources:"firewall.shaper.traffic-shaper",singleSelect:!0},config["traffic-shaper-reverse"]={sources:"firewall.shaper.traffic-shaper",singleSelect:!0},config["per-ip-shaper"]={sources:"firewall.shaper.per-ip-shaper",singleSelect:!0},config["class-id"]={sources:"firewall.traffic-class",singleSelect:!0}}else"DoS-policy"===type?((config=angular.copy(BASE_POLICY)).srcintf.filterFunction=filterDosPolicyInterface,config.srcintf.singleSelect=!0,config.srcaddr={sources:["firewall.address","firewall.addrgrp"],preProcessSelected:!0,filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required}):"DoS-policy6"===type?((config=angular.copy(BASE_POLICY)).srcintf.filterFunction=filterDosPolicyInterface,config.srcintf.singleSelect=!0,config.srcaddr={sources:["firewall.address6","firewall.addrgrp6"],preProcessSelected:!0,filterFunction:{"firewall.address6":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required},config.dstaddr={sources:["firewall.address6","firewall.addrgrp6"],preProcessSelected:!0,filterFunction:{"firewall.address6":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required}):"acl"===type?((config=angular.copy(BASE_POLICY)).srcintf.filterFunction=filterAclPolicyInterface,config.srcintf.singleSelect=!0,config.srcaddr={sources:["firewall.address","firewall.addrgrp"],preProcessSelected:!0,filterFunction:{"firewall.address":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required}):"acl6"===type?((config=angular.copy(BASE_POLICY)).srcintf.filterFunction=filterAclPolicyInterface,config.srcintf.singleSelect=!0,config.srcaddr={sources:["firewall.address6","firewall.addrgrp6"],preProcessSelected:!0,filterFunction:{"firewall.address6":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required},config.dstaddr={sources:["firewall.address6","firewall.addrgrp6"],preProcessSelected:!0,filterFunction:{"firewall.address6":function(entry,meta){return filterIPv4Address(entry,meta,"srcintf","srcaddr")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroupIntf(entry,meta,"srcintf","srcaddr")}},validateFunction:required}):"central-snat-map"===type?((config=angular.copy(CENTRAL_SNAT_MAP)).srcintf.filterFunction=filterCentralSnatPolicyIface,config.srcintf.singleSelect=!1,config.dstintf.filterFunction=filterCentralSnatPolicyIface,config.dstintf.singleSelect=!1,config["orig-addr"]={sources:["firewall.address","firewall.addrgrp"],preProcessSelected:!0,filterFunction:filterCentralSnatPolicyAddr("src"),validateFunction:required},config["dst-addr"].filterFunction=filterCentralSnatPolicyAddr("dst"),config["orig-addr6"]={sources:["firewall.address6","firewall.addrgrp6"],preProcessSelected:!0,filterFunction:filterCentralSnatPolicyAddr("src"),validateFunction:required},config["dst-addr6"]={sources:["firewall.address6","firewall.addrgrp6"],filterFunction:{"firewall.address6":function(entry,meta){return filterIPv6Address(entry,meta,"dstintf")},"firewall.addrgrp6":function(entry,meta){return filterAddressGroup(entry,meta,"dstaddr")}},validateFunction:required}):config={};else config=Object.assign({},BASE_POLICY,POLICY_WITH_UTM,NGFW_POLICY),setupConsolidatedSourceSelectSetting(config,{selectKey:"consolidated-source",hasThreatFeed:!0,hasInternetService:!0}),setupConsolidatedSrcaddrSelectSetting(config,{selectKey:"consolidated-srcaddr",hasThreatFeed:!0}),setupConsolidatedDestinationSelectSetting(config,{selectKey:"consolidated-destination",hasThreatFeed:!0,hasInternetService:!0}),setupConsolidatedDstaddrSelectSetting(config,{selectKey:"consolidated-dstaddr",hasThreatFeed:!0}),setupConsolidatedCustomSolitaryHandler(config),setupConsolidatedPoolnameSelectSetting(config),(config=>{config.vpntunnel={sources:["vpn.ipsec.phase1","vpn.ipsec.manualkey"],extraData:function(){return Omniselect.getSourceData("system.zone").then(function(zones){return zones.mapping})},filterFunction:function(entry,meta,zoneMap){var destInterface,zone,tunnelInterface=(entry.interface||{}).name;return!(!meta.policy.dstintf||1!==meta.policy.dstintf.length)&&(destInterface=meta.policy.dstintf[0]||{},tunnelInterface&&destInterface.is_sdwan_zone?(destInterface.members||[]).some(function(memberName){return memberName===tunnelInterface}):!tunnelInterface||!zoneMap||((zone=zoneMap[destInterface.name])?zone.interface.some(function(intf){return intf["interface-name"]===tunnelInterface}):tunnelInterface===destInterface.name))},singleSelect:!0}})(config),config["wanopt-profile"]={sources:["wanopt.profile"],singleSelect:!0},config["wanopt-peer"]={sources:["wanopt.peer"],singleSelect:!0},config.gtp={sources:["firewall.gtp"],singleSelect:!0};this.type=type,this.config=config,this.sslVPNInterface=SSLVPN_INTERFACE}.bind(this))},OmniselectConfigService.prototype.checkExists=function(selector){return!(policyVWP.isVirtualWirePolicy()&&["srcintf","dstintf"].indexOf(selector)>=0)&&!!this.config[selector]},OmniselectConfigService.prototype.getPolicyNegateKey=function(policy,property){let negateKey;return`${negateKey="service"===property?"service":"source"===property?"enable"===policy["internet-service-src"]?"internet-service-src":"srcaddr":"enable"===policy["internet-service"]?"internet-service":"dstaddr"}-negate`},OmniselectConfigService.prototype.get=function(selector,policy,processFn){var settings=this.config[selector];const policyOmniselectConfig=this;return settings?((settings=angular.extend({},settings)).meta||(settings.meta={}),settings.meta.policy=policy,settings.meta.policyType=this.type,settings.meta.virtualWirePolicy=policyVWP.isVirtualWirePolicy(),settings.meta.sslVPNInterface=this.sslVPNInterface,policyOmniselectConfig.setupNegateSources(selector,policy,settings),processFn&&(settings=processFn(settings))):fLog.info("No omniselect config for "+selector),settings},OmniselectConfigService.prototype.setupNegateSources=function(selector,policy,settings){const policyOmniselectConfig=this;(["source","destination","srcaddr","dstaddr","proxy-source","proxy-destination","service","consolidated-source","consolidated-destination","consolidated-srcaddr","consolidated-dstaddr"].includes(selector)&&["policy","proxy-policy"].includes(this.type)||"service"===selector&&"security-policy"===this.type)&&(settings.meta.isNegated=function(){let property;property="service"===selector?"service":["source","srcaddr","proxy-source","consolidated-source"].includes(selector)?"source":"destination";const negateKey=policyOmniselectConfig.getPolicyNegateKey(policy,property);return"enable"===policy[negateKey]})},OmniselectConfigService.prototype.hasDeepInspectionProfile=function(policy){var sslSSHProfile=policy["ssl-ssh-profile"];var hasDeepInspection=!1;if(sslSSHProfile&&sslSSHProfile.ssl){var iterator=Array.prototype.some;hasDeepInspection="deep-inspection"===sslSSHProfile.ssl["inspect-all"]||"disable"===sslSSHProfile.ssl["inspect-all"]&&iterator.call(["https","smtps","ftps","imaps","pop3s"],function(protocol){var entry=sslSSHProfile[protocol];return entry&&"deep-inspection"===entry.status})}return hasDeepInspection},OmniselectConfigService.prototype.utmProfileSelected=utmProfileSelected,OmniselectConfigService.prototype.isProxyPolicy=function(){return"proxy-policy"===this.type},OmniselectConfigService.prototype.getProfilesSettings=function(selectors,policy){var settings={allSolitary:!0,solitaryLevel:"source",meta:{policy:policy,policyType:this.type,virtualWirePolicy:policyVWP.isVirtualWirePolicy(),sslVPNInterface:this.sslVPNInterface},filterFunction:utmGenericFilter,sources:[]};return state.featureEnabled("gui-dynamic-profile-display")&&"group"===policy["profile-type"]?selectors=["profile-group"]:(selectors.indexOf("profile-group")>=0&&(selectors=selectors.slice()).splice(selectors.indexOf("profile-group"),1),settings.validateFunction=validateProfiles(policy)),selectors.forEach(function(selector){settings.sources=settings.sources.concat(this.config[selector].sources)}.bind(this)),settings},OmniselectConfigService.prototype.splitValues=function(selector,values,singleSelect){var updated={},splitMap=VALUE_SPLIT_MAP[selector];return Object.keys(splitMap).forEach(function(key){var entry=splitMap[key];("function"!=typeof entry.visible||entry.visible())&&(updated[entry.value]=singleSelect?null:[])}),values.forEach(function(entry){var sourceID=entry.datasource||entry.q_path+"."+entry.q_name,dest=splitMap[sourceID].value;singleSelect?updated[dest]=entry:Array.isArray(updated[dest])?updated[dest].push(entry):updated[dest]=[entry]}),updated},OmniselectConfigService.prototype.splitKeys=function(selector){var splitMap=VALUE_SPLIT_MAP[selector];return new Set(Object.keys(splitMap).map(function(key){return splitMap[key].value}))},OmniselectConfigService.prototype.postProcessSelect=function(settings,selector){var policy=settings.meta.policy;!state.featureEnabled("gui-multiple-interface-policy")&&("srcintf"===selector||"dstintf"===selector)&&Array.isArray(settings.meta.policy[selector])&&settings.meta.policy[selector].length<=1&&!settings.meta.policy.isCentralSnat&&(settings.singleSelect=!0);const isdbSourceSelectors=["source","security-source"];if(["destination","proxy-destination","source","security-source","security-srcaddr","security-destination"].includes(selector)){const attrModifier=isdbSourceSelectors.includes(selector)?"-src":"",hasInternetService=[`internet-service${attrModifier}-group`,`internet-service${attrModifier}-custom-group`,`internet-service${attrModifier}-custom`,`internet-service${attrModifier}-name`].some(attr=>policy[attr]&&policy[attr].length);policy[`internet-service${attrModifier}`]=hasInternetService?"enable":"disable"}return"applications"===selector&&(Array.isArray(policy.application)&&(policy.application=policy.application.map(app=>{const customApp=this.customApps[app.id];return Object.assign({},app,{datasource:customApp?"application.custom":"application.name"})})),Array.isArray(policy["app-category"])&&(policy["app-category"]=policy["app-category"].map(cat=>Object.assign({},cat,{datasource:"application.category"})))),"url-category"===selector&&Array.isArray(policy["url-category"])&&(policy["url-category"]=policy["url-category"].map(cat=>{const localFtgdCat=this.localFtgdCats[cat.id];return Object.assign({},cat,{datasource:localFtgdCat?"webfilter.ftgd-local-cat":"webfilter.ftgd-cat"})})),"source"===selector&&(settings.sortCreateNew=!1),settings},OmniselectConfigService.prototype.VALUE_SPLIT_MAP=VALUE_SPLIT_MAP,function(providers){providers.$provide.service("policyOmniselectConfig",OmniselectConfigService)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(BUILD=>{function VisibilityCheckFactory(state,policyInit){const getPolicyType=()=>"policy"===policyInit.type&&state.isNgfwPolicyMode()?"ngfw-firewall-policy":policyInit.type;class VisibilityCheck{constructor({policyTypes:policyTypes,dependencyChecks:dependencyChecks,featureChecks:featureChecks,perPolicyChecks:perPolicyChecks}){this._policyTypes=policyTypes,this._dependencyChecks=dependencyChecks,this._featureChecks=featureChecks,this._perPolicyChecks=perPolicyChecks}checkPassed(policy){let passed=!0;return Array.isArray(this._policyTypes)&&!this._policyTypes.includes(getPolicyType())&&(passed=!1),passed&&Array.isArray(this._dependencyChecks)&&(passed=this._dependencyChecks.every(check=>{if(!VisibilityCheck.DEPENDENCY_CHECKS[check])throw new Error(`Dependency check "${check}" isn't defined`);return VisibilityCheck.DEPENDENCY_CHECKS[check]()})),passed&&Array.isArray(this._featureChecks)&&(passed=this._featureChecks.every(feature=>state.featureEnabled(feature))),passed&&this._perPolicyChecks&&policy&&(passed=Object.keys(this._perPolicyChecks).every(check=>{if(!VisibilityCheck.PER_POLICY_CHECKS[check])throw new Error(`Per-policy check "${check}" isn't defined`);return VisibilityCheck.PER_POLICY_CHECKS[check](policy,this._perPolicyChecks[check])})),passed}}return VisibilityCheck.DEPENDENCY_CHECKS={carrier:()=>state.carrier_mode,natMode:()=>{let showNAT=state.getOperationMode()===state.OPERATION_MODE.NAT&&"virtual-wire"!==policyInit.subType;return"central-snat-map"===getPolicyType()&&(showNAT=showNAT&&state.isNgfwPolicyMode()),showNAT},ngfwPolicyMode:()=>state.isNgfwPolicyMode(),ngfwProfileMode:()=>!state.isNgfwPolicyMode(),haveNetNpu:()=>BUILD.PLATFORM.HAVE_NET_NPU,haveNturbo:()=>BUILD.PLATFORM.HAVE_NTURBO_NP6,policyAction:()=>"central-snat-map"!==getPolicyType()||state.isNgfwPolicyMode()},VisibilityCheck.PER_POLICY_CHECKS={proxyModePolicy:policy=>{return!policy||!["policy"].includes(getPolicyType())||"proxy"===policy["inspection-mode"]},proxyTypeCheck:(policy,supportedProxyTypes=[])=>{return!policy||!["proxy-policy"].includes(getPolicyType())||supportedProxyTypes.includes(policy.proxy)},profileTypeSingle:policy=>"group"!==policy["profile-type"]},VisibilityCheck}return providers=>{providers.$provide.factory("VisibilityCheck",VisibilityCheckFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject){function SystemPower(injector){injector.injectMarked(this),this.hideTitle=!0,this.forwardUrl="/prompt/"+this.powerType}SystemPower.prototype={submit:inject.mark(function($http,$location){return function(){$http.post("/api/v2/monitor/system/os/"+this.powerType,{event_log_message:this.logMsg||""}),$location.path(this.forwardUrl).search({viewOnly:1})}})},ngModule.component("fSystemPower",{controller:SystemPower,templateUrl:__webpack_require__(421),bindings:{powerType:"<type"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,ftnt_shared){function HeadStylesheets($rootScope){this._$rootScope=$rootScope,this.stylesheets=new ftnt_shared.SetSequence,this.changeSubscriptions=new Set}function HeadStylesheet(href){this.href=href}function Subscription(callback){this.notify=callback}module.provider("cssRouteSegment",function($injector){try{var $routeSegmentProvider=$injector.get("$routeSegmentProvider");this.$get=function(){return{$routeSegmentProvider:$routeSegmentProvider}}}catch(ex){this.$get=function(){return{}}}}),HeadStylesheets.prototype={stylesheets:null,add:function(stylesheetHref,expires){if(Array.isArray(stylesheetHref))stylesheetHref.forEach(function(href){this.add(href)}.bind(this));else{if(!expires)throw new Error("Stylesheets must have an expires promise so they can be cleaned up.");var hss=new HeadStylesheet(stylesheetHref);this.stylesheets.add(hss),expires instanceof this._$rootScope.constructor?expires.$on("$destroy",cleanup.bind(this)):expires.finally(cleanup.bind(this)),this._changed()}function cleanup(){this.stylesheets.delete(hss),this._changed()}},getHrefs:function(){return Array.from(this.stylesheets.map(function(hss){return hss.href}))},_changed:function(){this._changing||(this._changing=!0,this._$rootScope.$evalAsync(function(){this._changing=!1,this.changeSubscriptions.forEach(function(s){s.notify()})}.bind(this)))},onChanged:function(callback){var s=new Subscription(callback);return this.changeSubscriptions.add(s),function(){this.changeSubscriptions.delete(s)}.bind(this)}},module.service("headStylesheets",HeadStylesheets),module.directive("head",function($rootScope,$compile,loader,cssRouteSegment,$timeout,headStylesheets){var lastRoute=null,CACHE_EXEMPT=new Set(["/css/isdb_icons.css","/css/app_icons.css"]);const DEFAULT_URLS=["/css/isdb_icons.css","/css/app_icons.css"];var getUrls=function(route){var segments,routeSegments,segmentCSS;lastRoute=route;var result,urls=[],$$route=route&&route.$$route;$$route&&$$route.css?urls=route.$$route.css:$$route&&$$route.segment&&(routeSegments=route.$$route.segment.split("."),segments=cssRouteSegment.$routeSegmentProvider.segments,(segmentCSS=routeSegments.reduce(function(css,s){var segment=segments[s],scss=segment&&segment.params.css;return segments=segment&&segment.children||{},css.concat(scss||[])},[])).length>0&&(urls=segmentCSS));var cachePath=loader.basePath("");return result=[...DEFAULT_URLS,...urls,...headStylesheets.getHrefs()].map(function(url){var is_exempt=CACHE_EXEMPT.has(url);return url.startsWith("/")?url.startsWith(cachePath)||is_exempt?url:loader.basePath(url):loader.cachePath(url,route)}),Array.from(new Set(result))};return{restrict:"E",scope:!0,link:function(scope,element){var lastUrls,timeout,unsubscribe;element.append($compile('<link rel="stylesheet" type="text/css" ng-repeat="url in urls" ng-href="{{ url }}" />')(scope)),unsubscribe=[$rootScope.$on("$routeChangeStart",function(event,next){var otherUrls,nextUrls=getUrls(next);lastUrls=lastUrls||scope.urls||[],scope.urls=lastUrls.filter((otherUrls=nextUrls,function(url){return-1===otherUrls.indexOf(url)})).concat(nextUrls),timeout=timeout||$timeout(function(){scope.urls=lastUrls,lastUrls=null,timeout=null},500)}),$rootScope.$on("$routeChangeSuccess",function(event,next){scope.urls=getUrls(next),$timeout.cancel(timeout),lastUrls=null,timeout=null}),headStylesheets.onChanged(function(){lastRoute&&(scope.urls=getUrls(lastRoute))})],scope.$on("$destroy",function(){unsubscribe.forEach(function(u){u()})})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(10),__webpack_require__(28),__webpack_require__(37),__webpack_require__(8),__webpack_require__(88),__webpack_require__(1024)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,$,fPatterns,fwebIp,ftnt_shared){var isArray=angular.isArray,ng_parse_params=function(validation_type,attr,scope){var directive={f_min_length:"fMinLength",f_max_length:"fMaxLength",f_length:"fLength"}[validation_type]||validation_type;if(angular.isUndefined(directive))return[];var directive_val=scope.$eval(attr[directive]);if(angular.isUndefined(directive_val))return[];var num=parseInt(directive_val,10);return Number.isFinite(num)?[num]:[]},is_subnet0=function(ip){return 0===ip.indexOf("0")},validate_ipv4=function(value,required,isUnicast){var valid=fPatterns.commonRegExp.IP_HOST.test(value);return valid&&isUnicast&&(valid=fwebIp.IpMask.isUnicast(value)),valid&&!(required&&is_subnet0(value))},validate_ipv6=function(value,required){var valid=fPatterns.commonRegExp.IP6_HOST.test(value),ip=goog.net.IpAddress.fromString(value),unspecified=ip&&6===ip.getVersion()&&0===ip.toInteger().toNumber();return valid&&!(required&&unspecified)},validationMessageMap=new Map;module.directive("fValidationMessage",function(lang,$timeout,fFieldConfig){var DEBOUNCE_INTERVAL=250;function ValidationMessage(){this.errorTextValues={}}return ValidationMessage.prototype={_blurForced:!1,forceMessageVisible:function(){this._blurForced=!0,this._refreshMsg({name:"validation-msg_show"})},setErrorTextValues:function(errorName,errorTextArray){this.errorTextValues[errorName]=errorTextArray},_refreshMsg:null},{restrict:"A",require:["?ngModel","?fValidationLink","fValidationMessage"],controller:ValidationMessage,compile:function(){return function(scope,elem,attr,ctrls){var ngModel=ctrls.shift(),fValidationLink=ctrls.shift(),ctrl=ctrls.shift(),blurred=!1,msg=function(elem){var msg,field=elem.closest(".field, .inline-field, .validation-container");if(!field.length)throw new Error("Validated input not inside a proper field");return elem[0].id&&(msg=field.find('.validation-msg[for="'+elem[0].id+'"]')),msg&&msg.length||(msg=field.find(".validation-msg")),msg.length||(msg=angular.element("<label>").addClass("validation-msg error").css("display","none"),field.append(msg)),msg}(elem);ctrl._refreshMsg=refreshMsg;var timeout,refreshing={};function debounceRefresh(value){function showLast(a,b){var u=fFieldConfig.messages.forceValidation;return(a===u?1:0)+(b===u?-1:0)}value&&!refreshing[value.name]&&(refreshing[value.name]=value,timeout=timeout||$timeout(function(){Object.keys(refreshing).sort(showLast).forEach(function(k){refreshMsg(refreshing[k])}),timeout=null,refreshing={}},DEBOUNCE_INTERVAL))}function refreshMsg(value){var force=!elem.is("input,select,textarea")||ctrl._blurForced;value&&value.name===fFieldConfig.messages.forceValidation&&ngModel.$setDirty();var msgs,linkShow=(fValidationLink&&fValidationLink.others()||[]).some(function(link){return link&&link.$dirty&&link.$invalid});ngModel.$dirty&&ngModel.$invalid&&(blurred||force)&&ngModel.$error?(msgs=[],angular.forEach(ngModel.$error,function(val,key){if(val){var priority="required"===key,lang_err=scope.$eval(attr.fValidationMessage);if(angular.isObject(lang_err)&&(lang_err=lang_err[key]),void 0===lang_err&&(lang_err=fFieldConfig.errorTranslationMap[key]),lang_err){var fmt_params=ctrl.errorTextValues[key]||ng_parse_params(key,attr,scope);lang_err=lang(lang_err,fmt_params),msgs[priority?"unshift":"push"](lang_err)}}}),msg.text(msgs.length>0?msgs[0]:""),msg.css("display",msgs.length>0?"":"none")):linkShow||msg.css("display","none")}ngModel&&(elem.on("blur",function(){blurred=!0,refreshMsg()}),scope.$watch(function(){return scope.$eval(attr.fValidationMessage)},refreshMsg,!0),scope.$watch(function(){return ngModel.$error},refreshMsg,!0),scope.$on(fFieldConfig.messages.forceValidation,debounceRefresh),scope.$on("validation-msg_update",debounceRefresh),validationMessageMap.set(ngModel,ctrl),scope.$on("$destroy",function(){validationMessageMap.delete(ngModel)}))}}}}).directive("fValidationLink",function(){var recursing=!1;return{require:["ngModel","^form","fValidationLink"],priority:-1e3,controller:function(){},link:function(scope,elem,attr,ctrls){var ngModel=ctrls.shift(),ngForm=ctrls.shift(),ctrl=ctrls.shift();ctrl._ngModel=ngModel,ngModel.$parsers.push(function(value){var others=ctrl.others();return recursing||(recursing=!0,scope.$evalAsync(function(){others.forEach(function(other){other.$validate();var unwatch=scope.$watch(function(){return other.$pending},function(value){if(!value&&(unwatch(),!other.$isEmpty(other.$viewValue)&&!other.$valid)){var msg=validationMessageMap.get(other);msg&&msg.forceMessageVisible()}})}),recursing=!1})),value}),ctrl.others=function(){return attr.fValidationLink.split(",").map(function(otherName){return otherName.trim()}).map(function(name){return ngForm[name]}).filter(function(other){return other})}}}}).directive("fValidationWatch",function(){return{require:"ngModel",link:function(scope,elem,attr,ngModel){var remove_if=angular.noop,remove_watch=angular.noop;attr.$observe("fValidationWatch",function(value){remove_if();var expressions=value.split(/\s+if\s+/),watch_expr=expressions.shift(),if_expr=expressions.shift();function watch(enabled){remove_watch(),enabled&&(remove_watch=scope.$watch(watch_expr,do_watch))}function do_watch(v,oldV){v!==oldV&&(ngModel.$untouched&&!attr.alwaysWatch||(ngModel.$setDirty(),ngModel.$validate()))}if_expr?remove_if=scope.$watch(if_expr,watch):(watch(!0),remove_if=angular.noop)})}}}),module.directive("fIsUnique",function($q,CMDB,$parse){return{restrict:"A",require:["ngModel","?fValidationMessage"],link:function(scope,elem,attr,ctrls){var expressions,cmdbPropsPromise,ngModel=ctrls.shift(),validationMsg=ctrls.shift();scope.$watch(attr.fIsUnique,function(newValue){if(!newValue)return void(cmdbPropsPromise=null);var normalizer,normalize,cmdbs;attr.itemNormalizer?(normalizer=$parse(attr.itemNormalizer),normalize=function(item){return normalizer(scope,{$item:item})}):normalize=function(value){return value};let fortigate;attr.fortigate&&(fortigate=$parse(attr.fortigate)(scope));expressions=[],cmdbs=function(paths){var cmdbs=[];isArray(paths)||(paths=[paths]);return angular.forEach(paths,function(config){if("string"==typeof config)expressions.push(config);else{if(!config||!config.path||!config.name)return;if(config.format&&config.format.indexOf("|")>=0&&!attr.uniqueComparator)throw new Error('If multiple properties are specified, a custom comparison expression ("unique-comparator") must also be specified');config=angular.extend({format:"name",model:!1},Object.assign({csfProxy:fortigate},config)),cmdbs.push(new CMDB(config))}}),cmdbs}(newValue),(cmdbPropsPromise=cmdbs.length?new CMDB.Union(cmdbs).fetch().$promise.then(function(objects){var result=new Set(objects.map(function(obj){var item;item=obj.$cmdb.format.indexOf("|")>=0?obj.$cmdb.format.split("|").reduce(function(item,propName){return item[propName]=obj[propName],item},{}):obj[obj.$cmdb.format];return normalize(item)}));return result.delete(void 0),result}):$q.resolve(null)).then(()=>{ngModel.$validate()})},!0),scope.$watch(attr.retriggerOnChange,(newVal,oldVal)=>{newVal&&newVal!==oldVal&&(ngModel.$setDirty(),ngModel.$validate())},!0),ngModel.$asyncValidators.f_is_unique=function(value){var checkCollision,normValue;attr.uniqueComparator&&(checkCollision=$parse(attr.uniqueComparator));normValue=attr.valueNormalizer?scope.$eval(attr.valueNormalizer,{$value:value}):value;return cmdbPropsPromise?cmdbPropsPromise.then(function(existingItems){var items,item,collision,valid;if(checkCollision&&existingItems){for(items=existingItems.values(),collision=!1;!1===collision&&!(item=items.next()).done;)collision=checkCollision(scope,{$value:normValue,$item:item.value});valid=!collision}else valid=!!existingItems&&!existingItems.has(value);valid=valid||expressions.some(function(expr){return scope.$eval(expr,{$value:value})}),collision&&validationMsg&&validationMsg.setErrorTextValues("f_is_unique",[collision]);return valid||$q.reject()}):$q.when(!0)}}}}).directive("fPasswordPolicy",function($resource,$http,$timeout,$q){return{restrict:"A",require:["ngModel","?fValidationMessage","?^^fField"],link:function(scope,elem,attr,controllers){var accepted=["ipsec","admin","guest-admin"],url="/api/v2/monitor/system/password-policy-conform/",DEBOUNCE=1e3,last_timeout=$q.reject(),ngModel=controllers.shift(),fValidationMessage=controllers.shift(),fField=controllers.shift();ngModel.$asyncValidators.f_password_policy=function(password){var apply_to,mkey=scope.$eval(attr.adminName),policy=scope.$eval(attr.fPasswordPolicy),old_password=scope.$eval(attr.oldPassword)||"";if(ngModel.$setValidity("f_password_reused",!0),attr.fPasswordPolicy&&!policy)return $q.when(!0);apply_to=angular.isUndefined(policy)||-1===accepted.indexOf(policy)?"admin":policy;var skip_check=Object.keys(ngModel.$error).some(function(name){return"f_password_policy"!==name&&ngModel.$error[name]}),wait=0;return last_timeout&&(wait=DEBOUNCE,$timeout.cancel(last_timeout),last_timeout=$q.reject()),skip_check||(last_timeout=$timeout(function(){return $http({method:"POST",url:url,data:{mkey:mkey,apply_to:apply_to,password:password,old_password:old_password}}).then(function(res){var results=res.data.results,resolution=!0;return results.valid||(results.reused?(ngModel.$setValidity("f_password_reused",!1),resolution=$q.resolve()):resolution=$q.reject(),fValidationMessage&&fValidationMessage.forceMessageVisible(),fField&&fField.showValidationMessages()),resolution})},wait)),last_timeout},scope.$watchGroup([attr.fPasswordPolicy,attr.oldPassword],function(){ngModel&&ngModel.$dirty&&ngModel.$validate()},!0)}}}).directive("fPasswordPolicyRequirements",function(lang,passwordPolicyService){return{restrict:"A",scope:{policy:"="},templateUrl:__webpack_require__(1025),link:function(scope,elem,attr){var accepted=["admin","guest-admin"],checkIntegerVal=function(val){return val>0},POLICY_MAP={"min-lower-case-letter":{type:Number,isValid:checkIntegerVal,langKey:"lower"},"min-non-alphanumeric":{type:Number,isValid:checkIntegerVal,langKey:"Special Characters"},"min-number":{type:Number,isValid:checkIntegerVal,langKey:"Numbers (0-9)"},"min-upper-case-letter":{type:Number,isValid:checkIntegerVal,langKey:"upper"},"minimum-length":{type:Number,isValid:checkIntegerVal,langKey:"min_len"},"change-4-characters":{type:Boolean,isValid:function(val){return"enable"===val},langKey:"Change 4 Characters"},"reuse-password":{type:Boolean,isValid:function(val){return"disable"===val},langKey:"Cannot reuse old passwords"}},getPolicy=function(policy){passwordPolicyService.getAllPolicies().then(function(){var key=-1===accepted.indexOf(policy)?"admin":policy,obj=passwordPolicyService.policies[key];obj.$promise.then(function(){obj["apply-to"]=obj["apply-to"].split(" "),scope.policy=obj,scope.policyRequirements=function(obj){var helpText,attrValue,requirements=[],policy=obj.$$original;return policy&&"enable"===policy.status&&angular.forEach(POLICY_MAP,function(attributes,attrKey){(attrValue=policy[attrKey])&&attributes.isValid(attrValue)&&(helpText={text:lang(attributes.langKey).toString(),requirement:attributes.type===Boolean?"":attrValue},requirements.push(helpText))}),requirements}(obj)})})};attr.$observe("fPasswordPolicyRequirements",function(val){getPolicy(val)}),scope.$on("$destroy",function(){passwordPolicyService.purgeState()})}}}).directive("fMinLength",function(){return{restrict:"A",require:["ngModel","?^^fField"],link:function(scope,elem,attr,requires){var ngModel=requires[0],field=requires[1];function minValidator(value){var min=parseInt(scope.$eval(attr.fMinLength),10),valid=!(angular.isNumber(min)&&!ngModel.$isEmpty(value)&&value.length<min),changed=valid!==ngModel.$valid;return ngModel.$setValidity("f_min_length",valid),!changed&&valid||(scope.$broadcast("validation-msg_update"),field&&field.setValidationData("f_min_length",min)),value}if(ngModel){ngModel.$parsers.push(minValidator),ngModel.$formatters.push(minValidator);var remove=angular.noop;attr.$observe("fMinLength",function(value){remove(),remove=scope.$watch(value,function(newValue,oldValue){newValue!==oldValue&&minValidator(ngModel.$viewValue)})})}}}}).directive("fMaxLength",function(){return{restrict:"A",require:["ngModel","?^^fField"],link:function(scope,elem,attr,requires){var ngModel=requires[0],field=requires[1];function maxValidator(value){var max=parseInt(scope.$eval(attr.fMaxLength,{$value:value}),10),valid=!(angular.isNumber(max)&&!ngModel.$isEmpty(value)&&value.length>max),changed=valid!==ngModel.$valid;return ngModel.$setValidity("f_max_length",valid),!changed&&valid||(scope.$broadcast("validation-msg_update"),field&&field.setValidationData("f_max_length",max)),value}if(ngModel){ngModel.$parsers.push(maxValidator),ngModel.$formatters.push(maxValidator);var remove=angular.noop;attr.$observe("fMaxLength",function(value){remove(),remove=scope.$watch(value,function(newValue,oldValue){newValue!==oldValue&&maxValidator(ngModel.$viewValue)})})}}}}).directive("fLength",function(){return{restrict:"A",require:["ngModel","?^^fField"],link:function(scope,elem,attr,[ngModel,field]){const length=parseInt(scope.$eval(attr.fLength),10);field&&field.setValidationData("f_length",length),ngModel.$validators.length=function(value){const valid=!(angular.isNumber(length)&&!ngModel.$isEmpty(value)&&value.length!==length);return ngModel.$setValidity("f_length",valid),valid}}}}).directive("fOneRequiredGroup",function(){return{restrict:"A",controller:function(){this.models=Object.create(null),this.addModel=function(id,model){this.models[id]=model},this.removeModel=function(id){delete this.models[id]},this.isOneDirty=function(){return Object.keys(this.models).some(function(m){return this.models[m].$dirty}.bind(this))},this.isValid=function(){return Object.keys(this.models).some(function(m){return!!this.models[m].$viewValue}.bind(this))}}}}).directive("fOneRequired",function(){return{restrict:"A",require:["ngModel","^fOneRequiredGroup"],link:function(scope,elem,attr,ctrls){var groupController=ctrls[1],ngModel=ctrls[0];groupController.addModel(scope.$id,ngModel),scope.$on("$destroy",function(){groupController.removeModel(scope.$id)}),scope.$watch(groupController.isValid.bind(groupController),function(){ngModel.$viewValue,ngModel.$setValidity("f_one_required",groupController.isValid()),groupController.isOneDirty()&&(ngModel.$setDirty(),ngModel.$options&&ngModel.$options.allowInvalid||groupController.isValid())})}}}).directive("fIsEmpty",function($parse){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ngModel){var oldEmpty=ngModel.$isEmpty;ngModel.$isEmpty=function(value){return value=0===arguments.length?ngModel.$viewValue:value,oldEmpty(value)||$parse(attr.fIsEmpty)(scope,{$value:value})}}}}).directive("fIpmask",function(){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){return scope.$watch(function(){var cond=attr.fIpmask||"true";if(scope.$eval(cond))return ngModel.$modelValue},function(value){if(ngModel.$isEmpty(value))ngModel.$setValidity("f_ipmask",!0);else{var valid=fPatterns.commonRegExp.IP_MASK.test(value);ngModel.$setValidity("f_ipmask",valid)}})}}}).directive("fMacAddress",function(){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){ngModel.$validators.f_mac_address=function(value){var cond=attr.fMacAddress||"true";return scope.$eval(cond)?fPatterns.commonRegExp.MAC_ADDRESS.test(value):value}}}}).directive("fIpv4Address",function(){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){const enabled=()=>attr.fIpv4Address||"true",rejectZeroAddress=void 0!==attr.rejectZeroAddress;ngModel.$validators.f_ipv4_address=function(value){var isUnicast=attr.isUnicast||"false";return!scope.$eval(enabled())||(!(attr.required||!ngModel.$isEmpty(value))||(!rejectZeroAddress||"0.0.0.0"!==value)&&validate_ipv4(value,attr.required,scope.$eval(isUnicast)))},ngModel.$parsers.push(function(value){return scope.$eval(enabled())&&!rejectZeroAddress&&!attr.required&&ngModel.$isEmpty(value)?"0.0.0.0":value})}}}).directive("fIpv6Address",function(){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){ngModel.$validators.f_ipv6_address=function(value){var cond=attr.fIpv6Address||"true";return scope.$eval(cond)?validate_ipv6(value,attr.required):value},ngModel.$parsers.push(function(value){return!attr.required&&ngModel.$isEmpty(value)?"::":value})}}}).directive("fIpv46Address",function(){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){ngModel.$validators.f_ipv46_address=function(value){var cond=attr.fIpv46Address||"true";return scope.$eval(cond)?!(!attr.required||!ngModel.$isEmpty(value))||(validate_ipv4(value,attr.required)||validate_ipv6(value,attr.required)):value},ngModel.$parsers.push(function(value){return!attr.required&&ngModel.$isEmpty(value)?"0.0.0.0":value})}}}).directive("fCombinedField",function($parse,FOSError){return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){function get_params(value){var result=value||scope.$eval(attr.fCombinedField);return result&&{fields:result[0],parsed:result[0].map(function(field){return $parse(field)}),type:result[1]||"",separator:result[2]||"-"}}function part_test(type){return function(part,idx,array){if(type instanceof RegExp)return type.test(part);if(angular.isFunction(type))return type(part);if("address_range"===type){var validIpAddress=function(address){return fPatterns.commonRegExp.IP_HOST.test(address)},ipAddressAsInteger=function(address){return validIpAddress(address)?goog.net.IpAddress.fromString(address).toInteger().toNumber():0};return validIpAddress(part)&&!is_subnet0(part)&&ipAddressAsInteger(array[0])<=ipAddressAsInteger(array[1])}if(type)throw new FOSError("Unable to test f-combined-field type "+type);return!0}}function parse(text){var params=get_params();if(!params)return text;var parts=(text||"").split(params.separator),valid=!params.type;if(parts.length===params.fields.length){var pt=part_test(params.type);(valid=parts.every(pt))&&parts.forEach(function(part,i){params.parsed[i].assign(scope,part)})}return ngModel.$setValidity("f_combined_field",valid),valid?text:void 0}function format(text){var params=get_params();if(!params)return text;var fields=params.parsed.map(function(parsed){return parsed(scope)});params.type&&(fields=fields.map(function(field){return field||"0.0.0.0"}));var valid=!params.type;if(2===fields.length&&params.fields.length){var ft=part_test(params.type);valid=fields.every(ft)}return ngModel.$setValidity("f_combined_field",valid),fields.join(params.separator)}var remove=angular.noop;scope.$watch(attr.fCombinedField,function(newVal,oldVal){if(newVal===oldVal&&(ngModel.$parsers.push(parse),ngModel.$formatters.push(format)),newVal){oldVal||format(ngModel.$modelValue),remove();var params=get_params(newVal);params&&(remove=scope.$watch("["+params.fields.join(",")+"]",function(values){var value=values.join(params.separator),ngModel=$parse(attr.ngModel);angular.toJson(value)!==angular.toJson(ngModel(scope))&&ngModel.assign(scope,value)},!0))}else ngModel.$setValidity("f_combined_field",!0)},!0)}}}).directive("fCombined",function($parse,FOSError){var DEFAULT_SEPARATOR="-";return{restrict:"A",require:"ngModel",scope:"=ngModel",link:function(scope,elem,attr,ngModel){function format(values){if(Array.isArray(values))return values.join(attr.separator||DEFAULT_SEPARATOR)}function validateOn(value,expr,index,count){var result=$parse(expr)(scope,{$value:value,$index:index,$count:count});return result instanceof RegExp?result.test(value):!!result}var quora={all:function(parts,expr){return parts.every(function(p,index){return validateOn(p,expr,index,parts.length)})},allOrNone:function(parts,expr){var matches=parts.reduce(function(count,p,index){return count+(validateOn(p,expr,index,parts.length)?1:0)},0);return 0===matches||matches===parts.length},order:function(parts,exprSource){var expr=$parse(exprSource)(scope);if(!angular.isFunction(expr))throw new FOSError("Expression is not a function.");return parts.every(function(p,ndx,arr){return 0===ndx||expr(arr[ndx-1],p)})}},$isEmpty=ngModel.$isEmpty;ngModel.$isEmpty=function(value){return $isEmpty.apply(this,arguments)||0===value.length},ngModel.$parsers.push(function(text){return text?text.split(attr.separator||DEFAULT_SEPARATOR):[]}),ngModel.$formatters.push(format),ngModel.$validators.cardinality=function(parts){if(!Array.isArray(parts))return!1;var maxCard=$parse(attr.fCombined||"2")(scope),minCard=$parse(attr.minCardinality||attr.fCombined||"2")(scope),actualCard=parts.length;return!actualCard||actualCard>=minCard&&actualCard<=maxCard},Object.getOwnPropertyNames(quora).forEach(function(q){var attrName="valid"+q[0].toUpperCase()+q.slice(1),exprSource=attr[attrName];exprSource&&(ngModel.$validators[q]=function(parts){return!!Array.isArray(parts)&&(ngModel.$isEmpty(format(parts))||quora[q](parts,exprSource))})})}}}).directive("fWith",function(){return{scope:!0,link:function(scope,elem,attr){var exprs=attr.fWith.split(/\s*;\s*/).map(function(expr){return expr.split(/\s+as\s+/)});if(exprs.some(function(expr){return 2!==expr.length}))throw new Error('f-with directive requires an expression like "_expression_ as _alias_[;_expression_ as _alias_;...]"');exprs.forEach(function(expr){scope.$watch(expr[0],function(value){scope[expr[1]]=value},!0)})}}}).directive("fCompile",function($compile){return function(scope,element,attrs){scope.$watch(function(){return scope.$eval(attrs.fCompile)},function(html){html&&(element.html(html),$compile(element.contents())(scope))})}}).directive("fHtmlContent",function(){return{scope:{content:"=fHtmlContent"},link:function(scope,element){scope.$watch("content",function(content){Promise.resolve(content).then(function(content){ftnt_shared.util.setElementContent(element[0],content)})})}}}).directive("fTextarea",function(){return{require:"ngModel",scope:!1,link:function(scope,elem,attr,ngModel){var textOptions;elem.addClass("f-textarea"),scope.$watch(function(){return scope.$eval(attr.fMaxLength)},function(maxLength){void 0!==maxLength&&(textOptions={maxLength:maxLength},elem.textarea(textOptions))}),scope.$on("textarea_reset",function(){scope.$$postDigest(function(){elem.height(0),elem.textarea()})});var render=ngModel.$render;ngModel.$render=function(){var result=render.apply(this,arguments);return elem.textarea(textOptions),result}}}}).directive("fScrolling",function($window,$document,$rootScope,$timeout){return{scope:!1,link:function(scope,elem){var timeout,DEBOUNCE_INTERVAL=100;function update(){return $timeout.cancel(timeout),timeout=$timeout(function(){var doc;elem.toggleClass("f-scrolling",(doc=$document[0],$window.innerHeight?doc.body.offsetHeight>$window.innerHeight:doc.documentElement.scrollHeight>doc.documentElement.offsetHeight||doc.body.scrollHeight>doc.body.offsetHeight))},DEBOUNCE_INTERVAL,!1),!0}angular.element($window).on("resize.f-scrolling",update);var deregisterWatcher=$rootScope.$watch(update);scope.$on("$destroy",function(){deregisterWatcher(),angular.element($window).off("resize.f-scrolling",update),$timeout.cancel(timeout)})}}}).directive("fPattern",function(){return{scope:!1,require:"ngModel",link:function(scope,elem,attr,ngModel){function fPatternValidator(value){var pattern=scope.$eval(attr.fPattern);return!pattern||ngModel.$isEmpty(value)||pattern.test(value)?ngModel.$setValidity("f_pattern",!0):(ngModel.$setValidity("f_pattern",!1),value=void 0),value}scope.$watch(attr.fPattern,function(){fPatternValidator(ngModel.$viewValue)}),ngModel.$formatters.push(fPatternValidator),ngModel.$parsers.push(fPatternValidator)}}}).directive("fValueConfirm",function(){return{require:["ngModel","?fValidationMessage","?^^fField"],link:function(scope,elem,attr,controllers){var otherValue,unwatch=angular.noop;attr.$observe("fValueConfirm",function(expr){unwatch(),unwatch=scope.$watch(expr,update)});var ngModel=controllers.shift(),fValidationMessage=controllers.shift(),fField=controllers.shift();function update(newVal){(ngModel.$dirty||newVal)&&(otherValue=newVal,ngModel.$validate())}ngModel.$validators.f_value_confirm=function(value){var isValid=value===otherValue;return isValid||(fValidationMessage&&fValidationMessage.forceMessageVisible(),fField&&fField.showValidationMessages()),isValid||!value}}}}).directive("fValueIfEmpty",function(){return{scope:{fValueIfEmpty:"@"},restrict:"A",require:"ngModel",link:function(scope,elm,attrs,ctrl){ctrl.$parsers.push(function(viewValue){return""===viewValue?scope.fValueIfEmpty:viewValue})}}}).directive("fValidateEmptyArray",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ngModel){scope.$watchCollection(()=>ngModel.$modelValue,()=>{ngModel.$validate()}),ngModel.$validators.fValidateEmptyArray=(list=>Array.isArray(list)&&!!list.length)}}}).directive("fValidValue",function(){return{require:"ngModel",link:function(scope,elem,attr,ngModel){ngModel.$validators.fValidValue=function(value){return scope.$eval(attr.fValidValue,{$value:value})}}}}).directive("fIpRange",function(){return{restrict:"A",require:["^ngModel"],link:function(scope,elem,attr,ctrls){const noZeroSubnet=attr.hasOwnProperty("noZeroSubnet"),isMulticast=attr.hasOwnProperty("isMulticast"),multicastRegex=fPatterns.commonRegExp.MULTICAST_IP_HOST;ctrls[0].$validators.fIpRange=((modelValue,viewValue)=>{const minIp=scope.$eval(attr.minIp),maxIp=scope.$eval(attr.maxIp),ipVersion=parseInt(scope.$eval(attr.ipVersion),10);let iprange;return null==viewValue||""===viewValue.trim()||2===(iprange=(iprange=viewValue.replace(/ /g,"")).split("-")).length&&(!!(4!==ipVersion||!isMulticast||multicastRegex.test(iprange[0])&&multicastRegex.test(iprange[1]))&&(!(minIp&&!fwebIp.isAscending(minIp,iprange[0]))&&(!(maxIp&&!fwebIp.isAscending(iprange[0],maxIp))&&fwebIp.isAscending(iprange[0],iprange[1],{ipVersion:ipVersion,noZeroSubnet:noZeroSubnet}))))})}}}).directive("fIpWildcard",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ngModel){const ipRegex=fPatterns.commonRegExp.IP_HOST,ipSubnetRegex=fPatterns.commonRegExp.IP_SUBNET,ipMaskRegex=fPatterns.commonRegExp.IP_MASK,wildcardMaskRegex=fPatterns.commonRegExp.WILDCARD_MASK;ngModel.$formatters.push(data=>data.replace(" ","/")),ngModel.$validators.fIpWildcard=(value=>{let vals=value.split("/");return vals.length>1?"*"===vals[1]?ipRegex.test(vals[0]):ipRegex.test(vals[0])&&(ipMaskRegex.test(vals[1])||wildcardMaskRegex.test(vals[1]))||ipSubnetRegex.test(value):(vals=value.split(" ")).length>1&&(ipRegex.test(vals[0])&&(ipMaskRegex.test(vals[1])||wildcardMaskRegex.test(vals[1])))})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/menu/partials/defaults.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-create create-fn="create" ng-hide="hideCreate" is-add="createIsAdd" enabled="createEnabled()"></div>\n<div f-menu-item-edit edit-fn="edit" ng-hide="hideEdit" enabled="editEnabled($entries)"></div>\n<div f-menu-item-edit-cli edit-cli-fn="editCli" ng-show="showEditCli" enabled="editCliEnabled($entries)"></div>\n<div f-menu-item-clone clone-fn="clone" ng-show="showClone" enabled="cloneEnabled($entries)"></div>\n<div f-menu-item-delete delete-fn="delete" ng-hide="hideDelete" enabled="deleteEnabled($entries)"\n     delete-entries-fn="deleteEntriesFn"></div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(32),__webpack_require__(37),__webpack_require__(34),__webpack_require__(451)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,formatters,ip,fDatetime){module.filter({password:function(){return function(value){return(value||"").replace(/./g,"•")}},bytes:function(){return formatters.metric_bytes},binaryBytes:function(){return formatters.binary_bytes},bytesPerSecond:function(){return formatters.metric_bytes_per_second},bitsPerSecond:function(){return formatters.metric_bits_per_second},case:function($filter){var doCase={upper:$filter("uppercase"),lower:$filter("lowercase"),title:function(value){return String(value).toLowerCase().replace(/(?:^|\s)(\w)/g,doCase.upper)},sentence:function(value){return String(value).toLowerCase().replace(/(?:^|\.\s+)(\w)/g,doCase.upper)}};return function(value,fmt){if(fmt in doCase)return doCase[fmt](value);throw new Error("Unable to format using "+fmt+"-case")}},elapsedTime:function(){return fDatetime.elapsedTime},elapsedRelativeTime:function(){return function(datetime,params={}){let browserNow=Date.now();datetime=toNumber(datetime);let now=toNumber(params.now);now=now||(params.fromBrowser?browserNow:fDatetime.browserUTCToFortiGateUTC(browserNow));let diff=Math.max(0,now-datetime);return fDatetime.elapsedTime(diff,null,null,params.verbosity);function toNumber(possibleDate){return possibleDate&&"number"!=typeof possibleDate&&"function"==typeof possibleDate.getTime?possibleDate.getTime():possibleDate}}},relativeDate:function(){return function(time){var datetime=Number.isInteger(time)?new Date(time*fDatetime.S_TO_MS):time;return fDatetime.formatDateFromNow(datetime)}},keys:function(){return function(obj){return Object.keys(obj||{})}},ngURI:function(structure){return function(uri){var value=null;return uri&&(value=structure.ngURI(uri).substring(1)),value}},ngRouteURI:function(structure){return function(uri){var value=null;return uri&&(value=structure.ngRouteURI(uri)),value}},subnet:function(){return function(value){var ipmask=ip.IpMask.parse(value);return ipmask.fullNetwork()}},toTrustedHtml:function($sce){return function(html){return $sce.trustAsHtml(html)}},location:function(){return function(locObj){var locArr=[];return locObj?(locObj.city&&locArr.push(locObj.city.names.en),locObj.country&&locArr.push(locObj.country.names.en),locObj.continent&&locArr.push(locObj.continent.names.en),locArr.join(", ")):""}},numberWithSign:function($filter){var numberFilter=$filter("number");return function(value,decimalPlaces){var prefix="";return"number"==typeof value&&(value>=0&&(prefix="+"),decimalPlaces&&(value=Number(value.toFixed(decimalPlaces)))),prefix+numberFilter(value)}},buildNumber:function(){return function(input){var result,number,minLength=4,prefix=Array(minLength).join("0");return input&&(number=Number(input),isNaN(number)||(minLength=Math.max(minLength,String(input).length),result=(prefix+number).slice(-minLength))),result}},wattage:function(){return formatters.wattage},fDate:function(){return function(date,params){return fDatetime.formatDate(date,params)}},fTime:function(){return function(date,params){return fDatetime.formatTime(date,params)}},fDateTime:function(){return function(date,params){return fDatetime.formatDateTime(date,params)}},decimalToPercent:function(){return function(value,places=0){return"number"==typeof(value=Number(value))&&(value=(100*value).toFixed(places)),value+"%"}},unfreezeToMap:function(){return function(collection){return Array.isArray(collection)?collection.reduce((map,value,index)=>(map[index]=value,map),{}):collection}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){"use strict";var module={generate_uuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)})}};return module}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($){"use strict";const module={};return module.getUserInfoByIP=function(sourceip){return module.getUserInfoSingle([{type:"sourceip",value:sourceip}])},module.getAll=async function(params={}){params=Object.assign({filters:[{type:"all"}]},params);try{return(await module.queryUserInfo(params)).entries}catch(e){return[]}},module.getUserInfoSingle=async function(filters){const params={start:0,number:1,filters:filters};try{let[userInfo,thumbnail]=await Promise.all([module.queryUserInfo(params),module.getUserThumbnail(params)]),entry=userInfo&&userInfo.entries[0]||{};return thumbnail&&(entry.thumbnailPhoto=[thumbnail]),entry}catch(e){return{}}},module.queryUserInfo=function(params){let url="/api/v2/monitor/user/info/query";return params.csfPath&&(url=`csf/${params.csfPath}${url}`,delete params.csfPath),$.get(url,function(params){const request=Object.assign({},params);request.filters&&(request.filters=JSON.stringify(request.filters));request.keys&&(request.keys=JSON.stringify(request.keys));return request}(params)).then(response=>response.results)},module.getUserThumbnail=function(params){return $.ajax("/api/v2/monitor/user/info/thumbnail",{type:"GET",contentType:"application/json",data:{filters:JSON.stringify(params.filters)},xhr:function(){let xhr=new XMLHttpRequest;return xhr.responseType="blob",xhr}}).then(async blob=>{let mime=await function(blob){return new Promise(function(resolve,reject){let reader=new FileReader;reader.addEventListener("load",function(event){let data=event.target.result,mime="";mime=data.startsWith("PNG\r\n\n")?"image/png":data.startsWith("ÿØ")?"image/jpeg":data.startsWith("GIF89a")?"image/gif":"",resolve(mime)}),reader.addEventListener("error",function(){reject()}),reader.readAsBinaryString(blob.slice(0,8))})}(blob);return mime?blob.slice(0,blob.size,mime):null}).catch(()=>null)},module}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}).call(this,__webpack_require__(44)(module))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(30),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,fwebLog,ftnt_shared){"use strict";const Sliderin=ftnt_shared.Sliderin;var f=window.fweb=window.fweb||{};f.extend=$.extend,f.extend({iframe:function(url){return fwebLog.warn('Using deprecated "fweb.iframe"'),{url:url}},dialog:function(content){var slide,params;return fwebLog.warn('Using deprecated "fweb.dialog"'),params="object"==typeof content&&content.url?content:{content:content},(slide=new Sliderin(params)).open(),slide}}),f.extend({opener:function(){return fwebLog.warn('Using deprecated "fweb.opener"'),top["embedded-iframe"]||window.parent}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(30),__webpack_require__(0),__webpack_require__(130),__webpack_require__(42),__webpack_require__(46),__webpack_require__(170),__webpack_require__(171),__webpack_require__(27),__webpack_require__(416),__webpack_require__(8),__webpack_require__(29),__webpack_require__(11),__webpack_require__(12),__webpack_require__(13),__webpack_require__(14),__webpack_require__(15),__webpack_require__(16),__webpack_require__(17),__webpack_require__(18),__webpack_require__(19),__webpack_require__(20),__webpack_require__(22),__webpack_require__(747),__webpack_require__(748),__webpack_require__(54),__webpack_require__(756),__webpack_require__(757),__webpack_require__(758),__webpack_require__(760),__webpack_require__(761),__webpack_require__(762),__webpack_require__(763),__webpack_require__(764),__webpack_require__(765),__webpack_require__(766),__webpack_require__(767),__webpack_require__(768),__webpack_require__(778),__webpack_require__(779),__webpack_require__(780),__webpack_require__(781),__webpack_require__(782),__webpack_require__(783),__webpack_require__(784),__webpack_require__(785),__webpack_require__(786),__webpack_require__(787),__webpack_require__(788),__webpack_require__(789),__webpack_require__(790),__webpack_require__(791),__webpack_require__(792),__webpack_require__(793),__webpack_require__(794),__webpack_require__(795),__webpack_require__(796),__webpack_require__(797),__webpack_require__(798),__webpack_require__(799),__webpack_require__(800),__webpack_require__(801),__webpack_require__(802),__webpack_require__(803),__webpack_require__(804),__webpack_require__(805),__webpack_require__(806),__webpack_require__(807),__webpack_require__(808),__webpack_require__(427),__webpack_require__(428),__webpack_require__(809),__webpack_require__(177),__webpack_require__(810),__webpack_require__(88),__webpack_require__(231),__webpack_require__(825),__webpack_require__(826),__webpack_require__(827),__webpack_require__(828),__webpack_require__(841),__webpack_require__(842),__webpack_require__(230),__webpack_require__(178),__webpack_require__(843),__webpack_require__(26),__webpack_require__(844),__webpack_require__(845),__webpack_require__(846),__webpack_require__(847),__webpack_require__(848),__webpack_require__(849),__webpack_require__(850),__webpack_require__(471),__webpack_require__(977),__webpack_require__(978),__webpack_require__(472),__webpack_require__(979),__webpack_require__(982),__webpack_require__(473),__webpack_require__(983),__webpack_require__(985),__webpack_require__(987),__webpack_require__(989),__webpack_require__(990),__webpack_require__(999),__webpack_require__(1001),__webpack_require__(1003),__webpack_require__(1005),__webpack_require__(183),__webpack_require__(446),__webpack_require__(1007),__webpack_require__(1009),__webpack_require__(1011),__webpack_require__(1014),__webpack_require__(445),__webpack_require__(1015),__webpack_require__(1016),__webpack_require__(474),__webpack_require__(1017),__webpack_require__(1019),__webpack_require__(1020),__webpack_require__(1021),__webpack_require__(1023),__webpack_require__(475),__webpack_require__(476),__webpack_require__(1026),__webpack_require__(185),__webpack_require__(1035),__webpack_require__(1036),__webpack_require__(1038),__webpack_require__(1040),__webpack_require__(1042),__webpack_require__(1044),__webpack_require__(1046),__webpack_require__(1048),__webpack_require__(478),__webpack_require__(1050),__webpack_require__(479),__webpack_require__(1075),__webpack_require__(1077),__webpack_require__(1078),__webpack_require__(1079),__webpack_require__(1080),__webpack_require__(1081),__webpack_require__(1082),__webpack_require__(1083),__webpack_require__(1085),__webpack_require__(1087),__webpack_require__(1089),__webpack_require__(1091),__webpack_require__(1092),__webpack_require__(1093),__webpack_require__(1094),__webpack_require__(1096),__webpack_require__(1098),__webpack_require__(1100),__webpack_require__(1107),__webpack_require__(1108),__webpack_require__(1109),__webpack_require__(1110),__webpack_require__(1111),__webpack_require__(1113),__webpack_require__(1114),__webpack_require__(1115),__webpack_require__(1116),__webpack_require__(1117),__webpack_require__(1118),__webpack_require__(1120),__webpack_require__(1121),__webpack_require__(1122),__webpack_require__(1123),__webpack_require__(1124),__webpack_require__(1125),__webpack_require__(1126),__webpack_require__(1127),__webpack_require__(1128),__webpack_require__(1129),__webpack_require__(1130),__webpack_require__(1131),__webpack_require__(1132),__webpack_require__(1133),__webpack_require__(1134),__webpack_require__(1147),__webpack_require__(1153)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,fLog,BUILD,fCmdb,fLocation,fStructure,fShortcuts,fBrowser,notify,routeConfig,ftnt_shared){const Omniselect=ftnt_shared.Omniselect,Sliderin=ftnt_shared.Sliderin;var app=angular.module("app",["ngRoute","ngSanitize","ngCookies","ngResource","route-segment","view-segment","ftnt","ui.jq","ui.event","ui.mask","ui.validate","ui.sortable","angular.bind.notifier","ftnt-gui"]);return app.controller("QlistCustomMenuItems",["$scope",function($scope){$scope.menu_items_base=__webpack_require__(455),$scope.menu_partials_defaults=__webpack_require__(477)}]),app.config(function($locationProvider,$httpProvider,fosRouteProvider,loaderProvider,structureProvider,$compileProvider){$compileProvider.debugInfoEnabled(BUILD.CONFIG.CONFIG_DEBUG);var TEMPLATES={legacy_base:__webpack_require__(420),base_menu_items:__webpack_require__(454),legacy_base_dialog:__webpack_require__(418),legacy_gutter_dialog:__webpack_require__(419)};$locationProvider.html5Mode(!0),$httpProvider.interceptors.push("ftntInterceptor"),routeConfig.routes.forEach(function(route){Object.keys(TEMPLATES).forEach(function(key){route.config[key]&&(route.config.templateUrl=TEMPLATES[key])}),route.config.loader_resolve&&(route.config.resolve=loaderProvider.resolve(route)),fosRouteProvider.when(route.url,route.config)}),fosRouteProvider.when(structureProvider.EMBEDDED_URI_ROUTE+"/:iframeSource*",{embeddedIframe:!0,template:"<f-embedded-iframe></f-embedded-iframe>"}).when("/error/:error?",{template:"<f-error></f-error>"}).otherwise("/error/404/")}).config(function($provide){$provide.decorator("dateFilter",function($delegate){return fLog.warn('AngularJS date filter should NOT be used, except for <input> elements of type "time".'),$delegate})}).run(function($rootScope,$location,fosRoute,fDialogConfig,fFieldConfig,lang,structure,csfTopology,$injector,$window,vdomState,state){$injector.get("slideBridge"),$window.state=state,fosRoute.enablePermissionCache(),csfTopology.addCSFOmniselectSources(),fLog.initializeBackendRecording();fDialogConfig.setDefaults({dialogTitle:"Title",onCancel:function(){((previousAbsUrl,currentAbsUrl)=>{let ngURI;(0,Sliderin.closeLast)()||(previousAbsUrl&&previousAbsUrl!==currentAbsUrl&&([,ngURI]=previousAbsUrl.match(/\/ng(\/.*)/)),ngURI?$location.url(ngURI):$window.history.back())})($rootScope.previousAbsUrl,$location.absUrl())},buttonText:{ok:lang("ok").toString(),cancel:lang("Cancel").toString(),apply:lang("Apply").toString(),return:lang("Return").toString(),close:lang("close").toString(),search:lang("search").toString()}}),fFieldConfig.addErrorTranslations({required:"err_required",f_is_unique:-15,f_password_policy:-49,f_ipv4_address:"err_ip4",f_ipv6_address:"err_ip6",f_ipv46_address:"err_ip46",f_ip_and_subnet:-9,f_ip6_and_subnet:-255,f_no_subnet_overlap:"Conflicts with other interface subnet",f_ipmask:"err_netmask",f_subnet_list:"err_subnet_list",f_combined_field:"err_ip_range",f_min_length:"err_min_str_length",f_mac_address:"invalid_mac",f_max_length:"err_max_str_length",f_length:"err_str_length",f_one_required:"One of these fields are required",max:"err_max_value",min:"err_min_value",email:"Invalid Email",f_value_confirm:"Doesn't Match"}),fFieldConfig.setForceValidationMessageName("validation-msg_show");var routeDefaults=function(){fDialogConfig.setDefaults({readOnly:$rootScope.ADMIN_RO}),delete $rootScope.page_title,$rootScope.dialogFooterType="okCancel",$rootScope.hide_footer_button=!1},resetSlides=function(){top===window&&(Sliderin.closeAll(!0),Sliderin.updateTarget())};$rootScope.$on("$locationChangeSuccess",function(event,newAbsUrl,oldAbsUrl){var givenURI;$rootScope.previousAbsUrl=oldAbsUrl,givenURI=$location.path(),["/log"].some(uri=>0===givenURI.indexOf(uri))||csfTopology.setToMaster(),fLocation.clear_cache(),fCmdb.update_history_from_cookie(),fCmdb.notify_cmdb_edits(),structure.responsiveMenu=!1,resetSlides(),notify.clearAll(),structure.isEmbeddedURI($location.path())?structure.notifyMessagesQueuedForIframe=!0:fLocation.notify_queued_notifications()});const cleanup=()=>{ftnt_shared.Tooltip.cleanupElementTooltips(),Omniselect.invalidateCache()};$rootScope.$on("$routeChangeSuccess",()=>{routeDefaults(),resetSlides(),cleanup()}),$rootScope.$on(vdomState.VDOM_CHANGE_EVENT,()=>{cleanup()}),routeDefaults(),top===window&&(fShortcuts.listen(document),fBrowser.startResponsiveListener(),fStructure.listenForAdminActivity()),sessionStorage.clear()}).run(function(state){ftnt_shared.dateTime.setDateFormat(state.date_format)}),app.run(function($rootScope,$routeSegment){$rootScope.$routeIsSegment=!1,$rootScope.$on("$routeChangeSuccess",function(event,current,previous){var segmentsOff,inPrev=!1,inCurrent=!1;null!=previous&&(inPrev="segment"in(previous.$route||previous.$$route||{})),null!=current&&(inCurrent="segment"in(current.$route||current.$$route||{})),$rootScope.$routeIsSegment=inCurrent,segmentsOff=inPrev&&!inCurrent,null!=previous&&(segmentsOff||inCurrent&&!inPrev)&&$rootScope.$broadcast("routeSegmentChange",{index:0,segment:segmentsOff?null:$routeSegment.chain[0]})})}),app}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(46),__webpack_require__(49)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,structure,persist){"use strict";$.ajaxSetup({beforeSend:function(jqxhr,settings){var token;"GET"!==settings.type&&(token=persist.getCsrfToken(),jqxhr.setRequestHeader("X-CSRFTOKEN",token))}}),$(document).ajaxError(function(event,jqXHR){0===jqXHR.readyState&&structure.topPostMessage({messageType:"disconnected"})})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(0),__webpack_require__(112),__webpack_require__(31),__webpack_require__(46),__webpack_require__(52),__webpack_require__(43),__webpack_require__(28),__webpack_require__(30),__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftnt_shared,BUILD,fIpInfo,fDom,fStructure,fUri,fLang,fPatterns,fLog,$){"use strict";const Tooltip=ftnt_shared.Tooltip,MuTable=ftnt_shared.MuTable,StreamableSource=MuTable.StreamableSource,{IPInfoService:IPInfoService}=fIpInfo,tooltipColumn={cellValueFunction:function(entry,column){return entry[column.id]},cellFormatter:function(entry,column,value){var result;return value&&(result=fDom.elem("span",{className:"tooltip-hint",textContent:value})),result},onCellRendered:function(element,entry,column){if(element){let content=column.cellValueFunction(entry,column);return Tooltip.addToElement(element,fDom.elem("span",{textContent:content,style:{"word-wrap":"break-word"}}))}}},createCmdbReferencesFormatter=csfAware=>(function(entry){return fDom.elem("a",{href:"#",textContent:entry.q_ref},{events:{click:function(event){var types=[entry.q_type],mkey=entry.q_origin_key,vdom=entry.vdom;Array.isArray(entry.q_type_extra)&&(types=types.concat(entry.q_type_extra)),fStructure.topPostMessage({messageType:"showObjectUsage",qTypes:types,mkey:mkey,vdom:vdom,csfAware:csfAware}),event.preventDefault()}}})});MuTable.DEBUG=!!BUILD.CONFIG.CONFIG_DEBUG,MuTable.ID_PROCESSOR=function(id){var urlParams=fUri.urlParams();return urlParams.vdom&&(id+=`#${urlParams.vdom}`),id},MuTable.STANDARD_COLUMNS={comment:Object.assign({},tooltipColumn,{cellValueFunction:entry=>entry.comment||entry.comments}),comments:Object.assign({},tooltipColumn,{cellValueFunction:entry=>entry.comment||entry.comments}),description:Object.assign({},tooltipColumn,{cellValueFunction:entry=>entry.description}),cmdbReferences:{langKey:"ref",type:"number",numberType:"custom",cellValueFunction:function(entry){return entry.q_ref},cellFormatter:createCmdbReferencesFormatter()},csfAwareCmdbReferences:{langKey:"ref",type:"number",numberType:"custom",cellValueFunction:function(entry){return entry.q_ref},cellFormatter:createCmdbReferencesFormatter(!0)},vdomScope:{langKey:"scope",cellValueFunction:function(entry){const langKey=entry.q_global_entry?"global":"VDOM";return fLang.translate(langKey)},cellFormatter:function(entry,column,value){const iconClass=entry.q_global_entry?"ftnt-globe":"ftnt-vdom";return fDom.elem("span",{},{children:[fDom.elem("f-icon",{className:iconClass}),fDom.elem("span",{textContent:value})]})}}},MuTable.DEFAULT_SEQUENCE_GROUPING_VALUE_FUNCTION=function(entry){return entry["global-label"]||""},MuTable.DEFAULT_COLLECTION_ENTRY_ON_RENDER={"ip-collection":function(element,entry,column,value){return IPInfoService.setupTooltip({element:element,ip:value})}},MuTable.EDITABLE_VALIDATE_PATTERNS={xss:new MuTable.ValidatePattern({regex:fPatterns.commonRegExp.XSS,langKey:"err_xss"})},StreamableSource.prototype.externallyUpdateEntry=function(entry){const path=entry.q_path,name=entry.q_name,mkey=entry.q_origin_key;if(null==path||null==name)return fLog.error("Default update functionality failed due to missing CMDB properties"),Promise.reject();let method="POST",uri=`/api/v2/cmdb/${path}/${name}`;return mkey&&(uri=`${uri}/${mkey}`,method="PUT"),$.ajax({url:uri,method:method,data:JSON.stringify(entry)})},StreamableSource.prototype.externallyReorderEntry=function(params){const mkey=params.entry.q_origin_key,path=params.entry.q_path,name=params.entry.q_name,queryParams=Object.create(null);if(null==mkey||null==path||null==name)return fLog.error("Default reorder functionality failed due to missing CMDB properties"),Promise.reject();queryParams.action="move",params.beforeEntry?queryParams.before=params.beforeEntry.q_origin_key:queryParams.after=params.afterEntry.q_origin_key;const uri=`/api/v2/cmdb/${path}/${name}/${mkey}?${fUri.formatParams(queryParams)}`;return $.ajax({url:uri,method:"PUT"})},StreamableSource.prototype.setNewSequenceGroupingValue=function(entry,value){const mkey=entry.q_origin_key,path=entry.q_path,name=entry.q_name;if(null==mkey||null==path||null==name)return fLog.error("Default sequence grouping functionality failed due to missing CMDB properties"),Promise.reject();entry["global-label"]=value;const changes={"global-label":value},uri=`/api/v2/cmdb/${path}/${name}/${mkey}`;return $.ajax({url:uri,method:"PUT",data:JSON.stringify(changes)})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30),__webpack_require__(46),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(fLog,fStructure,ftnt_shared){"use strict";const Sliderin=ftnt_shared.Sliderin;var isTop=top===window;if(!Sliderin.configured){!isTop&&top.Sliderin&&fLog.error("Configuring Sliderin from non-top window, this should never happen. IE is going to freak out.");var NG_URI_REGEX=/^\/ng\//;Sliderin.sameOriginIframeManipulation=function(contentWindow,contentDocument){var element,title,titleBars,hs,titleOrExemptionFound=!1;if(contentDocument)return(titleBars=contentDocument.getElementsByClassName("title-bar")).length&&(hs=(element=titleBars[0]).getElementsByTagName("h1")).length&&(title=(element=hs[0]).innerHTML,element.parentElement.removeChild(element),titleOrExemptionFound=!0),titleOrExemptionFound||contentDocument.getElementsByClassName("qlist-view-container").length&&(titleOrExemptionFound=!0),titleOrExemptionFound||!contentDocument.location||NG_URI_REGEX.test(contentDocument.location.pathname)||(hs=contentDocument.getElementsByTagName("h1")).length&&(title=(element=hs[0]).innerHTML,element.parentElement.removeChild(element),titleOrExemptionFound=!0),titleOrExemptionFound&&!title&&(title=contentDocument.title),(title||titleOrExemptionFound)&&contentWindow.fweb&&contentWindow.fweb.util.browser&&contentWindow.fweb.util.structure&&(contentWindow.fweb.util.browser.startResponsiveListener(),contentWindow.fweb.util.structure.listenForAdminActivity()),title||titleOrExemptionFound},Sliderin.configured=!0,Sliderin.DEFAULT_SLIDE_OPEN_CALLBACK=fStructure.closeResponsiveMenu}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(42)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ngModule,inject,Notify,fLocation)=>{function PasswordChange(injector,$scope){injector.injectMarked(this,{$scope:$scope}),this.setup()}PasswordChange.prototype.setup=inject.mark((state,passwordPolicyService)=>(function(){this.loading=!0,this.submitButtonBusy=!0,this.currentAdmin=state.admin,this.admin=this.admin?this.admin:state.admin,this.isGuestAdmin=this.admin?"enable"===this.admin["guest-auth"]:state.admin.guest_admin,this.passwordPolicy={status:"disable","apply-to":[]},this.warningMessage=this.inPrompt?"This account is using the default password, it is strongly recommended that you change your password. Once changed, you will need to re-login.":"Changing the password of the current administrator account will require you to login again.",passwordPolicyService.getAllPolicies().then(()=>{this.requiresOldPassword(this.admin,this.isGuestAdmin)&&(this.oldPasswordRequired=!0),this.loading=!1,this.submitButtonBusy=!1})})),PasswordChange.prototype.$onDestroy=inject.mark(passwordPolicyService=>(function(){passwordPolicyService.purgeState()})),PasswordChange.prototype.requiresOldPassword=inject.mark((state,passwordPolicyService)=>(function(targetAdmin,isGuestAdmin){const currentAdmin=state.admin,changeCurrentUserPwd=!targetAdmin||currentAdmin.name===targetAdmin.name,policies=passwordPolicyService.policies,policy=isGuestAdmin?policies["guest-admin"]:policies.admin;return"enable"===policy.status&&"enable"===policy["change-4-characters"]||(!changeCurrentUserPwd&&"super_admin"===targetAdmin.accprofile.name||changeCurrentUserPwd&&!state.admin_using_default_password)})),PasswordChange.prototype.passwordPolicyIsActive=function(applyTo){return"enable"===this.passwordPolicy.status&&-1!==this.passwordPolicy["apply-to"].indexOf(applyTo)},PasswordChange.prototype.changeSuccess=inject.mark((lang,state)=>(function(){Notify.post(lang("Administrator password changed").toString(),Notify.LEVEL.SUCCESS),state.refresh()})),PasswordChange.prototype.changeFailure=inject.mark(lang=>(function(message){Notify.post(lang(message.data.error).toString(),Notify.LEVEL.ERROR)})),PasswordChange.prototype.cancel=function(){this.inPrompt?this.changeCancel():fLocation.go_back(null,!0)},PasswordChange.prototype.submit=inject.mark(($q,$http)=>(function(){this.submitButtonBusy=!0;const data={mkey:this.admin.name,new_password:this.newPassword};if(this.newPassword!==this.confirmPassword)return;data.old_password=this.oldPassword?this.oldPassword.value:"";const result=$http.post("/api/v2/monitor/system/change-password",data).then(res=>{const results=res.data.results;if(!results.changed)return $q.reject(results||"Failed to change password")});return result.then(()=>{fLocation.logout()},this.changeFailure).finally(()=>{this.submitButtonBusy=!1}),result})),PasswordChange.prototype.previous=function(){this.inPrompt&&this.changePrevious()},ngModule.component("fPasswordChange",{templateUrl:__webpack_require__(759),controller:PasswordChange,bindings:{relative:"<",admin:"<",hideUsername:"<",inPrompt:"<",changeSuccess:"&?",changeFailure:"&?",changeCancel:"&?",changePrevious:"&?",hasPrevious:"<?"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/admin/password/f-password-change.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n          valid-submit="$ctrl.submit()"\n          cancel="$ctrl.cancel()"\n          form="$ctrl.form"\n          relative="::$ctrl.relative"\n          read-only="::false">\n    <dialog-content>\n        <div class="flex-centered" ng-show="$ctrl.loading">\n            <f-icon class="fa-loading icon-lg"></f-icon>\n        </div>\n        <section ng-show="!$ctrl.loading">\n            <div class="warning-message" ng-if="$ctrl.currentAdmin.name === $ctrl.admin.name">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    {{ ::$ctrl.warningMessage | lang }}\n                </div>\n            </div>\n            <f-field ng-hide="$ctrl.hideUsername">\n                <field-label>{{::\'Username\' | lang}}</field-label>\n                <field-value>\n                    <input ng-model="$ctrl.admin.name" type="text" id="username" disabled>\n                </field-value>\n            </f-field>\n            <f-field ng-show="$ctrl.oldPasswordRequired">\n                <field-label>{{::\'oldpwd\' | lang}}</field-label>\n                <field-value>\n                    <input ng-model="$ctrl.oldPassword.value" type="password" id="old_password">\n                </field-value>\n            </f-field>\n            <f-field error-messages="{f_password_reused: \'Cannot reuse old password\'}">\n                <field-label>{{::\'newpwd\' | lang}}</field-label>\n                <field-value>\n                    <input ng-model="$ctrl.newPassword" type="password" limit-mask="10" id="new_password"\n                            f-password-policy="$ctrl.admin[\'guest-auth\'] === \'enable\' ? \'guest-admin\' : \'admin\'"\n                            old-password="$ctrl.oldPassword.value" admin-name="$ctrl.admin.name" required\n                            f-max-length="$ctrl.admin.$schema.children.password.size">\n                </field-value>\n            </f-field>\n            <f-field error-messages="{f_value_confirm: \'err_pwd_match\'}">\n                <field-label>{{::\'conpwd\' | lang}}</field-label>\n                <field-value>\n                    <input ng-model="$ctrl.confirmPassword" type="password" id="confirm_password" required\n                            f-value-confirm="$ctrl.newPassword"\n                            f-max-length="$ctrl.admin.$schema.children.password.size">\n                </field-value>\n            </f-field>\n            <div f-password-policy-requirements="{{$ctrl.isGuestAdmin ? \'guest-admin\' : \'admin\'}}"\n                    policy="$ctrl.passwordPolicy"\n                    ng-show="$ctrl.passwordPolicyIsActive($ctrl.isGuestAdmin ? \'guest-admin-password\' : \'admin-password\')"\n                    class="full-width-field"></div>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <button type="button" ng-click="$ctrl.previous()" ng-if="$ctrl.hasPrevious">\n            {{:: \'Previous\' | lang }}\n        </button>\n        <button type="submit" class="primary"\n            ng-class="$ctrl.submitButtonBusy && \'busy\'"\n            ng-disabled="$ctrl.submitButtonBusy">\n            <f-icon class="fa-loading busy-only"></f-icon>\n            <span>{{:: \'ok\' | lang}}</span>\n        </button>\n        <button type="button" ng-click="$ctrl.cancel()">\n            {{:: $ctrl.inPrompt ? \'later\' : \'cancel\' | lang }}\n        </button>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(0),__webpack_require__(31),__webpack_require__(82),__webpack_require__(43),__webpack_require__(32),__webpack_require__(111),__webpack_require__(34),__webpack_require__(30),__webpack_require__(112),__webpack_require__(42),__webpack_require__(8),__webpack_require__(424),__webpack_require__(176)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule,inject,BUILD,dom,fortiguard,fwebLang,formatters,fAvatars,fDateTime,fLog,fIpInfo,fLocation,ftnt_shared,FortiviewConfig,FortiviewVisualization){const Tooltip=ftnt_shared.Tooltip,REPORT_BY=FortiviewConfig.REPORT_BY,IPInfoService=fIpInfo.IPInfoService;function GUIFortiviewConfig(injector){injector.injectMarked(this)}GUIFortiviewConfig.prototype=Object.create(FortiviewConfig.prototype),GUIFortiviewConfig.prototype.constructor=GUIFortiviewConfig;var labelFn,countryIconFormatter=function(entry,column){let label=labelFn&&labelFn(entry,column)||entry[column.id],result=dom.elem("span");return entry.countryCode&&result.appendChild(dom.elem("span",{className:"country_flag country_"+entry.countryCode,title:entry.country})),result.appendChild(dom.elem("span",{textContent:label})),result},createCompareBarTooltips=function(labels,formatter,classes){return function(element,entry,column){const targetElement=element.querySelector(".compare-bar-caption-text")||element,cellValueComponents=this.getCellValue(column).getValueComponents(),rows=labels.map((label,index)=>{const value=cellValueComponents[index];let formatted;formatted=formatter?formatter(value):value&&value.toLocaleString();const valueElement=dom.elem("span",{textContent:formatted});return Array.isArray(classes)&&(valueElement.className=classes[index]),dom.elem("tr",null,{children:[dom.elem("td",{textContent:fwebLang.translate(label)}),dom.elem("td",null,{children:[valueElement]})]})});targetElement.classList.add("tooltip-hint"),Tooltip.addToElement(targetElement,dom.elem("table",{className:"table key-value"},{children:[dom.elem("tbody",null,{children:rows})]}))}};GUIFortiviewConfig.prototype.SEGMENT_TYPE={LAN_DMZ:"lanDmz",IMPLICIT_LAN_DMZ:"implicitLanDmz",WAN:"wan",ALL:"all"},GUIFortiviewConfig.prototype.DEVICE_LABELS={[GUIFortiviewConfig.prototype.DEVICE.DISK]:"FortiGates",[GUIFortiviewConfig.prototype.DEVICE.FORTIANALYZER]:"fortianalyzer",[GUIFortiviewConfig.prototype.DEVICE.FORTICLOUD]:"forticloud"},GUIFortiviewConfig.prototype.getDeviceIcon=inject.mark(csfTopology=>(function(device){let iconClass="";switch(device){case this.DEVICE.DISK:iconClass=csfTopology.thisFortigate?csfTopology.thisFortigate.getIconClass():"ftnt-standard-fortigate";break;case this.DEVICE.FORTIANALYZER:iconClass="ftnt-fortianalyzer-o-no-border";break;case this.DEVICE.FORTICLOUD:iconClass="ftnt-forticloud"}return iconClass})),GUIFortiviewConfig.prototype.FORTIVIEW_COLUMNS=inject.mark(function(csfTopology,lang,fortiviewDevices,FortiViewDetailedDeviceEntry){const getProxySource=function(source,fortigates){const serial=fortigates&&fortigates[0];if(serial){const fortigate=csfTopology.fortigateMapping[serial];fortigate&&(source=fortigate.getOmniselectProxySourceID(source))}return source};var createInterfaceValueFunction=function(interfaceKey){return function(entry){var entryValue=entry[interfaceKey];return null==entryValue?null:Array.isArray(entryValue)?entryValue.map(intf=>({q_origin_key:intf,datasource:getProxySource("firewallInterfaces",entry.meta.fortigate)})):{q_origin_key:entryValue,datasource:getProxySource("firewallInterfaces",entry.meta.fortigate)}}};let destinationAddress={langKey:"destination",cellValueFunction:function(entry){var value=entry.destinationAddress;return entry.destinationDomainName&&(value=entry.destinationDomainName+" ("+value+")"),value},cellFormatter:function(entry,column,value){let result=dom.elem("span");return entry.countryCode&&result.appendChild(dom.elem("span",{className:"country_flag country_"+entry.countryCode,title:entry.country})),result.appendChild(dom.elem("span",{textContent:value})),result.appendChild(document.createTextNode(" ")),fortiguard.links.resolve().then(function(){var whoisLink=fortiguard.getLink(fortiguard.LINK_TYPE.WHOIS_LOOKUP);if(whoisLink&&entry.destinationDomainName){var whoisLookupElem=formatters.create_whois_lookup_anchor_elem(entry.destinationDomainName,whoisLink);whoisLookupElem&&result.appendChild(whoisLookupElem)}return result})},onCellRendered:(element,entry)=>IPInfoService.setupTooltip({element:element,ip:entry.destinationAddress})},columns={sourceAddress:{langKey:"source",cellValueFunction:function(entry){return entry.sourceAddress},cellFormatter:function(entry,column,value){const address=value,device=entry.device;let csfPath,isFortiClientUnauthuser,quarantinedOnFortiClient,result=entry.hostname?`${entry.hostname} (${address})`:address;return device&&(csfPath=function(fortigates){const serial=fortigates&&fortigates[0];let result=null;if(serial){const fortigate=csfTopology.fortigateMapping[serial];fortigate&&(result=fortigate.path)}return result}([entry.deviceFortigate]),isFortiClientUnauthuser=device.is_forticlient_unauth_user,quarantinedOnFortiClient=device.quarantined_on_forticlient,result=fAvatars.userFormatFragment({user:entry.getAuthUsername(),unauthuser:entry.getUnauthUsername(),isFortiClientUnauthuser:isFortiClientUnauthuser,uid:entry.getFortiClientID(),quarantinedOnFortiClient:quarantinedOnFortiClient,csfPath:csfPath,suffix_label:result})),result}},sourceUUID:{langKey:"Source Object",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){let datasource;const type=entry.sourceUuidType;return type&&(datasource=getProxySource(type,entry.meta.fortigate)),entry.sourceUuid?{q_origin_key:entry.sourceUuid,datasource:datasource}:entry.sourceIP},collectionEntryFormatter:function(entry){return entry.q_origin_key?entry.q_origin_key:`${lang("Internet Service")} (${entry})`},visualization:{formatter:entry=>entry.sourceUuid,tooltip:entry=>entry.sourceUuid}},destinationUUID:{langKey:"Destination Object",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){let datasource;const type=entry.destinationUuidType;return type&&(datasource=getProxySource(type,entry.meta.fortigate)),entry.destinationUuid?{q_origin_key:entry.destinationUuid,datasource:datasource}:entry.destinationIP},collectionEntryFormatter:function(entry){return entry.q_origin_key?entry.q_origin_key:`${lang("Internet Service")} (${entry})`},visualization:{formatter:entry=>entry.destinationUuid,tooltip:entry=>entry.destinationUuid}},sourceAddressAvatar:{langKey:"source",menuLangKey:"Source (Large)",fullWidthCellContent:!0,cellHeightFunction:()=>90,cellValueFunction:entry=>entry.getDeviceLabel(),cellFormatter:entry=>entry.createDeviceHeaderHTML(),onCellRendered:(element,entry)=>{if(entry.device){let selector=".avatar-address-text";(entry.getAuthUsername()||entry.getUnauthUsername())&&(selector=".avatar-user-text");const target=element.querySelector(selector);if(target)return fortiviewDevices.setupDeviceTooltip(entry,target)}},hideKeyInSummaryTable:!0},sourceNatAddress:{langKey:"snaddr"},destinationAddress:destinationAddress,serverAddress:Object.assign({},destinationAddress,{langKey:"Server Address"}),destinationOwner:{langKey:"destination"},apps:{langKey:"application",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){if(entry.apps)return entry.apps.map(app=>({q_origin_key:app.isdbId||app.id,datasource:app.isdbId?"firewall.internet-service":"application.name",name:app.name,unknown:app.unknown}))},collectionEntryFormatter:function(entry){let appName;return entry.name?appName=entry.name.toUpperCase():entry.unknown&&(appName=`${lang("Unknown Application")} ${entry.q_origin_key}`),appName},visualization:{formatter:function(entry){return entry.apps&&entry.apps.map(function(app){return app.name}).join(", ")}}},country:{langKey:"country",cellFormatter:countryIconFormatter},device:{langKey:"device",cellValueFunction:entry=>entry.mac,cellFormatter:(entry,column,value)=>{let result=value;return entry instanceof FortiViewDetailedDeviceEntry&&(result=fortiviewDevices.formatDevice(entry)),result},onCellRendered:(element,entry)=>{let tooltip;return entry instanceof FortiViewDetailedDeviceEntry&&(tooltip=fortiviewDevices.setupDeviceTooltip(entry,element)),tooltip}},webDomain:{langKey:"Domain",cellValueFunction:function(entry){return entry.domain},cellFormatter:function(entry,column,value){let icon=dom.elem("img",{className:"domain",src:"https://www.google.com/s2/favicons?domain="+encodeURIComponent(value)});return dom.elem("span",{className:"web-domain-with-icon"},{children:[icon,dom.elem("span",{textContent:value})]})}},appCategory:{langKey:"category",type:"omniselect",cellValueFunction:function(entry){const category=entry.apps&&entry.apps[0]&&entry.apps[0].category;if(category)return{q_origin_key:category,datasource:"application.category"}}},webCategory:{langKey:"category",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){return{entry:entry,q_origin_key:entry.categoryId,datasource:"webfilter.ftgd-cat"}},collectionEntryFormatter:function(collectionEntry){return collectionEntry.entry.category}},browsingTime:{langKey:"Browsing Time",type:"number",cellValueFunction:entry=>entry.browsingTime,numberType:"timeDuration",numberCompareBar:"neutral",historicalOnly:!0},bytes:{langKey:"bytes",type:"number",numberType:"metricBytes",numberCompareBar:"dualGood",cellValueFunction:function(entry){return[entry.sentBytes,entry.receivedBytes]},onCellRendered:createCompareBarTooltips(["sentbyte","rcvdbyte"],formatters.metric_bytes)},sessions:{realtimeOnly:!0,langKey:"sessions",type:"number",numberCompareBar:"neutral"},historicalSessions:{historicalOnly:!0,langKey:"sessions",type:"number",numberCompareBar:"badGood",cellValueFunction:function(entry){return[entry.sessionsBlocked,entry.sessionsAllowed]},onCellRendered:createCompareBarTooltips(["Sessions Blocked","Sessions Allowed"])},bandwidth:{realtimeOnly:!0,langKey:"Bandwidth",type:"number",numberType:"metricBitsPerSecond",numberCompareBar:"dualGood",cellValueFunction:function(entry){return[entry.sentBandwidth,entry.receivedBandwidth]},onCellRendered:createCompareBarTooltips(["Sending","Receiving"],formatters.metric_bits_per_second)},packets:{realtimeOnly:!0,langKey:"packets",type:"number",numberCompareBar:"dualGood",cellValueFunction:function(entry){return[entry.receivedPackets,entry.sentPackets]},onCellRendered:createCompareBarTooltips(["rcvdpkt","sentpkt"])},policy:{langKey:"Policy",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){const datasource=`firewall.${entry.policyType}`;return{q_origin_key:entry.policyId,datasource:getProxySource(datasource,entry.meta.fortigate)}},collectionEntryFormatter:function(entry){let result=entry.q_origin_key;return 0===result&&(result=lang("implicit_deny").toString()),result},visualization:{formatter:function(entry){return entry.policyId.toString()}}},policyType:{langKey:"Policy Type",cellFormatter:function(entry){var policytype=entry.policyType||"policy";return lang("Firewall::policytype."+policytype)}},protocol:{langKey:"Protocol",cellValueFunction:function(entry){return lang(entry.protocol)}},sessionDuration:{langKey:"duration",type:"number",numberType:"timeDuration",cellValueFunction:function(entry){return entry.durationSeconds}},sessionExpiry:{langKey:"Expires",type:"number",numberType:"timeDuration",cellValueFunction:function(entry){return entry.secondsToExpiry}},sourcePort:{langKey:"Source Port",cellValueFunction:function(entry){return entry.sourcePort}},destinationPort:{langKey:"Destination Port",cellValueFunction:function(entry){return entry.destinationPort}},sourceNatPort:{langKey:"snport",cellValueFunction:function(entry){return entry.sourceNatPort}},risk:{cellFormatter:function(entry){const RISKS=["none","low","medium","high","critical"],app=entry.apps&&entry.apps[0],appRisk=app&&app.risk;if(appRisk)return formatters.severity_bar_elem(RISKS[appRisk-1])}},shaper:{langKey:"Shaper",type:"omniselect",omniselectAllowFallback:!0,collectionEntryFormatter:function(entry){return entry.q_origin_key},cellValueFunction:function(entry){return{q_origin_key:entry.shaper,datasource:"firewall.shaper.traffic-shaper"}}},shaperDroppedBytes:{realtimeOnly:!0,langKey:"Dropped Bytes",type:"number",numberCompareBar:"dualBad",cellValueFunction:function(entry){return[entry.receivedShaperDropped,entry.sentShaperDropped]}},score:{historicalOnly:!0,langKey:"Threat Score",type:"number",numberCompareBar:"badGood",cellValueFunction:function(entry){return[entry.scoreBlocked,entry.scoreAllowed]},onCellRendered:createCompareBarTooltips(["score_block","score_allow"])},sourceInterface:{langKey:"Source Interface",type:"omniselect",omniselectAllowFallback:!0,collectionEntryFormatter:function(entry){return entry.q_origin_key},cellValueFunction:createInterfaceValueFunction("sourceInterface")},destinationInterface:{langKey:"Destination Interface",type:"omniselect",omniselectAllowFallback:!0,collectionEntryFormatter:function(entry){return entry.q_origin_key},cellValueFunction:createInterfaceValueFunction("destinationInterface")},interfacePair:{langKey:"Interface Pair",hidden:!0,visualization:{formatter:function(entry){return lang("{0} to {1}",[entry.sourceInterface,entry.destinationInterface])}}},SSID:{langKey:"SSID"},accessPoint:{langKey:"Access Point",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){return{q_origin_key:entry.accessPointSerial,datasource:"wireless-controller.wtp",accessPoint:entry.accessPoint,accessPointSerial:entry.accessPointSerial}},collectionEntryFormatter:function(entry){return entry.accessPoint!==entry.accessPointSerial?`${entry.accessPointSerial} (${entry.accessPoint})`:entry.accessPointSerial}},fortigate:{type:"omniselect",langKey:"FortiGate",cellValueFunction:function(entry){return entry.meta.fortigate.map(fortigateSerial=>({q_origin_key:fortigateSerial,datasource:"csfFortiGates"}))}},threat:{langKey:"Threat"},threatCategory:{langKey:"Threat Category",cellValueFunction:entry=>{const key=entry.threatCategory,prefixedKey=lang.getPrefixedKey("log.threat-weight::",key);if(key)return prefixedKey!==key?lang(prefixedKey).toString():(fLog.warn(`No language entry for threat category "${key}"`),key)}},threatLevel:{langKey:"Threat Level",type:"number",numberType:"custom",cellValueFunction:threatEntry=>threatEntry.threatLevel,cellFormatter:threatEntry=>{var level=["","low","medium","high","critical"][threatEntry.threatLevel];return dom.elem("span",{className:`severity-label wide severity-${level}`,textContent:lang(level)})}},keyword:{langKey:"Search Phrase"},searchCount:{langKey:"Count",type:"number",numberCompareBar:"neutral"},hostname:{},loginIDCount:{historicalOnly:!0,langKey:"Login IDs",type:"number"},videos:{historicalOnly:!0,langKey:"Videos Played",type:"number",cellValueFunction:entry=>entry.videosCount},files:{historicalOnly:!0,langKey:"Files (Up/Down)",type:"number",numberCompareBar:"dualGood",cellValueFunction:function(entry){return[entry.filesUploaded,entry.filesDownloaded]},onCellRendered:createCompareBarTooltips(["Files Uploaded","Files Downloaded"])},cloudUser:{historicalOnly:!0,langKey:"Cloud User",cellValueFunction:entry=>entry.cloudUser||lang("unknown").toString()},verdict:{langKey:"Verdict",cellFormatter:function(entry){const verdictLang={1:"Unlikely Compromised",2:"Suspicious",3:"Likely Compromised",4:"Compromised"}[entry.verdict],verdict=lang(`IndicatorsOfCompromise::verdict.${verdictLang}`),severity={1:"fa-severity-low",2:"fa-severity-medium",3:"fa-severity-high",4:"fa-severity-critical"}[entry.verdict];return dom.elem("span",{},{children:[dom.elem("f-icon",{className:severity}),dom.elem("span",{textContent:verdict})]})}},incidentCount:{langKey:"Threats",type:"number",numberCompareBar:"bad",onCellRendered:(element,entry)=>{const tooltipRows=["blacklistCount","crowdSourcedScore","crowdSourcedCount"].map(function(key){return dom.elem("tr",{},{children:[dom.elem("td",{textContent:lang("IndicatorsOfCompromise::column."+key)}),dom.elem("td",{textContent:entry[key]})]})});(element&&element.querySelector(".compare-bar-caption-text")||element).classList.add("tooltip-hint"),Tooltip.addToElement(element,dom.elem("table",{className:"table slightly-condensed key-value"},{children:[dom.elem("tbody",null,{children:tooltipRows})]}))}},detectedPattern:{langKey:"IndicatorsOfCompromise::column.Detected Pattern"},threatType:{langKey:"IndicatorsOfCompromise::column.Threat Type"},threatName:{langKey:"IndicatorsOfCompromise::column.Threat Name"},compromisedHostWebCategory:{langKey:"Web Category",type:"omniselect",omniselectAllowFallback:!0,cellValueFunction:function(entry){return{entry:entry,q_origin_key:entry.websiteCategoryId,datasource:"webfilter.ftgd-cat"}},collectionEntryFormatter:function(collectionEntry){return collectionEntry.entry.websiteCategory}},threatDetectMethod:{langKey:"IndicatorsOfCompromise::column.Detect method"},eventCount:{type:"number",numberCompareBar:"bad",langKey:"IndicatorsOfCompromise::column.Events"},securityAction:{langKey:"IndicatorsOfCompromise::column.Security Action"},acknowledgeComment:{langKey:"IndicatorsOfCompromise::column.Acknowledgment Comment"},vpnType:{langKey:"vpntype"},vpnUsername:{langKey:"User"},vpnDuration:{langKey:"Duration",type:"number",numberType:"timeDuration",numberCompareBar:"neutral"},connections:{langKey:"Connections",type:"number",numberCompareBar:"neutral"},lastConnectionTime:{langKey:"Last Connection Time",type:"date",dateType:"fromNow",cellValueFunction:entry=>fDateTime.fortiGateUTCToBrowserUTC(entry.lastConnectionTime),onCellRendered:(element,entry)=>{element.classList.add("tooltip-hint"),Tooltip.addToElement(element,dom.elem("span",{textContent:fDateTime.formatDateTime(entry.lastConnectionTime)}))}},connectionTime:{langKey:"Connection Time"},vpnTunnel:{langKey:"vpntunnel"},connectionStartTime:{langKey:"Connection Start Time",type:"date",dateType:"dateTime"},connectionEndTime:{langKey:"Connection End Time",type:"date",dateType:"dateTime"},vulnerabilities:{langKey:"Detected Vulnerabilities",type:"number",numberCompareBar:"custom",compareBarColors:["rgb(217, 83, 79)","rgb(226, 135, 34)","rgb(243, 187, 45)","rgb(34, 96, 147)"],onCellRendered:createCompareBarTooltips(["critical","high","medium","low"],null,["number-bubble severity-critical","number-bubble severity-high","number-bubble severity-medium","number-bubble severity-low"]),cellValueFunction:entry=>["critical","high","medium","low","info"].map(key=>entry.vulnerabilityCounts[key])},forticlientID:{langKey:"fctuid"},vulnerabilityName:{langKey:"vulnname"},severity:{cellFormatter:function(entry){const severityIconClass={low:"fa-severity-low",moderate:"fa-severity-medium",medium:"fa-severity-medium",high:"fa-severity-high",critical:"fa-severity-critical"}[entry.severity];return dom.elem("span",{},{children:[dom.elem("f-icon",{className:severityIconClass}),dom.elem("span",{textContent:lang(entry.severity)})]})}},vulnerabilityCategory:{langKey:"vulncat"},vulnerabilityID:{langKey:"vulnid",cellValueFunction:function(entry){return entry.vulnerabilityID},cellFormatter:function(entry){return fortiguard.links.resolve().then(()=>{var prefix=fortiguard.getLink(fortiguard.LINK_TYPE.FCTVULN);return dom.elem("a",{textContent:entry.vulnerabilityID,href:`${prefix}/${entry.vulnerabilityID}`,target:"_blank",rel:"noopener noreferrer"})})}},cveIDs:{langKey:"CVE-IDs",type:"collection",cellValueFunction:function(entry){return fortiguard.links.resolve().then(()=>entry.cveIDs)},collectionEntryFormatter:function(collectionEntry){var prefix=fortiguard.getLink(fortiguard.LINK_TYPE.CVE_LOOKUP);return dom.elem("a",{textContent:collectionEntry,href:`${prefix}${collectionEntry}`,target:"_blank",rel:"noopener noreferrer"})}},hostCount:{langKey:"Host Count",type:"number",numberCompareBar:"neutral"},scanTime:{langKey:"scantime",type:"date",dateType:"dateTime"},event:{langKey:"Event Name"},count:{langKey:"events",type:"number",numberCompareBar:"neutral"},eventLevel:{langKey:"level",cellValueFunction:entry=>entry.level,trustCellFormatterForHTML:!0,cellFormatter:function(entry){return formatters.log_severity_bar(entry.level)}},username:{langKey:"Username",cellFormatter:function(entry){return dom.elem("span",{},{children:[dom.elem("f-icon",{className:"fa-user-authenticated"}),dom.elem("span",{textContent:entry.username})]})}},failedAuthSource:{langKey:"Failed Authentication Source",cellFormatter:function(entry){return dom.elem("span",{},{children:[dom.elem("f-icon",{className:"fa-user-authenticated"}),dom.elem("span",{textContent:entry.failedAuthSource})]})}},source:{},loginDestination:{langKey:"Destination"},loginType:{langKey:"unauth_type",cellFormatter:function(entry){return dom.elem("div",{className:"color-labels"},{children:[dom.elem("span",{className:{Admin:"red-darker","SSL-VPN":"yellow","IPsec VPN":"green-darker",FGFM:"blue",SNMP:"orange",Firewall:"purple","FortiGuard Web Filter Override":"pinkish",Wireless:"greeny-blue"}[entry.loginType],textContent:entry.loginType})]})}},failedAttempts:{langKey:"Failed Attempts",type:"number",numberCompareBar:"bad"},loginDuration:{langKey:"Duration",type:"number",numberType:"timeDuration",numberCompareBar:"neutral"},loginCount:{langKey:"Logins",type:"number",numberCompareBar:"neutral"},loginFailureCount:{langKey:"Failed Logins",type:"number",numberCompareBar:"bad"},configChanges:{langKey:"Configuration Changes",type:"number",numberCompareBar:"neutral"},filename:{langKey:"File Name"},sandboxStatus:{langKey:"Status",cellValueFunction:entry=>entry.sandboxStatus,cellFormatter:entry=>{const iconClass={"submission failed":"fa-disabled",pending:"fa-severity-low",unknown:"fa-unknown",clean:"fa-severity-low","low risk":"fa-severity-low","medium risk":"fa-severity-medium","high risk":"fa-severity-high",malicious:"fa-severity-critical"}[entry.sandboxStatus],statusLang={"submission failed":"submission_failed",pending:"pending",unknown:"unknown",clean:"clean","low risk":"low","medium risk":"medium","high risk":"high",malicious:"malicious"}[entry.sandboxStatus];return dom.elem("span",{},{children:[dom.elem("f-icon",{className:iconClass}),dom.elem("span",{textContent:lang("Fortiview::Sandbox::Status::"+statusLang,[entry.sandboxStatus])})]})}},sandboxSourceStatus:{langKey:"Status",cellHeightFunction:()=>40,cellFormatter:entry=>{const STATUS_LABEL={malicious:"Malicious",highRisk:"High",mediumRisk:"Medium",lowRisk:"Low"},STATUS_CLASS={malicious:"severity-critical",highRisk:"severity-high",mediumRisk:"severity-medium",lowRisk:"severity-low"};var result=["malicious","highRisk","mediumRisk","lowRisk"].filter(status=>entry[status]).map(status=>dom.elem("div",{className:"severity-label "+STATUS_CLASS[status]},{children:[dom.elem("div",{classList:"title",textContent:lang(STATUS_LABEL[status])}),dom.elem("div",{classList:"count",textContent:entry[status]})]}));return result.length||(result=[dom.elem("div",{className:"severity-label severity-none"},{children:[dom.elem("div",{classList:"title",textContent:lang("clean")}),dom.elem("div",{classList:"count",textContent:entry.clean})]})]),dom.elem("div",{},{children:result})}},submitted:{langKey:"Submitted",type:"date",dateType:"dateTime"},checksum:{langKey:"Checksum"},hasAnalysisFile:{langKey:"Analysis Available",cellFormatter:formatters.boolean_formatter_fn({trueLang:"Yes",falseLang:"No"}),onCellRendered:(element,entry)=>{entry.hasAnalysisFile||(element.classList.add("tooltip-hint"),Tooltip.addToElement(element,dom.elem("span",{textContent:lang("Analysis for recently submitted files may not be available yet")})))}},sandboxPending:{langKey:"pending",cellValueFunction:entry=>entry.pending},sandboxClean:{langKey:"clean",cellValueFunction:entry=>entry.clean},sandboxThreatScore:{langKey:"Threat Score",type:"number",numberCompareBar:"bad",cellValueFunction:entry=>entry.threatScore},fortiasic:{langKey:"SPU",cellValueFunction:entry=>entry.fortiasic,cellFormatter:(entry,column,value)=>{if(value)return dom.elem("span",null,{children:[dom.elem("f-icon",{className:"ftnt-np-accelerated",title:value}),dom.elem("span",{textContent:value})]})}}};return Object.entries(columns).forEach(([id,column])=>{column.id=id,FortiviewConfig.SORTABLE_COLUMNS[id]&&(column.sorting=!0,column.compareByID=FortiviewConfig.SORTABLE_COLUMNS[id].compareByID,column.ascendingSortSupported=!1)}),columns}),GUIFortiviewConfig.prototype.FORTIVIEW_DEPENDENCIES=inject.mark(state=>({loggingEnabled:{historicalOnly:!0,url:"/ng/log/settings",message:"Logging device setup and enabled"},localReportEnabled:{historicalOnly:!0,url:"/ng/log/settings",message:"Historical FortiView enabled",enabled:()=>state.getLogDeviceDefault()===state.LOG_DEVICES.DISK},webfilterCategories:{url:function(){const mkey=state.vdom_mode?"g-default":"default";return state.getEditUrl("webfilter","profile",mkey)},message:"FortiGuard Categories enabled in a Web Filter profile",enabled:function(){return!state.isNgfwPolicyMode()}},webfilterLogSearchKeyword:{message:"Log all search keywords enabled in a Web Filter profile",url:function(){const mkey=state.vdom_mode?"g-default":"default";return state.getEditUrl("webfilter","profile",mkey)},enabled:function(){return!state.isNgfwPolicyMode()}},sslSshProfileDeepInspection:{message:function(){return state.isNgfwPolicyMode()?"Full SSL inspection enabled for all protocols in a SSL/SSH Inspection profile and that profile set as VDOM Default":"Full SSL inspection enabled for all protocols in a SSL/SSH Inspection profile"},uri:function(){return state.isNgfwPolicyMode()?"/ng/utm/ssl-ssh-profile":"/ng/utm/ssl-ssh-profile/edit/certificate-inspection"}},threatWeightDetection:{url:"/ng/log/threat-weight",message:"Threat weight detection enabled"},logEventfilterSystemEnabled:{url:"/ng/log/settings",message:"Event Logging and System activity event enabled in Log Settings"},logEventfilterEndpointEnabled:{url:"/ng/log/settings",message:"Event Logging and Endpoint event enabled in Log Settings"},deviceDetectionEnabled:{url:"/p/system/interface/",message:"Device detection enabled on an interface"},interfaceFortitelemetryEnabled:{url:"/p/system/interface/",message:"FortiTelemetry allowed on an interface"},ngfwProfileMode:{message:"Profile-based NGFW-mode",uri:function(){return state.vdom_mode?`/ng/system/vdom/edit/${state.current_vdom}/?vdom=`:"/ng/system/settings"},enabled:function(){return!state.isNgfwPolicyMode()}},trafficLogging:{historicalOnly:!0,url:"/ng/firewall/policy/policy/standard",message:"Traffic logging enabled in a policy"},applicationControl:{url:"/ng/firewall/policy/policy/standard",message:function(){return state.isNgfwPolicyMode()?"Applications enabled directly on a policy":"Application control profile added to a policy"}},webfilter:{url:function(){return state.isNgfwPolicyMode()?"/ng/firewall/policy/security-policy/standard":"/ng/firewall/policy/policy/standard"},message:function(){return state.isNgfwPolicyMode()?"Web Filter/URL Categories enabled directly on a policy":"Web Filter profile added to a policy"}},cloudApplications:{url:"/ng/firewall/policy/policy/standard",message:function(){return state.isNgfwPolicyMode()?"Applications enabled directly on a policy":"Application Control profile and Full SSL Inspection profile added to same policy"}}}));var TIMEFRAME_TYPE=GUIFortiviewConfig.prototype.TIMEFRAME_TYPE={NONE:"none",USER_SELECTED:"userSelected",LATEST:"latest",LARGEST_HISTORICAL:"largestHistorical"};GUIFortiviewConfig.prototype.TIMEFRAME_TYPE=TIMEFRAME_TYPE,GUIFortiviewConfig.prototype._FORTIVIEW_CONFIG=inject.mark(function($location,lang,slide,fazStatus,ApiFilter,state,dashboardCommon){const COMMON_COMPARE_COLUMNS=["bytes","sessions","historicalSessions","bandwidth","packets"],COMMON_DEFAULT_COMPARE_COLUMNS=["bytes","sessions","historicalSessions","bandwidth"];var FORTIVIEW_CONFIG={};const SOURCE_VIEW_TYPES=[{label:"IPs",path:"source"},{label:"Firewall Objects",path:"sourceUUID"}];FORTIVIEW_CONFIG.source={reportBy:REPORT_BY.SOURCE,dashboardWidget:!0,columns:["sourceAddressAvatar","sourceAddress","device","sourceInterface"].concat(COMMON_COMPARE_COLUMNS).concat("score"),defaultColumns:["sourceAddressAvatar","device","score"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),defaultDashboardWidgetColumns:["sourceAddressAvatar","device","score"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),summaryTableColumns:["sourceAddressAvatar","bytes","sessions","historicalSessions"],primaryFilters:["source"],filters:["source","srcmac"],drilldown:{tabs:()=>{let source_tabs=["application","destination","threats","website","websiteCategory","policy","sessions"];return state.isNgfwPolicyMode()||source_tabs.push("websiteSearchPhrase"),source_tabs}},hasActions:!0,lang:"fortiview_sources",segment:this.SEGMENT_TYPE.LAN_DMZ,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"],visualization:{options:["table","bubble"],tooltipColumns:["sourceAddressAvatar","device","sourceInterface","score"].concat(COMMON_COMPARE_COLUMNS)},viewTypes:SOURCE_VIEW_TYPES};const DESTINATION_VIEW_TYPES=[{label:"Owners",path:"owner"},{label:"IPs",path:"destination"},{label:"Countries/Regions",path:"country"},{label:"Firewall Objects",path:"destinationUUID"}];FORTIVIEW_CONFIG.destination={reportBy:REPORT_BY.DESTINATION,dashboardWidget:!0,columns:["destinationAddress","apps","device","destinationInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["destinationAddress","apps"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),primaryFilters:["destination"],filters:["destination","country","dstmac"],drilldown:{tabs:["source","application","threats","policy","sessions"]},lang:"fortiview_destinations",segment:this.SEGMENT_TYPE.LAN_DMZ,viewTypes:DESTINATION_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.country={reportBy:REPORT_BY.COUNTRY,dashboardWidget:!0,deemphasized:!0,columns:["country"].concat(COMMON_COMPARE_COLUMNS).concat("score"),defaultColumns:["country"].concat(COMMON_COMPARE_COLUMNS).concat("score"),primaryFilters:["country"],filters:["country"],drilldown:{tabs:["source","destination","application","website","websiteCategory","policy","sessions"]},lang:"Countries/Regions",segment:this.SEGMENT_TYPE.LAN_DMZ,viewTypes:DESTINATION_VIEW_TYPES,visualization:{options:["country","table","bubble"],data:{country:function(entries,columns,compareByColumn){const formatter=new ftnt_shared.MuTableEntryFormatter({columns:columns});return entries.reduce(function(results,entry){const value=formatter.getEntryValue({entry:entry,columnID:compareByColumn.id});return entry.countryCode&&(results[entry.country]={entry:entry,value:value},results._meta.max=Math.max(results._meta.max||0,value),results._meta.minNonZero=results._meta.minNonZero||value,results._meta.minNonZero=Math.min(results._meta.minNonZero,value||results._meta.minNonZero)),results},{_meta:{columns:columns,compareByColumn:compareByColumn}})}}},dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.owner={reportBy:REPORT_BY.OWNER,dashboardWidget:!0,columns:["destinationOwner"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["destinationOwner"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),primaryFilters:["owner"],filters:["owner"],drilldown:{tabs:["source","destination","application","website","websiteCategory","policy","sessions"]},lang:"Destination Owners",segment:this.SEGMENT_TYPE.LAN_DMZ,viewTypes:DESTINATION_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]};const INTERFACE_VIEW_TYPES=[{label:"Source",path:"sourceInterface"},{label:"Destination",path:"destinationInterface"},{label:"Interface Pair",path:"interfacePairs"}];FORTIVIEW_CONFIG.interfacePairs={reportBy:REPORT_BY.INTFPAIR,dashboardWidget:!0,deemphasized:!0,columns:["interfacePair","sourceInterface","destinationInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["sourceInterface","destinationInterface"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),drilldown:{tabs:["source","destination","application","threats","website","websiteCategory","sessions"]},lang:"Interface Pairs",viewTypes:INTERFACE_VIEW_TYPES,tooltipColumns:COMMON_COMPARE_COLUMNS,filters:["srcintf","dstintf"],primaryFilters:["srcintf","dstintf"],dependencies:["loggingEnabled","localReportEnabled","trafficLogging"],visualization:{options:["table","bubble"],tooltipColumns:["sourceInterface","destinationInterface"].concat(COMMON_COMPARE_COLUMNS)}},FORTIVIEW_CONFIG.sourceInterface={reportBy:REPORT_BY.SRCINTF,dashboardWidget:!0,columns:["sourceInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["sourceInterface"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),drilldown:{tabs:["source","destination","application","threats","website","websiteCategory","destinationInterface","sessions"]},filters:["srcintf"],primaryFilters:["srcintf"],lang:"Source Interfaces",viewTypes:INTERFACE_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.destinationInterface={reportBy:REPORT_BY.DSTINTF,dashboardWidget:!0,columns:["destinationInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["destinationInterface"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),drilldown:{tabs:["source","destination","application","threats","website","websiteCategory","sourceInterface","sessions"]},filters:["dstintf"],primaryFilters:["dstintf"],lang:"Destination Interfaces",viewTypes:INTERFACE_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.policy={reportBy:REPORT_BY.POLICY,dashboardWidget:!0,columns:["policy","policyType","sourceInterface","destinationInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["policy","policyType","sourceInterface","destinationInterface"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),filters:["policyid"],primaryFilters:["policyid"],drilldown:{tabs:["source","destination","application","threats","website","websiteCategory","sessions"]},lang:"fortiview_policies",dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.wifiClient={reportBy:REPORT_BY.WIFICLIENT,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.WIFI,realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,columns:["sourceAddressAvatar","device","SSID","accessPoint","bytes","historicalSessions"],defaultColumns:["sourceAddressAvatar","device","SSID","accessPoint","bytes","historicalSessions"],summaryTableColumns:["sourceAddressAvatar","SSID","accessPoint","bytes"],lang:"fortiview_wificlient",filters:["mac","noDeviceDetected"],primaryFilters:["mac","noDeviceDetected"],hasActions:!0,drilldown:{tabs:["application","destination","threats","website","websiteCategory","policy","sessions"]}},FORTIVIEW_CONFIG.shaper={reportBy:REPORT_BY.SHAPER,dashboardWidget:!0,deemphasized:!0,columns:["shaper","shaperDroppedBytes"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["shaper","shaperDroppedBytes"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),filters:["shaper"],primaryFilters:["shaper"],drilldown:{tabs:["source","destination","application","policy","sessions"]},segment:this.SEGMENT_TYPE.LAN_DMZ,historicalDisabled:!0,lang:"fortiview_shaper"},FORTIVIEW_CONFIG.sessions={sessions:!0,universalSessions:!0,dashboardWidget:!0,reportBy:REPORT_BY.SESSIONS,columns:["sourceAddress","sourceUUID","device","sourceInterface","destinationAddress","destinationUUID","destinationInterface","apps","bytes","policy","packets","protocol","sessionDuration","sessionExpiry","sourceNatAddress","sourcePort","destinationPort","sourceNatPort","shaper"],defaultColumns:["sourceAddress","device","destinationAddress","apps","protocol","sourcePort","destinationPort","bytes","packets","sessionDuration"],filters:["country","application","dstintf","destination","dstuuid","policyid","policytype","source","srcintf","srcuuid","protocol","sourceport","destport","owner","shaper","natsourceport","srcuuidtype","dstuuidtype","username"],visualization:{options:["table"]},drilldown:{disabled:!0},lang:"Sessions",dependencies:["loggingEnabled","trafficLogging"]},BUILD.PLATFORM.HAVE_NET_NPU&&Object.assign(FORTIVIEW_CONFIG.sessions,{columns:[...FORTIVIEW_CONFIG.sessions.columns,...["fortiasic"]],defaultColumns:["sourceAddress","device","destinationAddress","apps","protocol","sourcePort","destinationPort","fortiasic","bytes","packets","sessionDuration"],filters:[...FORTIVIEW_CONFIG.sessions.filters,...["fortiasic"]]}),FORTIVIEW_CONFIG.historicalSessions=Object.assign({},FORTIVIEW_CONFIG.sessions,{dashboardWidget:!1,realtimeDisabled:!0}),FORTIVIEW_CONFIG.cloudFileSessions={sessions:!0,logType:"app-ctrl",logFilters:[new ApiFilter("app",["*_File.*","*.Upload","*.Download"],ApiFilter.OP.CONTAINS)],visualization:{options:["table"]},lang:"File Sessions"},FORTIVIEW_CONFIG.cloudVideoSessions={sessions:!0,logType:"app-ctrl",logFilters:[new ApiFilter("app",["*_Video.Play","*_Video.Access","*_Video.Embedded"],ApiFilter.OP.CONTAINS)],visualization:{options:["table"]},lang:"Video Sessions"};var endpointViewTypes=[{label:"Device",path:"endpointDevices"},{label:"Vulnerability",path:"endpointVulnerability"}];FORTIVIEW_CONFIG.endpointVulnerability={lang:"Endpoint Vulnerabilities",dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SECURITY,reportBy:REPORT_BY.ENDPOINT_VULNERABILITY,noChartSupport:!0,realtimeDisabled:!0,timeframeType:TIMEFRAME_TYPE.LARGEST_HISTORICAL,columns:["vulnerabilityName","severity","vulnerabilityCategory","vulnerabilityID","cveIDs","hostCount"],defaultColumns:["vulnerabilityName","severity","vulnerabilityCategory","cveIDs","vulnerabilityID","hostCount"],filters:["vulnname","severity","vulncat"],primaryFilters:["vulnname"],drilldown:{tabs:["endpointVulnerabilityDevices"]},visualization:{options:["table"]},viewTypes:endpointViewTypes,dependencies:["loggingEnabled","localReportEnabled","deviceDetectionEnabled","interfaceFortitelemetryEnabled","logEventfilterEndpointEnabled"]},FORTIVIEW_CONFIG.endpointVulnerabilityDevices={reportBy:REPORT_BY.ENDPOINT_DEVICE,noChartSupport:!0,columns:["device","sourceAddress","scanTime","forticlientID"],defaultColumns:["device","sourceAddress","scanTime"],lang:"Endpoint Devices",filters:[],primaryFilters:[],drilldown:{disabled:!0},visualization:{options:["table"]},timeframeType:TIMEFRAME_TYPE.LARGEST_HISTORICAL,dependencies:["loggingEnabled","localReportEnabled","deviceDetectionEnabled","interfaceFortitelemetryEnabled","logEventfilterEndpointEnabled"]},FORTIVIEW_CONFIG.endpointDevices={reportBy:REPORT_BY.ENDPOINT_DEVICE,noChartSupport:!0,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.USER,columns:["device","sourceAddress","vulnerabilities","forticlientID"],defaultColumns:["device","sourceAddress","vulnerabilities"],lang:"Vulnerable Endpoint Devices",hasActions:!0,filters:["fctuid"],primaryFilters:["fctuid"],drilldown:{tabs:["endpointDeviceVulnerabilities"]},timeframeType:TIMEFRAME_TYPE.LATEST,viewTypes:endpointViewTypes,dependencies:["loggingEnabled","localReportEnabled","deviceDetectionEnabled","interfaceFortitelemetryEnabled","logEventfilterEndpointEnabled"]},FORTIVIEW_CONFIG.endpointDeviceVulnerabilities=Object.assign({},FORTIVIEW_CONFIG.endpointVulnerability,{reportBy:REPORT_BY.ENDPOINT_VULNERABILITY_DETAIL,dashboardWidget:!1,drilldown:{disabled:!0},columns:["vulnerabilityName","severity","vulnerabilityCategory","vulnerabilityID","cveIDs"],defaultColumns:["vulnerabilityName","severity","vulnerabilityCategory","cveIDs","vulnerabilityID"]}),FORTIVIEW_CONFIG.application={reportBy:REPORT_BY.APPLICATION,dashboardWidget:!0,columns:["apps","appCategory","risk"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["apps","appCategory","risk"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),filters:["application","unscanned"],primaryFilters:["application"],optionalPrimaryFilters:["unscanned"],segment:this.SEGMENT_TYPE.LAN_DMZ,drilldown:{tabs:["source","destination","policy","sessions"],canDrilldown:entry=>!entry.apps.some(app=>app.unknown)},lang:"fortiview_apps",dependencies:["applicationControl","loggingEnabled","localReportEnabled","trafficLogging"]};const CLOUD_VIEW_TYPES=[{label:"fortiview_cloud",path:"cloudApplication"},{label:"Cloud Users",path:"cloudUser"}];FORTIVIEW_CONFIG.cloudApplication={reportBy:REPORT_BY.CLOUD_APPLICATION,dashboardWidget:!0,realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,columns:["apps","appCategory","risk","loginIDCount","bytes","historicalSessions","files","videos"],defaultColumns:["apps","appCategory","risk","bytes","historicalSessions","files","videos"],filters:["cloud-app"],primaryFilters:["cloud-app"],drilldown:{tabs:["cloudUserDrilldown","cloudFileSessions","cloudVideoSessions","sessions"]},logType:"app-ctrl",lang:"fortiview_cloud",viewTypes:CLOUD_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging","sslSshProfileDeepInspection","cloudApplications"]},FORTIVIEW_CONFIG.cloudUser={reportBy:REPORT_BY.CLOUD_USER,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.USER,deemphasized:!0,realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,columns:["cloudUser","apps","bytes","historicalSessions","files","videos"],defaultColumns:["cloudUser","apps","bytes","historicalSessions","files","videos"],filters:["cloud-user","cloud-app"],primaryFilters:["cloud-user"],drilldown:{tabs:["cloudApplication","sessions"]},logType:"app-ctrl",lang:"Cloud Users",viewTypes:CLOUD_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","trafficLogging","sslSshProfileDeepInspection","cloudApplications"]},FORTIVIEW_CONFIG.cloudUserDrilldown=Object.assign({},FORTIVIEW_CONFIG.cloudUser,{dashboardWidget:!1,columns:FORTIVIEW_CONFIG.cloudUser.columns.filter(columnID=>"apps"!==columnID)});const WEB_VIEW_TYPES=[{label:"fortiview_web",path:"website"},{label:"Web Categories",path:"websiteCategory"},{label:"Search Phrases",path:"websiteSearchPhrase"}];FORTIVIEW_CONFIG.website={columns:["webDomain","webCategory","browsingTime","score"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["webDomain","webCategory","browsingTime","score"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),reportBy:REPORT_BY.WEB_DOMAIN,dashboardWidget:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,filters:["web-domain","web-category"],primaryFilters:["web-domain"],drilldown:{tabs:["source","destination","historicalSessions"]},lang:"fortiview_web",logType:"webfilter",viewTypes:WEB_VIEW_TYPES,dependencies:["webfilterCategories","webfilter","trafficLogging","loggingEnabled","localReportEnabled"]},FORTIVIEW_CONFIG.websiteCategory={columns:["webCategory","browsingTime","score"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["webCategory","browsingTime","score"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),reportBy:REPORT_BY.WEB_CATEGORY,dashboardWidget:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,filters:["web-category","web-domain"],primaryFilters:["web-category"],drilldown:{tabs:["source","destination","website","historicalSessions"]},logType:"webfilter",lang:"Web Categories",viewTypes:WEB_VIEW_TYPES,dependencies:["webfilterCategories","webfilter","trafficLogging","loggingEnabled","localReportEnabled"]},FORTIVIEW_CONFIG.websiteSearchPhrase={lang:"Search Phrases",reportBy:REPORT_BY.SEARCH_PHRASE,dashboardWidget:!0,deemphasized:!0,realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,columns:["keyword","searchCount"],defaultColumns:["keyword","searchCount"],filters:["keyword"],primaryFilters:["keyword"],drilldown:{tabs:["websiteSearchPhraseDetail","sessions"]},logType:"webfilter",viewTypes:WEB_VIEW_TYPES,dependencies:["webfilterCategories","loggingEnabled","localReportEnabled","trafficLogging","webfilterLogSearchKeyword","ngfwProfileMode"],supported:()=>{let langKey;const supported=!state.isNgfwPolicyMode();return supported||(langKey="This feature requires NGFW profile-based mode."),[supported,langKey]}},FORTIVIEW_CONFIG.websiteSearchPhraseDetail={lang:"Sources",reportBy:REPORT_BY.SEARCH_PHRASE_DETAIL,realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,columns:["sourceAddress","searchCount","hostname"],defaultColumns:["sourceAddress","searchCount","hostname"],filters:["source"],primaryFilters:["source"],dependencies:["webfilterCategories","loggingEnabled","localReportEnabled","trafficLogging","webfilterLogSearchKeyword","ngfwProfileMode"]},FORTIVIEW_CONFIG.threats={lang:"fortiview_threats",dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SECURITY,deemphasized:!0,reportBy:REPORT_BY.THREATS,columns:["threat","threatCategory","threatLevel","score","historicalSessions"],defaultColumns:["threat","threatCategory","threatLevel","score","historicalSessions"],realtimeDisabled:!0,segment:this.SEGMENT_TYPE.LAN_DMZ,logType:"traffic/threat",filters:["threatname","threattype","logcat"],primaryFilters:["threatname","threattype","logcat"],drilldown:{tabs:["source","destination","country","sessions"]},dependencies:["loggingEnabled","localReportEnabled","trafficLogging","threatWeightDetection"]};const SYSTEM_EVENTS_VIEW_TYPES=[{label:"fortiview_system",path:"systemEvents"},{label:"fortiview_unauth",path:"failedAuthentication"},{label:"fortiview_admin",path:"adminLogin"}];FORTIVIEW_CONFIG.systemEvents={reportBy:REPORT_BY.SYSTEM_EVENTS,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SYSTEM,realtimeDisabled:!0,columns:["event","eventLevel","count"],defaultColumns:["event","eventLevel","count"],filters:["event","level"],primaryFilters:["event"],drilldown:{tabs:["systemEventsLog"]},visualization:{options:["table"]},lang:"fortiview_system",viewTypes:SYSTEM_EVENTS_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","logEventfilterSystemEnabled"]},FORTIVIEW_CONFIG.failedAuthentication={reportBy:REPORT_BY.FAILED_AUTHENTICATION,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SECURITY,realtimeDisabled:!0,columns:["failedAuthSource","source","loginType","loginDestination","failedAttempts"],defaultColumns:["failedAuthSource","source","loginType","loginDestination","failedAttempts"],lang:"fortiview_unauth",viewTypes:SYSTEM_EVENTS_VIEW_TYPES,primaryFilters:["unauth_src1","unauth_src2","logid","community"],drilldown:{tabs:["systemEventsLog"]},dependencies:["loggingEnabled","localReportEnabled","logEventfilterSystemEnabled"]},FORTIVIEW_CONFIG.adminLogin={reportBy:REPORT_BY.ADMIN_LOGIN,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.USER,realtimeDisabled:!0,columns:["username","configChanges","loginCount","loginFailureCount","loginDuration"],defaultColumns:["username","loginDuration","loginCount","loginFailureCount","configChanges"],filters:["adminuser"],primaryFilters:["adminuser"],drilldown:{tabs:["systemEventsLog"]},lang:"fortiview_admin",viewTypes:SYSTEM_EVENTS_VIEW_TYPES,dependencies:["loggingEnabled","localReportEnabled","logEventfilterSystemEnabled"]},FORTIVIEW_CONFIG.systemEventsLog={sessions:!0,universalSessions:!0,logType:"event/system",defaultColumns:[],filters:["user","community","srcip","logid"],visualization:{options:["table"]},lang:"System Events Log"},FORTIVIEW_CONFIG.wanSource=Object.assign({},FORTIVIEW_CONFIG.source,{deemphasized:!0,columns:["sourceAddress","device","sourceInterface"].concat(COMMON_COMPARE_COLUMNS).concat("score"),defaultColumns:["sourceAddress","device","score"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),summaryTableColumns:null,viewTypes:null,segment:this.SEGMENT_TYPE.WAN,lang:"Sources - WAN"}),FORTIVIEW_CONFIG.wanDestination=Object.assign({},FORTIVIEW_CONFIG.destination,{deemphasized:!0,columns:["serverAddress","device","apps"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["serverAddress","device","apps"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),segment:this.SEGMENT_TYPE.WAN,viewTypes:null,lang:"Servers"}),FORTIVIEW_CONFIG.wanThreats=Object.assign({},FORTIVIEW_CONFIG.threats,{deemphasized:!0,segment:this.SEGMENT_TYPE.WAN,lang:"Threats - WAN"}),FORTIVIEW_CONFIG.compromisedHosts={lang:"fortiview_ioc",devices:[this.DEVICE.FORTIANALYZER,this.DEVICE.FORTICLOUD],dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SECURITY,widgetLabelPrefix:"",reportBy:REPORT_BY.IOC,timeframeType:TIMEFRAME_TYPE.NONE,noChartSupport:!0,columns:["sourceAddress","sourceAddressAvatar","device","verdict","incidentCount"],defaultColumns:["sourceAddressAvatar","device","verdict","incidentCount"],defaultDashboardWidgetColumns:["sourceAddress","device","verdict","incidentCount"],segment:this.SEGMENT_TYPE.IMPLICIT_LAN_DMZ,filters:["epid","logtype_mask"],primaryFilters:["epid","logtype_mask"],hasActions:!0,drilldown:{tabs:["compromisedHostsBlacklist","compromisedHostsSuspicious","historicalSessions"]},visualization:{options:["table"],tooltipColumns:["sourceAddress","device","verdict","incidentCount"]},dependencies:["loggingEnabled","localReportEnabled","trafficLogging","threatWeightDetection"],viewTypes:[{label:"Not Acknowledged",path:"compromisedHosts"},{label:"Acknowledged",path:"acknowledgedCompromisedHosts"}],extraFilters:{ack_time:{logic:{is:{integer:!0},NOT:0},value:[""]}},supported:async(params={})=>{let langKey;const response=await fazStatus.checkIocSupport(params.skipLicenseCheck),supported=response===fazStatus.STATUS.IOC_SUPPORTED;return supported||(response===fazStatus.STATUS.IOC_REQUIRE_FAZ?langKey="Compromised hosts requires a FortiAnalyzer":response===fazStatus.STATUS.IOC_REQUIRE_LICENSE&&(langKey="FortiAnalyzer requires a FortiGuard Indicators of Compromise service license in order to see compromised hosts.")),[supported,langKey]}},FORTIVIEW_CONFIG.acknowledgedCompromisedHosts=Object.assign({},FORTIVIEW_CONFIG.compromisedHosts,{dashboardWidget:!1,columns:["sourceAddress","sourceAddressAvatar","device","verdict","incidentCount","acknowledgeComment"],defaultColumns:["sourceAddressAvatar","device","verdict","incidentCount","acknowledgeComment"],extraFilters:{ack_time:{logic:{is:{integer:!0},NOT:1},value:[""]}}}),FORTIVIEW_CONFIG.compromisedHostsBlacklist={lang:"Blacklist",devices:[this.DEVICE.FORTIANALYZER,this.DEVICE.FORTICLOUD],noChartSupport:!0,reportBy:REPORT_BY.IOC_BLACKLIST,timeframeType:TIMEFRAME_TYPE.NONE,columns:["detectedPattern","threatType","threatName","threatCategory","threatDetectMethod","eventCount","securityAction","compromisedHostWebCategory"],defaultColumns:["detectedPattern","threatType","threatName","threatCategory","threatDetectMethod","eventCount","securityAction","compromisedHostWebCategory"],segment:this.SEGMENT_TYPE.LAN_DMZ,primaryFilters:["tdinfoid"],visualization:{options:["table"]}},FORTIVIEW_CONFIG.compromisedHostsSuspicious={lang:"Suspicious",devices:[this.DEVICE.FORTIANALYZER,this.DEVICE.FORTICLOUD],noChartSupport:!0,reportBy:REPORT_BY.IOC_SUSPICIOUS,timeframeType:TIMEFRAME_TYPE.NONE,columns:["detectedPattern","threatType","threatName","threatCategory","threatDetectMethod","eventCount","securityAction","compromisedHostWebCategory"],defaultColumns:["detectedPattern","threatType","threatName","threatCategory","threatDetectMethod","eventCount","securityAction","compromisedHostWebCategory"],segment:this.SEGMENT_TYPE.LAN_DMZ,primaryFilters:["tdinfoid"],visualization:{options:["table"]}},FORTIVIEW_CONFIG.vpn={lang:"fortiview_vpn",dashboardWidget:!0,reportBy:REPORT_BY.VPN,columns:["vpnUsername","connections","lastConnectionTime","vpnType","vpnDuration","bytes"],defaultColumns:["vpnUsername","connections","lastConnectionTime","vpnType","vpnDuration","bytes"],realtimeDisabled:!0,filters:["vpnuser","tunneltype"],primaryFilters:["vpnuser","tunneltype"],drilldown:{tabs:["vpnConnections","vpnEvents"]},dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.vpnConnections={lang:"Connections",reportBy:REPORT_BY.VPN_DETAIL,columns:["sourceAddress","connectionStartTime","connectionEndTime","bytes","vpnDuration","vpnTunnel","vpnType"],defaultColumns:["sourceAddress","connectionStartTime","connectionEndTime","bytes","vpnDuration","vpnTunnel","vpnType"],realtimeDisabled:!0,filters:["vpnuser","tunneltype"],primaryFilters:["tunnelid"],logType:"event/vpn",visualization:{options:["table"]},dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]},FORTIVIEW_CONFIG.vpnEvents={lang:"log_access_event_vpn",sessions:!0,universalSessions:!0,logType:"event/vpn",defaultColumns:[],visualization:{options:["table"]},dependencies:["loggingEnabled","localReportEnabled","trafficLogging"]};const sandboxViewTypes=[{label:"files",path:"sandbox"},{label:"Source",path:"sandboxSource"}];FORTIVIEW_CONFIG.sandboxFileDetails={defaultColumns:[],noChartSupport:!0,hideTabs:!0,hideSummaryTable:!0,hideExtraTimingControls:!0},FORTIVIEW_CONFIG.sandbox={lang:"FortiSandbox Files",reportBy:REPORT_BY.SANDBOX_FILE,dashboardWidget:!0,widgetCategory:dashboardCommon.WIDGET_CATEGORIES.SECURITY,noChartSupport:!0,columns:["sourceAddress","filename","sandboxStatus","submitted","checksum","hasAnalysisFile"],defaultColumns:["filename","sourceAddress","sandboxStatus","submitted","hasAnalysisFile"],realtimeDisabled:!0,filters:["source"],primaryFilters:["checksum"],drilldown:{tabs:["sandboxFileDetails"],canDrilldown:entry=>!!entry.hasAnalysisFile},visualization:{options:["table"]},viewTypes:sandboxViewTypes},FORTIVIEW_CONFIG.sandboxSource={lang:"FortiSandbox Sources",reportBy:REPORT_BY.SANDBOX_SOURCE,noChartSupport:!0,columns:["sourceAddress","sandboxSourceStatus","sandboxPending","sandboxClean","sandboxThreatScore"],defaultColumns:["sourceAddress","sandboxSourceStatus","sandboxPending","sandboxThreatScore","sandboxClean"],realtimeDisabled:!0,filters:["source"],primaryFilters:["source"],drilldown:{tabs:["sandbox"]},visualization:{options:["table"]},viewTypes:sandboxViewTypes},FORTIVIEW_CONFIG.sourceUUID={reportBy:REPORT_BY.SRCUUID,dashboardWidget:!0,deemphasized:!0,columns:["sourceUUID","sourceInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["sourceUUID"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),primaryFilters:["srcuuid","srcuuidtype"],filters:["srcuuid","srcuuidtype"],drilldown:{tabs:["application","destination","website","websiteCategory","websiteSearchPhrase","policy","sessions"],canDrilldown:entry=>!!entry.sourceUuid},lang:"Source Firewall Objects",segment:this.SEGMENT_TYPE.LAN_DMZ,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"],viewTypes:SOURCE_VIEW_TYPES},FORTIVIEW_CONFIG.destinationUUID={reportBy:REPORT_BY.DSTUUID,dashboardWidget:!0,deemphasized:!0,columns:["destinationUUID","destinationInterface"].concat(COMMON_COMPARE_COLUMNS),defaultColumns:["destinationUUID"].concat(COMMON_DEFAULT_COMPARE_COLUMNS),primaryFilters:["dstuuid","dstuuidtype"],filters:["dstuuid","dstuuidtype"],drilldown:{tabs:["application","destination","website","websiteCategory","websiteSearchPhrase","policy","sessions"],canDrilldown:entry=>!!entry.destinationUuid},lang:"Destination Firewall Objects",segment:this.SEGMENT_TYPE.LAN_DMZ,dependencies:["loggingEnabled","localReportEnabled","trafficLogging"],viewTypes:DESTINATION_VIEW_TYPES};const toColumnObject=columnID=>{return this.FORTIVIEW_COLUMNS[columnID]};return Object.keys(FORTIVIEW_CONFIG).forEach(type=>{var config=FORTIVIEW_CONFIG[type]||{};config.type=type,config.columns=(config.columns||[]).map(toColumnObject),config.tooltipColumns=config.tooltipColumns&&config.tooltipColumns.map(toColumnObject),config.visualization&&config.visualization.tooltipColumns&&(config.visualization=Object.assign({},config.visualization),config.visualization.tooltipColumns=config.visualization.tooltipColumns&&config.visualization.tooltipColumns.map(toColumnObject)),config.sessions&&!config.universalSessions&&(config.defaultColumns=[]),config.dependencies&&(config.dependencies=config.dependencies.map(dependency=>this.FORTIVIEW_DEPENDENCIES[dependency]))}),FORTIVIEW_CONFIG}),GUIFortiviewConfig.prototype.isFortiviewSupported=inject.mark(function(state,lang){return async function(type,params={}){const config=this.getFortiviewConfig(type),timeframeType=config.timeframeType,historicalFortiViewSupported=state.isHistoricalFortiViewSupported();let supported,notSupportedLangKey,notSupportedMessage;if("function"==typeof config.supported)[supported,notSupportedLangKey]=await config.supported(params);else switch(timeframeType){case TIMEFRAME_TYPE.USER_SELECTED:supported=!config.realtimeDisabled||historicalFortiViewSupported,notSupportedLangKey="FortiView {0} requires a historical logging device such as FortiAnalyzer";break;case TIMEFRAME_TYPE.LARGEST_HISTORICAL:case TIMEFRAME_TYPE.LATEST:supported=historicalFortiViewSupported,notSupportedLangKey="FortiView {0} requires a historical logging device such as FortiAnalyzer";break;default:supported=!0}return supported||(notSupportedMessage=lang(notSupportedLangKey,[lang(config.lang)]).toString()),[supported,notSupportedMessage]}}),GUIFortiviewConfig.prototype.getFortiviewConfig=function(type){var config=this._FORTIVIEW_CONFIG[type];if(config){let defaultConfig={timeframeType:TIMEFRAME_TYPE.USER_SELECTED,visualization:{options:[FortiviewVisualization.TYPES.TABLE,FortiviewVisualization.TYPES.BUBBLE]}};return Object.assign({},defaultConfig,config)}},GUIFortiviewConfig.prototype.createDefaultWidgetTitle=inject.mark(function(lang){return function(type,compareByID){const config=this.getFortiviewConfig(type),compareByColumn=this.FORTIVIEW_COLUMNS[compareByID];if(config){let labelPrefix=config.widgetLabelPrefix;null==labelPrefix&&(labelPrefix=config.widgetCategory?"top":"FortiView");const label=labelPrefix?`${lang(labelPrefix)} ${lang(config.lang)}`:lang(config.lang).toString();return compareByID?lang("{0} by {1}",[lang(label),lang(compareByColumn.langKey||compareByColumn.id)]).toString():lang(label).toString()}return lang("dashboard_widget_type::fortiview").toString()}}),GUIFortiviewConfig.prototype.getDrilldownTabs=function(fvConfig,type){let tabs=(fvConfig||this.getFortiviewConfig(type)).drilldown.tabs;"function"==typeof tabs&&(tabs=tabs());const toConfigObject=tabType=>{const tabConfig=this._FORTIVIEW_CONFIG[tabType];if(!tabConfig)throw new Error(`FortiView type "${type}" does not exist`);return tabConfig};return Array.isArray(tabs)&&(tabs=tabs.map(tab=>{return{value:tab,langKey:toConfigObject(tab).lang}})),tabs},ftntModule.service("fortiviewConfig",GUIFortiviewConfig)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(0),__webpack_require__(30),__webpack_require__(8),__webpack_require__(426)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ftntModule,inject,Notify,BUILD,fLog,ftnt_shared,FortiviewData){const FORTIVIEW_CANCEL_URL="/api/v2/monitor/fortiview/session/cancel",REQUEST_SESSION_MAP={},RESPONSE_CACHE=new Map;class CancelledError extends Error{}const extendableFortiviewData=inject.CollectableExtends(FortiviewData);ftntModule.service("fortiviewData",class extends extendableFortiviewData{constructor($rootScope,fortiviewConfig){super(fortiviewConfig),$rootScope.$on("$routeChangeSuccess",()=>this.clearCache()),this.clearCache(),this._initModels()}get MODELS(){return this._MODELS}_initModels($INJECTABLE$,fortiviewConfig,FortiViewSourceEntry,FortiViewDeviceEntry,FortiViewDestinationEntry,FortiViewCloudAppEntry,FortiViewCountryEntry,FortiViewOwnerEntry,FortiViewAppEntry,FortiViewPolicyEntry,FortiViewInterfaceEntry,FortiViewThreatEntry,FortiViewWebsiteEntry,FortiViewSearchPhraseEntry,FortiViewWifiEntry,FortiViewShaperEntry,FortiViewSessionEntry,FortiViewCompromisedHostEntry,FortiViewEndpointDeviceEntry,FortiViewCompromisedHostSessionEntry,FortiViewVPNEntry,FortiViewSystemEventEntry,FortiViewEndpointVulnerabilityEntry,FortiViewFailedAuthEntry,FortiViewAdminLoginEntry,FortiViewSandboxFileEntry,FortiViewSandboxSourceEntry,FortiViewSourceUUIDEntry,FortiViewDestinationUUIDEntry,FortiViewLegacyEntry){return()=>{const REPORT_BY=fortiviewConfig.REPORT_BY;this._MODELS={FortiViewLegacyEntry:FortiViewLegacyEntry,[REPORT_BY.SOURCE]:FortiViewSourceEntry,[REPORT_BY.DEVICE]:FortiViewDeviceEntry,[REPORT_BY.DESTINATION]:FortiViewDestinationEntry,[REPORT_BY.CLOUD_APPLICATION]:FortiViewCloudAppEntry,[REPORT_BY.CLOUD_USER]:FortiViewCloudAppEntry,[REPORT_BY.COUNTRY]:FortiViewCountryEntry,[REPORT_BY.OWNER]:FortiViewOwnerEntry,[REPORT_BY.APPLICATION]:FortiViewAppEntry,[REPORT_BY.POLICY]:FortiViewPolicyEntry,[REPORT_BY.SRCINTF]:FortiViewInterfaceEntry,[REPORT_BY.DSTINTF]:FortiViewInterfaceEntry,[REPORT_BY.INTFPAIR]:FortiViewInterfaceEntry,[REPORT_BY.THREATS]:FortiViewThreatEntry,[REPORT_BY.WEB_DOMAIN]:FortiViewWebsiteEntry,[REPORT_BY.WEB_CATEGORY]:FortiViewWebsiteEntry,[REPORT_BY.SEARCH_PHRASE]:FortiViewSearchPhraseEntry,[REPORT_BY.SEARCH_PHRASE_DETAIL]:FortiViewSearchPhraseEntry,[REPORT_BY.WIFICLIENT]:FortiViewWifiEntry,[REPORT_BY.SHAPER]:FortiViewShaperEntry,[REPORT_BY.SESSIONS]:FortiViewSessionEntry,[REPORT_BY.IOC]:FortiViewCompromisedHostEntry,[REPORT_BY.IOC_BLACKLIST]:FortiViewCompromisedHostSessionEntry,[REPORT_BY.IOC_SUSPICIOUS]:FortiViewCompromisedHostSessionEntry,[REPORT_BY.ENDPOINT_DEVICE]:FortiViewEndpointDeviceEntry,[REPORT_BY.ENDPOINT_VULNERABILITY]:FortiViewEndpointVulnerabilityEntry,[REPORT_BY.ENDPOINT_VULNERABILITY_DETAIL]:FortiViewEndpointVulnerabilityEntry,[REPORT_BY.VPN]:FortiViewVPNEntry,[REPORT_BY.VPN_DETAIL]:FortiViewVPNEntry,[REPORT_BY.SYSTEM_EVENTS]:FortiViewSystemEventEntry,[REPORT_BY.FAILED_AUTHENTICATION]:FortiViewFailedAuthEntry,[REPORT_BY.ADMIN_LOGIN]:FortiViewAdminLoginEntry,[REPORT_BY.SANDBOX_FILE]:FortiViewSandboxFileEntry,[REPORT_BY.SANDBOX_SOURCE]:FortiViewSandboxSourceEntry,[REPORT_BY.SRCUUID]:FortiViewSourceUUIDEntry,[REPORT_BY.DSTUUID]:FortiViewDestinationUUIDEntry}}}_getPreviouslyCachedResponse(params){if(params.cache&&!params.realtime&&params.reportBy!==this.fortiviewConfig.REPORT_BY.SESSIONS){const lastCached=RESPONSE_CACHE.get(params.reportBy);if(lastCached){const comparableParams=Object.assign({},params);if(delete comparableParams.scope,angular.equals(comparableParams,lastCached.params))return lastCached.response}}}_cacheResponse(params,response){if(params.cache&&!params.realtime){const comparableParams=Object.assign({},params);delete comparableParams.scope,RESPONSE_CACHE.set(params.reportBy,{params:comparableParams,response:response})}}clearCache(){RESPONSE_CACHE.clear()}getTimeframeOptions($INJECTABLE$,$q,state,notificationRequests){return device=>{device=device||this.getPreferredDevice(state,state.current_vdom);const timeframeOptions=[this.TIME_PERIODS.REALTIME],isDisk=device===state.LOG_DEVICES.DISK,isFortiAnalyzer=device===state.LOG_DEVICES.FORTIANALYZER,isFortiCloud=device===state.LOG_DEVICES.FORTICLOUD;let forticloudPaid=!1,promise=$q.resolve();return isFortiCloud&&(promise=notificationRequests.license().then(license=>{forticloudPaid=[BUILD.SYMBOLS.LICENSE_STATUS_LICENSED,BUILD.SYMBOLS.LICENSE_STATUS_EXPIRES_SOON].includes(license.forticloud_logging.status)})),promise.then(()=>{const historicalDiskSupport=isDisk&&state.isHistoricalDiskFortiViewSupported();let diskWeekSupport=!1;return historicalDiskSupport&&(diskWeekSupport=state.admin.vdom_info[state.current_vdom||state.management_vdom].log_device_state.disk.fortiview_weekly_data,timeframeOptions.push(this.TIME_PERIODS.FIVE_MIN)),(isFortiAnalyzer||isFortiCloud||historicalDiskSupport)&&timeframeOptions.push(this.TIME_PERIODS.ONE_HOUR),(isFortiAnalyzer||isFortiCloud||historicalDiskSupport&&"low"!==state.model_level)&&timeframeOptions.push(this.TIME_PERIODS.ONE_DAY),(isFortiAnalyzer||isFortiCloud&&forticloudPaid||historicalDiskSupport&&diskWeekSupport)&&timeframeOptions.push(this.TIME_PERIODS.ONE_WEEK),timeframeOptions})}}deprecatedGet(reportBy,filters,timePeriod,count,extraParams={},scope){return fLog.warn("Using deprecated fortiviewData get function"),this.get({legacy:!0,reportBy:reportBy,filters:filters,realtime:timePeriod.realtime,startTime:timePeriod.start,endTime:timePeriod.end,count:count,scope:scope,requestID:extraParams.requestID,chartOnly:extraParams.chart_only,extraRequestParams:extraParams})}get($INJECTABLE$,$q,$http,csfTopology){return async params=>{const cachedResponse=this._getPreviouslyCachedResponse(params);if(cachedResponse)return $q.resolve(cachedResponse);await csfTopology.buildIfNecessary(params.csfBuildType);const requestConfigs=this.getRequestConfigs(params,csfTopology.fortigates);let fazChartRequest;if(requestConfigs[0].params.device===this.DEVICE.FORTIANALYZER&&params.withChart&&!params.chartOnly&&(fazChartRequest=this.get(Object.assign({},params,{chartOnly:!0}))),params.reportBy===this.fortiviewConfig.REPORT_BY.SESSIONS)return this.getRealtimeSessions(requestConfigs,csfTopology.fortigates);const requestKey=[params.requestID,(params.scope||{}).$id,params.chartOnly?"chart":null].filter(value=>value).join("#"),requestSessionID=REQUEST_SESSION_MAP[requestKey]=ftnt_shared.util.uniqueID(),requests=requestConfigs.map(requestConfig=>{const fortigate=requestConfig.fortigate,vdom=requestConfig.params.vdom,deviceName={[this.DEVICE.FORTIANALYZER]:"FortiAnalyzer",[this.DEVICE.FORTICLOUD]:"FortiCloud",[this.DEVICE.DISK]:`FortiGate "${fortigate.getLabel()}" in vdom "${vdom}"`}[requestConfig.params.device];let typeName=requestConfig.params.report_by;return requestConfig.params.sort_by&&(typeName=`${typeName} by ${requestConfig.params.sort_by}`),requestConfig.params.chart_only&&(typeName=`${typeName} (chart only)`),fLog.info(`Sending FortiView "${typeName}" request to ${deviceName} `+`(request ID: "${requestKey}", session ID: "${requestSessionID}").`),$http({method:"GET",url:requestConfig.uri,params:requestConfig.params}).then(response=>{const remoteSessionID=response.data.results.sessionid;return remoteSessionID&&params.scope&&params.scope.$on("$destroy",()=>delete REQUEST_SESSION_MAP[requestKey]),this._pollCompletion(requestSessionID,remoteSessionID,requestConfig.params,requestKey,response)}).then(this._checkResponse,error=>(error instanceof CancelledError||fLog.error(`FortView "${typeName}" from "${deviceName}" failed: `+`"${error}"`),$q.reject(error))).then(response=>(fLog.info(`Completed FortiView "${typeName}" `+`request to ${deviceName} `+`(request ID: "${requestKey}", session ID: "${requestSessionID}").`),response.data.fortigate=fortigate,response.data))});try{const responses=await $q.all(requests),combinedResponse=await this.handleResponses(requestConfigs,responses,csfTopology.fortigates,csfTopology.thisFortigate);if(fazChartRequest){let fazChartResponse=await fazChartRequest;combinedResponse.results.summary.graph=fazChartResponse.results.summary.graph}if(REQUEST_SESSION_MAP[requestKey]!==requestSessionID)throw fLog.warn("Cancelling FortiView request "+`(request ID: '${requestKey}', session ID: '${requestSessionID}', `+`overriding session ID: '${REQUEST_SESSION_MAP[requestKey]}').`),new CancelledError;return delete REQUEST_SESSION_MAP[requestKey],this._cacheResponse(params,combinedResponse),combinedResponse}catch(error){return error instanceof CancelledError||(fLog.error(error),Notify.post("Failed to retrieve FortiView data",Notify.LEVEL.ERROR)),$q.reject(error)}}}getRealtimeSessions($INJECTABLE$,$q,$http,csfTopology,FortiViewSessionEntry){return async realtimeSessionRequestConfigs=>{const{uri:uri,params:params}=realtimeSessionRequestConfigs[0],fortigate=params.fortigate&&csfTopology.fortigateMapping[params.fortigate]||csfTopology.thisFortigate;fLog.info('Sending FortiView "sessions" request to FortiGate '+`"${fortigate.getLabel()}`);const response=await $http.get(uri,{params:params}),results=response.data.results;if(results.details){const classMetadata=FortiViewSessionEntry.prepareClassMetadata(csfTopology.fortigates,csfTopology.thisFortigate);results.details=results.details.map(detail=>new FortiViewSessionEntry(detail,{realtime:!0,fortigate:[fortigate.serial]}));const resolveArgs=[csfTopology.fortigates,csfTopology.thisFortigate,realtimeSessionRequestConfigs[0].originalParams,classMetadata],resolvePromise=this._resolveModelClassMetadata(FortiViewSessionEntry,...resolveArgs,results.details);results.details=await $q.when(resolvePromise)}return response.data}}_pollCompletion($INJECTABLE$,$q,$http,$timeout){return(requestSessionID,remoteSessionID,fullParams,requestKey,response)=>"error"===response.data.results.status?$q.reject(response.data.results.error):remoteSessionID&&requestKey&&REQUEST_SESSION_MAP[requestKey]!==requestSessionID?(fLog.warn(`Cancelling FortiView request (request ID: "${requestKey}", `+`session ID: "${requestSessionID}", `+`overriding session ID: "${REQUEST_SESSION_MAP[requestKey]}").`),$http.post(FORTIVIEW_CANCEL_URL,angular.extend({sessionid:remoteSessionID},fullParams)),$q.reject(new CancelledError)):null==remoteSessionID||null==response.data.results.percentage||100===response.data.results.percentage?response:$timeout(1e3).then(()=>requestKey&&REQUEST_SESSION_MAP[requestKey]!==requestSessionID?response:$http.get(response.config.url,{params:angular.extend({device:this.DEVICE.FORTIANALYZER,sessionid:remoteSessionID},fullParams)})).then(this._pollCompletion.bind(this,requestSessionID,remoteSessionID,fullParams,requestKey))}_checkResponse($INJECTABLE$,$q){return response=>(response.params=response.config.params,response.data.results.error?$q.reject(response.data.results.error):response)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(8),__webpack_require__(30),__webpack_require__(31),__webpack_require__(43),__webpack_require__(36),__webpack_require__(32),__webpack_require__(54)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule,inject,ftnt_shared,fLog,fDom,fLang,fSelect,fFormatters,select_setup){const Omniselect=ftnt_shared.Omniselect,TooltipKey=ftnt_shared.TooltipKey,Tooltip=ftnt_shared.Tooltip,translate=fLang.translate,DEVICE_TOPOLOGY_TEMPLATE='<f-csf-truncated-tree is-fortiview-device="true" device="$entry"></f-csf-truncated-tree>';class Devices extends inject.Collectable{constructor($rootScope){super(),this._omniselects=new Map,this._omniselectMeta={},$rootScope.$on("$routeChangeSuccess",()=>this.clearOmniselects())}clearOmniselects(){this._omniselects.forEach(omniselect=>omniselect.destroy()),this._omniselects=new Map}resetOmniselect($INJECTABLE$,FortiViewDetailedDeviceEntry,csfTopology){return fortigateSerials=>{this.clearOmniselects(),Array.isArray(fortigateSerials)&&fortigateSerials.length?fortigateSerials.forEach(fortigateSerial=>{const sourceID=csfTopology.fortigateMapping[fortigateSerial].getOmniselectProxySourceID(this.SOURCE_ID);Omniselect.invalidateCacheForSource(sourceID)}):Omniselect.invalidateCacheForSource(this.SOURCE_ID)}}initializeTooltips($INJECTABLE$,csfTopology){return async()=>{Omniselect.prototype.SOURCES[this.SOURCE_ID]||this._createSource(),await csfTopology.buildIfNecessary(csfTopology.BUILD_TYPES.WITH_DETAILED_DEVICES),csfTopology.addOmniselectProxySources(this.SOURCE_ID)}}formatDevice($INJECTABLE$,FortiViewDetailedDeviceEntry,csfTopology){return function(device){if(!(device instanceof FortiViewDetailedDeviceEntry))throw new Error("Device must be an instance of a FortiViewDetailedDeviceEntry");let result=device.mac;if(device.device){const sourceID=csfTopology.fortigateMapping[device.deviceFortigate].getOmniselectProxySourceID(this.SOURCE_ID),omniselect=this._getOmniselect(sourceID);result=fDom.elem("span",{innerHTML:omniselect.formatEntry(device.device)})}return result}}setupDeviceTooltip($INJECTABLE$,FortiViewDetailedDeviceEntry,csfTopology){return(device,element,params={})=>{if(!(device instanceof FortiViewDetailedDeviceEntry))throw new Error("Device must be an instance of a FortiViewDetailedDeviceEntry");let tooltip;if(device.device){const displayOptions={showDelay:!0,fixed:!0,stopContentClickPropagation:!0},content=fDom.elem("div",null,{children:[fDom.elem("f-icon",{className:"fa-loading"})]});(tooltip=Tooltip.addToElement(element,content,displayOptions)).onShow(async()=>{const sourceID=csfTopology.fortigateMapping[device.deviceFortigate].getOmniselectProxySourceID(this.SOURCE_ID),args=[{q_origin_key:device.mac,datasource:sourceID}];params.searchQuery&&args.push(params.searchQuery);try{const omniselect=this._getOmniselect(sourceID);this._omniselectMeta.device=device;const formatted=await omniselect.processedFormatEntryTooltip.apply(omniselect,args);content.innerHTML="",content.appendChild(formatted),displayOptions.padContent=!1,tooltip.setDisplayOptions(displayOptions)}catch(error){content.innerHTML="",content.appendChild(fDom.elem("f-icon",{className:"fa-warning"})),content.appendChild(fDom.elem("span",{textContent:translate("Failed to retrieve info")})),fLog.error(error)}}),element.classList.add("tooltip-hint")}return tooltip}}doesSearchQueryMatchDevice($INJECTABLE$,FortiViewDetailedDeviceEntry,csfTopology){return(device,searchQuery)=>{if(!(device instanceof FortiViewDetailedDeviceEntry))throw new Error("Device must be an instance of a FortiViewDetailedDeviceEntry");let match=!1;if(device.device){const sourceID=csfTopology.fortigateMapping[device.deviceFortigate].getOmniselectProxySourceID(this.SOURCE_ID);try{match=Omniselect.queryMatchesEntrySync(searchQuery,device.device,sourceID)}catch(e){fLog.error(e)}}return match}}_getOmniselect(sourceID){return this._omniselects.has(sourceID)||this._omniselects.set(sourceID,new Omniselect({settings:{sources:sourceID,meta:this._omniselectMeta},selected:[]})),this._omniselects.get(sourceID)}_createSource($INJECTABLE$,$rootScope,$compile,state){return()=>{const that=this;select_setup.createExtensionSource("devices",this.SOURCE_ID,{onSourceDestroy:function(sourceLifeCycleData){Object.keys(sourceLifeCycleData).forEach(function(scopeKey){sourceLifeCycleData[scopeKey].$destroy()})}});const deviceSource=Omniselect.prototype.SOURCES[this.SOURCE_ID];deviceSource.tooltipHeaderFormatFunction=function(entry,sourceID,meta){const headerElem=meta.device.createDeviceHeaderHTML();if(headerElem)return fDom.elem("div",{},{children:[headerElem]}).innerHTML};const tooltipKeys={};tooltipKeys.ioc=new TooltipKey(translate("IoC Verdict"),(entry,key,meta)=>{const fvEntry=meta.device,severityLabel=fvEntry.getIOCSeverityLabel();if(severityLabel){const severityLevel=fvEntry.getIOCSeverityLevel();return fDom.elem("div",null,{children:[fDom.elem("f-icon",{className:`fa-severity-${severityLevel}`}),fDom.elem("span",{textContent:translate(severityLabel)})]})}},null,!0),tooltipKeys.vulnerabilities=new TooltipKey(translate("Vulnerabilities"),entry=>{if(entry.is_forticlient_endpoint&&entry.vuln_count)return fFormatters.vulnerability_number_bubbles(entry)},null,!0),tooltipKeys.threatScore=new TooltipKey(translate("Threat Score"),(entry,key,meta)=>{const fvEntry=meta.device;if(fvEntry.threatLevel&&fvEntry.threatScore)return fDom.elem("div",{className:"flex-row-centered"},{children:[fDom.elem("span",{textContent:fvEntry.threatScore.toLocaleString()}),fFormatters.severity_bar_elem(fvEntry.threatLevel)]})},null,!0),delete deviceSource.tooltipKeys.vulnerabilities,deviceSource.suppressIdValueTooltip=!0,tooltipKeys.device=new TooltipKey(translate("Device"),entry=>deviceSource.formatFunction(entry,deviceSource.valueFunction(entry))),Object.assign(tooltipKeys,deviceSource.tooltipKeys),tooltipKeys.topology=new TooltipKey(translate("Topology"),function(entry,key,meta){const fvEntry=meta.device,source=this.getSource(that.SOURCE_ID),csfPath=source&&source.csfPath||state.serial,element=document.createElement("div"),lifeCycleData=this.getSourceLifeCycleData(that.SOURCE_ID),uniquePath=csfPath+fvEntry.mac;var scope=lifeCycleData[uniquePath];return scope||(scope=lifeCycleData[uniquePath]=$rootScope.$new(!0)),scope.$path=csfPath,scope.$entry=meta.device,element.innerHTML=DEVICE_TOPOLOGY_TEMPLATE,$compile(element)(scope),scope.$digest(),element},null,!0),tooltipKeys.sessions=new TooltipKey(translate("sessions"),(entry,key,meta)=>{const fvEntry=meta.device;if(fvEntry.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP){if("sessionsAllowed"in fvEntry&&void 0!==fvEntry.sessionsAllowed)return fDom.create_compare_bar_on_tooltip(fvEntry,{keys:["sessionsBlocked","sessionsAllowed"],format_fn:summed=>summed,colors:fDom.COMPARE_BAR.COLOR_SETTINGS.BLOCKED_ALLOWED});if("sessions"in fvEntry)return(fvEntry.sessions||0).toLocaleString()}},null,!0),tooltipKeys.data_bytes=new TooltipKey(translate("total-bytes"),(entry,key,meta)=>{const fvEntry=meta.device;if(fvEntry.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP)return fDom.create_compare_bar_on_tooltip(fvEntry,{keys:["sentBytes","receivedBytes"]})},null,!0),tooltipKeys.data_bandwidth=new TooltipKey(translate("Bandwidth"),(entry,key,meta)=>{const fvEntry=meta.device;if(fvEntry.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP)return fDom.create_compare_bar_on_tooltip(fvEntry,{keys:["sentBandwidth","receivedBandwidth"],format_fn:summed=>fFormatters.metric_bits_per_second(summed)})},null,!0),tooltipKeys.data_packets=new TooltipKey(translate("total-packets"),(entry,key,meta)=>{const fvEntry=meta.device;if(fvEntry.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP)return fDom.create_compare_bar_on_tooltip(fvEntry,{keys:["sentPackets","receivedPackets"]})},null,!0),deviceSource.tooltipKeys=tooltipKeys,select_setup.createExtensionSource(this.SOURCE_ID,fSelect.makeAllVdomsSourceID(this.SOURCE_ID))}}}Devices.prototype.SOURCE_ID="fortiviewDevices",ftntModule.service("fortiviewDevices",Devices)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ftntModule,inject,ftnt_shared){ftntModule.service("fortiviewCommonFilters",class extends inject.Collectable{getApplicationsMapping(){const isParentApplication=app=>!app.name.includes("_");return ftnt_shared.Omniselect.getSourceData("application.name").then(results=>{let byName={},childrenByParentID={};return results.forEach(app=>{byName[app.name]=app,isParentApplication(app)&&(childrenByParentID[app.id]=[])}),results.forEach(app=>{if(!isParentApplication(app)){let parent=byName[(app=>app.name.split("_")[0])(app)];parent&&childrenByParentID[parent.id].push(app)}}),{byID:results.mapping,byName:byName,childrenByParentID:childrenByParentID}})}getFilterConfig($INJECTABLE$,$q,ApiFilter){return()=>{var applicationsMapping;const FILTER_CONFIG={fortigate:{},source:{selectors:{history:"srcip",fortiview:"sourceAddress"}},destination:{selectors:{history:"dstip",fortiview:"destinationAddress"}},srcintf:{selectors:{history:"srcintf",fortiview:"sourceInterface"}},dstintf:{selectors:{history:"dstintf",fortiview:"destinationInterface"}},unscanned:{meta:{excludeFromAllRequests:!0}},application:{selectors:{history:"app",fortiview:"apps"},tweakFilter:{fortiview:function(filter,params){return"realtime"===params.timeframeOption?filter.map(appName=>{let app=applicationsMapping.byName[appName];return app?app.id:appName}):filter},session:function(filter){return filter.map(appName=>{let app=applicationsMapping.byName[appName];return app?app.id:appName})},history:function(apiFilters){this.meta.filters.unscanned&&(apiFilters[0].key="service")}}},"cloud-app":{selectors:{history:"appid",fortiview:"apps"},tweakFilter:{history:function(apiFilters){for(const filter of apiFilters){const app=applicationsMapping.byName[filter.orValues[0]],childApps=applicationsMapping.childrenByParentID[app.id];filter.orValues=[app.id,...childApps.map(childApp=>childApp.id)]}}}},"cloud-user":{selectors:{fortiview:"cloudUser",history:"clouduser"}},country:{selectors:{history:"dstcountry",fortiview:"country"}},srcmac:{selectors:{history:"srcmac",fortiview:"sourceMac"}},dstmac:{selectors:{history:"dstmac",fortiview:"destinationMac"}},noDeviceDetected:{selectors:{fortiview:"noDeviceDetected"},meta:{excludeFromAllRequests:!0}},mac:{selectors:{history:"srcmac",fortiview:"sourceMac"},tweakFilter:{history:function(apiFilters){this.meta.filters.noDeviceDetected&&this.meta.filters.noDeviceDetected[0]&&apiFilters.forEach(filter=>filter.key="srcip")}}},shaper:{},utmaction:{},protocol:{},sourceport:{selectors:{fortiview:"sourcePort"}},destport:{selectors:{fortiview:"destinationPort"}},natsourceport:{selectors:{fortiview:"sourceNatPort"}},owner:{selectors:{fortiview:"destinationOwner",history:"owner"}},"web-domain":{tweakFilter:{history:function(apiFilters){apiFilters.forEach(filter=>{"hostname"===filter.key&&(filter.orValues.push(`*.${filter.orValues[0]}`),filter.operator=ApiFilter.OP.CONTAINS)})}},selectors:{fortiview:"domain",history:"hostname"}},"web-category":{selectors:{fortiview:"categoryId",history:"cat"}},threattype:{selectors:{fortiview:"threatCategory",history:"threattype"}},threatname:{selectors:{fortiview:"threat",history:"threatname"}},logtype_mask:{selectors:{fortiview:"logtypeMask"},meta:{excludeFromSummaryRequest:!0,excludeFromLogRequest:!0}},logcat:{selectors:{fortiview:"logCategory",history:"logcat"}},keyword:{selectors:{fortiview:"keyword",history:"keyword"}},policyid:{selectors:{fortiview:"policyId",history:"policyid"},tweakFilter:{history:apiFilter=>apiFilter}},policytype:{selectors:{fortiview:"policyType",history:"policytype"},tweakFilter:{history:apiFilter=>apiFilter}},epid:{selectors:{fortiview:"endpointID"}},vpnuser:{tweakFilter:{history:function(apiFilters){const filters=this.meta.filters;apiFilters.forEach(filter=>{filters.tunneltype&&"ipsec"===filters.tunneltype[0]?filter.key="xauthuser":filter.key="user"})}},selectors:{fortiview:"vpnUsername",history:"user"}},tunneltype:{tweakFilter:{history:function(apiFilters){const filters=this.meta.filters;if(apiFilters.some(filter=>"ipsec"===(filter.orValues&&filter.orValues[0])&&null==filters.tunnelid))return new ApiFilter("tunnelip",["N/A"],ApiFilter.OP.NOT_EQUAL);apiFilters.forEach(filter=>{"ssl"===(filter.orValues&&filter.orValues[0])&&Array.isArray(filter.orValues)&&filter.orValues.length>0&&(filter.operator="=@",filter.orValues[0]="ssl*")})}},selectors:{fortiview:"vpnType",history:"tunneltype"}},tunnelid:{selectors:{fortiview:"tunnelID",history:"tunnelid"}},vulnname:{selectors:{fortiview:"vulnerabilityName",history:"vulnname"}},severity:{selectors:{fortiview:"severity",history:"severity"}},vulncat:{selectors:{fortiview:"vulnerabilityCategory",history:"vulncat"}},fctuid:{selectors:{fortiview:"forticlientID",history:"fctuid"}},event:{selectors:{fortiview:"event",history:"logdesc"}},level:{selectors:{fortiview:"level",history:"level"}},logid:{selectors:{fortiview:"logID",history:"logid"}},username:{selectors:{fortiview:"username",history:"user"}},user:{selectors:{fortiview:"username",history:"user"}},community:{selectors:{fortiview:"community",history:"community"}},srcip:{selectors:{fortiview:"source",history:"srcip"}},unauth_src1:{selectors:{fortiview:"failedAuthSource"}},unauth_src2:{selectors:{fortiview:"source"}},adminuser:{selectors:{fortiview:"username",history:"user"}},checksum:{selectors:{fortiview:"checksum"}},srcuuidtype:{selectors:{fortiview:"sourceUuidType"},meta:{excludeFromAllRequests:!0}},dstuuidtype:{selectors:{fortiview:"destinationUuidType"},meta:{excludeFromAllRequests:!0}},srcuuid:{selectors:{fortiview:"sourceUuid",history:"srcuuid"}},dstuuid:{selectors:{fortiview:"destinationUuid",history:"dstuuid"}},fortiasic:{},tdinfoid:{selectors:{fortiview:"detectedID"}}};return $q.all([this.getApplicationsMapping().then(mapping=>applicationsMapping=mapping)]).then(()=>FILTER_CONFIG)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(26),__webpack_require__(32),__webpack_require__(34),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,ftntModule,inject,fFormatters,fDateTime,dom){const STACK_OPTIONS={series:{stack:!0},lines:{show:!0,fill:!0,steps:!1}};ftntModule.service("fortiviewCommonGraph",function(lang){var MIN_GRAPH_PERIOD_SECONDS=this.MIN_GRAPH_PERIOD_SECONDS=60;this.MIN_REMOTE_GRAPH_PERIOD_SECONDS=300;var SETUP={bytes:{units:"KB",yValueFormatter:fFormatters.metric_bytes,data:[{label:lang("Bytes Sent"),key:"sentbyte",color:dom.COMPARE_BAR.COLORS.OCEAN_GREEN},{label:lang("Bytes Received"),key:"rcvdbyte",color:dom.COMPARE_BAR.COLORS.GREEN}]},historicalSessions:{units:lang("Sessions"),toFixed:0,data:[{label:lang("Sessions Allowed"),key:"session_allow",color:dom.COMPARE_BAR.COLORS.GREEN},{label:lang("Sessions Blocked"),key:"session_block",color:dom.COMPARE_BAR.COLORS.RED}]},historicalSingularSessions:{units:lang("Sessions"),toFixed:0,data:[{label:lang("Sessions"),key:"sessions",color:dom.COMPARE_BAR.COLORS.BLUE}],options:STACK_OPTIONS},score:{units:lang("Threat Score"),toFixed:0,data:[{label:lang("Low"),key:"score_low",hide_if_zero:!0,color:"rgb(91, 192, 222)"},{label:lang("Medium"),key:"score_medium",hide_if_zero:!0,color:"rgb(243, 187, 45)"},{label:lang("High"),key:"score_high",hide_if_zero:!0,color:"rgb(226, 135, 34)"},{label:lang("Critical"),key:"score_critical",hide_if_zero:!0,color:"rgb(217, 83, 79)"}],options:STACK_OPTIONS},files:{units:lang("files"),data:[{label:lang("Files Uploaded"),key:"files_uploaded",color:dom.COMPARE_BAR.COLORS.OCEAN_GREEN},{label:lang("Files Downloaded"),key:"files_downloaded",color:dom.COMPARE_BAR.COLORS.GREEN}]},count:{units:lang("events"),toFixed:0,data:[{label:lang("events"),key:"count",color:"rgb(165, 194, 254)"}]},loginCount:{units:lang("events"),toFixed:0,data:[{label:lang("Logins"),key:"login_count",color:"rgb(165, 194, 254)"}]},loginFailureCount:{units:lang("events"),toFixed:0,data:[{label:lang("Failed Logins"),key:"failure_count",color:"rgb(230, 166, 165)"}]},configChanges:{units:lang("events"),toFixed:0,data:[{label:lang("Configuration Changes"),key:"config_changes",color:"rgb(165, 194, 254)"}]},connections:{units:lang("Connections"),toFixed:0,data:[{label:lang("Connections"),key:"connections",color:"rgb(165, 194, 254)"}]},failedAttempts:{units:lang("events"),toFixed:0,data:[{label:lang("Failed Attempts"),key:"failure_attempt",color:"rgb(230, 166, 165)"}]},searchCount:{units:lang("Counts"),toFixed:0,data:[{label:lang("Frequency"),key:"search_count",color:"rgb(165, 194, 254)"}]}};SETUP.threatLevel=SETUP.level_score=SETUP.threatlevel=SETUP.score,SETUP.eventLevel=SETUP.count,this.EXEMPT_GRAPH={last_conn_time:!0},this.generateGraph=function(data,graph_type,timeRange){if(!data)return null;const datetime=fDateTime,adjustBasedOnTZDevice=datetime.adjustBasedOnTZDevice;var dataLength=data.length,hasSinglePoint=1===dataLength,start=adjustBasedOnTZDevice(timeRange.start*datetime.S_TO_MS),end=adjustBasedOnTZDevice(timeRange.end*datetime.S_TO_MS),setup=SETUP[graph_type]||SETUP.bytes,non_zero={};dataLength&&(start=Math.min(start,data[0].time*datetime.S_TO_MS),end=Math.max(end,data[dataLength-1].time*datetime.S_TO_MS));var graph={data:function(){var i,j,entry,value,len=data.length,graphData=setup.data;for(j=0;j<graphData.length;j++)graphData[j].data=[];for(i=0;i<len;i++)for(j=0;j<graphData.length;j++){entry=graphData[j],value=data[i][entry.key],entry.hide_if_zero&&value&&(non_zero[entry.key]=!0);let time=adjustBasedOnTZDevice(data[i].time*datetime.S_TO_MS);entry.data.push([time,value])}return Object.keys(non_zero).length&&(graphData=graphData.filter(function(item){return!item.hide_if_zero||non_zero[item.key]})),graphData}(),options:{crosshair:{mode:"x"},xaxis:{mode:"time",timezone:"browser",min:start,max:end},yaxis:{tickFormatter:function(value){return setup.yValueFormatter?setup.yValueFormatter(value):`${value} ${setup.units}`},min:0,tickDecimals:0},points:{show:hasSinglePoint}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=datetime.formatDateTime(x,{skipProcessing:!0}),formatted=y;return setup.yValueFormatter?formatted=setup.yValueFormatter(y):setup.toFixed&&(formatted=`${y.toFixed(setup.toFixed)} ${setup.units}`),`${time}: ${formatted}`}};return(end-start)/1e3-10>MIN_GRAPH_PERIOD_SECONDS&&angular.extend(graph.options,{selection:{mode:"x"}}),angular.extend(graph.options,setup.options),graph}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewAdminLoginEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.username=data.adminuser,this.configChanges=data.config_changes,this.loginCount=data.login_count,this.loginFailureCount=data.failure_count,this.loginDuration=data.duration}validate(){const REQUIRED_FIELDS=["username","configChanges","loginCount","loginFailureCount","loginDuration"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftnt_shared,fvSharedMixins){ngModule.factory("FortiViewAppAwareEntry",function(FortiViewEntry,$q,$http){const AppAwareEntryMixin=fvSharedMixins.AppAwareEntryMixin;return class extends(AppAwareEntryMixin(FortiViewEntry)){static _createApplicationsMapping(){return ftnt_shared.Omniselect.getSourceData("application.name").then(result=>result.mapping)}static _createCustomApplicationsMapping(currentFortigate){const sourceID=currentFortigate.getOmniselectProxySourceID("application.custom");return ftnt_shared.Omniselect.getSourceData(sourceID).then(result=>result.mapping)}static resolveClassMetadata(csfFortigates,currentFortigate,originalParams,classMetadata){if(!classMetadata._unresolvedIsdbEntries.length)return classMetadata._isdbDeferred.resolve({}),classMetadata._isdbDeferred.promise;const uri=currentFortigate.createCSFURI("/api/v2/monitor/utm/app-lookup"),lookup=$http.get(uri,{params:{hosts:JSON.stringify(classMetadata._unresolvedIsdbEntries)}}).then(response=>{const map={};return response.data.results.forEach(result=>{if(result.apps){const key=[result.dst_port,result.protocol,result.address].join("#");map[key]=result.apps.map(app=>({isdbId:app.app_id,name:app.app_name}))}}),map},()=>({}));return classMetadata._isdbDeferred.resolve(lookup),classMetadata._isdbDeferred.promise}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>{const extended=class extends parentEntryClass{static _createApplicationsMapping(){return Promise.reject("Not implemented")}static _createCustomApplicationsMapping(){return Promise.reject("Not implemented")}static prepareClassMetadata(csfFortigates,currentFortigate){let deferredResolve,deferredReject;const deferredPromise=new Promise((resolve,reject)=>{deferredResolve=resolve,deferredReject=reject});return{_applicationsMappingPromise:this._createApplicationsMapping(currentFortigate),_customApplicationsMappingPromise:this._createCustomApplicationsMapping(currentFortigate),_unresolvedIsdbEntries:[],_unresolvedIsdbKeys:new Set,_isdbDeferred:{promise:deferredPromise,resolve:deferredResolve,reject:deferredReject}}}static resolveClassMetadata(){return Promise.resolve()}parse(data){const apps=data.apps||[],classMetadata=this.classMetadata;apps.forEach(app=>{const isdbKey=this._getISDBAppkey(app);isdbKey&&!classMetadata._unresolvedIsdbKeys.has(isdbKey)&&(classMetadata._unresolvedIsdbEntries.push(this._getISDBLookupEntry(app)),classMetadata._unresolvedIsdbKeys.add(isdbKey))}),this.apps=apps,this.scannedApplication=apps.every(app=>app.id)}resolve(csfFortigates,currentFortigate,originalParams,classMetadata){return Promise.all([classMetadata._applicationsMappingPromise,classMetadata._customApplicationsMappingPromise,classMetadata._isdbDeferred.promise]).then(([applicationsMapping,customApplicationsMapping,isdbMapping])=>{const seenIsdbIds=new Set,resolvedApps=[];this.apps.forEach(app=>{const isdbKey=this._getISDBAppkey(app);app.id&&applicationsMapping[app.id]?resolvedApps.push(applicationsMapping[app.id]):app.id&&customApplicationsMapping[app.id]?resolvedApps.push(customApplicationsMapping[app.id]):isdbKey&&isdbMapping[isdbKey]?isdbMapping[isdbKey].forEach(isdbApp=>{seenIsdbIds.has(isdbApp.isdbId)||(resolvedApps.push(isdbApp),seenIsdbIds.add(isdbApp.isdbId))}):(app.name||(app.unknown=!0),resolvedApps.push(app))}),this.apps=resolvedApps})}validate(){return!0}getValueForFilter(filterConfig){return"application"===filterConfig.id?this.apps&&this.apps[0]&&(this.apps[0].name||this.apps[0].id):"unscanned"===filterConfig.id?this.scannedApplication?null:1:super.getValueForFilter(filterConfig)}_getISDBLookupEntry(app){let result=null;const port=app.port,protocol=app.protocol,address=this.destinationAddress;return 0===app.id&&port&&protocol&&address&&(result={address:address,protocol:protocol,dst_port:port}),result}_getISDBAppkey(app){let result=null;if(this.constructor.ISDB_APP_FALLBACK){const port=app.port,protocol=app.protocol,address=this.destinationAddress;return port&&protocol&&address&&(result=[port,protocol,address].join("#")),result}}};return extended.ISDB_APP_FALLBACK=!0,extended})},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>{const extended=class extends parentEntryClass{getMac(data){let mac=data.srcmac;return mac&&mac.includes(",")&&(mac=mac.split(",")[0]),mac}getAddress(data){return data.srcaddr}parse(data){super.parse(data),this.sourceMac=this.mac,this.sourceAddress=this.address,this.endpointID=Number(data.epid),this.verdict=Number(data.verdict),this.verdictLabel=data.verdict_s,this.crowdSourcedScore=Number(data.cs_score),this.incidentCount=Number(data.threat_num),this.blacklistCount=Number(data.bl_count),this.crowdSourcedCount=Number(data.cs_count),this.acknowledgeTimestamp=data.ack_time,this.acknowledgeComment=data.ack_note,this.logtypeMask=data.logtype_mask,this.isAcknowledged=!!this.acknowledgeTimestamp}resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){super.resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData),this.compromisedHostEntry=this}shouldSkip(){if(!this.endpointID)return`Source ${this.sourceAddress} has endpoint ID ${this.endpointID}`}validate(){const REQUIRED_FIELDS=["sourceAddress","verdict","verdictLabel","incidentCount"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}};return extended.INCLUDE_COMPROMISED_HOST_DATA=!1,extended})},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>(class extends parentEntryClass{parse(data){super.parse(data),this.country=data.country,this.countryCode=this._parseCountryCode(data.country_id),this.meta.realtime||(this.scoreAllowed=data.score_allow,this.scoreBlocked=data.score_block)}validate(){const requiredFields=["country"];this.meta.realtime||requiredFields.push("scoreAllowed","scoreBlocked");for(let field of requiredFields)if(null==this[field])throw new Error(`Missing required field "${field}"`);return super.validate()}shouldAggregate(){return!0}getAggregationKey(){return this.country}}))},function(module,exports,__webpack_require__){"use strict";const IpMask=__webpack_require__(127);module.exports=(parentEntryClass=>{const extended=class extends parentEntryClass{getMac(data){return data.dstmac}getAddress(data){return data.dstaddr}parse(data){this.destinationAddress=data.dstaddr,this.destinationMac=data.dstmac,this.destinationInterface=data.dstintf,data.resolved&&data.resolved!==this.destinationAddress&&(this.destinationDomainName=data.resolved),this.countryCode=this._parseCountryCode(data.country_id),this.country=data.country,this.domain=this._parseDomain(data),super.parse(data)}_parseDomain(data){return(data.domain||"").split(":")[0]}validate(){var missingField=["destinationAddress"].find(field=>null==this[field]);if(missingField)throw new Error(`Missing destination field "${missingField}"`);return super.validate()}shouldAggregate(){return IpMask.isPublic(this.destinationAddress)}getAggregationKey(){return this.destinationAddress}};return extended.INCLUDE_COMPROMISED_HOST_DATA=!1,extended})},function(module,exports,__webpack_require__){"use strict";const iconUtil=__webpack_require__(38),iconCode=__webpack_require__(69),{SERIALIZE_TO_TOPOLOGY_REPORT:SERIALIZE_TO_TOPOLOGY_REPORT}=__webpack_require__(67),RISK_TYPES={NOW:"NOW",LATER:"LATER",SOMEDAY:"SOMEDAY"},RISK_CONSTANTS={IOC_VERDICT:{COMPROMISED:4,HIGH:3,MEDIUM:2,LOW:1,SAFE:0}};module.exports=(parentEntryClass=>{const extended=class extends parentEntryClass{static _shouldIncludeIOC(csfFortigates,fortiviewData){let include=!1;return this.INCLUDE_COMPROMISED_HOST_DATA&&(include=csfFortigates.some(fortigate=>{const devices=new Set(fortiviewData.getDevices(fortigate.state));return[fortiviewData.DEVICE.FORTIANALYZER,fortiviewData.DEVICE.FORTICLOUD].some(device=>devices.has(device))})),include}static _getDevices(csfFortigates,classMetadata){const csfDevicesMap={};csfFortigates.forEach(fortigate=>{csfDevicesMap[fortigate.serial]=fortigate.userDeviceMapping}),classMetadata._deviceByFortigate=csfDevicesMap}static _getQuarantinedData(csfFortigates,classMetadata){const quarantinedByFortigate={};csfFortigates.forEach(fortigate=>{quarantinedByFortigate[fortigate.serial]=fortigate.quarantinedUserMapping}),classMetadata._quarantinedByFortigate=quarantinedByFortigate}static _getBannedData(csfFortigates,classMetadata){const bannedByFortigate={};csfFortigates.forEach(fortigate=>{bannedByFortigate[fortigate.serial]=fortigate.bannedUserMapping}),classMetadata._bannedByFortigate=bannedByFortigate}static _getCompromisedHosts(){throw new Error("Not implemented.")}static resolveClassMetadata(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){let promise=Promise.all([super.resolveClassMetadata(...arguments),this._getDevices(csfFortigates,classMetadata),this._getQuarantinedData(csfFortigates,classMetadata),this._getBannedData(csfFortigates,classMetadata)]);return this._shouldIncludeIOC(csfFortigates,fortiviewData)&&(promise=promise.then(()=>this._getCompromisedHosts(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData))),promise}getMac(){throw new Error("Not implemented")}getAddress(){throw new Error("Not implemented")}getThreatLevel(){return null}getThreatScore(){return null}parse(data){super.parse(data),this.mac=this.getMac(data),this.mac&&(this.mac=this.mac.toLowerCase()),this.address=this.getAddress(data),this.hostname=this.getHostname(data),this.threatLevel=this.getThreatLevel(data),this.threatScore=this.getThreatScore(data),this._authUsername=this.meta.realtime?data.username:data.user,this._unauthUsername=data.unauthuser}resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){const Class=this.constructor;if(classMetadata=classMetadata||this.classMetadata,this.device=null,this.deviceFortigate=null,this.isQuarantined=!1,this.isEMSQuarantined=!1,this.quarantinedOnFortigates=[],this.isBanned=!1,this.bannedOnFortigates=[],this.compromisedHostEntry=null,Array.from(new Set([...this.meta.fortigate,...csfFortigates.map(fortigate=>fortigate.serial)])).forEach(serial=>{const deviceMapping=classMetadata._deviceByFortigate[serial],quarantineMapping=classMetadata._quarantinedByFortigate[serial],bannedMapping=classMetadata._bannedByFortigate[serial],device=this.mac&&deviceMapping&&deviceMapping[this.mac],isQuarantined=this.mac&&quarantineMapping&&quarantineMapping[this.mac],isBanned=this.address&&bannedMapping&&bannedMapping[this.address];!this.device&&device&&(this.device=device,this.deviceFortigate=serial,this.isEMSQuarantined=this.device&&"quarantined"===this.device.online_status),isQuarantined&&(this.isQuarantined=!0,this.quarantinedOnFortigates.push(serial)),isBanned&&(this.isBanned=!0,this.bannedOnFortigates.push(serial))}),this.device){const icon=iconUtil.getDeviceIcon(this.device);if(this.iconClass=icon.iconClass,this.iconCode=iconCode.getIconCode(icon.iconClass),this.iconKey=icon.iconKey,this.device.is_forticlient_endpoint&&(this.iconBadge=iconUtil.iconClass(iconUtil.ICON_TYPE.DEVICE_STATUS,this.device.online_status)),Class._shouldIncludeIOC(csfFortigates,fortiviewData)){const compromisedHostEntry=classMetadata._compromisedHostsByMac[this.mac];compromisedHostEntry&&(this.compromisedHostEntry=compromisedHostEntry)}}return super.resolve(...arguments)}static postResolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData,entries){const riskScore=currentFortigate.riskScore,maxCrowdSourcedScore=entries.reduce((acc,device)=>Math.max(acc,device.getIOCCrowdSourcedScore()),0);entries.forEach(device=>{let verdict=device.getIOCVerdict();device.iocScore=verdict===RISK_CONSTANTS.IOC_VERDICT.COMPROMISED?Math.max(2*maxCrowdSourcedScore,50):device.getIOCCrowdSourcedScore(),device.vulnScore=riskScore.vulnerabilityScore(device),verdict===RISK_CONSTANTS.IOC_VERDICT.COMPROMISED?device.riskType=RISK_TYPES.NOW:device.getVulnerabilityCount()?device.riskType=RISK_TYPES.LATER:device.threatScore&&(device.riskType=RISK_TYPES.SOMEDAY)});const threatDevices=entries.filter(device=>device.riskType===RISK_TYPES.SOMEDAY),maxThreatScore=threatDevices.reduce((maxValue,device)=>Math.max(maxValue,device.threatScore||-1),0);threatDevices.forEach(device=>device.allRiskValue=device.threatScore);const vulnDevices=entries.filter(device=>device.riskType===RISK_TYPES.LATER);vulnDevices.forEach(device=>{device.allRiskValue=2*maxThreatScore+device.vulnScore});const maxVulnScore=vulnDevices.reduce((maxScore,device)=>Math.max(device.allRiskValue,maxScore),maxThreatScore);return entries.filter(device=>device.riskType===RISK_TYPES.NOW).forEach(device=>device.allRiskValue=2*maxVulnScore+device.iocScore),entries=this._filterServerDevices(...arguments)}static _filterServerDevices(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData,entries){const ModelClass=this,detectedServerMap={},statsServerMap={},result=[];for(let[fgtSerial,userDevices]of Object.entries(classMetadata._deviceByFortigate))for(let[mac,device]of Object.entries(userDevices)){const isValid=device.last_seen<=300;if(device.server&&isValid){const server=new ModelClass({mac:mac,address:device.ipv4_address,srcintf:device.detected_interface,detected_interface:device.detected_interface,server:device.server,hostname:device.hostname,value:1,hideValue:!0},{legacy:!0,fortigate:[fgtSerial]},device.vdom,classMetadata);server.resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData),device.fortiswitch_id&&device.fortiswitch_port_id&&(server.fortilink_switch_id=device.fortiswitch_id,server.fortilink_port_id=device.fortiswitch_port_id),detectedServerMap[device.mac]=server}}return entries.forEach(d=>{const fortigateSerial=d.meta.fortigate,mac=d.mac;if(detectedServerMap[mac]){const fortigate=csfFortigates.find(fgt=>fgt.serial===fortigateSerial),srcIntf=fortigate&&fortigate.interfaceMap[d.srcintf],srcIsWAN=srcIntf&&"wan"===srcIntf.role,detectedFromDstIntf=d.detection_interface&&d.detection_interface===d.dstintf;srcIsWAN||detectedFromDstIntf||(d.server=detectedServerMap[mac].server,result.push(d),statsServerMap[mac]=d)}else result.push(d)}),Object.keys(detectedServerMap).forEach(function(mac){statsServerMap[mac]||result.push(detectedServerMap[mac])}),result}getUsername(){return this.getAuthUsername()||this.getUnauthUsername()}get username(){return this.getUsername()}set username(value){this._authUsername=value}getAuthUsername(){let result=null;return this.device&&(result=this.device.authuser),result||this._authUsername}getUnauthUsername(){let result=null;return this.device&&(result=this.device.has_endpoint_record?this.device.endpoint_record.unauth_user:this.device.unauth_user),result||this._unauthUsername}canQuarantine(){let result=!1;return this.device&&(this.device.fortiap_id||this.device.fortiswitch_id)&&(result=!0),result}getDeviceLabel(){let label=this.mac||this.address;return this.device&&(label=this.device.alias||this.device.hostname||label),label}getIOCVerdict(){let result=0;return this.compromisedHostEntry&&!this.compromisedHostEntry.isAcknowledged&&(result=this.compromisedHostEntry.verdict),result}getIOCCrowdSourcedScore(){let result=0;return this.compromisedHostEntry&&(result=this.compromisedHostEntry.crowdSourcedScore),result}getIOCEndpointID(){let result=null;return this.compromisedHostEntry&&(result=this.compromisedHostEntry.endpointID),result}getIOCLogTypeMask(){let result=null;return this.compromisedHostEntry&&(result=this.compromisedHostEntry.logtypeMask),result}getIOCSeverityLevel(){return{0:"none",1:"low",2:"medium",3:"high",4:"critical"}[this.getIOCVerdict()]}getIOCSeverityLabel(){return{1:"Low Suspicion",2:"Medium Suspicion",3:"High Suspicion",4:"Compromised"}[this.getIOCVerdict()]}getFortiClientID(){let result=null;return this.device&&(result=this.device.forticlient_id||this.device.endpoint_record&&this.device.endpoint_record.forticlient_id),result}getHostname(data){return data.resolved}_getVulnerabilityCountBySeverity(severity){let result=0;if(this.device&&this.device.vuln_count){let key="vuln_count";severity&&(key=`${key}_${severity}`),result=this.device[key]}return result}getVulnerabilityCount(){return this._getVulnerabilityCountBySeverity()}getCriticalVulnerabilityCount(){return this._getVulnerabilityCountBySeverity("critical")}getHighVulnerabilityCount(){return this._getVulnerabilityCountBySeverity("high")}getMediumVulnerabilityCount(){return this._getVulnerabilityCountBySeverity("medium")}getLowVulnerabilityCount(){return this._getVulnerabilityCountBySeverity("low")}getVulnerabilitySeverityLevel(){let level="none";return this.getCriticalVulnerabilityCount()?level="critical":this.getHighVulnerabilityCount()?level="high":this.getMediumVulnerabilityCount()?level="medium":this.getLowVulnerabilityCount()&&(level="low"),level}getOverallRiskSeverityLevel(){const SEVERITY_LEVEL_ORDER=["critical","high","medium","low","none"],iocLevel=this.getIOCSeverityLevel(),vulnerabilityLevel=this.getVulnerabilitySeverityLevel(),threatLevel=this.threatLevel;let severity="none",index=SEVERITY_LEVEL_ORDER.indexOf(severity);return[iocLevel,vulnerabilityLevel,threatLevel].forEach(level=>{if(level){const levelIndex=SEVERITY_LEVEL_ORDER.indexOf(level);levelIndex<index&&(severity=level,index=levelIndex)}}),severity}[SERIALIZE_TO_TOPOLOGY_REPORT](){const copy=Object.assign({},this);return delete copy.classMetadata,copy.compromisedHostEntry&&(delete copy.compromisedHostEntry.classMetadata,delete copy.compromisedHostEntry.compromisedHostEntry),JSON.parse(JSON.stringify(copy))}};return extended.prototype.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP=!0,extended.INCLUDE_COMPROMISED_HOST_DATA=!0,extended.RISK_CONSTANTS=RISK_CONSTANTS,extended.RISK_TYPES=RISK_TYPES,extended})},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>{return class extends parentEntryClass{getMac(data){return data.srcmac||data.mac}getAddress(data){return data.srcaddr}getThreatLevel(data){return data.level}getThreatScore(data){return data.score}parse(data){super.parse(data),this.sourceMac=this.mac,this.sourceAddress=this.address,this.sourceInterface=data.srcintf}validate(){if(null==this.sourceAddress)throw new Error("Missing device IP address");if(null==this.sourceInterface)throw new Error("Missing device source interface");return super.validate()}}})},function(module,exports,__webpack_require__){"use strict";const{SERIALIZE_TO_TOPOLOGY_REPORT:SERIALIZE_TO_TOPOLOGY_REPORT,DESERIALIZE_FROM_TOPOLOGY_REPORT:DESERIALIZE_FROM_TOPOLOGY_REPORT}=__webpack_require__(67),utilIp=__webpack_require__(220);module.exports=(parentEntryClass=>(class extends parentEntryClass{static prepareClassMetadata(){return{}}static resolveClassMetadata(csfFortigates,currentFortigate,params,classMetadata){return Promise.resolve(classMetadata)}constructor(data={},meta={},vdom={},classMetadata={}){super(),this.meta=meta,this.vdom=vdom,this.classMetadata=classMetadata,this.meta.legacy&&Object.assign(this,data),this.parse(data)}parse(){throw new Error("Not implemented")}resolve(){return Promise.resolve()}static postResolve(csfFortigates,currentFortigate,params,classMetadata,fortiviewData,entries){return entries}validate(){throw new Error("Not implemented")}shouldSkip(){return!1}shouldAggregate(){return!1}getAggregationKey(){throw new Error("Not implemented")}aggregateWith(){throw new Error("Not implemented")}_parseCountryCode(countryId){return utilIp.getCountryCodeForID(countryId)}[SERIALIZE_TO_TOPOLOGY_REPORT](){const copy=Object.assign({},this);return delete copy.classMetadata,JSON.parse(JSON.stringify(copy))}static[DESERIALIZE_FROM_TOPOLOGY_REPORT](instanceJSONData){const instance=new this;return Object.assign(instance,instanceJSONData),instance}}))},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>(class extends parentEntryClass{parse(data){super.parse(data),this.destinationOwner=data.owner,this.hostCount=data.host_count}validate(){if(null==this.destinationOwner)throw new Error("Missing destination owner");return super.validate()}shouldAggregate(){return!0}getAggregationKey(){return this.destinationOwner}}))},function(module,exports,__webpack_require__){"use strict";module.exports=(parentEntryClass=>(class extends parentEntryClass{parse(data){super.parse(data),this.sentBytes=data.sentbyte,this.receivedBytes=data.rcvdbyte,this.meta.realtime?(this.sessions=data.sessions,this.sentPackets=data.tx_packets,this.receivedPackets=data.rx_packets,this.sentBandwidth=data.tx_bandwidth,this.receivedBandwidth=data.rx_bandwidth,this.sentShaperDropped=data.tx_shaper_drops,this.receivedShaperDropped=data.rx_shaper_drops):(this.sessionsAllowed=data.session_allow,this.sessionsBlocked=data.session_block,!data.session_allow&&data.count_allow&&(this.sessionsAllowed=Number(data.count_allow)))}validate(){let missingField;const commonFields=["receivedBytes","sentBytes"],fieldIsMissing=field=>null==this[field];if(missingField=this.meta.realtime?["sessions","sentPackets","receivedPackets","sentBandwidth","receivedBandwidth","sentShaperDropped","receivedShaperDropped"].concat(commonFields).find(fieldIsMissing):["sessionsAllowed","sessionsBlocked"].concat(commonFields).find(fieldIsMissing))throw new Error(`Missing traffic field '${missingField}'`);return!0}aggregateWith(trafficEntry){this.meta.fortigate=this.meta.fortigate.concat(trafficEntry.meta.fortigate),this.sentBytes+=trafficEntry.sentBytes,this.receivedBytes+=trafficEntry.receivedBytes,this.meta.realtime?(this.sessions+=trafficEntry.sessions,this.sentPackets+=trafficEntry.sentPackets,this.receivedPackets+=trafficEntry.receivedPackets,this.sentBandwidth+=trafficEntry.sentBandwidth,this.receivedBandwidth+=trafficEntry.receivedBandwidth,this.sentShaperDropped+=trafficEntry.sentShaperDropped,this.receivedShaperDropped+=trafficEntry.receivedShaperDropped):(this.sessionsAllowed+=trafficEntry.sessionsAllowed,this.sessionsBlocked+=trafficEntry.sessionsBlocked)}}))},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewAppEntry",function(FortiViewTrafficEntry){const INVALID_CATEGORIES=new Set(["unknown","unscanned"]);return class extends FortiViewTrafficEntry{parse(data){super.parse(data),data.category&&!INVALID_CATEGORIES.has(data.category.toLowerCase())&&(this.category=data.category)}validate(){if(!this.apps.length)throw new Error("No applications");return!0}shouldAggregate(){return!0}getAggregationKey(){var app=this.apps[0];return app.id||`${app.name}-${app.port}-${app.protocol}`}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewCloudAppEntry",function(FortiViewTrafficEntry,fortiviewConfig){return class extends FortiViewTrafficEntry{parse(data){super.parse(data),this.category=data.category,this.cloudUser=data.clouduser,this.loginIDCount=data.loginid_count,this.filesUploaded=data.files_uploaded,this.filesDownloaded=data.files_downloaded,this.videosCount=data.videos}validate(){const REPORT_BY=fortiviewConfig.REPORT_BY;if(this.meta.reportBy===REPORT_BY.CLOUD_APPLICATION&&!this.apps.length)throw new Error("Missing applications");return["filesUploaded","filesDownloaded","videosCount"].forEach(field=>{if(null==this[field])throw new Error(`Missing field "${field}"`);if("string"==typeof this[field]&&!this[field])throw new Error(`Field "${field}" is empty`)}),super.validate()}getValueForFilter(filterConfig){return"cloud-app"===filterConfig.id?this.apps[0]&&this.apps[0].name:super.getValueForFilter(filterConfig)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){ngModule.factory("FortiViewCompromisedHostEntry",function(FortiViewDetailedDeviceEntry){const MixedInDetailedDeviceEntry=(0,fvSharedMixins.CompromisedHostEntryMixin)(FortiViewDetailedDeviceEntry);return class extends MixedInDetailedDeviceEntry{}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewCompromisedHostSessionEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.sourceAddress=data.srcaddr,this.detectedPattern=data.tdpattern,this.detectedID=data.tdinfoid,this.threatDetectMethod=data.tdtype,this.threatType=data.threattype,this.threatName=data.threatname,this.websiteCategoryId=data.tdwfcate,this.websiteCategory=data.webcat,this.eventCount=Number(data.event_num),this.securityAction=data.action,this.endpointID=data.epid,this.logType=data.logtype_s}validate(){const REQUIRED_FIELDS=["sourceAddress","endpointID"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`);return!0}getVisualizationKey(){return this.detectedPattern+this.securityAction+this.sourceAddress}getLogType(){let logType=this.logType;return"traffic"===logType&&(logType="traffic/fortiview"),logType}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){const CountryEntryMixin=fvSharedMixins.CountryEntryMixin;ngModule.factory("FortiViewCountryEntry",function(FortiViewTrafficEntry){return class extends(CountryEntryMixin(FortiViewTrafficEntry)){}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(37),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fIp,fvSharedMixins){const DestinationEntryMixin=fvSharedMixins.DestinationEntryMixin;ngModule.factory("FortiViewDestinationEntry",function(FortiViewDetailedDeviceEntry){return class extends(DestinationEntryMixin(FortiViewDetailedDeviceEntry)){drilldownWithFortigate(){return!fIp.IpMask.isPublic(this.destinationAddress)}getVisualizationKey(){return this.destinationAddress+this.meta.fortigate[0]}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewDestinationUUIDEntry",function(FortiViewUUIDEntry){return class extends FortiViewUUIDEntry{getUUIDs(data){return[data.uuid||data.dstuuid]}parse(data){super.parse(data),this.destinationUuid=data.uuid||data.dstuuid,this.destinationInterface=data.dstintf,this.destinationIP=data.addrip,data.dstintf&&data.dstintf.includes(",")&&(this.destinationInterface=data.dstintf.split(","))}validate(){const anyRequireField=["destinationUuid","destinationIP"];if(!anyRequireField.some(field=>this[field]))throw new Error(`Missing destination field '${anyRequireField.join(", ")}'`);return super.validate()}resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){return super.resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData).then(()=>{this.destinationUuidType=this.uuidTypeMap[this.destinationUuid]})}getVisualizationKey(){return this.destinationUuid}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(93),__webpack_require__(111),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fQuarantine,fAvatars,fvSharedMixins){ngModule.factory("FortiViewDetailedDeviceEntry",function(FortiViewTrafficEntry,csfTopology,$rootScope){const DetailedDeviceEntryMixin=fvSharedMixins.DetailedDeviceEntryMixin;let compromisedHostsPromise;$rootScope.$on("$routeChangeSuccess",()=>compromisedHostsPromise=null);return class extends(DetailedDeviceEntryMixin(FortiViewTrafficEntry)){static _getCompromisedHosts(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){const fortiviewConfig=fortiviewData.fortiviewConfig,Class=this;let promise;if(compromisedHostsPromise)promise=compromisedHostsPromise;else{const map={};promise=compromisedHostsPromise=fortiviewData.get({reportBy:fortiviewConfig.REPORT_BY.IOC,sortByColumn:"verdict",requestID:`${Class.name}IoC`,scope:originalParams.scope}).then(response=>{for(let entry of response.results.details)entry.sourceMac&&(map[entry.sourceMac]=entry)},()=>{promise===compromisedHostsPromise&&(compromisedHostsPromise=null)}).then(()=>map)}return promise.then(map=>classMetadata._compromisedHostsByMac=map)}createQuarantineRequestEntry(){return fQuarantine.createQuarantineRequestEntry({mac:this.mac,otherMacs:this.device.other_macs,hostname:this.device.hostname,user:this.getUsername(),fortigateSerial:this.meta.fortigate[0]})}createBanIPRequestEntry(){return fQuarantine.createBanIPRequestEntry({ip:this.address,fortigateSerial:this.meta.fortigate[0]})}createDeviceHeaderHTML(){const device=this.device;let csfPath,iconType,userInfo;if(device){const fortigate=csfTopology.fortigateMapping[this.deviceFortigate];csfPath=fortigate&&fortigate.path,iconType=device.iconType,userInfo=device.user_info}let address=this.hostname?`${this.hostname} (${this.address})`:this.address;return fAvatars.headerFormatFn({user:this.getAuthUsername(),unauthuser:this.getUnauthUsername(),uid:this.getFortiClientID(),isFortiClientUnauthuser:device&&device.is_forticlient_unauth_user,display_mode:"large",addr:address,csfPath:csfPath,iconType:iconType,email:device&&device.email,phone:device&&device.phone,forticlientUsername:device&&device.forticlient_username,avatarSource:device&&device.avatar_source,quarantined:this.isQuarantined,emsQuarantined:this.isEMSQuarantined,banned:this.isBanned,riskSeverityLevel:this.getOverallRiskSeverityLevel(),userInfo:userInfo})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){ngModule.factory("FortiViewDeviceEntry",function(FortiViewDetailedDeviceEntry){const DeviceEntryMixin=fvSharedMixins.DeviceEntryMixin;return class extends(DeviceEntryMixin(FortiViewDetailedDeviceEntry)){}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewEndpointDeviceEntry",function(FortiViewDetailedDeviceEntry){return class extends FortiViewDetailedDeviceEntry{getMac(data){return data.srcmac||data.mac}getAddress(data){return data.srcip}parse(data){super.parse(data),this.sourceAddress=this.address,this.username=data.user,this.deviceType=data.device,this.forticlientID=data.fctuid,this.vulnerabilityCounts={total:data.vuln_count,critical:data.vuln_count_critical,high:data.vuln_count_high,medium:data.vuln_count_medium,low:data.vuln_count_low,info:data.vuln_count_info},this.scanTime=1e3*Number(data.scantime)}validate(){const REQUIRED_FIELDS=["forticlientID","sourceAddress"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewEndpointVulnerabilityEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.hostCount=data.host_count,this.severity=data.severity,this.vulnerabilityID=data.vulnid,this.vulnerabilityName=data.vulnname,this.vulnerabilityCategory=data.vulncat,this.cveIDs=data.cveid&&data.cveid.split(" ")}validate(){const REQUIRED_FIELDS=["vulnerabilityName","severity"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){const EntryMixin=fvSharedMixins.EntryMixin;ngModule.factory("FortiViewEntry",function(){return class extends(EntryMixin(class{})){getValueForFilter(filterConfig){return"fortigate"===filterConfig.id?this.meta.fortigate:this[filterConfig.selectors&&filterConfig.selectors.fortiview||filterConfig.id]}drilldownWithFortigate(){return!1}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,BUILD){ngModule.factory("FortiViewFailedAuthEntry",function(FortiViewEntry,lang){const SYMBOLS=BUILD.SYMBOLS;return class extends FortiViewEntry{parse(data){if(this.$dynamicTranslateMap={src_field1:data.src_field1,src_field2:data.src_field2,dst_field1:data.dst_field1,dst_field2:data.dst_field2},this.failedAuthSource=data.unauth_src1,this.source=data.unauth_src2,this.failedAttempts=data.failure_attempt,this.logID=data.logid,this.interface=data.intf_name,this.loginType=data.unauth_type,this.loginDestination=data.unauth_target,"Admin"===this.loginType&&data.dst_field2){const protocol=data.unauth_target1.toUpperCase(),ipAndInterface=this.interface?`${data.unauth_target2} - ${this.interface}`:data.unauth_target2;this.loginDestination=`${protocol}(${ipAndInterface})`}else if("FGFM"===this.loginType||"SNMP"===this.loginType||"FortiGuard Web Filter Override"===this.loginType)this.loginDestination=this.interface?`${data.unauth_target} - ${this.interface}`:data.unauth_target;else if("Firewall"===this.loginType||"IPsec VPN"===this.loginType){const prefix={Firewall:lang("Policy"),"IPsec VPN":lang("IPsec VPN")}[this.loginType];prefix&&(this.loginDestination=`${prefix} ${data.unauth_target}`)}"SNMP"===this.loginType&&"community"===data.src_field1?this.community=data.unauth_src1:this.username=this.failedAuthSource}validate(){const REQUIRED_FIELDS=["failedAuthSource","source","logID"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}getLogType(){var UNAUTH_SUBTYPE_MAP=new Map([[SYMBOLS.LOG_SUBTYPE_EVENT_SYSTEM,"event/system"],[SYMBOLS.LOG_SUBTYPE_EVENT_VPN,"event/vpn"],[SYMBOLS.LOG_SUBTYPE_EVENT_USER,"event/user"],[SYMBOLS.LOG_SUBTYPE_EVENT_ROUTER,"event/router"],[SYMBOLS.LOG_SUBTYPE_EVENT_WIRELESS,"event/wireless"],[SYMBOLS.LOG_SUBTYPE_EVENT_WAD,"event/wad"],[SYMBOLS.LOG_SUBTYPE_EVENT_ENDPOINT,"event/endpoint"],[SYMBOLS.LOG_SUBTYPE_EVENT_HA,"event/ha"],[SYMBOLS.LOG_SUBTYPE_EVENT_SECURITY_AUDIT,"event/security-rating"],[SYMBOLS.LOG_SUBTYPE_EVENT_FEXT,"event/fortiextender"]]),logID=this.logID&&this.logID[0],subtype=logID&&parseInt(logID.substring(2,4),10);return UNAUTH_SUBTYPE_MAP.get(subtype)||UNAUTH_SUBTYPE_MAP.get(SYMBOLS.LOG_SUBTYPE_EVENT_SYSTEM)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,ftnt_shared){const iconCode=ftnt_shared.topology.iconCode;ngModule.factory("FortiViewInterfaceEntry",function(FortiViewTrafficEntry){return class extends FortiViewTrafficEntry{static resolveClassMetadata(){return Promise.all([super.resolveClassMetadata(...arguments)])}parse(data){super.parse(data),this.sourceInterface=data.srcintf,this.destinationInterface=data.dstintf}resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){return super.resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData).then(()=>{this.iconCode=iconCode.getIconCode("ftnt-interface")})}validate(){if(!["sourceInterface","destinationInterface"].find(field=>null!=this[field]))throw new Error("Missing srcintf and dstintf interface fields");return super.validate()}drilldownWithFortigate(){return!0}getVisualizationKey(){return this.sourceInterface+this.destinationInterface+this.meta.fortigate[0]}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewLegacyEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){Object.assign(this,data)}validate(){return!0}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){const OwnerEntryMixin=fvSharedMixins.OwnerEntryMixin;ngModule.factory("FortiViewOwnerEntry",function(FortiViewTrafficEntry){return class extends(OwnerEntryMixin(FortiViewTrafficEntry)){}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewPolicyEntry",function(FortiViewTrafficEntry){return class extends FortiViewTrafficEntry{parse(data){super.parse(data),this.policyId=data.policyid,this.policyType=data.policytype,this.sourceInterface=data.srcintf,this.destinationInterface=data.dstintf}validate(){if(null==this.policyId)throw new Error("Missing policy ID");if(null==this.policyType)throw new Error("Missing policy type");if(null==this.sourceInterface||null==this.destinationInterface)throw new Error("Missing policy interfaces");return super.validate()}drilldownWithFortigate(){return!0}getVisualizationKey(){return this.policyId+this.policyType+this.meta.fortigate[0]}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){var SANDBOX_LIST_URL="/api/v2/monitor/fortiview/sandbox-file-list";ngModule.factory("FortiViewSandboxFileEntry",function(FortiViewEntry,csfTopology,$q,$http){return class extends FortiViewEntry{static resolveClassMetadata(){return this._sandboxFilesSet=$q.all(csfTopology.fortigates.map(fortigate=>$http.get(fortigate.createCSFURI(SANDBOX_LIST_URL)).catch(()=>null))).then(responses=>responses.reduce((sandboxFilesSet,response)=>(response&&response.data.results.forEach(file=>sandboxFilesSet.add(file)),sandboxFilesSet),new Set)),this._sandboxFilesSet}parse(data){this.sourceAddress=data.srcaddr,this.sourceMac=data.mac,this.filename=data.filename,this.sandboxStatus=data.sandbox_status,this.submitted=Number(1e3*data.submitted),this.checksum=data.checksum}resolve(){return this.constructor._sandboxFilesSet.then(sandboxFilesSet=>{this.hasAnalysisFile=sandboxFilesSet.has(this.checksum)})}validate(){const REQUIRED_FIELDS=["sourceAddress","filename","submitted","checksum"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`);if(!this.sandboxStatus)throw new Error("Missing sandbox file status")}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewSandboxSourceEntry",function(FortiViewEntry){const STATUS_THREAT_SCORE={pending:0,unknown:0,failed:0,clean:0,lowRisk:10,mediumRisk:20,highRisk:30,malicious:100},STATUS_FIELD_MAP={failed:"failed",pending:"pending",unknown:"unknown",clean:"clean","low risk":"lowRisk","medium risk":"mediumRisk","high risk":"highRisk",malicious:"malicious"};return class extends FortiViewEntry{parse(data){this.sourceAddress=data.srcip,Object.values(STATUS_FIELD_MAP).forEach(key=>this[key]=0),this[STATUS_FIELD_MAP[data.sandbox_status]]=data.status_count,this.calculateThreatScore()}validate(){const REQUIRED_FIELDS=["sourceAddress"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}shouldAggregate(){return!0}getAggregationKey(){return this.sourceAddress}aggregateWith(sandboxSourceEntry){this.failed+=sandboxSourceEntry.failed,this.pending+=sandboxSourceEntry.pending,this.unknown+=sandboxSourceEntry.unknown,this.clean+=sandboxSourceEntry.clean,this.lowRisk+=sandboxSourceEntry.lowRisk,this.mediumRisk+=sandboxSourceEntry.mediumRisk,this.highRisk+=sandboxSourceEntry.highRisk,this.malicious+=sandboxSourceEntry.malicious,this.calculateThreatScore()}calculateThreatScore(){this.threatScore=Object.keys(STATUS_THREAT_SCORE).reduce((score,status)=>score+this[status]*STATUS_THREAT_SCORE[status],0)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewSearchPhraseEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.searchCount=data.search_count,"web-search-phrase"===this.meta.reportBy?this.keyword=data.keyword:"web-search-phrase-detail"===this.meta.reportBy&&(this.hostname=data.hostname,this.sourceAddress=data.srcaddr,this.srcip_hostname&&(this.sourceHostname=this.srcip_hostname),this.username=data.user)}validate(){if(null==this.searchCount)throw new Error("searchCount missing");if("web-search-phrase"===this.meta.reportBy){if(null==this.keyword)throw new Error("keyword missing")}else"web-search-phrase-detail"===this.meta.reportBy&&["hostname","sourceAddress"].forEach(key=>{if(null==this[key])throw new Error(`${key} missing`)});return!0}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewSessionEntry",function(FortiViewDetailedDeviceEntry){class SessionEntry extends FortiViewDetailedDeviceEntry{getMac(data){return data.srcmac}getAddress(data){return data.saddr}parse(data){this.policyId=data.policyid,this.policyType=data.policytype,this.destinationMac=data.dstmac,this.sourceAddress=data.saddr,this.destinationAddress=data.daddr,this.sourceInterface=data.srcintf,this.destinationInterface=data.dstintf,this.protocol=data.proto,this.sourcePort=data.sport,this.destinationPort=data.dport,this.sourceNatPort=data.snport,this.sourceNatAddress=data.snaddr,this.country=data.country,this.countryCode=this._parseCountryCode(data.country_id),this.fortiasic=data.fortiasic,this.secondsToExpiry=Number(data.expiry),this.durationSeconds=data.duration,this.sourceUuid=data.src_uuid,this.sourceUuidType=data.src_uuid_type,this.destinationUuid=data.dst_uuid,this.destinationUuidType=data.dst_uuid_type,this.shaper=data.shaper,super.parse(data)}}return SessionEntry.ISDB_APP_FALLBACK=!1,SessionEntry.INCLUDE_COMPROMISED_HOST_DATA=!1,SessionEntry.prototype.INCLUDE_TRAFFIC_STATS_IN_TOOLTIP=!1,SessionEntry})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewShaperEntry",function(FortiViewTrafficEntry){return class extends FortiViewTrafficEntry{parse(data){super.parse(data),this.shaper=data.shaper}validate(){if(null==this.shaper)throw new Error("Missing shaper ID");return super.validate()}drilldownWithFortigate(){return!0}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(37)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fIp){ngModule.factory("FortiViewSourceEntry",function(FortiViewDetailedDeviceEntry){return class extends FortiViewDetailedDeviceEntry{getMac(data){let mac=data.srcmac||data.mac;return mac&&mac.includes(",")&&(mac=mac.split(",")[0]),mac}getAddress(data){return data.srcaddr}getThreatLevel(data){return data.level}getThreatScore(data){return data.score}parse(data){super.parse(data),this.sourceMac=this.mac,this.sourceAddress=this.address,this.sourceInterface=data.srcintf,this.meta.realtime||(this.scoreAllowed=data.score_allow,this.scoreBlocked=data.score_block)}validate(){var historicalFields=this.meta.realtime?[]:["scoreAllowed","scoreBlocked"],missingField=["sourceAddress","sourceInterface"].concat(historicalFields).find(field=>null==this[field]&&""!==this[field]);if(missingField)throw new Error(`Missing source field '${missingField}'`);return super.validate()}drilldownWithFortigate(){return!fIp.IpMask.isPublic(this.sourceAddress)}shouldAggregate(){return fIp.IpMask.isPublic(this.sourceAddress)}getAggregationKey(){return this.sourceAddress}getVisualizationKey(){return this.sourceAddress+this.meta.fortigate[0]}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewSourceUUIDEntry",function(FortiViewUUIDEntry){return class extends FortiViewUUIDEntry{getUUIDs(data){return[data.uuid||data.srcuuid]}parse(data){super.parse(data),this.sourceUuid=data.uuid||data.srcuuid,this.sourceInterface=data.srcintf,this.sourceIP=data.addrip,data.srcintf&&data.srcintf.includes(",")&&(this.sourceInterface=data.srcintf.split(","))}validate(){const anyRequireField=["sourceUuid","sourceIP"];if(!anyRequireField.some(field=>this[field]))throw new Error(`Missing destination field '${anyRequireField.join(", ")}'`);return super.validate()}resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData){return super.resolve(csfFortigates,currentFortigate,originalParams,classMetadata,fortiviewData).then(()=>{this.sourceUuidType=this.uuidTypeMap[this.sourceUuid]})}getVisualizationKey(){return this.sourceUuid}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(0)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,BUILD){ngModule.factory("FortiViewSystemEventEntry",function(FortiViewEntry){var SYMBOLS=BUILD.SYMBOLS;return class extends FortiViewEntry{parse(data){this.count=Number(data.count),this.event=data.event,this.level=data.level,this.severity=data.severity,this.logID=data.logid}validate(){const REQUIRED_FIELDS=["event","count","level"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}getLogType(){var UNAUTH_SUBTYPE_MAP=new Map([[SYMBOLS.LOG_SUBTYPE_EVENT_SYSTEM,"event/system"],[SYMBOLS.LOG_SUBTYPE_EVENT_VPN,"event/vpn"],[SYMBOLS.LOG_SUBTYPE_EVENT_USER,"event/user"],[SYMBOLS.LOG_SUBTYPE_EVENT_ROUTER,"event/router"],[SYMBOLS.LOG_SUBTYPE_EVENT_WIRELESS,"event/wireless"],[SYMBOLS.LOG_SUBTYPE_EVENT_WAD,"event/wad"],[SYMBOLS.LOG_SUBTYPE_EVENT_ENDPOINT,"event/endpoint"],[SYMBOLS.LOG_SUBTYPE_EVENT_HA,"event/ha"],[SYMBOLS.LOG_SUBTYPE_EVENT_SECURITY_AUDIT,"event/security-rating"],[SYMBOLS.LOG_SUBTYPE_EVENT_FEXT,"event/fortiextender"]]),logID=this.logID&&this.logID[0],subtype=logID&&parseInt(logID.substring(2,4),10);return UNAUTH_SUBTYPE_MAP.get(subtype)||UNAUTH_SUBTYPE_MAP.get(SYMBOLS.LOG_SUBTYPE_EVENT_SYSTEM)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewThreatEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.threat=data.threat,this.threatCategory=data.utm,this.logCategory=data.logcat,this.threatLevel=data.threatlevel,this.scoreAllowed=data.score_allow,this.scoreBlocked=data.score_block,this.sessionsAllowed=data.session_allow,this.sessionsBlocked=data.session_block}validate(){return["threat","threatCategory","logCategory","scoreAllowed","scoreBlocked","sessionsAllowed","sessionsBlocked"].forEach(field=>{if(null==this[field])throw new Error(`Missing field ${field}`)}),!0}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(75)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fvSharedMixins){ngModule.factory("FortiViewTrafficEntry",function(FortiViewAppAwareEntry){const TrafficEntryMixin=fvSharedMixins.TrafficEntryMixin;return class extends(TrafficEntryMixin(FortiViewAppAwareEntry)){}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){const UUID_TYPE_URI="/api/v2/monitor/firewall/uuid-type-lookup";ngModule.factory("FortiViewUUIDEntry",function(FortiViewTrafficEntry,$http,csfTopology,$q){return class extends FortiViewTrafficEntry{static prepareClassMetadata(){this._unresolvedUUIDs={},this._uuidDeferred=$q.defer()}static resolveClassMetadata(){const Class=this,promises={};if(!Object.keys(Class._unresolvedUUIDs).length)return Class._uuidDeferred.resolve({}),Class._uuidDeferred.promise;for(let serial in Class._unresolvedUUIDs){const fortigate=csfTopology.fortigateMapping[serial];let lookup=$q.resolve({});fortigate&&(lookup=$http.get(fortigate.createCSFURI(UUID_TYPE_URI),{params:{uuids:Class._unresolvedUUIDs[serial]}}).then(response=>response.data.results,()=>({}))),promises[serial]=lookup}return Class._uuidDeferred.resolve($q.all(promises)),Class._uuidDeferred.promise}parse(data){const Class=this.constructor,serial=this.meta.fortigate[0];this.uuidTypeMap={},Class._unresolvedUUIDs[serial]||(Class._unresolvedUUIDs[serial]=[]);let uuids=[];Array.isArray(uuids)?uuids=this.getUUIDs(data):"string"==typeof uuids&&(uuids=[uuids]),Class._unresolvedUUIDs[serial]=Class._unresolvedUUIDs[serial].concat(uuids),super.parse(data)}resolve(){const Class=this.constructor,serial=this.meta.fortigate[0];return Class._uuidDeferred.promise.then(uuidMaps=>{this.uuidTypeMap=uuidMaps[serial]})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewVPNEntry",function(FortiViewEntry){return class extends FortiViewEntry{parse(data){this.vpnUsername=data.vpnuser,this.vpnType=data.tunneltype,this.sentBytes=data.sentbyte,this.receivedBytes=data.rcvdbyte,this.connections=Number(data.connections),this.vpnDuration=Number(data.duration),this.connectionStartTime=1e3*Number(data.from),this.connectionEndTime=1e3*Number(data.to),this.lastConnectionTime=1e3*Number(data.last_conn_time),this.sourceAddress=data.srcaddr,this.sourceCountry=data.src_country,this.tunnelID=data.tunnelid,this.vpnTunnel=data.vpntunnel}validate(){const REQUIRED_FIELDS=["vpnType","sentBytes","receivedBytes","connections","vpnDuration","lastConnectionTime","connectionStartTime","connectionEndTime"];for(let field of REQUIRED_FIELDS)if(null==this[field])throw new Error(`Missing required field "${field}"`)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewWebsiteEntry",function(FortiViewTrafficEntry,fortiviewConfig){return class extends FortiViewTrafficEntry{parse(data){super.parse(data),this.domain=data.domain,this.category=data.category,this.categoryId=data.category_id,this.meta.realtime||(this.browsingTime=data.browsingtime,this.scoreAllowed=data.score_allow,this.scoreBlocked=data.score_block)}validate(){const requiredFields=[];this.meta.reportBy===fortiviewConfig.REPORT_BY.DOMAIN&&requiredFields.push("domain"),this.meta.reportBy===fortiviewConfig.REPORT_BY.CATEGORY&&requiredFields.push("category","categoryId"),this.meta.realtime||requiredFields.push("browsingTime","scoreAllowed","scoreBlocked");for(let field of requiredFields)if(null==this[field])throw new Error(`Missing required field "${field}"`);return super.validate()}shouldAggregate(){return!0}getAggregationKey(){return this[{[fortiviewConfig.REPORT_BY.WEB_DOMAIN]:"domain",[fortiviewConfig.REPORT_BY.WEB_CATEGORY]:"categoryId"}[this.meta.reportBy]]}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.factory("FortiViewWifiEntry",function(FortiViewDetailedDeviceEntry){return class extends FortiViewDetailedDeviceEntry{getMac(data){return data.mac}getAddress(data){return data.srcaddr}parse(data){super.parse(data),this.sourceMac=this.mac,this.sourceAddress=this.address,this.noDeviceDetected=!this.sourceMac||this.sourceMac===this.sourceAddress,this.noDeviceDetected&&(delete this.sourceMac,delete this.mac),this.accessPoint=data.ap,this.accessPointSerial=data.apsn,this.SSID=data.srcssid}validate(){if(null==this.sourceAddress)throw new Error("Missing Wifi Client sourceAddress");return super.validate()}drilldownWithFortigate(){return!0}getValueForFilter(filterConfig){return"mac"===filterConfig.id?this.noDeviceDetected?this.sourceAddress:this.mac:super.getValueForFilter(filterConfig)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,function(module,exports,__webpack_require__){"use strict";const BaseCsfDevice=__webpack_require__(71);module.exports=class extends BaseCsfDevice{constructor(csfEntry={},parentFortigateId=""){const id=[csfEntry.serial,parentFortigateId].join("::");super(csfEntry,id,parentFortigateId),this.id=id,this.updateCsfEntry(csfEntry)}updateCsfEntry(csfEntry){this.serial=csfEntry.serial,this.hostname=csfEntry.host_name,this.managementIP=csfEntry.mgmt_ip_str,this.mgmtPort=csfEntry.mgmt_port,this.urlParams=csfEntry.url_params}getLabel(){return this.hostname||this.serial}getManagementURL(){const port=this.mgmtPort,portStr=port&&443!==port?`:${port}`:"",ip=this.managementIP;if(!ip)return"";const urlParams=(this.urlParams||[]).map(param=>{if(param.key&&param.value)return`${param.key}=${encodeURIComponent(param.value)}`}).filter(String).join("&");return`https://${ip}${portStr}${urlParams?`?${urlParams}`:""}`}}},,,,function(module,exports,__webpack_require__){"use strict";module.exports={base:__webpack_require__(432),fortigate:__webpack_require__(818),fortiap:__webpack_require__(819),fortinac:__webpack_require__(820),fortiswitch:__webpack_require__(821),fortiview:__webpack_require__(429),fabricDevices:__webpack_require__(822),topology:__webpack_require__(434),symbols:__webpack_require__(67),util:__webpack_require__(824)}},function(module,exports,__webpack_require__){"use strict";module.exports={models:__webpack_require__(134),state:__webpack_require__(175),urls:__webpack_require__(431)}},function(module,exports,__webpack_require__){"use strict";module.exports={models:__webpack_require__(235)}},function(module,exports,__webpack_require__){"use strict";module.exports={models:__webpack_require__(238)}},function(module,exports,__webpack_require__){"use strict";module.exports={models:__webpack_require__(180)}},function(module,exports,__webpack_require__){"use strict";module.exports={models:__webpack_require__(236)}},function(module,exports,__webpack_require__){"use strict";const{Graph:Graph,DfsVisitor:DfsVisitor}=__webpack_require__(165),{TopologyNode:TopologyNode,TopologyEdge:TopologyEdge,TopologyGraph:TopologyGraph,TopologyGraphObjects:TopologyGraphObjects}=__webpack_require__(435),{CsfFortiGate:CsfFortiGate,CsfUpstreamFortiGate:CsfUpstreamFortiGate}=__webpack_require__(134),{CsfFortiSwitchHA:CsfFortiSwitchHA,CsfFortiSwitchBlock:CsfFortiSwitchBlock}=__webpack_require__(180);class CondensedTopologyNode extends TopologyNode{constructor(csfDevice){if(!(csfDevice instanceof CsfFortiSwitchHA||csfDevice instanceof CsfFortiSwitchBlock))throw new Error("Invalid data for CondensedTopologyNode");super(csfDevice)}}class CsfFortiSwitchHATopologyNode extends CondensedTopologyNode{constructor(fortiswitchNodes,fortigateNode){super(new CsfFortiSwitchHA(fortiswitchNodes.map(node=>node.data),fortigateNode.data)),this.graph=new Graph(fortiswitchNodes,[]),Object.defineProperty(this,"isFswHANode",{writable:!1,configurable:!1,value:!0})}contains(nodeId){return this.graph.nodeMap.get(nodeId)}getHAMemberIndex(haMemberNodeId){const node=this.graph.nodeMap.get(haMemberNodeId);return this.data.indexOf(node)}get hasFortilink(){return this.data.hasFortilink}}class CsfFortiSwitchBlockTopologyNode extends CondensedTopologyNode{constructor(component,componentRootId){const cyclicFswArrangement=CondensedTopologyGraphObjects.arrangeBlockNodesCyclically(component,component.nodeMap.get(componentRootId));super(new CsfFortiSwitchBlock(component,componentRootId,cyclicFswArrangement))}get hasFortilink(){return this.data.hasFortilink}}class BlockCutHierarchy{constructor(id,parentId,data,cutNodeParentId,blockCycleIndex){this.id=id,this.parentId=parentId,this.data=data,this.cutNodeParentId=cutNodeParentId,this.blockCycleIndex=blockCycleIndex,this.children=[]}depthFirstSearch(callback){"function"==typeof callback&&(callback(this),Array.isArray(this.children)&&this.children.forEach(function(childHierarchy){childHierarchy.depthFirstSearch(callback)}))}}class CondensedTopologyGraphObjects extends TopologyGraphObjects{static constructNodesAndEdges(devices){const edgeConstructor=TopologyEdge,{nodes:tempNodes,edges:tempEdges}=super.constructNodesAndEdges(devices,TopologyNode,edgeConstructor),tempGraph=new Graph(tempNodes,tempEdges),nodesToCondense=[];tempGraph.components.forEach(component=>{component.toBlockCutTree().nodes.forEach(bcTreeNode=>{if(bcTreeNode.isBlockNode){const blockComponent=bcTreeNode.data,parentFortigateNode=Array.from(blockComponent.nodeMap.values()).find(memberNode=>memberNode.data instanceof CsfFortiGate);if(parentFortigateNode){const _fswHaMembers=[];blockComponent.nodeMap.forEach(function(node){node.data.hasFortilink&&_fswHaMembers.push(node)}),nodesToCondense.push({haMembers:_fswHaMembers,parentFortigateNode:parentFortigateNode})}}})});let condensedGraph=tempGraph;return nodesToCondense.forEach(condensedInfo=>{const members=condensedInfo.haMembers,parentFortigateNode=condensedInfo.parentFortigateNode;condensedGraph=condensedGraph.mergeNodes(members,(mergedNodeId,mergedNodeData)=>{const node=new CsfFortiSwitchHATopologyNode(mergedNodeData,parentFortigateNode);return node.id=mergedNodeId,node},(adjNode,haNode)=>Reflect.construct(edgeConstructor,[adjNode,haNode,null,null,adjNode.data.vdom,haNode.data.vdom]))}),{nodes:condensedGraph.nodes,edges:condensedGraph.edges}}static arrangeBlockNodesCyclically(blockComponent,startingNode){if(!blockComponent.nodeMap.get(startingNode.id))return[];const nodesByDepths=[];blockComponent.depthFirstSearch(startingNode,new DfsVisitor(function(dfsState){const depth=dfsState.depth;nodesByDepths[depth]||(nodesByDepths[depth]=[]),nodesByDepths[depth].push(dfsState.node)}));let cycle=nodesByDepths.reduce(function(prev,nodes){return prev.concat(nodes)},[]);if(startingNode instanceof CsfFortiSwitchHATopologyNode){const firstHAMember=startingNode.data.csfEntry[0];(cycle[cycle.length-1].data.ports||[]).some(port=>{return(port["isl-peer-device-name"]||port.isl_peer_device_name)===firstHAMember.id})&&(cycle=[startingNode].concat(cycle.slice(1,cycle.length).reverse()))}return cycle}}module.exports={CondensedTopologyGraph:class extends TopologyGraph{constructor(condensedNodes,condensedEdges){super(condensedNodes,condensedEdges)}getBlockCutHierarchy(){const hierarchyMap=new Map,blockCutHierarchy=new BlockCutHierarchy,dfsVisitor=new DfsVisitor(function(dfsState,dfsStateMap){const node=dfsState.node,id=node.id,parent=dfsState.parent,grandParent=dfsStateMap.get(parent)?dfsStateMap.get(parent).parent:null,hasBlockNodeParent=parent&&parent.isBlockNode,hasBlockNodeGrandparent=grandParent&&grandParent.isBlockNode;if(parent){let hierarchyParentId,cutNodeParentId;hasBlockNodeParent||hasBlockNodeGrandparent?hasBlockNodeGrandparent&&(hierarchyParentId=grandParent.id,cutNodeParentId=parent.id):cutNodeParentId=hierarchyParentId=parent&&parent.id;let hierarchyData=node;if(node.isBlockNode&&(hierarchyData=new CsfFortiSwitchBlockTopologyNode(node.data,cutNodeParentId)),hierarchyParentId){const bcHierarchy=new BlockCutHierarchy(id,hierarchyParentId,hierarchyData,cutNodeParentId);hierarchyMap.get(hierarchyParentId).children.push(bcHierarchy),hierarchyMap.set(id,bcHierarchy)}}else{const bcHierarchy=new BlockCutHierarchy(id,null,node,null);hierarchyMap.set(id,bcHierarchy)}});return this.components.forEach(component=>{const bcTree=component.toBlockCutTree();let rootNode=component.nodes.find(node=>node.data instanceof CsfUpstreamFortiGate);rootNode||(rootNode=component.nodes.find(node=>node.data instanceof CsfFortiGate&&node.data.isCurrent)),bcTree.depthFirstSearch(bcTree.nodeMap.get(rootNode.id),dfsVisitor);const componentHierarchy=hierarchyMap.get(rootNode.id);this._sortHierarchyLevels(componentHierarchy),blockCutHierarchy.children.push(componentHierarchy)}),blockCutHierarchy.mapping=hierarchyMap,blockCutHierarchy}_sortHierarchyLevels(parentHierarchy){parentHierarchy.children.sort(function(childA,childB){const parentNode=parentHierarchy.data;let haMemberIndex;if(parentNode&&parentNode.isFswHANode){const fswHANode=parentNode;return childA.isAddedAsCutNodeChild&&childB.isAddedAsCutNodeChild?fswHANode.getHAMemberIndex(childA.parentId)-fswHANode.getHAMemberIndex(childB.parentId):childA.isAddedAsCutNodeChild?0===(haMemberIndex=fswHANode.getHAMemberIndex(childA.parentId))?-1:1:childB.isAddedAsCutNodeChild?0===(haMemberIndex=fswHANode.getHAMemberIndex(childB.parentId))?1:-1:childA.parentId===childB.parentId?childA.blockCycleIndex-childB.blockCycleIndex:childA.parentId<childB.parentId?-1:1}return parentNode&&parentNode.data instanceof CsfFortiGate?!!childB.data.hasFortilink-!!childA.data.hasFortilink:childB.children.length-childA.children.length}),parentHierarchy.children.forEach(this._sortHierarchyLevels.bind(this))}},CondensedTopologyGraphObjects:CondensedTopologyGraphObjects}},function(module,exports,__webpack_require__){"use strict";module.exports={aws:__webpack_require__(133),firewallInterfaces:__webpack_require__(168),icon:__webpack_require__(38),ip:__webpack_require__(220)}},,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports){var path="/migadmin/ng/components/quarantine/f-quarantine-dlg.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="true" loading="$ctrl.loading" valid-submit="$ctrl.submit()" form="$ctrl.form">\n    <section>\n        <div class="info-message">\n            <f-icon class="fa-info-circle"></f-icon>\n            <div class="message-content" ng-if="!$ctrl.removeMode"\n                ng-bind-html="::\'Quarantine entries for each MAC address will be created on the FortiGate that the FortiSwitch or FortiAP is connected to.\' | lang">\n            </div>\n            <div class="message-content" ng-if="$ctrl.removeMode"\n                ng-bind-html="::\'Quarantine entries for each MAC address will be removed on associated FortiGates.\' | lang">\n            </div>\n        </div>\n    </section>\n    <section ng-repeat="(fortigate, sources) in $ctrl.sources">\n        <label class="section-title">\n            <h3>\n                {{:: \'FortiGate\' | lang}}:\n                <f-object-formatted mkey="{{:: fortigate}}" datasource="csfFortiGates">\n                </f-object-formatted>\n            </h3>\n        </label>\n        <section ng-repeat="(type, value) in $ctrl.QUARANTINED_TYPES_MAP">\n            <div ng-repeat="source in sources[type]">\n                <f-field>\n                    <field-label>\n                        <span>{{:: value.lang | lang}}</span>\n                    </field-label>\n                    <field-value>\n                        <span>\n                            {{:: source[type] }}\n                        </span>\n                        <f-object-formatted ng-if="value.getDevice(source) && $ctrl.deviceDataSource"\n                            mkey="{{value.getDevice(source).q_origin_key}}" datasource="{{::$ctrl.deviceDataSource}}">\n                        </f-object-formatted>\n                    </field-value>\n                </f-field>\n                <f-field error-messages="{pattern: \'err_xss\'}">\n                    <field-label f-lang="description"></field-label>\n                    <field-value>\n                        <input ng-if="!$ctrl.removeMode" type="text" ng-model="source.description"\n                            f-max-length="$ctrl.quarantinesSchema[fortigate].children.targets.children.description.size"\n                            ng-pattern="::$ctrl.patterns.XSS">\n                        <span ng-if="$ctrl.removeMode">\n                            {{:: source.description}}\n                        </span>\n                    </field-value>\n                </f-field>\n                <hr>\n            </div>\n        </section>\n    </section>\n</f-dialog>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/components/quarantine/f-ban-ip-dlg.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog loading="$ctrl.loading" valid-submit="$ctrl.submit()" form="$ctrl.form">\n    <div ng-if="!$ctrl.loading">\n        <section>\n            <div class="info-message" ng-if="::!$ctrl.removeMode">\n                <f-icon class="fa-info"></f-icon>\n                <div class="message-content">\n                    {{::"IP bans can be removed in the Quarantine dashboard widget" | lang}}\n                </div>\n            </div>\n            <div class="warning-message" ng-if="::$ctrl.removeMode">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    {{::\'Are you sure you want to remove the following IP bans?\' | lang}}\n                </div>\n            </div>\n        </section>\n        <section ng-if="::!$ctrl.removeMode">\n            <f-field>\n                <field-label>\n                    {{::\'Ban Type\' | lang}}\n                </field-label>\n                <field-value>\n                    <f-radio-group>\n                        <input type="radio" ng-value="::false" id="ban-temporary"\n                            radio-label="{{::\'Temporary\' | lang}}" ng-model="$ctrl.permanent">\n                        <input type="radio" ng-value="::true" id="ban-permanent"\n                            radio-label="{{::\'Permanent\' | lang}}" ng-model="$ctrl.permanent">\n                    </f-radio-group>\n                </field-value>\n            </f-field>\n            <f-field ng-if="!$ctrl.permanent">\n                <field-label>\n                    {{::\'Duration\' | lang}}\n                </field-label>\n                <field-value>\n                    <input type="number" min="1" ng-model="$ctrl.duration">\n                    <select name="multiplier" ng-model="$ctrl.interval"\n                        ng-options="opt as opt | lang for (_, opt) in ::$ctrl.INTERVAL">\n                    </select>\n                </field-value>\n            </f-field>\n        </section>\n        <section ng-repeat="(fortigate, entries) in $ctrl.mapping">\n            <label class="section-title">\n                <h3>\n                    <f-object-formatted mkey="{{::fortigate}}" datasource="csfFortiGates">\n                    </f-object-formatted>\n                </h3>\n            </label>\n\n            <section f-list-edit-container>\n                <f-field ng-repeat="entry in entries"\n                         f-list-edit="{min: 0}" f-list-edit-item>\n                    <field-value>\n                        <f-icon class="fa-blocked"\n                                ng-class="{\'disabled\': entry.skip}">\n                        </f-icon>\n                        <span ng-class="{\'disabled\': entry.skip}">{{::entry.ip}}</span>\n                        <button type="button" no-text\n                                ng-click="$ctrl.updateSkip(entry)"\n                                ng-if="!$ctrl.readonly"\n                                f-tip-target>\n                            <div f-tip>\n                                {{ $ctrl.getTitle(entry) }}\n                            </div>\n                            <f-icon ng-class="{\n                                \'fa-dismiss\': !entry.skip,\n                                \'fa-rotate-left\': entry.skip}">\n                            </f-icon>\n                        </button>\n                    </field-value>\n                </f-field>\n            </section>\n        </section>\n    </div>\n</f-dialog>\n')}]),module.exports=path},,function(module,exports){var path="/migadmin/ng/components/csf/f-csf-fortigate-chooser.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-if="$ctrl.isEnabled()">\n    <button type="button" f-pop-up-menu-toggle="$ctrl.csfTreePopUpMenu"\n        f-omniselect-entry-tooltip-trigger\n        f-omniselect-entry-tooltip-target>\n        <f-omniselect-entry entry="$ctrl.selectedFortigate" tooltip-hint="::false">\n        </f-omniselect-entry>\n    </button>\n    <div f-pop-up-menu="$ctrl.csfTreePopUpMenu"\n        allow-native-context-menu="::true" class="csf-fortigate-chooser">\n        <div class="menu-item" ng-if="$ctrl.allFortigates">\n            <a class="button-style"\n                ng-class="{selected: $ctrl.isCurrent($ctrl.allFortigate)}"\n                ng-click="$ctrl.onClick($ctrl.allFortigate)"\n                f-omniselect-entry-tooltip-trigger\n                f-omniselect-entry-tooltip-target>\n                    <f-omniselect-entry entry="$ctrl.allFortigate" tooltip-hint="::false">\n                    </f-omniselect-entry>\n            </a>\n        </div>\n        <div class="separator" ng-if="$ctrl.allFortigates"></div>\n        <div class="menu-item"\n            ng-repeat="treeNode in $ctrl.treeNodes track by treeNode.$trackBy || $index">\n            <a class="button-style"\n                ng-click="$ctrl.onClick(treeNode.node)"\n                ng-class="{\n                    selected: $ctrl.isCurrent(treeNode.node),\n                    disabled: $ctrl.disableEntryFunction(treeNode.node) ||\n                        treeNode.node.isUpstreamFgt\n                }"\n                f-omniselect-entry-tooltip-trigger\n                f-omniselect-entry-tooltip-target>\n                <div class="tree-nodes-container"\n                    ng-class="{disabled: !treeNode.node.isCurrent && !treeNode.node.getManagementIP()}">\n                    <div class="edges-container">\n                        <div class="edges" ng-repeat="ancestorId in treeNode.path">\n                            <div class="edge to-self" ng-class="{\n                                \'to-ha-cluster\': $ctrl.withHa &&\n                                    treeNode.node.ha.length && treeNode.node.isHaMaster\n                             }" ng-if="$last && treeNode.node.isHaMaster">\n                            </div>\n                            <div class="edge last-child" ng-class="{\n                                \'to-ha-cluster\': $ctrl.withHa && treeNode.node.ha.length\n                            }" ng-if="$last && $ctrl.isLast(ancestorId, $parent.$index) &&\n                                treeNode.node.isHaMaster">\n                            </div>\n                            <div class="edge to-sibling" ng-if="!$ctrl.isLast(ancestorId, $parent.$index) &&\n                                !($last && treeNode.node.isHaSlave)">\n                            </div>\n                            <div class="edge to-ha-cluster" ng-class="{\n                                \'ha-cluster-master\': treeNode.node.isHaMaster,\n                                \'ha-cluster-slave\': treeNode.node.isHaSlave,\n                            }" ng-if="$ctrl.withHa && treeNode.node.ha.length && $last">\n                            </div>\n                            <div class="edge to-ha-cluster-children"\n                                ng-if="treeNode.node.isHaSlave &&\n                                    $ctrl.doesFgtChildExist(treeNode.node) && $last">\n                            </div>\n                        </div>\n                        <div class="edge to-ha-cluster first-tree-member ha-cluster-master"\n                            ng-if="$ctrl.withHa && treeNode.node.ha.length && treeNode.node.isHaMaster &&\n                                !treeNode.path.length">\n                        </div>\n                        <f-icon class="ftnt-fortigate-marketing-ha cluster-vertex-icon"\n                            ng-if="$ctrl.withHa && treeNode.node.ha.length &&\n                                treeNode.node.isHaMaster">\n                        </f-icon>\n                    </div>\n                    <div class="tree-node-container">\n                        <div class="indent" ng-repeat="ancestorId in treeNode.path" ng-if="$ctrl.state.csf_enabled"></div>\n                        <div class="indent" ng-if="$ctrl.withHa && treeNode.node.isHaSlave && !$ctrl.state.csf_enabled"></div>\n                        <div class="indent" ng-if="$ctrl.withHa && treeNode.node.ha.length && treeNode.node.isHaMaster"></div>\n                        <div class="tree-node">\n                            <div class="edge to-child" ng-if="(!treeNode.node.ha.length || !$ctrl.withHa) &&\n                                $ctrl.doesFgtChildExist(treeNode.node)"></div>\n                            <f-omniselect-entry entry="treeNode.node" tooltip-hint="::false"></f-omniselect-entry>\n                            <span ng-if="treeNode.node.isRoot">\n                                &nbsp;({{:: \'Fabric Root\' | lang }})\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){function DhcpMonitorService(injector){injector.injectMarked(this)}return DhcpMonitorService.prototype.getData=inject.mark(function($q){return function(promise){return promise.then(function(response){const entries=response.data.results;return entries.forEach(entry=>entry.fortigate=response.data.serial),entries}).catch(function(response){return[403,401].includes(response.status)?[]:$q.reject(response)})}}),DhcpMonitorService.prototype.getAllLeases=inject.mark(function($http,state){return function({fortigate:fortigate,intf:intf}){const config={params:{ipv6:state.featureEnabled("gui-ipv6")}};intf&&(config.params.interface=intf.q_origin_key||intf.name||intf,intf.vdom&&(config.params.vdom=intf.vdom));const uri=fortigate.createCSFURI("/api/v2/monitor/system/dhcp");return this.getData($http.get(uri,config))}}),function(providers){providers.$provide.service("fDhcpMonitorService",DhcpMonitorService)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){function DhcpMonitorMenu($scope,injector){injector.injectMarked(this,{$scope:$scope})}DhcpMonitorMenu.prototype.$onInit=inject.mark(function(state){return function(){this.permission={},this.permission.address=state.adminHasWritePermissionForTable("firewall","address"),this.permission.log=state.adminHasReadPermission(state.ACCESS_GROUP.LOG_DATA_ACCESS),this.permission.fortiview=state.adminHasReadPermission(state.ACCESS_GROUP.SYSTEM),this.permission.netCfg=state.adminHasWritePermission(state.ACCESS_GROUP.NETWORK_CFG),this._setupWatchers()}}),DhcpMonitorMenu.prototype._setupWatchers=inject.mark(function($scope){return function(){$scope.$watchCollection("$ctrl.menu.entries",()=>{const entries=this.menu&&this.menu.entries,selected=this.menu&&this.menu.lastSelectedEntry||{};if(!Array.isArray(entries)||!entries.length)return;const singleEntry=1===entries.length;this.showCreateReservation=this.permission.netCfg&&singleEntry&&!selected.reserved&&"ipv4"===selected.type,this.showEditReservation=this.showRemoveReservation=this.permission.netCfg&&singleEntry&&selected.reserved&&"ipv4"===selected.type,this.showCreateIpAddress=!1,this.showCreateMacAddress=!1,singleEntry&&this.permission.address&&this.isRootFortigate()&&(this.showCreateIpAddress="ipv6"===selected.type||"ipv4"===selected.type&&!selected.$ip_firewall_address,this.showCreateMacAddress=selected.mac&&!selected.$mac_firewall_address)})}}),DhcpMonitorMenu.prototype.refresh=function(){return this.dhcpMonitor.loadTable()},DhcpMonitorMenu.prototype.revoke=function(){this.dhcpMonitor.revoke(this.menu.entries)},DhcpMonitorMenu.prototype.deleteReservation=function(){this.dhcpMonitor.deleteReservation(this.menu.entries[0])},DhcpMonitorMenu.prototype.updateReservation=function(){this.dhcpMonitor.updateReservation(this.menu.entries[0])},DhcpMonitorMenu.prototype.showInFortiView=function(){this.dhcpMonitor.showInFortiView(this.menu.entries[0])},DhcpMonitorMenu.prototype.showMatchingLogs=function(){this.dhcpMonitor.showMatchingLogs(this.menu.entries[0])},DhcpMonitorMenu.prototype.createAddress=function(type){this.dhcpMonitor.createAddress(this.menu.entries[0],type)},DhcpMonitorMenu.prototype.isRootFortigate=function(){return this.dhcpMonitor.viewSettings.fortigate&&this.dhcpMonitor.viewSettings.fortigate.isRoot};var fDhcpMonitorMenu={controller:DhcpMonitorMenu,templateUrl:__webpack_require__(857),bindings:{menu:"<",dhcpMonitor:"<",inSlide:"<"}};return function(providers){providers.$compile.component("fDhcpMonitorMenu",fDhcpMonitorMenu)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/dhcp/monitor/f-dhcp-monitor-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items">\n    <div f-menu-item-button click="$ctrl.refresh()" ng-if="$ctrl.menu.menuBar && $ctrl.inSlide">\n        <f-icon class="fa-refresh"></f-icon>\n        <span>{{::\'refresh\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.revoke()"\n         ng-if="$ctrl.menu.menuBar && !$root.ADMIN_RO && $ctrl.permission.netCfg"\n         enabled="$ctrl.menu.entries.length > 0">\n        <f-icon class="fa-minus-circle"></f-icon>\n        {{::\'Revoke\' | lang }}\n    </div>\n    <div f-menu-item-submenu="reservationDropdown"\n         ng-if="$ctrl.menu.menuBar && !$root.ADMIN_RO && $ctrl.permission.netCfg"\n         enabled="$ctrl.menu.entries.length === 1">\n        <f-icon class="fa-thumb-tack"></f-icon>\n        {{::\'Reservation\' | lang }}\n    </div>\n    <div f-pop-up-menu="reservationDropdown">\n        <div f-menu-item-button click="$ctrl.updateReservation()" enabled="$ctrl.showCreateReservation">\n            <span>{{::\'create\' | lang}}</span>\n        </div>\n        <div f-menu-item-button click="$ctrl.updateReservation()" enabled="$ctrl.showEditReservation">\n            <span>{{::\'edit\' | lang}}</span>\n        </div>\n        <div f-menu-item-button click="$ctrl.deleteReservation()" enabled="$ctrl.showRemoveReservation">\n            <span>{{::\'delete\' | lang}}</span>\n        </div>\n    </div>\n\n    <div f-menu-item-button click="$ctrl.revoke()"\n        ng-if="!$ctrl.menu.menuBar && $ctrl.menu.entries.length > 0 && !$root.ADMIN_RO  && $ctrl.permission.netCfg">\n        <f-icon class="fa-minus-circle"></f-icon>\n        <span>{{::\'Revoke Lease(s)\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.updateReservation()" ng-if="!$ctrl.menu.menuBar && $ctrl.showCreateReservation && !$root.ADMIN_RO">\n        <f-icon class="fa-thumb-tack"></f-icon>\n        <span>{{::\'Create DHCP Reservation\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.updateReservation()" ng-if="!$ctrl.menu.menuBar && $ctrl.showEditReservation && !$root.ADMIN_RO">\n        <f-icon class="fa-pencil"></f-icon>\n        <span>{{::\'Edit DHCP Reservation\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.deleteReservation()" ng-if="!$ctrl.menu.menuBar && $ctrl.showRemoveReservation && !$root.ADMIN_RO">\n        <f-icon class="fa-trash"></f-icon>\n        <span>{{::\'Delete DHCP Reservation\' | lang}}</span>\n    </div>\n    <div ng-if="$ctrl.menu.popUpMenu">\n        <div f-menu-item-submenu="addressSubmenu"\n            ng-if="$ctrl.showCreateMacAddress || $ctrl.showCreateIpAddress">\n            <f-icon class="fa-plus-circle"></f-icon>\n            <span>{{::\'Create Firewall Address\' | lang}}</span>\n        </div>\n        <div f-pop-up-menu="addressSubmenu">\n            <div f-menu-item-button click="$ctrl.createAddress(\'mac\')"\n                ng-if="$ctrl.showCreateMacAddress">\n                <span f-lang="MAC Address"></span>&nbsp;\n                <span>({{ $ctrl.menu.lastSelectedEntry.mac }})</span>\n            </div>\n            <div class="separator" ng-if="$ctrl.showCreateMacAddress && $ctrl.showCreateIpAddress">\n            </div>\n            <div f-menu-item-button click="$ctrl.createAddress($ctrl.menu.lastSelectedEntry.type)"\n                ng-if="$ctrl.showCreateIpAddress">\n                <span f-lang="IP Address"></span>&nbsp;\n                <span>({{ $ctrl.menu.lastSelectedEntry.ip }})</span>\n            </div>\n        </div>\n        <div f-menu-item-button click="$ctrl.showMatchingLogs()"\n            ng-if="$ctrl.isRootFortigate() && $ctrl.permission.log"\n            enabled="$ctrl.menu.entries.length === 1">\n            <f-icon class="ftnt-eventlog"></f-icon>\n            {{::\'view_log\' | lang}}\n        </div>\n        <div f-menu-item-button click="$ctrl.showInFortiView()"\n            ng-if="$ctrl.permission.fortiview"\n            enabled="$ctrl.menu.entries.length === 1">\n            <f-icon class="fa-area-chart"></f-icon>\n            {{::\'Show in FortiView\' | lang}}\n        </div>\n    </div>\n</div>\n<div class="center-menu-items" ng-if="::$ctrl.menu.menuBar">\n    <f-mutable-search></f-mutable-search>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(8),__webpack_require__(27),__webpack_require__(34)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ftnt_shared,notify,dateTime)=>{const Omniselect=ftnt_shared.Omniselect;function DhcpMonitorSourceFactory($http,$q,lang,fDhcpMonitorService){class DhcpMonitorSource extends ftnt_shared.MuTable.FixedStreamableSource{setOptions(options){this.firewallinterfaceDataSource=options.firewallInterfaces,this.devicesDataSource=options.devices,this.addressesDataSource=options.addresses,this.fortigate=options.fortigate,this.interfaceMap={},this.interfaceSsidMap={},this.addressMap={},this.invalidateAddresses=options.invalidateAddresses,this.invalidateDevices=options.invalidateDevices,this.interface=options.interface}_fetchEntries(){let promises;return this.invalidateAddresses&&Omniselect.invalidateCacheForSource(this.addressesDataSource),this.invalidateDevices&&Omniselect.invalidateCacheForSource(this.devicesDataSource),promises={dhcp:fDhcpMonitorService.getAllLeases({intf:this.interface,fortigate:this.fortigate}),intf:Omniselect.getSourceData(this.firewallinterfaceDataSource),addresses:Omniselect.getSourceData(this.addressesDataSource),devices:Omniselect.getSourceData(this.devicesDataSource)},$q.all(promises).then(responses=>(this.interfaceMap=responses.intf.mapping||{},this.interfaceSsidMap=responses.intf.reduce((acc,intf)=>(intf.ssid&&(acc[intf.ssid]=intf),acc),{}),this.addressMap=responses.addresses.alternativeMappings.$value||{},this.deviceMap=responses.devices.mapping,responses.dhcp.map(entry=>this.processEntry(entry)))).catch(()=>(notify.post(lang("Unable to retrieve DHCP leases."),notify.LEVEL.ERROR),[]))}fetchEntries(){return this._promise||(this._promise=this._fetchEntries()),this._promise.finally(()=>this._promise=null)}processEntry(entry){const device=this.deviceMap[entry.mac],ipAddr=entry.ip&&this.addressMap[`${entry.ip}-ipv4`],macAddr=entry.mac&&this.addressMap[`${entry.mac}-mac`];if(entry.$expire_time=entry.expire_time*dateTime.S_TO_MS,ipAddr&&(entry.$ip_firewall_address={q_origin_key:ipAddr.name,q_class:ipAddr.q_class}),macAddr&&(entry.$mac_firewall_address=macAddr.name),device&&(entry.$hostname=device.hostname),entry.$desired_ip_firewall_address_name=entry.$hostname||"",entry.$desired_mac_firewall_address_name=entry.$mac_firewall_address||entry.$hostname||"",entry.ssid){const dhcpInterface=this.interfaceMap[entry.interface];if(dhcpInterface&&"vap-switch"!==dhcpInterface.type){const bridgeInterface=this.interfaceSsidMap[entry.ssid];bridgeInterface&&bridgeInterface.is_local_bridge&&(entry.$bridgeSsidInterface=bridgeInterface)}}return entry}}return DhcpMonitorSource.prototype.AUTO_REFRESH=!0,DhcpMonitorSource}return(providers,loader)=>(providers.$provide.factory("DhcpMonitorSource",DhcpMonitorSourceFactory),loader.initModules([__webpack_require__(449)]))}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(26),__webpack_require__(27),__webpack_require__(28),__webpack_require__(36),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,inject,notify,patterns,select,ftnt_shared){function uniqueAddress(){return{require:["ngModel","^fDhcpReservation"],link:function(scope,elm,attrs,ctrl){ctrl[0].$validators.uniqueAddress=function(modelValue){var reservation=ctrl[1].reservation,server=ctrl[1].dhcpServer;return!server||!server["reserved-address"].some(function(reserved){return reserved.ip===modelValue&&reservation.mac!==reserved.mac||(reserved.mac===modelValue||void 0)})}}}}function DhcpReservation($scope,injector,slide,$http,$q,CMDB){injector.injectMarked(this,{$scope:$scope}),this.reservation={ip:this.lease.ip,mac:this.lease.mac},this.slide=slide.get("dhcp_reservation_slide").slide;const baseUri=this.fortigate.createCSFURI(`/api/v2/cmdb/system.dhcp/server/${this.lease.server_mkey}`);var promises={schema:$http.get(`${baseUri}/reserved-address?action=schema`),server:$http.get(baseUri),interfaces:ftnt_shared.Omniselect.getSourceData(this.fortigate?this.fortigate.getOmniselectProxySourceID("firewallInterfaces"):"firewallInterfaces")};this.create||(promises.reservation=this.getCurrentReservation(this.reservation.mac)),this.loading=!0,$q.all(promises).then(function(response){this.interfaces=response.interfaces,this.reservationSchema=response.schema.data.results.children,this.reservationActions=this.reservationSchema.action.options.map(function(option){return option.name}),this.dhcpServer=response.server.data.results[0],response.reservation?(this.reservation.description=response.reservation.description,this.reservation.action=response.reservation.action,this.macDisabled=!0,this.reservationMkey=response.reservation.id):this.reservation.action="reserved",this.loading=!1}.bind(this),function(error){CMDB.notifyFailure(error.data),this.slide.close()}.bind(this))}return DhcpReservation.prototype.pattern={IDENTIFIER:patterns.commonRegExp.NAME_NODOLLAR},DhcpReservation.prototype.getFirewallAddressAssociatedInterfaceName=function(){if(!this.lease.interface)return"";const meta=this.interfaces&&this.interfaces.mapping&&this.interfaces.mapping[this.lease.interface];if(!meta)return"";let result;return meta.is_hardware_switch_member?result=meta.hardware_switch:meta.is_zone_member&&meta.zone?result=meta.zone:meta.used_by_composite||(result=this.lease.interface),result||""},DhcpReservation.prototype.getDataSource=function(datasource){const csfPath=this.fortigate.path;return select.getCSFProxySourceID(datasource,csfPath)},DhcpReservation.prototype.$onInit=inject.mark(function(state){return function(){this.address={permission:state.adminHasWritePermissionForTable("firewall","address"),enabled:!0,name:this.macFirewallAddressName,existed:this.hasMacFirewallAddress,datasource:this.getDataSource("firewall.address")}}}),DhcpReservation.prototype.addressIsInRange=function(){if(!this.dhcpServer)return!0;try{var ip=goog.net.IpAddress.fromString(angular.element("#ip").val()).toInteger()}catch(e){return!0}return this.dhcpServer["ip-range"].some(function(range){var startIP=goog.net.IpAddress.fromString(range["start-ip"]).toInteger(),endIP=goog.net.IpAddress.fromString(range["end-ip"]).toInteger();return ip.greaterThanOrEqual(startIP)&&ip.lessThanOrEqual(endIP)})},DhcpReservation.prototype.getCurrentReservation=inject.mark(function($http){return function(mac){let uri=this.fortigate.createCSFURI("/api/v2/cmdb/system.dhcp/server");return uri=`${uri}/${this.lease.server_mkey}/reserved-address/?filter=mac=*${mac}`,$http.get(uri).then(function(response){return response.data.results[0]||void 0})}}),DhcpReservation.prototype.createMacFirewallAddress=inject.mark(function($q,$http){return function(){if(this.address.existed)return $q.when();const params={type:"mac","start-mac":this.reservation.mac,"end-mac":this.reservation.mac,name:this.address.name,comment:"Created for DHCP Reservation","associated-interface":this.getFirewallAddressAssociatedInterfaceName()};return $http.post(this.fortigate.createCSFURI("/api/v2/cmdb/firewall/address"),params)}}),DhcpReservation.prototype.createDhcpReservation=inject.mark(function($http){return function(){var $req,url="/api/v2/cmdb/system.dhcp/server/"+this.lease.server_mkey+"/reserved-address";return this.reservationMkey?(url+="/"+this.reservationMkey,$req=$http.put):$req=$http.post,$req(this.fortigate.createCSFURI(url),this.reservation)}}),DhcpReservation.prototype.submit=inject.mark(function($http,CMDB,lang){return function(){let msg=lang(this.create?"DHCP reservation created.":"DHCP reservation updated.");return this.createDhcpReservation().then(()=>{if(this.address.permission&&!this.address.existed&&this.address.enabled)return msg=`${msg} ${lang("MAC firewall address created.")}`,this.createMacFirewallAddress().then(()=>{notify.post(msg,notify.LEVEL.SUCCESS)});notify.post(msg,notify.LEVEL.SUCCESS)}).catch(function(error){CMDB.notifyFailure(error.data)})}}),function(providers){providers.$compile.component("fDhcpReservation",{controller:DhcpReservation,templateUrl:__webpack_require__(860),bindings:{lease:"=",create:"<",hasMacFirewallAddress:"<",macFirewallAddressName:"<",fortigate:"<"}}),providers.$compile.directive("fUniqueAddress",uniqueAddress)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/dhcp/monitor/reservation/f-dhcp-reservation.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog valid-submit="$ctrl.submit()" form="$ctrl.form" hide-title="true" loading="$ctrl.loading">\n    <section>\n        <div class="field">\n            <label for="mac">{{ ::\'mac_address\' | lang }}</label>\n            <div>\n                <input id="mac" ng-model="$ctrl.reservation.mac" f-mac-address="true"\n                f-validation-message="{uniqueAddress: \'Address already exists\'}" required="required" ng-disabled="$ctrl.macDisabled"\n                f-unique-address>\n            </div>\n        </div>\n        <div class="field" ng-if="$ctrl.reservation.action === \'reserved\'">\n            <label for="ip">{{ ::\'ip\' | lang }}</label>\n            <div>\n                <input id="ip" ng-model="$ctrl.reservation.ip" f-ipv4-address="true"\n                    ui-validate="{ addressInRange: \'$ctrl.addressIsInRange()\' }"\n                    f-validation-message="{addressInRange: \'IP address must be within the DHCP IP address range\', uniqueAddress: \'Address already exists\'}" required="required"\n                    f-unique-address>\n            </div>\n        </div>\n        <f-field ng-if="$ctrl.address.permission">\n            <field-label class="toggle-label">\n                <span f-lang="Create firewall address matching MAC"></span>\n                <input type="checkbox" class="toggle-switch"\n                    id="create_mac_address"\n                    ng-model="$ctrl.address.enabled"\n                    ng-disabled="$ctrl.address.existed">\n                <label for="create_mac_address"></label>\n            </field-label>\n            <field-value></field-value>\n        </f-field>\n        <f-field class="child" error-messages="{pattern: \'err_char\'}"\n            ng-if="$ctrl.address.permission && $ctrl.address.enabled">\n            <field-label>\n                 <span f-lang="Address name"></span>\n            </field-label>\n            <field-value>\n                <f-object-formatted ng-if="$ctrl.address.existed"\n                    mkey="{{$ctrl.address.name}}" datasource="{{:: $ctrl.address.datasource }}">\n                </f-object-formatted>\n                <input type="text" ng-model="$ctrl.address.name"\n                    ng-if="!$ctrl.address.existed"\n                    required\n                    ng-pattern="$ctrl.pattern.IDENTIFIER"\n                    f-is-unique="[{\'path\':\'firewall\', \'name\':\'address\', \'format\': \'name\'}, \'$ctrl.address.existed && $value == $ctrl.address.name\']">\n            </field-value>\n        </f-field>\n    </section>\n</f-dialog>\n')}]),module.exports=path},,,,,,,,,,,,function(module,exports){var path="/migadmin/ng/directives/faceted_search/main.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="f-faceted-search"\n     ng-class="{ \'f-fs-focused\': $focused() }">\n    <div class="f-faceted-search-inner"\n         ng-click="$newFacet($event)">\n        <div ng-repeat="sf in $activeFacets" ng-if="::!sf.facet.hidden"\n             f-active-facet="sf" index="$index">\n        </div>\n        <button class="f-faceted-search-edit button search-action inner"\n            autofocus\n            type="button"\n            ng-show="!$editing()"\n            ng-click="$newFacet($event)"\n            f-facet-input="addFilter">\n            <f-icon class="fa-plus-circle"></f-icon>\n            <span f-lang="Add Filter"></span>\n        </button>\n    </div>\n    <button class="f-faceted-search-cancel bare" ng-click="$cancel($event)"\n     type="button"\n     ng-show="$activeFacets.length"\n     f-facet-input="cancelAll"\n     title="{{ \'clearFilter\' | lang }}">\n     <f-icon class="fa-times"></f-icon>\n    </button>\n    <div f-faceted-search-overlay></div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(28)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,f_patterns){function SearchFacetFactory($injector,$q,ComplexValue,lang){function SearchFacet(config){if(!(this instanceof SearchFacet))throw new Error("Please use the new keyword to create a SearchFacet");var genRelevanceFns={ip:SearchFacet.ipGenRelevanceFn};this.genRelevanceFn=genRelevanceFns[config.type]||this.genRelevanceFn,Object.keys(SearchFacet.prototype).forEach(function(prop){prop in config&&(this[prop]=config[prop])}.bind(this)),Object.keys(SearchFacet.prototype.tweakFilter).forEach(function(protoTF,prop){prop in this.tweakFilter||(this.tweakFilter[prop]=protoTF[prop])}.bind(this,SearchFacet.prototype.tweakFilter))}return SearchFacet.uniqCompact=function(values,pluckKey){var result=values.reduce(function(result,item){var key=pluckKey?pluckKey(item):item;null!==key&&""!==key&&(result[key]=item);return result},{});return Object.keys(result).map(function(key){return result[key]})},SearchFacet.regexGenRelevanceFn=function(searchValue,regExParts,wildCards,wildCardExprs){var escapedSearch=f_patterns.re_escape((searchValue||"").toString());wildCards&&wildCards.forEach(function(wc,i){wc instanceof RegExp||(wc=new RegExp(f_patterns.re_escape(f_patterns.re_escape(wc)),"g")),escapedSearch=escapedSearch.replace(wc,wildCardExprs[i])});var expr="(?:"+regExParts.join(escapedSearch)+")",suggestRegex=new RegExp(expr,"i"),ARRAY_MATCH_RELEVANCE=.001;return function suggestionRelevance(value,item){var i,len;if(Array.isArray(value)){var result;for(i=0,len=value.length;i<len;++i)if(null!==(result=suggestionRelevance(value[i],item)))return result+=(len-i)/len*ARRAY_MATCH_RELEVANCE;return null}var highlightBonus=0;item&&"highlight"in item&&"function"==typeof item.highlight&&item.highlight()&&(highlightBonus=.5);if(void 0===searchValue)return 0+highlightBonus;var match=suggestRegex.exec(value);if(match)for(match.shift(),i=0;i<match.length;++i)if(void 0!==match[i])return match.length-i+highlightBonus;return null}},SearchFacet.defaultGenRelevanceFn=function(searchValue,wildCards,wildCardExprs){return SearchFacet.regexGenRelevanceFn(searchValue,["(^","$)|(^",")|(\\b",")|(",")"],wildCards,wildCardExprs)},SearchFacet.ipGenRelevanceFn=function(searchValue){var rel=SearchFacet.defaultGenRelevanceFn(searchValue,[/^\\\*|\\\*$/g],["[\\da-fA-F.:]*"]);return function(value){var fields=(Array.isArray(value)?value[0]:value).replace(/(^[|]$)/g,"").split(/[.:]/),result=rel(value);return fields.length&&(result=fields.reduce(maxRel,result)),result};function maxRel(result,field){var frel=rel(field);return null===result&&null===frel?null:Math.max(result,frel)}},SearchFacet.NO_SORT=function(){return 0},SearchFacet.DEFAULT_SORT=null,SearchFacet.ValueOption=function(key,value,description){this.value=value,this.key=key,this.description=description},SearchFacet.ValueOption.prototype={highlight:function(){return!1},$promise:void 0,formatted:function(){return this.value instanceof ComplexValue?this.value.formatted.apply(this.value,arguments):this.value},hasSplitter:function(){return this.key&&this.key instanceof ComplexValue&&this.key.hasSplitter()},equals:function(value){return value instanceof SearchFacet.ValueOption?value.key===this.key:value===this.key},localeCompare:function(value){return value instanceof SearchFacet.ValueOption?String(this.formatted()).localeCompare(value.formatted()):String(this.formatted()).localeCompare(value)},intersection:function(values){if(this.key instanceof ComplexValue)return this.key.intersection(values);var result=values.reduce(function(result,value){return ComplexValue.probablyComplex(value)?(value instanceof ComplexValue||(value=new ComplexValue(value)),result.concat(value.intersection([this.key])||[])):result.concat(this.key===value?[value]:[])}.bind(this),[]);return result.length?result:null}},SearchFacet.prototype={id:null,name:null,langName:function(){return lang(this.name)},selectors:{},alias:null,unique:!1,icon:!1,sticky:!1,isSticky:function(){return angular.isFunction(this.sticky)?this.sticky():this.sticky},hidden:!1,excluded:!1,sort:null,modifiers:null,valuePlaceholder:"",allowUserInput:!0,suggestionLimit:1e3,type:null,meta:{},hint:"",_entries:null,_immediateEntries:null,highlight:function(){return!1},localeCompare:function(other){return lang(this.name).localeCompare(lang(other.name))},tweakFilter:{history:function(){},fortiview:function(filter){return filter},session:function(filter){return filter},api_monitor:function(filter){return filter}},allowsModifier:function(modifier){return null===this.modifiers||this.modifiers.indexOf(ComplexValue.resolveModifier(modifier))>-1},contextFilters:function(key,complex,entry,noSplitter){if(complex=!1!==complex,noSplitter=noSplitter||"",!key)return this.allowsModifier("!")&&complex?[[new ComplexValue("!*")]]:null;var modifiers=(complex?["<=",">=","!"]:[]).map(function(modifier){if(this.allowsModifier(modifier)){let plainKey=key instanceof SearchFacet.ValueOption?key.key:key;"!"===modifier&&(plainKey=plainKey||"*");var complexKey=ComplexValue.build([plainKey],[modifier]).withoutSplitter(noSplitter,!0);this.complexValue&&(complexKey=this.complexValue(complexKey,!0));var normalValue=this.normalizeOption(key),fmtValue=normalValue.formatted(),valueOption=new SearchFacet.ValueOption(complexKey,modifier+" "+(fmtValue||"*"));return normalValue.$promise&&normalValue.$promise.then(function(value){valueOption.value=modifier+" "+value}),valueOption}return null}.bind(this)).filter(function(v){return null!=v});return"*"===(key instanceof SearchFacet.ValueOption?key.key:key)?[modifiers.concat([this.normalizeOption(key)])]:[[this.normalizeOption(key)].concat(modifiers)]},getValues:function(entries,source){var facet=this,oldEntries=this._entries?this._entries.slice(0,200):[];return SearchFacet.uniqCompact((entries||[]).map(function(item){var result=facet.getKey(item,source);void 0===result&&(result=null);return result}).concat(oldEntries),function(value){return value&&null!=value.key?value.key:value})},populate:function(entries,source){var facet=this;return $q.when(entries).then(function(result){return facet._entries=facet.getValues(result,source),facet._entries})},getKey:function(entry,source){return entry[this.selectors[source]]},lookup:function(key,reverse){var entries=this._entries||this.getValues();if(entries&&entries instanceof $q){var promise=$q.when(entries).then(function(results){return this._immediateEntries=results,lookup(this,this._immediateEntries)}.bind(this));return this._immediateEntries?lookup(this,this._immediateEntries):promise}return key;function match(entry){return entry instanceof SearchFacet.ValueOption?reverse?void 0!==entry.value&&entry.value.valueOf()===key:void 0!==entry.key&&entry.key.valueOf()===key:entry===key}function lookup(facet,entries){facet._entries_cache=facet._entries_cache||{},facet._rentries_cache=facet._rentries_cache||{};var ret,entry=reverse?facet._rentries_cache[key]:facet._entries_cache[key];return void 0!==entry?entry:(ret=(entry=entries.find(match))instanceof SearchFacet.ValueOption?reverse?entry.key:entry.value:entry||key,facet._entries_cache[key]=ret,ret)}},reverseLookup:function(value){var args=Array.prototype.slice.call(arguments,1);return this.lookup.apply(this,[value,!0].concat(args))},clearValues:function(){this._values=null},normalizeOption:function(key,value){if(key instanceof SearchFacet.ValueOption)return key;var result=new SearchFacet.ValueOption(key,value);if(key&&key.description&&(result.description=key.description),void 0===value){var promise=this.lookup(key);result.$promise=$q.when(promise,function(v){return delete result.$promise,result.value=v,v})}return result},genRelevanceFn:SearchFacet.defaultGenRelevanceFn,adjustRelevance:function(searchValue,relevance){return relevance},format:function(value){return value},parse:function(value){return value},complexValue:function(value,convert){return null!=value&&(value instanceof ComplexValue||convert)&&(value=new ComplexValue(value)),value}},$injector.annotate(SearchFacet),SearchFacet}return function(providers){providers.$provide.factory("SearchFacet",SearchFacetFactory)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(34),__webpack_require__(37),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,f_datetime,f_ip,f_log){const IpMask=f_ip.IpMask,SUBNET_GLOBAL_SEARCH=/((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/((((254|252|248|240|224|192|128|0)\.0\.0\.0)|(255\.(254|252|248|240|224|192|128|0)\.0\.0)|(255\.255\.(254|252|248|240|224|192|128|0)\.0)|(255\.255\.255\.(255|254|252|248|240|224|192|128|0))|(3[0-2]|2[0-9]|1[0-9]|[0-9])))([\D]|$)/g;function activeFacetModelFactory(SearchFacet,ComplexValue,lang){return ActiveFacetModel.prototype.assign=function(other){ActiveFacetModel.call(this,other)},ActiveFacetModel;function ActiveFacetModel(facet,value){if(facet instanceof ActiveFacetModel&&(value=facet.value,(facet=facet.facet)&&null!=value&&(value=facet.normalizeOption(value))),this.$new=!facet,this.facet=facet,this.name=facet&&lang(facet.name),this.value=value,this.$valid=!0,value&&!(value instanceof SearchFacet.ValueOption||value instanceof ComplexValue))throw Error("Please supply a Searchfacet.ValueOption or ComplexValue object as value");this.$editing=function(){return!1}}}function ActiveFacet(injector,$scope,ComplexValue){this.scope=$scope,this.inputs={},this._undo=[],$scope.$editing=!1,$scope.$lastFocused=function(){return this.facetedSearch.lastActiveFacet===this}.bind(this),$scope.$preSelected={};var fn,locals,inject={init:["facetedSearch"],updateOptions:["facetName"],possibleFacets:["searchName"],possibleValues:["searchName"],preSelect:["name","delta","accept"],suggest:["list","searchValue","pluckValue","genRelevanceFn","sort","limit"],valueUpdated:["value"],datePickerUpdate:!1,datePickerGetDate:!1,datePickerSetDate:["value"],keyPress:["which","input"],tab:["shiftKey","input"],pushUndo:!1,updateFocus:["input","value"],postProcess:!1};for(fn in inject)locals=inject[fn],this[fn]=locals?injector.partial(this[fn],this,locals):injector.bind(this[fn],this),this[fn].toString=genToString(fn);var select=this.select;this.select={};var selectLocals={current:[],facet:["dontEdit"],value:["dontEdit","combineAndContinue"]};for(fn in select)locals=[fn].concat(selectLocals[fn]||[]),this.select[fn]=injector.partial(select[fn],this,locals);function genToString(name){return function(){return"function "+name+"()"}}function assignTo(property){return function(value){$scope[property]=value}}this.possibleValues=this.possibleValues.bind(this),this.remove=this.remove.bind(this),$scope.$watch("$editing",function(value){if(this.updateFocus(value?this.inputs[value]:null,!!value),!value){var mv=$scope.$model.value;mv instanceof ComplexValue&&($scope.$model.value=mv.trim()),this.$dirty&&this.facetedSearch.syncToModel()}}.bind(this)),$scope.$watch(function(){var d=this.datePickerGetDate();return d&&d.getTime()}.bind(this),function(){var value=this.datePickerGetDate();this.datePickerSetDate(value)}.bind(this)),$scope.$watchCollection("$possibleValues($selValue())",assignTo("possibleValues")),$scope.$watchCollection("$possibleFacets($model.name)",assignTo("possibleFacets")),this.datePickerUpdate()}function fActiveFacet(lang,$q,SearchFacet,$window,loader,ComplexValue){return{templateUrl:__webpack_require__(875),require:["^fFacetedSearch","fActiveFacet"],controller:ActiveFacet,controllerAs:"$ctrl",replace:!0,scope:{$model:"=fActiveFacet",$index:"=index"},link:function(scope,elem,attr,ctrls){var facetedSearch=ctrls.shift(),activeFacet=ctrls.shift();activeFacet.init(facetedSearch),scope.$fmtValue=function(selected){var value,v=scope.$model.value,facet=scope.$model.facet;return v instanceof ComplexValue||v instanceof SearchFacet.ValueOption?selected?(value=v)instanceof ComplexValue?value.selectedValue(facet):value.toString():v.formatted(facet):v},scope.$selValue=function(){var v=scope.$model.value;return v instanceof ComplexValue?v.selectedValue(scope.$model.facet):v instanceof SearchFacet.ValueOption?v.formatted():v},scope.$edit=activeFacet.edit.bind(activeFacet),scope.$on("editFacet",editFacet);var editQueue=facetedSearch.popEditQueue();function editFacet(evt,index,inputName){scope.$index===index?(evt.preventDefault(),inputName!==activeFacet.editing()&&scope.$edit(inputName||"value")):(-1===index&&(activeFacet.remove(!0)||activeFacet.select.current()),activeFacet.updateFocus(null,!1))}editQueue&&editFacet.apply(null,editQueue),scope.$remove=activeFacet.remove,scope.$select=activeFacet.select,scope.$preSelect=activeFacet.preSelect,scope.$possibleFacets=activeFacet.possibleFacets,scope.$possibleValues=activeFacet.possibleValues}}}function fDatepickerSetDate($timeout){return function(scope,element,attrs){var last=null;function update(){$timeout(function(){element.is(".hasDatepicker")&&element.datepicker("setDate",last)})}scope.$watch(attrs.fDatepickerSetDate,function(value){last=value,update()}),scope.$watch(attrs.jqUi,scope.$evalAsync.bind(scope,update))}}return ActiveFacet.FOCUS_DELAY=10,ActiveFacet.emptyArray=[],ActiveFacet.value=function(value){return function(kv){return kv.value===value}},ActiveFacet.prototype={init:function($q,$timeout,facetedSearch){this.facetedSearch=facetedSearch,this.focused=null;var scope=this.scope;scope.$model&&scope.$model.$new&&(scope.$model.$new=!1),scope.$model.$editing=this.editing.bind(this),scope.$watch("$model.name",this.updateOptions),scope.$watch("$model.value",this.valueUpdated);var unwatch=scope.$watch("$model.name",function(name){name&&(unwatch(),function waitForValues(af){$q.when(af.facetedSearch.getValues(scope.$model.facet)).then(function(values){waitForValues.count=(waitForValues.count||0)+1,values.length?scope.$model.name&&af.updateOptions(scope.$model.name):waitForValues.count<100&&$timeout(waitForValues.bind(null,af),100)})}(this))}.bind(this))},addInput:function(input){if(input.name in this.inputs)throw new Error("FacetInput names inside an activeFacet must be unique!Tried to add duplicate input for "+input.name);this.inputs[input.name]=input},removeInput:function(input){delete this.inputs[input.name]},isEmpty:function(){return!this.scope.$model.facet},currentFacet:function(){return this.scope.$model.facet},edit:function(name){if(this.scope.$model.facet&&this.pushUndo(),!(name in this.inputs))throw new Error("Unable to edit "+name+": FacetInput does not exist");this.scope.$editing=name},editing:function(){return this.scope.$editing},suggest:function(SearchFacet,list,searchValue,pluckValue,genRelevanceFn,sort,limit){pluckValue=pluckValue||function(v){return v};var getRelevance=(genRelevanceFn||SearchFacet.defaultGenRelevanceFn)(searchValue),preSliced=list.map(function(item){var value=pluckValue(item);return{value:value,item:item,relevance:getRelevance(value,item)}}).filter(function(details){return null!==details.relevance});return preSliced.length>limit&&(preSliced=preSliced.slice(0,limit)),preSliced.sort(function(a,b){var a_value=Array.isArray(a.value)?a.value[0]:a.value,b_value=Array.isArray(b.value)?b.value[0]:b.value;let sortFnValue=sort&&sort(a.item,b.item);return null!=sortFnValue?sortFnValue:b.relevance-a.relevance||"string"==typeof a_value&&"string"==typeof b_value&&a_value.localeCompare(b_value)||"localeCompare"in a.item&&"localeCompare"in b.item&&a.item.localeCompare(b.item)||"number"==typeof a_value&&"number"==typeof b_value&&b_value-a_value||(a_value&&!b_value?1:b_value&&!a_value?-1:0)}).map(function(details){return details.item})},possibleFacets:function(SearchFacet,lang,searchName){var langTable={},facets=this.facetedSearch.facets();return facets&&facets.length?this.suggest(facets.filter(function(facet){return this.scope.$model.facet&&this.scope.$model.facet.id===facet.id||!facet.unique||!this.facetedSearch.activeFacets.some(function(otherFacet){return(otherFacet.facet&&otherFacet.facet.id)===facet.id})}.bind(this)),searchName,function(facet){var facetName=langTable[facet.name]||lang(facet.name).toString(),selectors=Object.keys(facet.selectors).map(function(s){return facet.selectors[s]});return langTable[facet.name]=facetName,[facetName,facet.name].concat(selectors)}):ActiveFacet.emptyArray},possibleValues:function($q,SearchFacet,ComplexValue,searchName){if(!this.scope.$valueOptions||!this.scope.$model.facet)return ActiveFacet.emptyArray;var facet=this.scope.$model.facet,value=this.scope.$model.value,key=value&&(value instanceof SearchFacet.ValueOption?value.key:value),keys=key&&key instanceof ComplexValue?key.selectedValues(facet):[key],modelValues=function(af){var si,facet=af.scope.$model.facet,result=af.facetedSearch.scope.model[facet.id]||[],mv=af.scope.$model.value;if(mv instanceof ComplexValue&&(si=mv.selectionInfo(facet))&&!si.selectedCount){var unselected=mv.unselectedValues(facet);result=(result=unselected).concat(unselected.map(function(value){var result=af.scope.$model.facet.format(value);if(!((result=af.scope.$model.facet.reverseLookup(result))instanceof $q))return result}))}else result instanceof ComplexValue&&(result=result.values);return result}(this),otherKeys=ComplexValue.flattenValues(modelValues||[]).filter(notMatchKeys(keys)),options=this.scope.$valueOptions.filter(notMatchKeys(otherKeys)),si=value instanceof ComplexValue&&value.selectionInfo(facet),cursor=this.inputs.value.cursor;return(!this.$dirty||si&&si.selectedCount||cursor&&cursor.selected)&&(searchName=""),this.suggest(options,searchName,function(kv){return[kv.value].concat(kv.value!==kv.key?[kv.key]:[]).concat(kv.description?[kv.description]:[])},facet.genRelevanceFn,facet.sort,facet.suggestionLimit);function notMatchKeys(keys){return function(vo){return vo instanceof SearchFacet.ValueOption||vo instanceof ComplexValue?!vo.intersection(keys):-1===keys.indexOf(vo)}}},cancel:function(ifEmpty,$event){$event&&$event.stopPropagation(),ifEmpty&&!this.isEmpty()||(this.$dirty=!1,this.focused&&(this.$dirty=this.undo()),this.scope.$editing=null)},remove:function(ifEmpty,$event){var scope=this.scope;if($event&&$event.stopPropagation(),ifEmpty&&!this.isEmpty())return!1;var af=this.facetedSearch.activeFacets,index=af.indexOf(scope.$model);return index>-1&&af.splice(index,1),this.facetedSearch.syncToModel(),this.facetedSearch.focus(!0),!0},pushUndo:function(ActiveFacetModel){var afm=new ActiveFacetModel(this.scope.$model);afm.$dirty=this.$dirty,this._undo.push(afm)},undo:function(){if(this._undo.length){var model=this._undo.pop();return this.scope.$model.assign(model),model.$dirty}},tab:function($q,shiftKey,input){var scope=this.scope;return shiftKey||this.select[input.editGroup](!0,!0),shiftKey?"value"===input.editGroup?this.scope.$edit("facet"):(this.facetedSearch.editPrev(scope.$model),this.remove(!0)):"facet"===input.editGroup?this.scope.$edit("value"):this.facetedSearch.editNext(scope.$model),this.$dirty=!1,!0},select:{current:function(ComplexValue){this.scope.$editing&&this.$dirty&&(this.$dirty=this.undo(),this.scope.$model.value instanceof ComplexValue&&(this.scope.$model.value=this.scope.$model.value.trim()))},facet:function(lang,SearchFacet,facet,dontEdit){if(!0===facet&&(facet=null),facet||(facet=this.scope.$model.name),facet instanceof SearchFacet||(facet=this.preSelect("facet",0)||this.possibleFacets(facet)[0]),!facet)return!1;var scope=this.scope,name=lang(facet.name).toString();return scope.$model.name=name,scope.$model.facet=facet,dontEdit||scope.$edit("value"),this.updateOptions(name),!0},value:function(SearchFacet,ComplexValue,$q,value,dontEdit,combineAndContinue){var scope=this.scope,preSelected=scope.$preSelected,facet=scope.$model.facet,forceSuggestion=!(facet.allowUserInput||value instanceof SearchFacet.ValueOption),useSuggestion=!0===value,mv=scope.$model.value;if((null==value||useSuggestion)&&null==(value=scope.$preSelected.value)){if(mv instanceof ComplexValue&&mv.values.length&&!String(mv.selectedValue(facet)).trim())return finish(this),!1;value=scope.$model.value}if(useSuggestion||forceSuggestion){var suggestion=this.preSelect("value",0);if(null==suggestion&&(suggestion=this.preSelect("value",1)),null!=suggestion&&(value=suggestion),null==value)return scope.$preSelected=preSelected,finish(this),!1}var done=!0;if(function(value,withSplit){return(value instanceof SearchFacet.ValueOption||value instanceof ComplexValue)&&(!withSplit||value.hasSplitter())}(value)){var si=mv instanceof ComplexValue&&mv.selectionInfo(facet);mv instanceof ComplexValue&&mv.modifiers.length||si&&(si.before.length||si.after.length)?(value instanceof SearchFacet.ValueOption&&(value=value.key),value instanceof ComplexValue||(value=[value]),mv!==value&&(scope.$model.value=mv.replaceSelectedValues(value,scope.$model.facet))):scope.$model.value=value}else if(scope.$model.facet){var key=facet.reverseLookup(value);done=$q.when(key).then(function(key){key&&facet.allowUserInput?scope.$model.value=facet.normalizeOption(key,value):value&&facet.allowUserInput?scope.$model.value=new ComplexValue(value):scope.$model.value=void 0})}return $q.when(done).then(finish.bind(null,this)),done;function finish(af){scope.$preSelected.value=null,combineAndContinue?value&&(af.setDirty(),af.pushUndo()):af.scope.$editing=!1,af.facetedSearch.syncToModel()}}},keyPress:function(ComplexValue,which,input){if("facet"===input.name&&["=","<",">","!"].indexOf(which)>-1){var valueInput=this.inputs.value;return"="!==which&&valueInput.modify&&valueInput.modify(which),this.select.facet(),!0}return!1},preSelect:function(lang,name,delta){var list=null,scope=this.scope;if("facet"===name?list=this.possibleFacets(scope.$model.name):"value"===name&&(list=this.possibleValues(scope.$fmtValue(!0))),list&&list.length){var index=list.indexOf(scope.$preSelected[name]);delta&&(delta<0&&-1===index&&(index=0),index=(index+delta+list.length)%list.length);var value=list[index];if(void 0!==value)return delta&&(scope.$preSelected[name]=value),value}return null},focusPending:null,delayedFocus:function($timeout,input,value){var fp=this.focusPending=this.focusPending||{};fp[input.editGroup]&&$timeout.cancel(fp[input.editGroup]),fp[input.editGroup]=$timeout(function(){fp[input.editGroup]=null,input.doFocus(value)},ActiveFacet.FOCUS_DELAY,!0)},updateFocus:function($timeout,input,value){const findInput=name=>this.inputs[name];var editing;if((null!==input||(input=this.focused,editing=this.editing(),input&&!value))&&!this.scope.$pseudoFocus){value?(this.focused&&this.focused!==input&&this.focused.focus(!1),this.focused=input,this.facetedSearch.lastActiveFacet=this):this.focused===input&&(this.focused=null);var retries=0;!function doFocus(){$timeout(function(){if(!(input=findInput(input.name)).focus(value)){if(retries>=10)throw f_log.error("ActiveFacet: Unable to focus "+input.name),new Error("ActiveFacet: Unable to focus "+input.name);value&&(++retries,doFocus())}})}(),!!this.focused===value&&(editing=this.editing()===input.editGroup,this.scope.$editing=value&&input.editGroup,this.scope.$editing&&!editing&&this.pushUndo())}},pseudoFocus:function(name,value){this._pseudoFocus=this._pseudoFocus||{},this._pseudoFocus[name]=value,value||delete this._pseudoFocus[name],this.scope.$pseudoFocus=Object.keys(this._pseudoFocus).length>0},datePickerGetDate:function(SearchFacet,ComplexValue){var value=null,scope=this.scope,facet=scope.$model.facet;if(facet&&"date-time"===facet.type)if((value=scope.$model.value)instanceof SearchFacet.ValueOption&&value.key instanceof ComplexValue&&(value=value.key),value instanceof ComplexValue){var selectedValue=value.selectedValue(facet);value=selectedValue?new Date(facet.format(selectedValue)):void 0}else value instanceof SearchFacet.ValueOption&&(value=new Date(facet.format(value.key)));return value},datePickerSetDate:function(value){this.scope.datePickerOptions&&(value=value||this.datePickerGetDate(),this.scope.datePickerDate=value)},datePickerUpdate:function(ComplexValue){var scope=this.scope,oneDaySeconds=(new Date(0,0,0,23,59,59).getTime()-new Date(0,0,0,0,0,0).getTime())*f_datetime.MS_TO_S,select=this.select;scope.datePickerOptions=null,scope.$model.facet&&"date_time"===scope.$model.facet.type&&(scope.datePickerOptions={onSelect:function(dateStr,inst){var value=inst.input.datepicker("getDate");function startEnd(date,wantStart){var start=new Date(date.getTime());return["setHours","setMinutes","setSeconds","setMilliseconds"].forEach(function(fn){start[fn](0)}),start=f_datetime.dateToLocalSeconds(start),void 0===wantStart?[start,start+oneDaySeconds]:start+(wantStart?0:oneDaySeconds)}scope.$apply(function(){var mv=scope.$model.value,facet=scope.$model.facet,si=mv instanceof ComplexValue&&mv.selectionInfo(facet);if(mv instanceof ComplexValue&&1===si.selectedCount){value=startEnd(value,0===si.selected);var cv=new ComplexValue(mv,mv.caret);cv.setSelectedValue(value,facet),value=scope.$model.value=cv}else value?(value=startEnd(value).join(" - "),(value=new ComplexValue(value,new ComplexValue.Caret(0,0))).setSelected(0,1,facet),si=value.selectionInfo(facet)):value=new Date;this.pseudoFocus("dateSelected",!1);var valid=!0;"-"===value.splitter&&value instanceof ComplexValue&&(valid=Number(value.values[0])<=Number(value.values[1]),value.setSelected((si.selected+1)%value.values.length,1,facet),this.datePickerSetDate()),scope.$model.value=value,scope.$model.$valid=valid,select.value(value,!0,!0)}.bind(this))}.bind(this)})},updateOptions:function($q,lang,facetName){var facets=this.facetedSearch.facets();if(facets&&facets.length){facetName=facetName&&facetName.toLowerCase();var facet=facets.filter(function(facet){return lang(facet.name).toString().toLowerCase()===facetName})[0];if(this.preSelect("facet",0),this.scope.$valueOptions=ActiveFacet.emptyArray,facet){var p=$q.when(this.facetedSearch.getValues(facet)).then(function(values){var scope=this.scope;if(this.scope.$model.facet===facet&&(scope.$valueOptions=values.map(normalizeOption),facet&&scope.$model.value&&scope.$model.value.key)){var key=scope.$model.value.key,option=scope.$valueOptions.filter(function(key){return function(option){return option.key===key}}(key))[0];option&&(scope.$model.value=option,$q.when(option.$promise).then(function(value){scope.$model.inputValue=value}))}}.bind(this));this.scope.$valueOptions.$promise=p,this.datePickerUpdate()}}function normalizeOption(value){return facet.normalizeOption(value)}},valueUpdated:function($q,value){if(void 0!==(value=value&&value.value)){var option=this.scope.$valueOptions.filter(function(option){return option.value===value})[0];if(!option){var promises=this.scope.$valueOptions.filter(pluckPromise).map(pluckPromise);if(promises.length)return void $q.all.apply($q,promises).then(this.valueUpdated.bind(this,value))}option&&(this.scope.$model.value=option,this.facetedSearch.syncToModel())}function pluckPromise(option){return option.$promise}},setDirty:function(){this.$dirty=!0},getIcon:function(){let facet=this.scope.$model.facet;return"function"==typeof facet.icon?facet.icon(this.scope.$model.value):facet.icon},postProcess:function(SearchFacet,ComplexValue){const value=this.scope.$model.value;if(value&&!(value instanceof SearchFacet.ValueOption)&&value instanceof ComplexValue&&value.value.match(SUBNET_GLOBAL_SEARCH)){const IPRange=value.value.replace(SUBNET_GLOBAL_SEARCH,IPWithSubnet=>this.convertIPV4SubnetToRange(IPWithSubnet));this.scope.$model.value=new ComplexValue(IPRange),this.facetedSearch.syncToModel()}},convertIPV4SubnetToRange:function(IPWithSubnet){const ip=IpMask.parse(IPWithSubnet);return`${IpMask.toDotted(ip.numbered(IpMask.NETWORK)).join(".")} - ${IpMask.toDotted(ip.numbered(IpMask.BROADCAST)).join(".")}`}},function(providers,loader){return providers.$provide.factory("ActiveFacetModel",activeFacetModelFactory),providers.$provide.constant("ActiveFacet",ActiveFacet),providers.$compile.directive("fActiveFacet",fActiveFacet),providers.$compile.directive("fDatepickerSetDate",fDatepickerSetDate),loader.initModules([__webpack_require__(876)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/faceted_search/active_facet.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="f-active-facet" title="{{ $model.viewValue.name }}"\n    ng-click="$event.stopPropagation()"\n    ng-class="{ \'f-active-facet-invalid\': !$model.$valid }">\n    <button class="f-faceted-search-remove bare" ng-click="!$model.facet.isSticky() && $remove(null, $event)"\n        ng-if="!$model.facet.isSticky()"\n        f-facet-input="remove" title="{{ \'filter_remove\' | lang }}">\n        <f-icon class="fa-times"></f-icon>\n    </button>\n    <button ng-if="$model.facet.icon" class="bare">\n        <f-icon ng-class="$ctrl.getIcon()"></f-icon>\n    </button>\n    <input type="text" class="facet-input"\n        ng-disabled="$model.facet.isSticky()"\n        ng-show="$editing === \'facet\'"\n        ng-model="$model.name"\n        f-facet-input="facet" tabindex="1">\n    <button class="facet-name" f-facet-input="selectFacet"\n        ng-show="$editing !== \'facet\'"\n        ng-click="$edit(\'facet\')"\n        >\n        {{ $model.facet.name | lang }}:\n    </button>\n    <button class="facet-value" f-facet-input="selectValue"\n        ng-click="$edit(\'value\')"\n        ng-show="!$editing">\n        {{ $fmtValue() }}\n    </button>\n    <button class="facet-value" f-facet-input="addValue"\n        ng-click="$edit(\'value\')"\n        ng-show="$editing !== \'value\' && !$model.value && $model.facet"\n        >&hellip;</button>\n    <span f-facet-modifiers>\n        <span class="facet-options-container"\n                ng-show="$editing === \'value\'">\n            <input type="text" class="value-input"\n                ng-model="$model.value"\n                placeholder="{{ $model.facet.valuePlaceholder }}"\n                ng-class="{ \'f-facet-value-invalid\': $model.$valid === false }"\n                f-facet-input="value" f-facet-modified f-facet-format="$model.facet"\n                ng-if="$model.facet.type !== \'timestamp\'">\n            <f-complex-timestamp\n                f-facet-input="value"\n                ng-if="$model.facet.type === \'timestamp\'"\n                class="value-input"\n                ng-show="$editing === \'value\'"\n                ng-model="$model.value"\n                f-facet-input="value"\n                f-facet-modified\n                tabindex="1"\n                >\n            </f-complex-timestamp>\n            <div class="facet-options" f-scroll-parent\n                    ng-show="\n                    (possibleValues.length || $model.facet.hint) && $editing === \'value\'">\n                <span class="facet-value-hint" ng-show="$model.facet.hint"\n                    ng-bind-html="$model.facet.hint | lang">\n                </span>\n                <span class="facet-options-flexbox">\n                    <span class="facet-date-pickers" ng-if="datePickerOptions" >\n                        <span ui-jq="datepicker" ui-options="datePickerOptions"\n                            f-datepicker-set-date="datePickerDate"\n                            f-facet-pseudo-input="dateSelected"></span>\n                    </span>\n                    <ul>\n                        <li ng-repeat="v in possibleValues"\n                            ng-class="{selected: $preSelected.value == v, highlight: v.highlight()}"\n                            f-scroll-into-view="$preSelected.value == v">\n                            <label><button ng-click="$event.stopPropagation(); $select.value(v, undefined, true)"\n                                edit-group="value"\n                                f-facet-input="value_{{v.key}}">{{ v.value }}</button>\n                                <span ng-bind-html="v.description"></span>\n                            </label>\n                        </li>\n                    </ul>\n                </span>\n            </div>\n        </span>\n        <div class="modifier-group" ng-if="$lastFocused() && $model.value">\x3c!--\n            --\x3e<input f-facet-modifier="&lt;=">\x3c!--\n            --\x3e<input f-facet-modifier="&gt;=">\x3c!--\n            --\x3e<input f-facet-modifier="A-B">\x3c!--\n            --\x3e<input f-facet-modifier="OR">\x3c!--\n            --\x3e<input f-facet-modifier="NOT">\x3c!--\n        --\x3e</div>\n    </span>\n    <div class="facet-options" f-scroll-parent\n        ng-show="possibleFacets.length && $editing == \'facet\' && !$model.facet.isSticky()">\n        <ul>\n            <li ng-repeat="f in possibleFacets" ng-if="::!f.hidden"\n                ng-class="{selected: $preSelected.facet == f, highlight: f.highlight()}"\n                f-scroll-into-view="$preSelected.facet == f">\n                <button ng-click="$select.facet(f)" f-facet-input="facet_{{f.name}}"\n                    edit-group="facet"\n                >{{ f.name | lang }}</button>\n            </li>\n        </ul>\n    </div>\n\n</div>\n\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){const fComplexTimestamp={templateUrl:__webpack_require__(877),controller:class{constructor($scope,ComplexValue,SearchFacet,$element){this._di={$scope:$scope,ComplexValue:ComplexValue,SearchFacet:SearchFacet,$element:$element},this.lastFocus=null,this.handleFocus=this.handleFocus.bind(this),this.handleBlur=this.handleBlur.bind(this),this.focusedInputs=new Set,this.focused=!1}$onInit(){this.facetInput.control=this,this.ngModel.$formatters.push(value=>{if(value instanceof this._di.SearchFacet.ValueOption&&(value=value.key),value||(value=""),"string"==typeof value&&(value=new this._di.ComplexValue(value)),!(value instanceof this._di.ComplexValue))throw new Error(`expected a ComplexValue but got ${JSON.stringify(value)}`);return{values:value.values.map(ts=>new Date(parseInt(ts,10))),modifiers:value.modifiers.slice(),splitter:value.splitter}}),this.ngModel.$parsers.push(v=>this._di.ComplexValue.build(v.values.map(d=>d&&d.getTime()),v.modifiers.slice(),v.splitter).toString()),this._di.$scope.$watch(()=>this.ngModel.$viewValue,(value,oldValue)=>{if(value!==oldValue){const timestamps=value.values.map(d=>d&&d.getTime()),oldTimestamps=oldValue&&oldValue.values.map(d=>d&&d.getTime()),values=timestamps.map((ts,i)=>(2===timestamps.length&&"-"===value.splitter&&ts===oldTimestamps[i]&&timestamps[0]>timestamps[1]&&(ts=timestamps[0===i?1:0]),ts&&new Date(ts)));values.every(v=>!!v)&&this.ngModel.$setViewValue({values:values,modifiers:value.modifiers.slice(),splitter:value.splitter})}},!0),this._di.$element.on("focusin",this.handleFocus),this._di.$element.on("focusout",this.handleBlur)}$onDestroy(){this._di.$element.off("focusin",this.handleFocus),this._di.$element.off("focusout",this.handleBlur)}handleFocus(event){event.target===this._di.$element[0]?this.focus():(this.lastFocus=event.target,this.focusedInputs.add(event.target),this.focused=this.focusedInputs.size>0)}handleBlur(event){this.focusedInputs.size?this.lastFocus=Array.from(this.focusedInputs)[0]:this.lastFocus=event.target,this.focusedInputs.delete(event.target),this.focused=this.focusedInputs.size>0}focus(){return(this.lastFocus||this._di.$element.find("input")[0]).focus(),!0}},require:{ngModel:"ngModel",facetInput:"fFacetInput"}};return function(providers){providers.$compile.component("fComplexTimestamp",fComplexTimestamp)}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/faceted_search/f-complex-timestamp.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'\n<span ng-repeat="m in $ctrl.ngModel.$viewValue.modifiers">{{m}}</span>\n<span ng-repeat="v in $ctrl.ngModel.$viewValue.values track by $index">\n    <span ng-if="$ctrl.ngModel.$viewValue.splitter && $index">{{ \' \' + $ctrl.ngModel.$viewValue.splitter + \' \'}}</span>\n    <f-date-time class="value-input" step="1"\n        ng-model="$ctrl.ngModel.$viewValue.values[$index]">\n    </f-date-time>\n</span>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(879)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(registerScrollIntoView){var KEY_CONSTANTS={ESC:27,ENTER:13,BACKSPACE:8,TAB:9,UPARROW:38,DOWNARROW:40};function FacetInput($scope,$element,$attrs,$parse,$timeout){this.type=$element[0].type,this.$attr=$attrs,this.$scope=$scope,this.$elem=$element,this.$timeout=$timeout,$element.on("focus blur",function(event){var focused="focus"===event.type;$element.toggleClass("focused",focused),this.focused=focused}.bind(this))}function fFacetInput($timeout,$parse,KEYS){return{scope:!1,controller:FacetInput,require:["^fFacetedSearch","^?fActiveFacet","fFacetInput","?fFacetModified"],link:function(scope,elem,attr,ctrls){var facetedSearch=ctrls.shift(),activeFacet=ctrls.shift(),ctrl=ctrls.shift(),facetModified=ctrls.shift(),name=attr.fFacetInput;ctrl.init(name,activeFacet,attr.editGroup),facetModified&&(ctrl.modify=facetModified.modify),"BUTTON"===elem[0].tagName.toUpperCase()&&(elem.attr("type")||elem.prop("type","button"),ctrl.type="button"),activeFacet&&activeFacet.addInput(ctrl),facetedSearch.addInput(ctrl),scope.$on("$destroy",function(){facetedSearch.removeInput(ctrl),activeFacet&&activeFacet.removeInput(ctrl)});var preventKeypress=!1,KEY_PRESS_REPEAT_INTERVAL=30;elem.on("keypress",function(event){preventKeypress&&event.preventDefault(),activeFacet&&scope.$apply(function(){activeFacet.keyPress(String.fromCharCode(event.which),ctrl)&&event.preventDefault()})});var preSelectKeys={};preSelectKeys[KEYS.UPARROW]=-1,preSelectKeys[KEYS.DOWNARROW]=1;var keydown={};elem.on("focus",function(){keydown={}}),elem.on("keydown",function(event){"button"!==ctrl.type&&(preventKeypress=!1,activeFacet&&$timeout(function(){event.which!==KEYS.TAB||ctrl.control&&ctrl.control.focused||(activeFacet.tab(event.shiftKey,ctrl),event.preventDefault(),preventKeypress=!0)}),preventKeypress||event.isDefaultPrevented()||event.which===KEYS.TAB||event.which in preSelectKeys&&function fakeKeypress(event,nextDelay){$timeout.cancel(ctrl.$pendingKeypress),preventKeypress||(activeFacet&&event.which in preSelectKeys&&scope.$apply(function(){activeFacet.preSelect(name,preSelectKeys[event.which]),event.preventDefault()}),$timeout.cancel(ctrl.$pendingKeypress),ctrl.$pendingKeypress=$timeout(fakeKeypress.bind(null,event),nextDelay||KEY_PRESS_REPEAT_INTERVAL))}(event,500),keydown[event.which]=!0)}),elem.on("keyup",function(event){$timeout.cancel(ctrl.$pendingKeypress),preventKeypress||(scope.$apply(function(){event.which===KEYS.ESC?activeFacet&&(activeFacet.cancel(),activeFacet.isEmpty()&&activeFacet.remove()):event.which===KEYS.ENTER&&keydown[event.which]&&activeFacet&&name in activeFacet.select&&(activeFacet.postProcess(),activeFacet.select[name]())}),keydown[event.which]=!1)}),elem.on("input",function(){activeFacet&&activeFacet.setDirty()})}}}function fFacetPseudoInput(){var fevents={mousedown:!0,mouseup:!1};return{scope:{name:"@fFacetHoverInput"},controller:"FacetInput",require:"^fActiveFacet",link:function(scope,element,attr,activeFacet){var events=Object.keys(fevents).join(" ");element.on(events,"a, input, button",function(event){scope.$apply(function(){element.is(":visible")&&3!==event.isTrigger&&activeFacet.pseudoFocus(scope.name,fevents[event.type])})}),element.on("focus","*",function(event){event.preventDefault()})}}}function fFacetFormat(ComplexValue,SearchFacet){return{scope:{facet:"=fFacetFormat"},require:"ngModel",link:function(scope,element,attr,ngModel){ngModel.$parsers.push(function(value){lastValueOption&&value===lastValueOption.value&&(value=lastValueOption);if(scope.facet){errReset();try{value=cvmap(value=scope.facet.complexValue(value,!1),scope.facet.parse.bind(scope.facet))}catch(ex){doCatch(ex),value=void 0}}return value}),ngModel.$formatters.push(function(value){lastValueOption=null,value instanceof SearchFacet.ValueOption&&(lastValueOption=value,value=value.key instanceof ComplexValue?value.key:value.value);scope.facet&&(value=cvmap(value,scope.facet.format.bind(scope.facet)));return value});var lastValueOption,errors=[];function cvmap(value,fn){errReset();try{value=value instanceof ComplexValue?value.formatted(fn,!0):fn(value)}catch(ex){doCatch(ex),value=void 0}return value}function errReset(){errors.forEach(function(error){ngModel.$setValidity(error,!0)})}function doCatch(ex){var err=ex.constructor.name;"Error"===err&&(err=ex.message.split(/ /).slice(0,2).join("-")),errors.push(err),ngModel.$setValidity(err,!1)}}}}return FacetInput.prototype={$activeFacet:null,$pendingKeypress:null,cursor:null,init:function(name,activeFacet,editGroup){this.name=name,this.editGroup=editGroup||name,this.$activeFacet=activeFacet},focus:function(focus){if(this.$elem.is(":hidden"))return!1;focus=!1!==focus,this.focused=focus;let result=!0;return this.control?result=this.control.focus():this.$elem.focus(),result}},function(providers,loader){return providers.$controller.register("FacetInput",FacetInput),providers.$compile.directive({fFacetInput:fFacetInput,fFacetFormat:fFacetFormat,fFacetPseudoInput:fFacetPseudoInput}),providers.$provide.constant("KEYS",KEY_CONSTANTS),loader.initModules([registerScrollIntoView])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){function ScrollParent(){}function fScrollParent(){return{scope:!1,controller:ScrollParent,require:"fScrollParent",link:function(scope,elem,attr,ctrl){ctrl.link(elem)}}}function fScrollIntoView(){return{scope:!1,require:"^fScrollParent",link:function(scope,elem,attr,scrollParent){scope.$watch(attr.fScrollIntoView,function(doScroll){doScroll&&scrollParent.scrollIntoView(elem)})}}}ScrollParent.prototype={elem:null,link:function(elem){this.elem=elem},scrollIntoView:function(elem){var offset=elem.position(),scrollParent=this.elem,size_x=elem.height(),size_y=elem.height(),psize_x=scrollParent.width(),psize_y=scrollParent.height();offset.x=offset.left,offset.y=offset.top;var top=offset.x<0||offset.y<0;(top||offset.x+size_x>psize_x||offset.y+size_y>psize_y)&&elem[0].scrollIntoView(top)}};var provided=[];return function(providers){-1===provided.indexOf(providers)&&(provided.push(providers),providers.$compile.directive("fScrollParent",fScrollParent),providers.$compile.directive("fScrollIntoView",fScrollIntoView))}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){const MODIFIER_EXPR=/^(:?<=|>=|<|>|!)+\s*/,END_SPLIT_EXPR=/\s*[-,]\s*$/,SPLIT_MODIFIERS=[",","-"],RS="";function fFacetModifier(lang){return{scope:{modifier:"@fFacetModifier"},controller:"FacetInput",require:["^fFacetModifiers","fFacetModifier","^?fActiveFacet","^fFacetedSearch"],link:function(scope,elem,attr,ctrls){var facetModifiers=ctrls.shift(),facetInput=ctrls.shift(),activeFacet=ctrls.shift();ctrls.shift().isComplex()||elem.css("display","none"),facetInput.init("FacetModifier:"+attr.fFacetModifier,activeFacet,"value");var fmBound=facetModifiers.modify.bind(facetModifiers,scope.modifier);elem.prop("type","button"),elem.val(lang(scope.modifier));var modifier=FacetModified.resolveModifier(scope.modifier);elem.attr("title",lang(FacetModified.modifierDefs[modifier].tip)),elem.addClass("f-facet-modifier"),elem.on("click",scope.$apply.bind(scope,fmBound)),scope.$watch(function(){var model=activeFacet&&activeFacet.scope.$model,facet=model&&model.facet;return facet&&facet.modifiers},function(facetModifiers){var show=!facetModifiers||-1!==facetModifiers.indexOf(modifier);elem.toggleClass("ng-hide",!show)})}}}function FacetModifiers(){}function fFacetModifiers(){return{controller:FacetModifiers,scope:!1,require:"fFacetModifiers",link:function(scope,elem){elem.addClass("f-facet-modifiers")}}}function FacetModified(injector){this.restoreCursor=injector.partial(this.restoreCursor,this,["cursor","facetInput","doFocus"])}function fFacetModified($timeout){return{controller:FacetModified,scope:!1,require:["ngModel","^fFacetModifiers","fFacetModified","fFacetInput","?^fFacetedSearch","?^fActiveFacet"],link:function(scope,elem,attr,ctrls){var current,currentWithCaret,updateCaretPending,skipUpdate,doubleClicked,cursor,ngModel=ctrls.shift(),facetModifiers=ctrls.shift(),facetModified=ctrls.shift(),facetInput=ctrls.shift(),facetedSearch=ctrls.shift(),activeFacet=ctrls.shift(),caret=new ComplexValue.Caret(0,0),newCaret=null;elem.addClass("f-facet-modified"),facetModifiers.register(facetModified),facetModified.modify=facetModified.modify.bind(facetModified,ngModel,facetInput,elem);var $render=ngModel.$render;function updateCaretCurrent(value){current=value,newCaret=value.caret}function updateCaret(){if(facetInput.cursor=facetModified.saveCursor(elem),current){var ss=elem[0].selectionStart,sl=elem[0].selectionEnd-ss;setValueCaret(current,ss,sl);var mv=ngModel.$modelValue;mv!==current&&mv instanceof ComplexValue&&setValueCaret(mv,ss,sl,current.caret),skipUpdate=!doubleClicked,doubleClicked=!1,currentWithCaret=current}}function setValueCaret(value,ss,sl,caret){value.caret?value.caret.update(ss,sl):value.setCaret(caret||new ComplexValue.Caret(ss,sl))}ngModel.$render=function(){$render.apply(this,arguments),cursor?(facetModified.restoreCursor(cursor,facetInput,!1),cursor=null):newCaret?(elem[0].setSelectionRange&&elem[0].setSelectionRange(newCaret.start,newCaret.start+newCaret.length),newCaret=null,$timeout.cancel(updateCaretPending)):updateCaret(),elem.attr("size",elem.val().length)},scope.$watch(function(){if(currentWithCaret instanceof ComplexValue){var si=currentWithCaret.selectionInfo(activeFacet.currentFacet()),caret=currentWithCaret.caret,caretCopy=caret&&new ComplexValue.Caret(caret);return si&&{selected:si.selected,selectedCount:si.selectedCount,caret:caretCopy}}return!1},function(value,oldValue){activeFacet&&value&&oldValue&&value.selected!==oldValue.selected&&0===value.selectedCount&&0===oldValue.selectedCount&&activeFacet.$dirty&&(cursor=facetModified.saveCursor(elem),currentWithCaret.caret.update(oldValue.caret),activeFacet.select.value(void 0,void 0,!0),currentWithCaret.caret.update(cursor.start,cursor.end-cursor.start)),value&&!skipUpdate?(caret=current.caret).length===elem[0].selectionEnd-elem[0].selectionStart&&caret.start===elem[0].selectionStart||0===caret.length?caret=null:ngModel.$render():skipUpdate=!value},!0),ngModel.$parsers.push(function(value){facetedSearch&&facetedSearch.isComplex()&&updateCaretCurrent(value=new ComplexValue(value));return value}),ngModel.$formatters.push(function(value){value instanceof ComplexValue&&(updateCaretCurrent(value),value=value.formatted());return value}),elem.on("dblclick",function(){doubleClicked=!0}),elem.on("input keydown keyup keypress mouseup mouseout focus",function(){caret=null,updateCaretPending=$timeout(updateCaret,0,!0)})}}}function ComplexValue(value,caret){if(value.__ComplexValue&&(this._restrictModifiers=value._restrictModifiers,value=this.formatted.call(value)),this.__ComplexValue=!0,this.modifiers=[],caret&&this.setCaret(caret),this.value=value,this.updateModifierDetails(value),this._restrictModifiers){var wm=this.withModifiers(this._restrictModifiers);["values","modifiers","splitter","_spad","_mpad"].forEach(function(prop){this[prop]=wm[prop]}.bind(this))}}function notEmpty(value){return!!String(value).trim()}return FacetModifiers.prototype={modified:null,register:function(modified){this.modified=modified},modify:function(modifier){this.modified.modify(modifier)}},FacetModified.initModifiers=function(){var modifierDefs=FacetModified.modifierDefs,modifiers=FacetModified.prototype.modifiers,lookup=FacetModified.prototype.modifierLookup;for(var m in modifierDefs){var value=modifierDefs[m];"string"==typeof value&&(lookup[m]=value,value=modifiers[m]=modifierDefs[value]),Array.isArray(value)&&(lookup[m]=m,modifierDefs[m]={tip:value.shift(),isModifier:value.shift(),coexist:value.shift(),splitReplace:value.shift(),endSplitReplace:value.shift(),singular:value.shift()},modifiers[m]=this.genModifier(m,modifierDefs[m]))}},FacetModified.resolveModifier=function(modifier){return FacetModified.prototype.modifierLookup[modifier]},FacetModified.genModifier=function(modifier,rules){return"string"==typeof coexist&&(rules.coexist=[rules.coexist]),function(value,cursor){var complex,replaceWith=[rules.endSplitReplace,function(replaceWith){return replaceWith&&function(){return++replacedCount,replaceWith}}(rules.splitReplace)],expr=[END_SPLIT_EXPR,/(\s+-\s+)|(\s*),(\s*)/g],replacedCount=0;if("string"==typeof value){for(var i=0,len=replaceWith.length;i<len;++i)void 0!==replaceWith[i]&&(value=value.replace(expr[i],replaceWith[i]));complex=new ComplexValue(value,value.caret)}else if(complex=value,!("modifiers"in value&&"splitter"in value&&"values"in value))throw new Error("Cannot modify something which is not a string and doesn't look like a ComplexValue: "+JSON.stringify(value));const exists=complex.modifiers.includes(modifier),modifiers=complex.modifiers.filter(canCoexist);if(rules.isModifier&&!exists&&(modifiers.push(modifier),modifiers.sort(ComplexValue.modifierSort)),complex===value){if(value.modifiers=modifiers,rules.splitReplace){var replaceSplitter=rules.splitReplace.trim()||void 0;value.splitter===replaceSplitter?value.splitter=void 0:value.splitter=replaceSplitter,value.splitter&&value.values.length<2&&value.values.push(new value.values[0].constructor(value.values[0]))}value.splitter||(value.values.length=1)}else value=value.replace(MODIFIER_EXPR,""),modifiers.length>0&&(value=modifiers.join("")+" "+value),rules.isModifier||rules.singular&&replacedCount||(value+=rules.splitReplace,cursor.end=cursor.start=value.length,cursor.left=cursor.value,cursor.right="",cursor.selected="");return value};function canCoexist(m){return Array.isArray(rules.coexist)?rules.coexist.indexOf(m)>-1:rules.coexist&&m!==modifier}},FacetModified.modifierDefs={"!":["Negate the filter value",!0,!0],"<=":["Less than or equal to this value",!0,["!"]," "],">=":["Greater than or equal to this value",!0,["!"]," "],">":["Greater than this value",!0,["!"]," "],"<":["Less than this value",!0,["!"]," "],",":["Match any of these values",!1,["!"],", ",""],"-":["Between these two values (inclusive)",!1,["!"]," - ","",!0],"…":"-","A-B":"-",NOT:"!",OR:",",RANGE:"-"},FacetModified.prototype={modifiers:{},modifierLookup:{},modify:function(ngModel,facetInput,elem,modifier){facetInput.$activeFacet&&facetInput.$activeFacet.edit(facetInput.editGroup);var modifiers=this.modifiers;modifier=FacetModified.resolveModifier(modifier),this.cursor=this.saveCursor(elem);var value=modifiers[modifier].call(null,ngModel.$viewValue||"",this.cursor);elem.val(value),facetInput.focus(),ngModel.$setViewValue(value),this.restoreCursor(this.cursor,facetInput),facetInput.$activeFacet&&(facetInput.$activeFacet.setDirty(),facetInput.$activeFacet.pushUndo())},saveCursor:function(elem){var value=elem.val();return elem=elem[0],"string"==typeof value?{start:elem.selectionStart,end:elem.selectionEnd,value:value,left:value.slice(0,elem.selectionStart),selected:value.slice(elem.selectionStart,elem.selectionEnd),right:value.slice(elem.selectionEnd)}:{start:0,end:0,value:value,left:0,selected:[],right:0}},restoreCursor:function($timeout,cursor,facetInput,doFocus){var elem=facetInput.$elem,value=elem.val();if(elem=elem[0],cursor&&"string"==typeof value){if(cursor=Object.assign({},cursor),value.endsWith(cursor.right))cursor.end=value.length-cursor.right.length,value.endsWith(cursor.selected+cursor.right)?cursor.start=cursor.end-cursor.selected.length:cursor.start=cursor.end;else if(value.startsWith(cursor.left))cursor.start=cursor.left.length,value.startsWith(cursor.left+cursor.selected)?cursor.end=cursor.start+cursor.selected.length:cursor.end=cursor.start;else{var diff=cursor.value.length-value.length;cursor.start=Math.min(value.length,Math.max(0,cursor.start-diff)),cursor.end=cursor.start}elem.setSelectionRange&&elem.setSelectionRange(cursor.start,cursor.end)}!1!==doFocus&&$timeout(function(){facetInput.focus()})},cursor:null},FacetModified.initModifiers(),ComplexValue.Caret=function(selectionStartOrCaret,selectionLength){this.update(selectionStartOrCaret,selectionLength)},ComplexValue.Caret.prototype={start:null,length:null,update:function(selectionStartOrCaret,selectionLength){var selectionStart;selectionStartOrCaret instanceof ComplexValue.Caret?(selectionStart=selectionStartOrCaret.start,selectionLength=selectionStartOrCaret.length):selectionStart=selectionStartOrCaret,this.start=selectionStart||0,this.length=selectionLength||0}},ComplexValue.build=function(values,modifiers,splitter){return new ComplexValue({values:values,modifiers:modifiers,splitter:splitter,__ComplexValue:!0})},ComplexValue.probablyComplex=function(value){return value&&(value.__ComplexValue||MODIFIER_EXPR.test(value)||/(\s+-\s+)|(\s*),(\s*)/g.test(value))},ComplexValue.flattenValues=function(cvs){return cvs.reduce(function(result,cv){return result.concat(ComplexValue.probablyComplex(cv)&&cv.values?cv.values:[cv])},[])},ComplexValue.modifierSort=function(a,b){var order=ComplexValue.modifiers;return order.indexOf(a)-order.indexOf(b)},ComplexValue.modifiers=Object.keys(FacetModified.prototype.modifiers),ComplexValue.resolveModifier=FacetModified.resolveModifier,ComplexValue.prototype={caret:null,splitter:null,values:null,modifiers:null,value:null,setCaret:function(caret){if(this.caret)throw new Error("One carrot per value");if(caret&&!(caret instanceof ComplexValue.Caret))throw new Error("Must specify an instance of Caret");this.caret=caret},toString:function(){return this.formatted()},selectedValue:function(facet){var si=this.selectionInfo(facet);return this.values[si?si.selected:0]},selectedValues:function(facet){var si=this.selectionInfo(facet);return si?si.values:this.values.slice()},unselectedValues:function(facet){var si=this.selectionInfo(facet);return si?si.before.concat(si.after):[]},updateModifierDetails:function(value){var details=this._getModifierDetails(value);this._mpad=details.mpad,this._spad=details.spad,this.splitter=details.splitter,this.values=details.splitValues,this.modifiers=details.modifiers},_getModifierDetails:function(value){var splitMatch,splitter,result={modifiers:[],spad:[],mpad:0,splitter:null},olen=value.length,splitters={"-":/\s+-\s+/g,",":/\s*,\s*/g},splitExpr=/$ ^/g;for(splitter in value=String(value).replace(MODIFIER_EXPR,function(result,m){var spaceExpr=/^\s+$/;for(;!spaceExpr.test(m)&&MODIFIER_EXPR.test(m);)for(var i=0,len=ComplexValue.modifiers.length;i<len;++i){var mod=ComplexValue.modifiers[i];mod===m.substr(0,mod.length)&&(m=m.substr(mod.length),result.modifiers.push(mod))}return""}.bind(null,result)),result.mpad=olen-value.length,splitters)if(-1!==value.indexOf(splitter)){splitExpr=splitters[splitter],result.splitter=splitter.trim();break}for(;null!==(splitMatch=splitExpr.exec(value));)result.spad.push(splitMatch[0].length);return result.splitValues=value.split(splitExpr),result},selectionInfo:function(facet){if(!facet)throw new Error("need a facet");if(!this.caret)return null;var sel=valueIndexOf(this,this.caret.start),selCount=this.caret.length&&valueIndexOf(this,this.caret.start+this.caret.length)+1-sel;sel>=this.values.length&&(sel=this.values.length-1),sel+selCount>this.values.length&&(selCount=this.values.length-sel);var end=sel+Math.max(selCount,1);return{selected:sel,selectedCount:selCount,before:this.values.slice(0,sel),values:this.values.slice(sel,end),after:this.values.slice(end)};function valueIndexOf(cv,index){for(var len=cv._mpad,fmtValues=cv.values.map(facet.format.bind(facet)),sel=0,vlen=cv.values.length;sel<vlen&&!((len+=String(fmtValues[sel]).length)>=index);++sel)len+=cv._spad[sel]||0;return sel}},setSelectedValue:function(value,facet){var si=this.selectionInfo(facet),selected=si?si.selected:0;this.values[selected]=value},replaceSelectedValues:function(values,facet){var result=new ComplexValue(this,this.caret),rsi=result.selectionInfo(facet)||{selected:0,selectedCount:0};return values instanceof ComplexValue&&(values=values.values),values=values.filter(notEmpty),result.values.splice.apply(result.values,[rsi.selected,Math.max(rsi.selectedCount,1)].concat(values)),result.value=result.formatted(facet),result.setSelected(rsi.selected,values.length>1?values.length:rsi.selectedCount,facet),new ComplexValue(result,result.caret)},setSelected:function(index,count,facet){if(!facet)throw new Error("need a facet");this.caret||(this.caret=new ComplexValue.Caret(0,0));var startLength=0,startPad=0,fmtValues=this.values.map(facet.format.bind(facet)),selValues=fmtValues.slice(index,index+count),selPad=0;function len(result,value){return result+String(value).length}function sum(result,value){return result+value}index>0&&(startLength=fmtValues.slice(0,index).reduce(len,0),startPad=this._spad.slice(0,index).reduce(sum,0)),count>1&&(selPad=this._spad.slice(index,index+count-1).reduce(sum,0)),this.caret.update(this._mpad+startLength+startPad,count&&selValues.reduce(len,0)+selPad)},removeEmptyValues:function(){this.values.length>1&&(this.values=this.values.filter(function(v){return v}))},replace:function(){var value=this.toString();return value.replace.apply(value,arguments)},trim:function(){if(this.values.length&&!this.values.every(notEmpty)){var result=new ComplexValue(this,this.caret),s="\\s*";if(result.values=result.values.filter(notEmpty),result.splitter){var exprMid=new RegExp(s+result.splitter+"("+s+result.splitter+")+","g"),exprStart=new RegExp("^"+s+result.splitter+s),exprEnd=new RegExp(s+result.splitter+s+"$");result.value=result.value.replace(exprMid,result.splitter).replace(exprStart,"").replace(exprEnd,""),result.updateModifierDetails(result.value)}return result}return this},withoutSplitter:function(splitter,noClone){var result=this;return this.splitter===splitter&&((result=noClone?this:new ComplexValue(this.value,this.caret)).splitter=null,result.values=result.value.replace(MODIFIER_EXPR,"").replace(/(\s+-\s+)|(\s*),(\s*)/g,function(match){var trimMatch=match.trim(),current=trimMatch===result.splitter,noSplitter=null===result.splitter;if(trimMatch===splitter||!current&&!noSplitter)return match;return result.splitter=trimMatch,RS}).split(RS),result._restrictModifiers=[splitter]),result},merge:function(other,splitter,overwriteSelected){const joinedModifiers=this.modifiers.slice().sort().join(RS),otherJoinedModifiers=other.modifiers.slice().sort().join(RS),range={">=":"<=","<=":">="}[joinedModifiers]===otherJoinedModifiers&&1===this.values.length&&1===other.values.length,reverseValues=range&&"<="===joinedModifiers;let index=0;return!(!(range||otherJoinedModifiers===joinedModifiers&&["!",""].includes(joinedModifiers))||null!=this.splitter&&this.splitter!==splitter)&&(overwriteSelected&&this.selected>=0&&(index=this.selected,this.values.splice(this.selected,this.selectedCount||1)),this.values.splice.apply(this.values,[index,0].concat(other.values)),reverseValues&&this.values.reverse(),range?(this.modifiers=[],this.splitter="-"):this.splitter=splitter,!0)},getSimple:function(){return this.splitter||0!==this.modifiers.length||1!==this.values.length||this._restrictModifiers?this:this.values[0]},withModifiers:function(modifiers){modifiers=modifiers.map(FacetModified.resolveModifier);var result=this,currentModifiers=this.modifiers.concat(this.splitter?[this.splitter]:[]),removed=[];return currentModifiers.filter(function(modifier){return-1===modifiers.indexOf(modifier)}).forEach(function(modifier){if(SPLIT_MODIFIERS.includes(modifier))result=result.withoutSplitter(modifier,result!==this);else{var index=result.modifiers.indexOf(modifier);index>-1&&(removed[index]=modifier,result===this&&(result=new ComplexValue(this.value,this.caret)),result.modifiers.splice(index,1))}}.bind(this)),removed.length&&(result.values[0]=removed.filter(function(modifier){return modifier}).join("")+" "+result.values[0]),result._restrictModifiers=modifiers,result},formatted:function(fmt,complex){if("function"!=typeof fmt&&(fmt=fmt&&fmt.format&&fmt.format.bind(fmt)||function(v){return v}),complex){var result=new ComplexValue(this,this.caret);return result.values=result.values.map(fmt),result}var modifierDef=FacetModified.modifierDefs[this.splitter],splitReplace=modifierDef&&modifierDef.splitReplace;return(this.modifiers.length?this.modifiers.join("")+" ":"")+this.values.map(fmt).join(splitReplace)},hasSplitter:function(){return!!this.splitter},equals:function(value){return value instanceof ComplexValue&&value.formatted()===this.formatted()},localeCompare:function(){return this.value.localeCompare.apply(this,arguments)},intersection:function(other,cull){if(other instanceof ComplexValue){if(other.modifiers.join("")!==this.modifiers.join("")||normalizeSplitter(other.splitter)!==normalizeSplitter(this.splitter))return null}else if(this.modifiers.length||""!==normalizeSplitter(this.splitter))return null;other=ComplexValue.flattenValues(other);var values=this.values.filter(function(value){return other.includes(value)});return values.length>0?(cull&&values.length!==this.values.length&&this.values.splice.apply([0,this.values.length].concat(values)),values):null;function normalizeSplitter(s){return","===s||null===s?"":s}}},function(providers){providers.$provide.value("ComplexValue",ComplexValue),providers.$compile.directive("fFacetModifiers",fFacetModifiers),providers.$compile.directive("fFacetModifier",fFacetModifier),providers.$compile.directive("fFacetModified",fFacetModified)}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){function LogSourceInformation(injector,CMDB,csfTopology,$http,state,$scope){if(injector.injectMarked(this),this.DEVICE_LABELS={memory:"This FortiGate's Memory",disk:"This FortiGate's Disk"},this.DEVICE_ICONS={memory:"ftnt-standard-fortigate",disk:"ftnt-standard-fortigate",fortianalyzer:"ftnt-fortianalyzer-o-no-border",forticloud:"ftnt-forticloud"},csfTopology.buildIfNecessary().then(function(){this.thisFortigate=csfTopology.thisFortigate}.bind(this)),$scope.$watch(()=>csfTopology.selectedFortigate,fortigate=>{!fortigate||this.fortigate&&fortigate===this.fortigate||(this.fortigate=fortigate,this.isThisSelectedFortigate=fortigate.serial===csfTopology.thisFortigate.serial)}),this.devices={disk:{}},this.ftip_options={placementType:"element",fixed:!0},state.getCurrentVDOMScope(state.VDOM_SCOPE.VDOM)===state.VDOM_SCOPE.VDOM){var fazOverride=new CMDB("log.fortianalyzer","override-setting",{vdom:state.current_vdom}).fetch();fazOverride.$promise.then(function(){this.devices.fortianalyzer="enable"===fazOverride.override?fazOverride:new CMDB("log.fortianalyzer","setting").fetch()}.bind(this))}else this.devices.fortianalyzer=new CMDB("log.fortianalyzer","setting").fetch();this.logDeviceOptions=state.getEnabledLogDevices()}return LogSourceInformation.prototype.getDeviceIcon=inject.mark((csfTopology,state)=>{const fortigateDevices=new Set([state.LOG_DEVICES.DISK,state.LOG_DEVICES.MEMORY]);return function(device){return fortigateDevices.has(device)&&csfTopology.thisFortigate?csfTopology.thisFortigate.getIconClass():this.DEVICE_ICONS[device]}}),LogSourceInformation.prototype.setDevice=inject.mark(state=>(function(device){this.device=device,this.onDeviceChange({device:device}),state.setPreferredLogDevice(device)})),function(providers){providers.$compile.component("logSourceInformation",{controller:LogSourceInformation,bindings:{device:"=",onDeviceChange:"&",serial:"<"},templateUrl:__webpack_require__(882)})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/menu/partials/log-source-information.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="menu-item menu-item-padded" f-tip-target f-menu-item-submenu="logDeviceMenu" enabled="$ctrl.isThisSelectedFortigate">\n    <f-icon ng-class="[\'icon-lg\', $ctrl.showWarning ? \'fa-warning\' : $ctrl.getDeviceIcon($ctrl.device)]"></f-icon>\n    <div f-tip display-options="$ctrl.ftip_options">\n        <div>\n            <div class="flex-row-centered">\n                <span f-lang="Log location:"></span>\n                <f-icon ng-class="$ctrl.DEVICE_ICONS[$ctrl.device]"></f-icon>\n                <span>{{ $ctrl.DEVICE_LABELS[$ctrl.device] || $ctrl.device | lang }}</span>\n                <span ng-if="$ctrl.device === \'fortianalyzer\'"> ({{ $ctrl.devices[$ctrl.device].server }})</span>\n            </div>\n            <div ng-if="$ctrl.fortigate.ha.length">\n                <span>{{ \'HA Cluster: {serial}\' | lang:[$ctrl.fortigate.id] }}</span>\n            </div>\n            <div class="warning-message" ng-show="$ctrl.showWarning">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content" >\n                    <a href="/ng/log/settings">\n                    {{:: \'Selected log location is currently disabled.\' | lang }}\n                    </a>\n                </div>\n            </div>\n            <div class="info-message" ng-show="!$ctrl.isThisSelectedFortigate">\n                <f-icon class="fa-info"></f-icon>\n                <div class="message-content" >\n                    {{:: \'Only FortiAnalyzer is allowed for downstream FortiGates.\' | lang }}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div f-pop-up-menu="logDeviceMenu">\n    <div f-menu-item-button ng-repeat="option in $ctrl.logDeviceOptions"\n        click="$ctrl.setDevice(option)" selected="option === $ctrl.device">\n        <f-icon ng-class="::$ctrl.getDeviceIcon(option)"></f-icon>\n        <span>{{ :: option | lang }}</span>\n    </div>\n</div>\n')}]),module.exports=path},,,,,,,,,function(module,exports){var path="/migadmin/ng/directives/menu/menu_items_search.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-controller="QlistCustomMenuItems" ng-init="showSearch = true"\n     ng-include="menu_items_base">\n</div>\n')}]),module.exports=path},,,,,,,,,,,,function(module,exports){!function($){jQuery.plot.plugins.push({init:function(plot){plot.hooks.drawSeries.push(function(plot,ctx,series){if(series.dashes.show){var plotOffset=plot.getPlotOffset(),axisx=series.xaxis,axisy=series.yaxis;ctx.save(),ctx.translate(plotOffset.left,plotOffset.top),ctx.lineJoin="round";var lw=series.dashes.lineWidth,sw=series.shadowSize;if(lw>0&&sw>0){ctx.lineWidth=sw,ctx.strokeStyle="rgba(0,0,0,0.1)";var angle=Math.PI/18;plotDashes(Math.sin(angle)*(lw/2+sw/2),Math.cos(angle)*(lw/2+sw/2)),ctx.lineWidth=sw/2,plotDashes(Math.sin(angle)*(lw/2+sw/4),Math.cos(angle)*(lw/2+sw/4))}ctx.lineWidth=lw,ctx.strokeStyle=series.color,lw>0&&plotDashes(0,0),ctx.restore()}function plotDashes(xoffset,yoffset){var dashOnLength,dashOffLength,points=series.datapoints.points,ps=series.datapoints.pointsize,prevx=null,prevy=null,dashRemainder=0,dashOn=!0;series.dashes.dashLength[0]?(dashOnLength=series.dashes.dashLength[0],dashOffLength=series.dashes.dashLength[1]?series.dashes.dashLength[1]:dashOnLength):dashOffLength=dashOnLength=series.dashes.dashLength,ctx.beginPath();for(var i=ps;i<points.length;i+=ps){var x1=points[i-ps],y1=points[i-ps+1],x2=points[i],y2=points[i+1];if(null!=x1&&null!=x2){if(y1<=y2&&y1<axisy.min){if(y2<axisy.min)continue;x1=(axisy.min-y1)/(y2-y1)*(x2-x1)+x1,y1=axisy.min}else if(y2<=y1&&y2<axisy.min){if(y1<axisy.min)continue;x2=(axisy.min-y1)/(y2-y1)*(x2-x1)+x1,y2=axisy.min}if(y1>=y2&&y1>axisy.max){if(y2>axisy.max)continue;x1=(axisy.max-y1)/(y2-y1)*(x2-x1)+x1,y1=axisy.max}else if(y2>=y1&&y2>axisy.max){if(y1>axisy.max)continue;x2=(axisy.max-y1)/(y2-y1)*(x2-x1)+x1,y2=axisy.max}if(x1<=x2&&x1<axisx.min){if(x2<axisx.min)continue;y1=(axisx.min-x1)/(x2-x1)*(y2-y1)+y1,x1=axisx.min}else if(x2<=x1&&x2<axisx.min){if(x1<axisx.min)continue;y2=(axisx.min-x1)/(x2-x1)*(y2-y1)+y1,x2=axisx.min}if(x1>=x2&&x1>axisx.max){if(x2>axisx.max)continue;y1=(axisx.max-x1)/(x2-x1)*(y2-y1)+y1,x1=axisx.max}else if(x2>=x1&&x2>axisx.max){if(x1>axisx.max)continue;y2=(axisx.max-x1)/(x2-x1)*(y2-y1)+y1,x2=axisx.max}x1==prevx&&y1==prevy||ctx.moveTo(axisx.p2c(x1)+xoffset,axisy.p2c(y1)+yoffset);var dashOffset,ax1=axisx.p2c(x1)+xoffset,ay1=axisy.p2c(y1)+yoffset,ax2=axisx.p2c(x2)+xoffset,ay2=axisy.p2c(y2)+yoffset;do{0==(dashOffset=lineSegmentOffset(dashRemainder>0?dashRemainder:dashOn?dashOnLength:dashOffLength)).deltaX&&0==dashOffset.deltaY||(dashOn?ctx.lineTo(ax1+dashOffset.deltaX,ay1+dashOffset.deltaY):ctx.moveTo(ax1+dashOffset.deltaX,ay1+dashOffset.deltaY)),dashOn=!dashOn,dashRemainder=dashOffset.remainder,ax1+=dashOffset.deltaX,ay1+=dashOffset.deltaY}while(dashOffset.distance>0);prevx=x2,prevy=y2}function lineSegmentOffset(segmentLength){var c=Math.sqrt(Math.pow(ax2-ax1,2)+Math.pow(ay2-ay1,2));if(c<=segmentLength)return{deltaX:ax2-ax1,deltaY:ay2-ay1,distance:c,remainder:segmentLength-c};var ysign=ay2>ay1?1:-1;return{deltaX:(ax2>ax1?1:-1)*Math.sqrt(Math.pow(segmentLength,2)/(1+Math.pow((ay2-ay1)/(ax2-ax1),2))),deltaY:ysign*Math.sqrt(Math.pow(segmentLength,2)-Math.pow(segmentLength,2)/(1+Math.pow((ay2-ay1)/(ax2-ax1),2))),distance:segmentLength,remainder:0}}}ctx.stroke()}})},options:{series:{dashes:{show:!1,lineWidth:2,dashLength:10}}},name:"dashes",version:"0.1"})}()},,function(module,exports){var path="/migadmin/ng/fortiview/f-fortiview.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="flex-centered absolute-fill" ng-if="$ctrl.loading">\n    <f-icon class="fa-loading icon-xxl"></f-icon>\n</div>\n\n<div class="flex-column absolute-fill" ng-if="!$ctrl.loading">\n    <div class="menu-bar" ng-if="!$ctrl.dashboardWidget">\n        <f-fv-top-menu class="menu-bar-component"\n            ng-if="::!$ctrl.dashboardWidget"\n            supported="::$ctrl.supported"\n            source="$ctrl.source"\n            is-log-source="$ctrl.isLogViewMode()"\n            log-entries="$ctrl.logEntries"\n            dependencies="$ctrl.dependencies"\n            is-realtime="$ctrl.isRealtime()"\n            is-top-level-sessions="$ctrl.isTopLevelSessions()"\n\n            on-refresh="$ctrl.updateTimestampAndRefresh()"\n\n            view-type="$ctrl.type"\n            view-types="!$ctrl.isDrilldown() && !$ctrl.embedded && $ctrl.config.viewTypes"\n            on-view-type-update="$ctrl.viewTypeUpdated(view)"\n\n            supported-devices="$ctrl.devices"\n            device-option="$ctrl.device"\n            on-device-option-update="$ctrl.deviceUpdated(device)"\n\n            supported-timeframes="$ctrl.deviceSupportedTimeframeOptions"\n            realtime-disabled="$ctrl.isRealtimeDisabled()"\n            historical-disabled="$ctrl.isHistoricalDisabled()"\n            timeframe-option="$ctrl.timeframeOption"\n            on-timeframe-option-update="$ctrl.timeframeUpdated(option)"\n\n            start-timestamp="$ctrl.startTimestamp"\n            end-timestamp="$ctrl.endTimestamp"\n\n            visualization-option="$ctrl.visualizationOption"\n            available-visualization-options="$ctrl.config.visualization.options"\n            on-visualization-option-update="$ctrl.visualizationUpdated(option)">\n        </f-fv-top-menu>\n    </div>\n\n    <div class="flex-row-centered" ng-if="(!$ctrl.dashboardWidget || $ctrl.dashboardWidget.isZoomed) && !$ctrl.embedded">\n        <f-fv-summary-table\n            ng-if="$ctrl.showSummaryTable()"\n            source="$ctrl.summaryData"\n            columns="$ctrl.summaryColumns"\n            config="$ctrl.drilldownConfig"\n            on-action-refresh="$ctrl.refreshFromAction()">\n        </f-fv-summary-table>\n\n        <f-fv-chart class="flex-grow"\n            ng-if="$ctrl.showChart()"\n            collapsible="!$ctrl.isDrilldown()"\n            chart-data="$ctrl.chartData"\n            compare-by="$ctrl.isLogViewMode() ? $ctrl.summaryCompareBy : $ctrl.compareBy"\n            dont-update="$ctrl.pendingGetData"\n            is-remote-device="$ctrl.device === \'fortianalyzer\' || $ctrl.device === \'forticloud\'"\n            on-timeframe-update="$ctrl.timeframeUpdated(option, end, start)">\n        </f-fv-chart>\n    </div>\n\n    <f-fv-tabs ng-if="$ctrl.showTabs()"\n        tabs="$ctrl.tabs"\n        selected-tab="$ctrl.tab"\n        selected-dropdown-option="$ctrl.sessionsFortigate"\n        on-change="$ctrl.tabUpdated(tab, dropdownOption)"\n        historical-support="$ctrl.historicalSupport"\n        is-realtime="$ctrl.isRealtime()"\n        dashboard-widget="::$ctrl.dashboardWidget">\n    </f-fv-tabs>\n\n    <div class="flex-grow containing-block auto-overflow">\n\n        <div ng-if="::!$ctrl.supported" class="flex-centered absolute-fill">\n            <div class="message" ng-class="::{\'warning-message\': !$ctrl.dashboardWidget && !$ctrl.embedded}">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    {{::$ctrl.notSupportedMessage}}\n                </div>\n            </div>\n        </div>\n\n        <f-mutable ng-if="$ctrl.showMutableTable()"\n            source="$ctrl.mutableSource" settings="$ctrl.mutableSettings" menu-bar="::false"\n            context-menu="::false" instance="$ctrl.muTableInstance"\n            dashboard-widget="$ctrl.dashboardWidget"\n            on-double-click="$ctrl.drilldown($entry, $event)"\n            on-context-menu="$ctrl.showContextMenu($entry, $entries, $event)">\n        </f-mutable>\n\n        <div class="flex-column absolute-fill" ng-if="$ctrl.supported && $ctrl.visualizationOption !== \'table\'">\n            <div style="align-self: flex-end;" ng-if="(!$ctrl.dashboardWidget || $ctrl.dashboardWidget.isZoomed) && !$ctrl.embedded">\n                {{:: "Compare By:" | lang }}\n                <select ng-model="$ctrl.compareBy"\n                    ng-options="column as column.langKey | lang for column in $ctrl.compareByColumns"></select>\n            </div>\n            <div class="flex-column flex-grow" ng-if="$ctrl.visualizationOption === \'bubble\'">\n                <div f-d3-basic-bubble-chart data="$ctrl.visualizationSource" click="$ctrl.drilldown">\n                </div>\n            </div>\n            <div class="flex-column flex-grow" ng-if="$ctrl.visualizationOption === \'country\'">\n                <div f-d3-country-chart data="$ctrl.visualizationSource" click="$ctrl.drilldown"\n                    compare-by-column="$ctrl.compareBy">\n                </div>\n            </div>\n        </div>\n        \x3c!-- TODO: convert fortiview Facets --\x3e\n        <f-log-view\n            ng-if="$ctrl.isLogViewMode()"\n            log-type="$ctrl.getLogType()"\n            fortiview="true"\n            filters="$ctrl.filterConfigs"\n            filter-model="$ctrl.logFilters"\n            extra-filters="$ctrl.extraLogFilters"\n            filter-model-translate-values="$ctrl.logFilterTranslate"\n            filter-model-translate-map="$ctrl.DYNAMIC_TRANSLATE_FIELDS"\n            device="{{$ctrl.device}}"\n            update-entries="$ctrl.logEntries = $entries;"\n            fortigate-serial="$ctrl.sessionsFortigate"\n            refresh-event="logViewerRefresh">\n        </f-log-view>\n\n        <f-sandbox-file-details\n            ng-if="$ctrl.isSandboxFileDetails()"\n            log-device="$ctrl.device"\n            sandbox-file="$ctrl.clickedEntry">\n        </f-sandbox-file-details>\n    </div>\n\n    <div f-pop-up-menu="$ctrl.contextMenuPopUp" ng-if="!$ctrl.embedded">\n        <div ng-if="$ctrl.canDrilldown()">\n            <div f-menu-item-button ng-if="!$ctrl.isDrilldown()"\n                enabled="$ctrl.canDrilldown($ctrl.clickedEntry)"\n                ng-click="$ctrl.drilldown($ctrl.clickedEntry)">\n                <f-icon class="fa-external-link"></f-icon>\n                {{::\'Drill Down to Details\' | lang}}\n            </div>\n            <div f-menu-item-button ng-if="$ctrl.isDrilldown() && $ctrl.selectedDrilldownFortigate"\n                ng-click="$ctrl.drilldown($ctrl.clickedEntry)">\n                <f-icon class="fa-eye"></f-icon>\n                {{::\'View Sessions\' | lang}}\n            </div>\n            <div f-menu-item-submenu="$ctrl.drilldownPopUp"\n                ng-if="$ctrl.isDrilldown() && !$ctrl.selectedDrilldownFortigate">\n                <f-icon class="fa-eye"></f-icon>\n                {{::\'View Sessions\' | lang}}\n            </div>\n        </div>\n        <div>\n            <div f-menu-item-button ng-if="$ctrl.isRealtime() && $ctrl.isTypeSessions()"\n                ng-click="$ctrl.endSessions($ctrl.selectedEntries)">\n                <f-icon class="fa-trash"></f-icon>\n                {{::\'End Session(s)\' | lang}}\n            </div>\n            <div f-menu-item-button ng-if="$ctrl.isRealtime() && $ctrl.isTypeSessions()"\n                ng-click="$ctrl.endAllSessions()">\n                <f-icon class="fa-trash"></f-icon>\n                {{::\'End All Sessions\' | lang}}\n            </div>\n        </div>\n        <f-fv-actions\n            entries="$ctrl.selectedEntries"\n            inside-menu="::true"\n            report-by="$ctrl.config.reportBy"\n            on-action-refresh="$ctrl.refreshFromAction()">\n        </f-fv-actions>\n    </div>\n\n    <div f-pop-up-menu="$ctrl.drilldownPopUp">\n        <div f-menu-item-button ng-repeat="fortigate in $ctrl.possibleDrilldownFortigates"\n            f-tip-target click="$ctrl.drilldown($ctrl.clickedEntry, null, fortigate)">\n            <f-icon ng-class="::fortigate.getIconClass()"></f-icon>\n            <span>{{::fortigate.getLabel()}}</span>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(41),__webpack_require__(26),__webpack_require__(55)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(slide,inject){var FORTIVIEW_CHART_KEY="fortiviewChart";function FortiviewChart(injector,$scope,$q,fortiviewCommonGraph,lang){injector.injectMarked(this,{that:this,scope:$scope});var sessionChart=sessionStorage.getItem(FORTIVIEW_CHART_KEY);this.showChart=null==sessionChart||"true"===sessionChart,$scope.$watchGroup(["$ctrl.chartData","$ctrl.compareBy"],([data,column])=>{if(data&&column&&!this.dontUpdate){let type=column&&column.id;this.chart=$q.resolve(data).then(resolvedData=>{let config={data:[],empty_chart_text:lang("No results").toString()};return resolvedData&&resolvedData.graph&&(config=fortiviewCommonGraph.generateGraph(resolvedData.graph,type,resolvedData)||{}),config.events={plotselected:this.onChartSelected},config})}})}return FortiviewChart.prototype.onChartSelected=inject.mark(function(fortiviewCommonGraph,lang,scope){return function(event,ranges){var from=Math.ceil(ranges.xaxis.from/1e3),to=Math.ceil(ranges.xaxis.to/1e3),minGraphPeriod=this.isRemoteDevice?fortiviewCommonGraph.MIN_REMOTE_GRAPH_PERIOD_SECONDS:fortiviewCommonGraph.MIN_GRAPH_PERIOD_SECONDS;to-from<minGraphPeriod?slide.alert(lang("fv_graph_min_period_warning",[minGraphPeriod])):scope.$apply(()=>{this.onTimeframeUpdate({option:"custom",end:to,start:from})})}}),FortiviewChart.prototype.toggleChart=function(){this.showChart=!this.showChart,window.dispatchEvent(new Event("resize")),sessionStorage.setItem(FORTIVIEW_CHART_KEY,this.showChart.toString())},function(providers){providers.$compile.component("fFvChart",{bindings:{chartData:"<",compareBy:"<",collapsible:"<",dontUpdate:"<",isRemoteDevice:"<",onTimeframeUpdate:"&"},templateUrl:__webpack_require__(907),controller:FortiviewChart})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-chart.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-show="$ctrl.showChart || !$ctrl.collapsible">\n    <div f-chart="$ctrl.chart" class="fv-graph"></div>\n    <button class="bare fv-hide-chart-button" ng-if="$ctrl.collapsible"\n        ng-click="$ctrl.toggleChart()">\n        <f-icon class="fa-times"></f-icon>\n    </button>\n</div>\n<div ng-show="!$ctrl.showChart && $ctrl.collapsible" class="flex-centered">\n    <button class="bare fv-show-chart-button" ng-click="$ctrl.toggleChart()">\n        <div class="flex-button-content">\n            <f-icon class="fa-bar-chart"></f-icon>\n            <span>{{::"Show Graph" | lang}}</span>\n        </div>\n    </button>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(176)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,FortiviewVisualization){function FortiviewTopMenu(injector,$scope){injector.injectMarked(this,{$scope:$scope}),this.visualizationIcons={},this.visualizationIcons[FortiviewVisualization.TYPES.TABLE]="fa-table",this.visualizationIcons[FortiviewVisualization.TYPES.BUBBLE]="ftnt-bubbles",this.visualizationIcons[FortiviewVisualization.TYPES.COUNTRY]="ftnt-globe"}function FortiviewDeviceInformation(injector,csfTopology,$scope,$q){injector.injectMarked(this),this.devices={disk:{label:"FortiGates",iconClass:"ftnt-standard-fortigate"},fortianalyzer:{label:"faz",iconClass:"ftnt-fortianalyzer-o-no-border"},forticloud:{label:"FortiGate Cloud",iconClass:"ftnt-forticloud"}},this.loading=!0,this.csfTopology=csfTopology,csfTopology.buildIfNecessary().then(()=>{this.loading=!1}),$scope.$watch("$ctrl.topMenuCtrl.getData()",data=>{data&&$q.resolve(data).then(entries=>{this.noData=!entries.length}),this.noData=!1})}return FortiviewTopMenu.prototype.$onInit=inject.mark($scope=>(function(){$scope.$watchGroup(["$ctrl.supportedTimeframes","$ctrl.realtimeDisabled","$ctrl.historicalDisabled"],([supportedTimeframes,realtimeDisabled,historicalDisabled])=>{let supportedTimeframesSet=new Set(supportedTimeframes),timeframes=[],validCount=0;Object.values(this.TIME_PERIODS).forEach(period=>{let include=!1,disabled=!1;period===this.TIME_PERIODS.REALTIME?realtimeDisabled||(include=!0):historicalDisabled||(include=period!==this.TIME_PERIODS.FIVE_MIN,supportedTimeframesSet.has(period)?include=!0:disabled=!0),include&&(timeframes.push({value:period,disabled:disabled}),disabled||validCount++)}),this.timeframes=timeframes,this.validTimeframeCount=validCount}),$scope.$watch("$ctrl.timeframeOption",()=>{this.highlightTimeframe=this.highlightOnNextTimeframeChange,this.highlightOnNextTimeframeChange=!1}),this.fFortiview.onForcedTimeframeChange(()=>{this.highlightOnNextTimeframeChange=!0}),this.viewTypes&&(this.viewTypeLangMap=this.viewTypes.reduce((map,type)=>(map[type.path]=type.label,map),{}))})),FortiviewTopMenu.prototype.TIME_PERIODS=inject.mark(fortiviewData=>fortiviewData.TIME_PERIODS),FortiviewTopMenu.prototype.changeViewType=function(viewType){this.viewType!==viewType.path&&(this.viewType=viewType.path,this.onViewTypeUpdate({view:viewType.path}))},FortiviewDeviceInformation.prototype.DEVICE_LABELS=inject.mark(fortiviewConfig=>fortiviewConfig.DEVICE_LABELS),FortiviewDeviceInformation.prototype.getSupportedDevices=function(){return this.topMenuCtrl.supportedDevices},FortiviewDeviceInformation.prototype.getSelectedDevice=inject.mark(fortiviewConfig=>(function(){return this.topMenuCtrl.isRealtime?fortiviewConfig.DEVICE.DISK:this.topMenuCtrl.deviceOption})),FortiviewDeviceInformation.prototype.setDevice=function(device){this.topMenuCtrl.onDeviceOptionUpdate({device:device})},FortiviewDeviceInformation.prototype.getDiskIcon=inject.mark(fortiviewConfig=>(function(){return fortiviewConfig.getDeviceIcon(fortiviewConfig.DEVICE.DISK)})),FortiviewDeviceInformation.prototype.getDeviceIcon=inject.mark(fortiviewConfig=>(function(device){return fortiviewConfig.getDeviceIcon(device)})),FortiviewDeviceInformation.prototype.getTooltipIcon=function(){return this.noData&&this.topMenuCtrl.dependencies&&this.topMenuCtrl.dependencies.length?"fa-warning":this.getDeviceIcon(this.getSelectedDevice())},function(providers){providers.$compile.component("fFvTopMenu",{require:{fFortiview:"^fFortiview"},bindings:{supported:"<",dependencies:"<",isRealtime:"<",isTopLevelSessions:"<",onRefresh:"&",viewType:"<",viewTypes:"<",onViewTypeUpdate:"&",supportedDevices:"<",deviceOption:"<",timeframeOption:"<",startTimestamp:"<",endTimestamp:"<",supportedTimeframes:"<",realtimeDisabled:"<",historicalDisabled:"<",onTimeframeOptionUpdate:"&",onDeviceOptionUpdate:"&",visualizationOption:"<",availableVisualizationOptions:"<",onVisualizationOptionUpdate:"&"},templateUrl:__webpack_require__(909),controller:FortiviewTopMenu}),providers.$compile.component("fFortiviewDeviceInformation",{require:{topMenuCtrl:"^fFvTopMenu"},templateUrl:__webpack_require__(910),controller:FortiviewDeviceInformation})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-top-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items" ng-if="::$ctrl.supported">\n    <div f-menu-item-button click="$ctrl.onRefresh()">\n        <f-icon class="fa-refresh"></f-icon>\n    </div>\n</div>\n\n<div class="center-menu-items">\n</div>\n\n<div class="right-menu-items">\n    <div f-menu-item-submenu="$ctrl.viewTypeMenu" ng-if="::$ctrl.viewTypes">\n        <f-icon class="fa-area-chart"></f-icon>\n        <span>{{::$ctrl.viewTypeLangMap[$ctrl.viewType] | lang}}</span>\n    </div>\n    <div f-pop-up-menu="$ctrl.viewTypeMenu" ng-if="::$ctrl.viewTypes">\n        <div f-menu-item-button ng-repeat="viewType in ::$ctrl.viewTypes"\n            click="$ctrl.changeViewType(viewType)"\n            selected="$ctrl.viewType === viewType.path">\n            {{::viewType.label | lang}}\n        </div>\n    </div>\n\n    <div f-menu-item-submenu="$ctrl.visualizationMenu" ng-if="::$ctrl.supported && !$ctrl.isTopLevelSessions">\n        <f-icon ng-class="$ctrl.visualizationIcons[$ctrl.visualizationOption]"></f-icon>\n    </div>\n    <div f-pop-up-menu="$ctrl.visualizationMenu">\n        <div ng-repeat="option in $ctrl.availableVisualizationOptions"\n            f-menu-item-button click="$ctrl.onVisualizationOptionUpdate({option: option})"\n            selected="$ctrl.visualizationOption == option">\n            <f-icon ng-class="$ctrl.visualizationIcons[option]"></f-icon>\n            <span>{{::\'fv_visualization_\' + option | lang}}</span>\n        </div>\n    </div>\n\n    <div f-menu-item-submenu="$ctrl.timeframeMenu" f-tip-target\n        ng-if="$ctrl.supported && $ctrl.validTimeframeCount && !$ctrl.isTopLevelSessions"\n        extra-class="{{$ctrl.highlightTimeframe ? \'button-selected-highlight-twice very-slow\' : \'\'}}">\n        <f-icon class="fa-clock-o"></f-icon>\n        <span ng-class="{\'tooltip-hint\': $ctrl.startTimestamp && $ctrl.endTimestamp}">\n            {{\'fv_\' + $ctrl.timeframeOption | lang}}\n        </span>\n        <div f-tip ng-if="$ctrl.startTimestamp && $ctrl.endTimestamp">\n            <table class="table key-value">\n                <tr>\n                    <td>{{::\'Start\' | lang}}</td>\n                    <td>{{$ctrl.startTimestamp * 1000 | fDateTime}}</td>\n                </tr>\n                <tr>\n                    <td>{{::\'End\' | lang}}</td>\n                    <td>{{$ctrl.endTimestamp * 1000 | fDateTime}}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div f-pop-up-menu="$ctrl.timeframeMenu">\n        <div ng-repeat="option in $ctrl.timeframes" f-tip-target\n            f-menu-item-button click="$ctrl.onTimeframeOptionUpdate({option: option.value})"\n            enabled="::!option.disabled"\n            selected="$ctrl.timeframeOption == option.value">\n            <span ng-class="::{\'tooltip-hint\': option.disabled}">\n                {{::\'fv_\' + option.value | lang}}\n            </span>\n            <div f-tip ng-if="::option.disabled">\n                <f-icon class="ftnt-security-fabric"></f-icon>\n                <span>\n                    {{::\'FortiAnalyzer will allow for longer historical time periods\' | lang}}\n                </span>\n            </div>\n        </div>\n        <div f-menu-item-button ng-if="$ctrl.timeframeOption === \'custom\'" selected="::true">\n            {{::\'fv_custom\' | lang}}\n        </div>\n    </div>\n\n    <div class="separator" ng-if="::$ctrl.supported"></div>\n\n    <f-fortiview-device-information ng-if="::$ctrl.supported">\n    </f-fortiview-device-information>\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/fortiview/f-fortiview-device-information.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="menu-item menu-item-padded" f-tip-target>\n    <f-icon class="fa-loading icon-lg" ng-if="$ctrl.loading"></f-icon>\n    <div ng-if="!$ctrl.loading">\n        <div ng-if="$ctrl.topMenuCtrl.isRealtime">\n            <f-icon class="icon-lg" ng-class="::$ctrl.getDiskIcon()"></f-icon>\n        </div>\n        <div ng-if="!$ctrl.topMenuCtrl.isRealtime" f-menu-item-submenu="$ctrl.fortiviewDeviceMenu">\n            <f-icon class="icon-lg" ng-class="$ctrl.getTooltipIcon()"></f-icon>\n        </div>\n        <div f-tip display-options="::{placementType: \'element\', fixed: true}">\n            <span>{{::"FortiView data from" | lang}}:</span>\n            <f-icon ng-class="$ctrl.getDeviceIcon($ctrl.getSelectedDevice())"></f-icon>\n            <span>{{ $ctrl.DEVICE_LABELS[$ctrl.getSelectedDevice()] | lang}}</span>\n            <div class="csf-tree-container">\n                <f-csf-truncated-tree device="$ctrl.csfTopology.thisFortigate">\n                </f-csf-truncated-tree>\n            </div>\n\n            <div ng-if="$ctrl.topMenuCtrl.dependencies.length">\n                <hr>\n                <span>{{::\'This FortiView requires:\' | lang}}</span>\n                <ul ng-if="$ctrl.topMenuCtrl.dependencies.length">\n                    <li ng-repeat="dependency in $ctrl.topMenuCtrl.dependencies">\n                        <a ng-if="dependency.url" ng-href="{{ ::dependency.url | ngURI}}">\n                            {{::dependency.message | lang}}\n                        </a>\n                        <span ng-if="!dependency.url">\n                            {{::dependency.message | lang}}\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n<div f-pop-up-menu="$ctrl.fortiviewDeviceMenu">\n    <div f-menu-item-button ng-repeat="device in ::$ctrl.getSupportedDevices()"\n        click="$ctrl.setDevice(device)" selected="device === $ctrl.getSelectedDevice()">\n        <f-icon ng-class="::$ctrl.getDeviceIcon(device)"></f-icon>\n        <span>{{::$ctrl.DEVICE_LABELS[device] | lang}}</span>\n    </div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){class FortiviewSummaryTable{constructor($scope){$scope.$watch("$ctrl.source",source=>{this.loading=!0,source&&source.then(entry=>{this.entry=entry,this.loading=!1})})}}return function(providers){providers.$compile.component("fFvSummaryTable",{bindings:{source:"<",columns:"<",config:"<",onActionRefresh:"&"},templateUrl:__webpack_require__(912),controller:FortiviewSummaryTable})}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-summary-table.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="drilldown-info-container">\n    <table class="table striped bordered key-value with-header summary-table">\n        <thead>\n            <tr>\n                <th colspan="3">{{::"Summary of" | lang }}</th>\n            </tr>\n        </thead>\n        <tbody f-mutable-entry-formatter columns="$ctrl.columns" collection-limit="::2">\n            <tr ng-repeat="column in $ctrl.columns track by column.id">\n                <td ng-if="::!column.hideKeyInSummaryTable">\n                    {{::(column.langKey || column.id) | lang}}\n                </td>\n\n                <td colspan="{{::column.hideKeyInSummaryTable ? 2 : 1}}">\n                    <div ng-if="!$ctrl.entry && !$ctrl.loading && $index === 0">\n                        <f-icon class="fa-warning"></f-icon>\n                        <span>{{::\'No results\' | lang}}</span>\n                    </div>\n                    <f-mutable-entry-formatted ng-if="$ctrl.entry" entry="$ctrl.entry"\n                        column-id="::column.id">\n                    </f-mutable-entry-formatted>\n                </td>\n                <td>\n                    <f-icon class="fa-loading" ng-class="{\'invisible\': !$ctrl.loading}"></f-icon>\n                </td>\n            </tr>\n        </tbody>\n        <tfoot ng-if="$ctrl.config.hasActions">\n            <tr>\n                <td colspan="2">\n                    <span f-menu-item-submenu="fvActionsDropdown" enabled="$ctrl.entry">\n                        {{::\'Actions\' | lang }}\n                    </span>\n                    <div f-pop-up-menu="fvActionsDropdown">\n                        <f-fv-actions\n                            entry="$ctrl.entry"\n                            report-by="$ctrl.config.reportBy"\n                            on-action-refresh="$ctrl.onActionRefresh()">\n                        </f-fv-actions>\n                    </div>\n                </td>\n                <td>\n                    <f-icon class="fa-loading" ng-class="{\'invisible\': !$ctrl.loading}"></f-icon>\n                </td>\n            </tr>\n        </tfoot>\n    </table>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){class FortiviewTabs extends inject.Collectable{constructor($scope){super(),this.$scope=$scope,this.timePeriodChangeTabs=new Set}$onInit($INJECTABLE$,fortiviewConfig){return()=>{this.$scope.$watchGroup(["$ctrl.tabs","$ctrl.isRealtime"],([tabs,isRealtime])=>{const timePeriodChangeTabs=new Set,disabledTabs=new Set;let oneTabDisabled=!1;(tabs||[]).forEach(tab=>{const tabConfig=fortiviewConfig.getFortiviewConfig(tab.value),willChange=isRealtime&&tabConfig.realtimeDisabled||!isRealtime&&tabConfig.historicalDisabled,isDisabled=tabConfig.realtimeDisabled&&!this.historicalSupport;willChange&&timePeriodChangeTabs.add(tab.value),isDisabled&&(oneTabDisabled=!0,disabledTabs.add(tab.value))}),this.timePeriodChangeTabs=timePeriodChangeTabs,this.disabledTabs=disabledTabs,this.oneTabDisabled=oneTabDisabled})}}shouldHideTab(tab){return this.dashboardWidget&&this.timePeriodChangeTabs.has(tab.value)}clickedTab(tab,event){tab.dropdown?(this.dropdownTab=tab,this.dropdownMenu.toggle({top:event.clientY,left:event.clientX}),event.preventDefault()):(this.dropdownTab=null,this.onChange({tab:tab.value}))}clickedDropdownOption(tab,option){this.dropdownTab=null,this.onChange({tab:tab.value,dropdownOption:option.value})}}return function(providers){providers.$compile.component("fFvTabs",{bindings:{tabs:"<",selectedTab:"<",selectedDropdownOption:"<",onChange:"&",historicalSupport:"<",isRealtime:"<",dashboardWidget:"<"},templateUrl:__webpack_require__(914),controller:FortiviewTabs})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-tabs.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="radio-group">\n    <input type="radio" ng-repeat-start="tab in $ctrl.tabs" ng-if="!$ctrl.shouldHideTab(tab)"\n        id="fv-tab-{{::tab.value}}"\n        ng-checked="tab.value === $ctrl.selectedTab"\n        ng-click="$ctrl.clickedTab(tab, $event)"\n        value="{{::tab.value }}"\n        ng-disabled="$ctrl.disabledTabs.has(tab.value)">\n    <label class="button-lg" ng-repeat-end ng-if="!$ctrl.shouldHideTab(tab)"\n        for="fv-tab-{{::tab.value}}">\n        <f-icon class="fa-clock-o" ng-if="$ctrl.timePeriodChangeTabs.has(tab.value)"></f-icon>\n        {{::tab.langKey | lang}}\n        <span class="caret-down" ng-if="::tab.dropdown"></span>\n    </label>\n</div>\n\n<f-icon class="fa-help-info icon-lg" ng-if="$ctrl.oneTabDisabled" f-tip>\n    <f-icon class="ftnt-security-fabric"></f-icon>\n    <span>{{::\'FortiAnalyzer will enable historical only FortiViews\' | lang}}</span>\n</f-icon>\n\n<div f-pop-up-menu="$ctrl.dropdownMenu">\n\n    <div f-menu-item-button ng-repeat="option in $ctrl.dropdownTab.dropdown"\n        selected="$ctrl.dropdownTab.value === $ctrl.selectedTab && option.value === $ctrl.selectedDropdownOption"\n        enabled="::!option.disabled"\n        click="$ctrl.clickedDropdownOption($ctrl.dropdownTab, option)"\n        f-tip-target>\n        <f-icon ng-class="::option.icon"></f-icon>\n        <span>\n            {{::option.label}}\n            <div f-tip ng-if="::option.disabled">\n                {{::\'Cannot view historical sessions for downstream FortiGates\' | lang}}\n            </div>\n        </span>\n    </div>\n\n    <div class="separator" ng-if="$ctrl.dropdownTab.dropdown.length && $ctrl.dropdownTab.dropdownSecondary.length">\n    </div>\n\n    <div f-menu-item-button ng-repeat="option in $ctrl.dropdownTab.dropdownSecondary"\n        selected="$ctrl.dropdownTab.value === $ctrl.selectedTab && option.value === $ctrl.selectedDropdownOption"\n        enabled="::!option.disabled"\n        click="$ctrl.clickedDropdownOption($ctrl.dropdownTab, option)"\n        f-tip-target>\n        <f-icon ng-class="::option.icon"></f-icon>\n        <span>\n            {{::option.label}}\n            <div f-tip ng-if="::option.disabled">\n                {{::\'Cannot view historical sessions for downstream FortiGates\' | lang}}\n            </div>\n        </span>\n    </div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){const CREATE_EDIT_OBJECTS={};class FortiviewActions extends inject.Collectable{constructor(){super(),this.init()}init($INJECTABLE$,fortiviewConfig){return()=>{this.REPORT_BY=fortiviewConfig.REPORT_BY,this.CREATE_EDIT_OBJECTS=CREATE_EDIT_OBJECTS}}}return function(providers,loader){return providers.$compile.component("fFvActions",{bindings:{entry:"<",entries:"<",reportBy:"<",insideMenu:"<",onActionRefresh:"&"},templateUrl:__webpack_require__(916),controller:FortiviewActions}),loader.initModules([__webpack_require__(917),__webpack_require__(919)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-actions.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-if="$ctrl.entry || $ctrl.insideMenu">\n    <f-fv-action-quarantine\n        ng-if="[$ctrl.REPORT_BY.SOURCE, $ctrl.REPORT_BY.WIFICLIENT, $ctrl.REPORT_BY.ENDPOINT_DEVICE, $ctrl.REPORT_BY.IOC].includes($ctrl.reportBy)"\n        entry="$ctrl.entry" entries="$ctrl.entries" inside-menu="$ctrl.insideMenu"\n        on-action-refresh="$ctrl.onActionRefresh()">\n    </f-fv-action-quarantine>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject){class FortiviewActionQuarantine extends inject.Collectable{constructor($scope){super(),this._$scope=$scope}$onInit(){this._$scope.$watchGroup(["$ctrl.entries","$ctrl.entry"],([entries,entry])=>{!(entries=entries||[]).length&&entry&&entries.push(entry);let canQuarantine=!1,isQuarantined=!1,canBan=!1,isBanned=!1;if(entries.length)for(entry of(canQuarantine=!0,isQuarantined=!0,canBan=!0,isBanned=!0,entries))entry.canQuarantine()?canBan=!1:canQuarantine=!1,entry.isQuarantined?canQuarantine=!1:isQuarantined=!1,entry.isBanned?canBan=!1:isBanned=!1;this.canQuarantine=canQuarantine,this.isQuarantined=isQuarantined,this.canBan=canBan,this.isBanned=isBanned})}quarantine(){this._quarantine()}removeQuarantine(){this._quarantine(!0)}banIP(){this._banIP()}removeIPBan(){this._banIP(!0)}_quarantine($INJECTABLE$,$rootScope,slide,lang){return remove=>{const scope=$rootScope.$new(!0);scope.entries=(this.entries||[this.entry]).map(entry=>entry.createQuarantineRequestEntry()),scope.remove=remove,slide.open({template:'<f-quarantine-dialog entries="::entries" remove-mode="::remove"></f-quarantine-dialog>',parentScope:scope,options:{fullHeight:!0,title:lang(remove?"Remove Quarantine":"Quarantine Host")}}).finally(()=>{scope.$destroy()})}}_banIP($INJECTABLE$,$rootScope,slide,lang){return remove=>{const scope=$rootScope.$new(!0);scope.entries=(this.entries||[this.entry]).map(entry=>entry.createBanIPRequestEntry()),scope.remove=remove,slide.open({template:'<f-ban-ip-dialog entries="::entries" remove-mode="::remove"></f-ban-ip-dialog>',parentScope:scope,options:{fullHeight:!0,title:lang(remove?"Remove IP Ban":"Ban IP")}}).finally(()=>{scope.$destroy()})}}}return function(providers){providers.$compile.component("fFvActionQuarantine",{bindings:{entry:"<",entries:"<",onActionRefresh:"&"},templateUrl:__webpack_require__(918),controller:FortiviewActionQuarantine})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-action-quarantine.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button ng-if="!$ctrl.isQuarantined" enabled="$ctrl.canQuarantine"\n    click="$ctrl.quarantine()" f-tip-target>\n    <f-icon class="ftnt-quarantine"></f-icon>\n    <span ng-class="{\'tooltip-hint\': !$ctrl.canQuarantine}">\n        {{::\'Quarantine Host\' | lang}}\n    </span>\n\n    <div f-tip ng-if="!$ctrl.canQuarantine">\n        <f-icon class="ftnt-security-fabric"></f-icon>\n        <span>{{::\'Access layer quarantine is unavailable for this host. It is only allowed for devices behind a FortiSwitch or FortiAP.\' | lang}}</span>\n    </div>\n</div>\n\n<div f-menu-item-button ng-if="$ctrl.isQuarantined" click="$ctrl.removeQuarantine()">\n    <f-icon class="ftnt-quarantine"></f-icon>\n    <span>{{::\'Remove Quarantine\' | lang}}</span>\n</div>\n\n<div f-menu-item-button ng-if="$ctrl.canBan && !$ctrl.isBanned" click="$ctrl.banIP()">\n    <f-icon class="fa-blocked"></f-icon>\n    <span>{{::\'Ban IP\' | lang}}</span>\n</div>\n\n<div f-menu-item-button ng-if="$ctrl.isBanned" click="$ctrl.removeIPBan()">\n    <f-icon class="fa-blocked"></f-icon>\n    <span>{{::\'Remove IP Ban\' | lang}}</span>\n</div>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(54),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,select_setup,ftnt_shared){const SOURCES=ftnt_shared.Omniselect.prototype.SOURCES,editCreate=select_setup.inlineEditCreate,findEntry=ftnt_shared.Omniselect.getSourceEntry;class FortiviewActionObject extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,$scope){return()=>{$scope.$watchGroup(["$ctrl.entries","$ctrl.entry"],([entries,entry])=>{this._entry=entry||entries&&entries[0]})}}getSourceName($INJECTABLE$,lang){return()=>{if(this.objectConfig.lang)return lang(this.objectConfig.lang).toString();const source=SOURCES[this.objectConfig.datasource];return source?source.name:lang("obj").toString()}}openEditCreate(){const cfg=this.objectConfig;if(this._entry){const entryID=cfg.getKey(this._entry);let datasource=cfg.datasource;datasource&&"function"==typeof datasource&&(datasource=datasource(this._entry)),findEntry(entryID,datasource).then(entry=>{const getParams=cfg.getParams;let search={};cfg.alwaysReturnEntry&&(entry=Object.assign(entry||{},{q_origin_key:entryID,datasource:datasource})),!cfg.exists(this._entry)&&getParams&&"function"==typeof getParams&&(search=getParams(this._entry)),editCreate(datasource,entry,search).then(()=>{ftnt_shared.Omniselect.notifySourceChanged(datasource),this.onActionRefresh()})})}}}return function(providers){providers.$compile.component("fFvActionObject",{bindings:{objectConfig:"<",entry:"<",entries:"<",onActionRefresh:"&"},templateUrl:__webpack_require__(920),controller:FortiviewActionObject})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/f-fv-action-object.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-if="$ctrl._entry && $ctrl.objectConfig.show($ctrl._entry)">\n    <div f-menu-item-button ng-if="$ctrl.objectConfig.exists($ctrl._entry)" click="$ctrl.openEditCreate()">\n        <f-icon class="fa-edit"></f-icon>\n        <span>{{::\'Edit {0}\' | lang:[$ctrl.getSourceName()]}}</span>\n    </div>\n    <div f-menu-item-button ng-if="!$ctrl.objectConfig.exists($ctrl._entry)" click="$ctrl.openEditCreate()">\n        <f-icon class="fa-pencil"></f-icon>\n        <span>{{::\'Create {0}\' | lang:[$ctrl.getSourceName()]}}</span>\n    </div>\n</div>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(10),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,$,ftnt_shared){function D3Controller($scope,$element,$q,$window,$timeout){this.id="d3Chart"+Math.floor(1+65536*Math.random()),this.$scope=$scope,this.$element=$element,this.$q=$q,this.$window=$window,this.$timeout=$timeout,this.promises=[this.requireComponents().then(function(){var parent=this.d3.select(this.$element[0]);this.scrollable&&(parent=parent.append("div").attr("class","d3-chart-scrollbox")),this.svg=parent.append("svg"),this.scrollable||this.svg.attr("class","no-scroll"),this.color=this.d3.scaleOrdinal(this.d3.schemePaired),this.stroke=function(value,data){return this.d3.rgb(this.color(value,data)).darker(.5)}.bind(this)}.bind(this))]}return D3Controller.prototype.init=function(){if(this.width=this.$element.width(),this.height=this.$element.height(),this.$element.addClass("d3-chart"),this.$loading=angular.element('<div class="d3-chart-loading"><f-icon class="fa-loading icon-xxxl"></f-icon></div>').appendTo(this.$element),this.setupClick(),angular.isFunction(this.$scope.tooltipFormatter)){var tooltipFormatter=this.tooltipBindFn=this.createTooltipBindFn();if(angular.isFunction(this.$scope.tooltipCreateBindFn)){var tooltipCreateBindFn=this.$scope.tooltipCreateBindFn;this.tooltipBindFn=function(d){return tooltipCreateBindFn(d,this)||tooltipFormatter.call(this,d)}}}else this.tooltipBindFn=angular.noop;this.ready=this.$q.all(this.promises).then(function(){this.setupWatch()}.bind(this))},D3Controller.prototype.requireComponents=function(extra){var required={d3:__webpack_require__(48)};return Object.assign(this,required,extra),Promise.resolve()},D3Controller.prototype.setupClick=function(){this.clickSupported=!1,this.clickFn=function(d){let e=this.d3.event;this.clickSupported&&this.$scope.$apply(function(){var data=d.data||d||{};this.$scope.click(data.entry||data,e)}.bind(this))}.bind(this)},D3Controller.prototype.tooltipDataGetter=function(d){return d.data?d.data:d},D3Controller.prototype.tooltipColorKeyGetter=function(d){return d.data?d.data.name:d.name},D3Controller.prototype.createTooltipBindFn=function(content){this.$tooltip||(this.$tooltip=new ftnt_shared.Tooltip({class:"d3-tooltip",padContent:!0}));var that=this;return function(d){var $this=$(this);$this.off("mouseleave.tooltip").on("mouseleave.tooltip",that.$tooltip.hide.bind(that.$tooltip)),$this.off("mouseenter.tooltip").on("mouseenter.tooltip",function(event){var $div=$("<div></div>"),html=angular.isFunction(content)?content(d,$div):angular.isString(content)?content:that.$scope.tooltipFormatter(that.tooltipDataGetter(d));$div.append(html),that.$tooltip.show($div[0],event.pageX,event.pageY)})}},D3Controller.prototype.setupWatch=function(){var motionCheck=function(that,lastWidth,lastHeight){var width=that.$element.width(),height=that.$element.height();return width===lastWidth&&height===lastHeight?(that.width=width,that.height=height,that.motionCheck=null,that.$scope.data&&that.render(that.$scope.data,!0)):that.$timeout(motionCheck,100,!0,that,width,height),!0};this.$scope.$watch(function(){return{width:this.$element.width(),height:this.$element.height()}}.bind(this),function(size,oldSize){size.width===oldSize.width&&size.height===oldSize.height||(this.motionCheck=this.motionCheck||motionCheck(this))}.bind(this),!0),motionCheck(this),this.$scope.$watch("data",function(data){this.render(data)}.bind(this)),this.$scope.$watch("click",function(click){this.clickSupported=angular.isFunction(click),this.render(this.$scope.data)}.bind(this)),angular.element(this.$window).on("resize."+this.id,function(){this.motionCheck=this.motionCheck||motionCheck(this)}.bind(this)),this.$scope.$on("$destroy",function(){angular.element(this.$window).off("resize."+this.id),this.$tooltip&&this.$tooltip.destroy()}.bind(this))},D3Controller.prototype.render=function(data,ignoreLoading){ignoreLoading||this.$loading.toggleClass("hidden",!1),this.$q.when(data,function(resolvedData){null!=resolvedData&&this.width&&this.height&&(this.$loading.toggleClass("hidden",!0),this.update(resolvedData))}.bind(this))},D3Controller}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_RESULT__;!function(){function stitchArcs(topology,arcs){var stitchedArcs={},fragmentByStart={},fragmentByEnd={},fragments=[],emptyIndex=-1;function flush(fragmentByEnd,fragmentByStart){for(var k in fragmentByEnd){var f=fragmentByEnd[k];delete fragmentByStart[f.start],delete f.start,delete f.end,f.forEach(function(i){stitchedArcs[i<0?~i:i]=1}),fragments.push(f)}}return arcs.forEach(function(i,j){var t,arc=topology.arcs[i<0?~i:i];arc.length<3&&!arc[1][0]&&!arc[1][1]&&(t=arcs[++emptyIndex],arcs[emptyIndex]=i,arcs[j]=t)}),arcs.forEach(function(i){var f,g,e=function(i){var p1,arc=topology.arcs[i<0?~i:i],p0=arc[0];topology.transform?(p1=[0,0],arc.forEach(function(dp){p1[0]+=dp[0],p1[1]+=dp[1]})):p1=arc[arc.length-1];return i<0?[p1,p0]:[p0,p1]}(i),start=e[0],end=e[1];if(f=fragmentByEnd[start])if(delete fragmentByEnd[f.end],f.push(i),f.end=end,g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else if(f=fragmentByStart[end])if(delete fragmentByStart[f.start],f.unshift(i),f.start=start,g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else fragmentByStart[(f=[i]).start=start]=fragmentByEnd[f.end=end]=f}),flush(fragmentByEnd,fragmentByStart),flush(fragmentByStart,fragmentByEnd),arcs.forEach(function(i){stitchedArcs[i<0?~i:i]||fragments.push([i])}),fragments}function meshArcs(topology,o,filter){var arcs=[];if(arguments.length>1){var geom,geomsByArc=[];function arc(i){var j=i<0?~i:i;(geomsByArc[j]||(geomsByArc[j]=[])).push({i:i,g:geom})}function line(arcs){arcs.forEach(arc)}function polygon(arcs){arcs.forEach(line)}var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs){arcs.forEach(polygon)}};!function geometry(o){"GeometryCollection"===o.type?o.geometries.forEach(geometry):o.type in geometryType&&(geom=o,geometryType[o.type](o.arcs))}(o),geomsByArc.forEach(arguments.length<3?function(geoms){arcs.push(geoms[0].i)}:function(geoms){filter(geoms[0].g,geoms[geoms.length-1].g)&&arcs.push(geoms[0].i)})}else for(var i=0,n=topology.arcs.length;i<n;++i)arcs.push(i);return{type:"MultiLineString",arcs:stitchArcs(topology,arcs)}}function mergeArcs(topology,objects){var polygonsByArc={},polygons=[],components=[];function register(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){(polygonsByArc[arc=arc<0?~arc:arc]||(polygonsByArc[arc]=[])).push(polygon)})}),polygons.push(polygon)}function exterior(ring){return function(ring){var a,i=-1,n=ring.length,b=ring[n-1],area=0;for(;++i<n;)a=b,b=ring[i],area+=a[0]*b[1]-a[1]*b[0];return.5*area}(object(topology,{type:"Polygon",arcs:[ring]}).coordinates[0])>0}return objects.forEach(function(o){"Polygon"===o.type?register(o.arcs):"MultiPolygon"===o.type&&o.arcs.forEach(register)}),polygons.forEach(function(polygon){if(!polygon._){var component=[],neighbors=[polygon];for(polygon._=1,components.push(component);polygon=neighbors.pop();)component.push(polygon),polygon.forEach(function(ring){ring.forEach(function(arc){polygonsByArc[arc<0?~arc:arc].forEach(function(polygon){polygon._||(polygon._=1,neighbors.push(polygon))})})})}}),polygons.forEach(function(polygon){delete polygon._}),{type:"MultiPolygon",arcs:components.map(function(polygons){var arcs=[];if(polygons.forEach(function(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){polygonsByArc[arc<0?~arc:arc].length<2&&arcs.push(arc)})})}),arcs=stitchArcs(topology,arcs),(n=arcs.length)>1)for(var t,sgn=exterior(polygons[0][0]),i=0;i<n;++i)if(sgn===exterior(arcs[i])){t=arcs[0],arcs[0]=arcs[i],arcs[i]=t;break}return arcs})}}function feature(topology,o){var f={type:"Feature",id:o.id,properties:o.properties||{},geometry:object(topology,o)};return null==o.id&&delete f.id,f}function object(topology,o){var absolute=transformAbsolute(topology.transform),arcs=topology.arcs;function arc(i,points){points.length&&points.pop();for(var p,a=arcs[i<0?~i:i],k=0,n=a.length;k<n;++k)points.push(p=a[k].slice()),absolute(p,k);i<0&&function(array,n){var t,j=array.length,i=j-n;for(;i<--j;)t=array[i],array[i++]=array[j],array[j]=t}(points,n)}function point(p){return p=p.slice(),absolute(p,0),p}function line(arcs){for(var points=[],i=0,n=arcs.length;i<n;++i)arc(arcs[i],points);return points.length<2&&points.push(points[0].slice()),points}function ring(arcs){for(var points=line(arcs);points.length<4;)points.push(points[0].slice());return points}function polygon(arcs){return arcs.map(ring)}var geometryType={Point:function(o){return point(o.coordinates)},MultiPoint:function(o){return o.coordinates.map(point)},LineString:function(o){return line(o.arcs)},MultiLineString:function(o){return o.arcs.map(line)},Polygon:function(o){return polygon(o.arcs)},MultiPolygon:function(o){return o.arcs.map(polygon)}};return function geometry(o){var t=o.type;return"GeometryCollection"===t?{type:t,geometries:o.geometries.map(geometry)}:t in geometryType?{type:t,coordinates:geometryType[t](o)}:null}(o)}function bisect(a,x){for(var lo=0,hi=a.length;lo<hi;){var mid=lo+hi>>>1;a[mid]<x?lo=mid+1:hi=mid}return lo}function cartesianTriangleArea(triangle){var a=triangle[0],b=triangle[1],c=triangle[2];return Math.abs((a[0]-c[0])*(b[1]-a[1])-(a[0]-b[0])*(c[1]-a[1]))}function compareArea(a,b){return a[1][2]-b[1][2]}function transformAbsolute(transform){if(!transform)return noop;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(point,i){i||(x0=y0=0),point[0]=(x0+=point[0])*kx+dx,point[1]=(y0+=point[1])*ky+dy}}function noop(){}void 0===(__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof(__WEBPACK_AMD_DEFINE_FACTORY__={version:"1.6.18",mesh:function(topology){return object(topology,meshArcs.apply(this,arguments))},meshArcs:meshArcs,merge:function(topology){return object(topology,mergeArcs.apply(this,arguments))},mergeArcs:mergeArcs,feature:function(topology,o){return"GeometryCollection"===o.type?{type:"FeatureCollection",features:o.geometries.map(function(o){return feature(topology,o)})}:feature(topology,o)},neighbors:function(objects){var indexesByArc={},neighbors=objects.map(function(){return[]});function line(arcs,i){arcs.forEach(function(a){a<0&&(a=~a);var o=indexesByArc[a];o?o.push(i):indexesByArc[a]=[i]})}function polygon(arcs,i){arcs.forEach(function(arc){line(arc,i)})}var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs,i){arcs.forEach(function(arc){polygon(arc,i)})}};for(var i in objects.forEach(function geometry(o,i){"GeometryCollection"===o.type?o.geometries.forEach(function(o){geometry(o,i)}):o.type in geometryType&&geometryType[o.type](o.arcs,i)}),indexesByArc)for(var indexes=indexesByArc[i],m=indexes.length,j=0;j<m;++j)for(var k=j+1;k<m;++k){var n,ij=indexes[j],ik=indexes[k];(n=neighbors[ij])[i=bisect(n,ik)]!==ik&&n.splice(i,0,ik),(n=neighbors[ik])[i=bisect(n,ij)]!==ij&&n.splice(i,0,ij)}return neighbors},presimplify:function(topology,triangleArea){var absolute=transformAbsolute(topology.transform),relative=function(transform){if(!transform)return noop;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(point,i){i||(x0=y0=0);var x1=(point[0]-dx)/kx|0,y1=(point[1]-dy)/ky|0;point[0]=x1-x0,point[1]=y1-y0,x0=x1,y0=y1}}(topology.transform),heap=function(){var heap={},array=[],size=0;function up(object,i){for(;i>0;){var j=(i+1>>1)-1,parent=array[j];if(compareArea(object,parent)>=0)break;array[parent._=i]=parent,array[object._=i=j]=object}}function down(object,i){for(;;){var r=i+1<<1,l=r-1,j=i,child=array[j];if(l<size&&compareArea(array[l],child)<0&&(child=array[j=l]),r<size&&compareArea(array[r],child)<0&&(child=array[j=r]),j===i)break;array[child._=i]=child,array[object._=i=j]=object}}return heap.push=function(object){return up(array[object._=size]=object,size++),size},heap.pop=function(){if(!(size<=0)){var object,removed=array[0];return--size>0&&(object=array[size],down(array[object._=0]=object,0)),removed}},heap.remove=function(removed){var object,i=removed._;if(array[i]===removed)return i!==--size&&(compareArea(object=array[size],removed)<0?up:down)(array[object._=i]=object,i),i},heap}();triangleArea||(triangleArea=cartesianTriangleArea);function update(triangle){heap.remove(triangle),triangle[1][2]=triangleArea(triangle),heap.push(triangle)}return topology.arcs.forEach(function(arc){for(var triangle,p,triangles=[],maxArea=0,i=0,n=arc.length;i<n;++i)p=arc[i],absolute(arc[i]=[p[0],p[1],1/0],i);for(i=1,n=arc.length-1;i<n;++i)(triangle=arc.slice(i-1,i+2))[1][2]=triangleArea(triangle),triangles.push(triangle),heap.push(triangle);for(i=0,n=triangles.length;i<n;++i)(triangle=triangles[i]).previous=triangles[i-1],triangle.next=triangles[i+1];for(;triangle=heap.pop();){var previous=triangle.previous,next=triangle.next;triangle[1][2]<maxArea?triangle[1][2]=maxArea:maxArea=triangle[1][2],previous&&(previous.next=next,previous[2]=triangle[2],update(previous)),next&&(next.previous=previous,next[0]=triangle[0],update(next))}arc.forEach(relative)}),topology}})?__WEBPACK_AMD_DEFINE_FACTORY__.call(exports,__webpack_require__,exports,module):__WEBPACK_AMD_DEFINE_FACTORY__)||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(62),__webpack_require__(2),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fObjects){const STATUS_SEVERITY_CLASS={pending:"severity-low",clean:"severity-low","low risk":"severity-low","medium risk":"severity-medium","high risk":"severity-high",malicious:"severity-critical"},STATUS_LANG_KEY={"submission failed":"submission_failed",pending:"pending",unknown:"unknown",clean:"clean","low risk":"low","medium risk":"medium","high risk":"high",malicious:"malicious"},SUMMARY_KEYS={general:["AuditTime","DigitalSigned","GuestOS","Source"],Static:["Date","DigitalSigned","Type"]};class SandboxFileAnalysisModel{constructor(data){this.parse(data)}parse(data){data.AuditTime&&(this.auditTime=new Date(data.AuditTime)),this.digitallySigned=data.DigitalSigned,this.guestOS=data.GuestOS,this.source=data.Source,this.features=data.Features,data.SuspiciousAct&&(this.suspiciousActions=Object.values(data.SuspiciousAct).map(action=>({reason:action[0].Reason,rating:action[0].Rating}))),this.filesCreated=data.CreateFiles,this.filesModified=data.ModifyFiles,this.processesCreated=data.CreateProcs;const staticAnalysis=data.Static;staticAnalysis&&(this.static={digitallySigned:staticAnalysis.DigitalSigned,type:staticAnalysis.Type,versionInfo:staticAnalysis.version_info,filesize:staticAnalysis.Size,features:staticAnalysis.Features,suspiciousActions:staticAnalysis.SuspiciousAct&&staticAnalysis.SuspiciousAct.map(action=>({indicator:action.indicator,type:action.type})),url:staticAnalysis.URL},staticAnalysis.Date&&(this.static.date=1e3*parseInt(staticAnalysis.Date.replace("0x",""),16)))}}function SandboxFileDetails($scope,$routeParams,injector,state){this.STATUS_SEVERITY_CLASS=STATUS_SEVERITY_CLASS,this.STATUS_LANG_KEY=STATUS_LANG_KEY,this.SUMMARY_KEYS=SUMMARY_KEYS,injector.injectMarked(this,{$scope:$scope}),this.device=this.logDevice||state.getPreferredLogDevice(),$scope.$watch("$ctrl.sandboxFile",sandboxFile=>this.load(sandboxFile)),$scope.$watch("$ctrl.currentScanID",function(currentScanID){currentScanID&&(this.currentScanSubmission=this.scanSubmissions[currentScanID],this.reports=this.currentScanSubmission.reports,this.reportOptions=this.reports.map(reportID=>({id:reportID,label:reportID.split(".")[1]||reportID})),this.currentReportOption=this.reportOptions[0],this.currentReportID=this.reports[0])}.bind(this)),$scope.$watch("$ctrl.currentReportID",function(currentReportID){currentReportID&&(this.currentReport=this.currentScanSubmission[currentReportID])}.bind(this))}return SandboxFileDetails.prototype.load=inject.mark(()=>(async function(sandboxFile){if(sandboxFile&&sandboxFile.meta){this.checksum=sandboxFile.checksum,this.startTime=sandboxFile.meta.startTime,this.endTime=sandboxFile.meta.endTime,this.fortigate=sandboxFile.meta.fortigate[0],this.loading=!0;try{await this.get()}catch(e){this.failure=!0}finally{this.loading=!1}}else this.failure=!0})),SandboxFileDetails.prototype.get=inject.mark(($scope,$q,$http,fortiviewData,fortiviewConfig,csfTopology,ApiFilter)=>(function(){const fortigate=csfTopology.fortigateMapping[this.fortigate]||csfTopology.thisFortigate,sandboxFileFortiViewData=fortiviewData.get({scope:$scope,reportBy:fortiviewConfig.REPORT_BY.SANDBOX_FILE,filters:{checksum:this.checksum},startTime:this.startTime,endTime:this.endTime}),detailsUrl=fortigate.createCSFURI("/api/v2/monitor/fortiview/sandbox-file-details"),sandboxFileDetails=$http.get(detailsUrl,{params:{checksum:this.checksum}}).then(response=>{let scanSubmissions=response.data.results.scan_submit;return Object.keys(scanSubmissions).forEach(submissionID=>{const scanSubmission=scanSubmissions[submissionID];scanSubmission.reports=Object.keys(scanSubmission).filter(submissionKey=>{return"object"==typeof scanSubmission[submissionKey]}).map(submissionKey=>{const submissionValue=scanSubmission[submissionKey];return scanSubmission[submissionKey]=new SandboxFileAnalysisModel(submissionValue),submissionKey})}),scanSubmissions}),avLogsForChecksum=fortigate===csfTopology.thisFortigate&&$http.get(`/api/v2/log/${this.device}/virus/`,{params:{filter:[new ApiFilter("analyticscksum",[this.checksum]),new ApiFilter("_metadata.timestamp",[1e3*this.startTime],ApiFilter.OP.GREATER_OR_EQUAL)].map(apiFilter=>apiFilter.toString())}});return $q.all({sandboxFileDetails:sandboxFileDetails,sandboxFileFortiViewData:sandboxFileFortiViewData,avLogsForChecksum:avLogsForChecksum}).then(responses=>{this.sandboxFileFortiViewData=responses.sandboxFileFortiViewData.results.details[0],this.scanSubmissions=responses.sandboxFileDetails,this.scanSubmissionsIDs=Object.keys(this.scanSubmissions),this.currentScanID=this.scanSubmissionsIDs[0],responses.avLogsForChecksum&&this.sandboxFileFortiViewData&&(this.otherTargets=responses.avLogsForChecksum.data.results.filter(log=>this.sandboxFileFortiViewData.sourceAddress!==log.srcip).filter(fObjects.unique("srcip")))})})),function(providers,loader){return providers.$compile.component("fSandboxFileDetails",{bindings:{logDevice:"<?",sandboxFile:"<"},templateUrl:__webpack_require__(924),controller:SandboxFileDetails}),loader.initModules([__webpack_require__(453)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/fortiview/sandbox/f-sandbox-file-details.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="flex-centered absolute-fill" ng-if="$ctrl.loading">\n    <f-icon class="fa-loading icon-xxl"></f-icon>\n</div>\n\n<div class="flex-column absolute-fill" ng-if="!$ctrl.loading">\n    <div class="menu-bar">\n        <div class="right-menu-items">\n            <div ng-if="$ctrl.scanSubmissionsIDs.length > 1">\n                <span f-lang="Scans Submitted:"></span>\n                <select ng-options="scanID for scanID in $ctrl.scanSubmissionsIDs" ng-model="$ctrl.currentScanID">\n                </select>\n            </div>\n\n            <div f-menu-item-submenu="$ctrl.analysisMenu" ng-show="$ctrl.reportOptions.length">\n                {{ $ctrl.currentReportOption.label }}\n            </div>\n            <div f-pop-up-menu="$ctrl.analysisMenu">\n                <div ng-repeat="reportOption in $ctrl.reportOptions"\n                    f-menu-item-button\n                    click="$ctrl.currentReportOption = reportOption; $ctrl.currentReportID = reportOption.id"\n                    selected="$ctrl.currentReportOption == reportOption">\n                    <span>{{:: reportOption.label }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="flex-grow containing-block">\n        <div class="dialog">\n            <div class="content">\n                <section f-with="$ctrl.sandboxFileFortiViewData.sandboxStatus as sandboxStatus">\n                    <table class="table striped bordered key-value with-header">\n                        <thead>\n                            <tr>\n                                <th colspan="2" f-lang="Summary of"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-if="$ctrl.failure">\n                                <td colspan="2">\n                                    <f-icon class="fa-warning"></f-icon>\n                                    <span f-lang="Failed to load Sandbox Analysis details"></span>\n                                </td>\n                            </tr>\n                            <tr ng-if="!$ctrl.failure && $ctrl.sandboxFileFortiViewData">\n                                <td f-lang="filename"></td>\n                                <td>{{ ::$ctrl.sandboxFileFortiViewData.filename }}</td>\n                            </tr>\n                            <tr ng-if="!$ctrl.failure && $ctrl.sandboxFileFortiViewData">\n                                <td f-lang="Verdict"></td>\n                                <td>\n                                    <span class="severity-message wide"\n                                        ng-class="$ctrl.STATUS_SEVERITY_CLASS[sandboxStatus]">\n                                        {{ \'Fortiview::Sandbox::Status::\' + $ctrl.STATUS_LANG_KEY[sandboxStatus] | lang }}</span>\n                                </td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.auditTime">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::AuditTime"></td>\n                                <td>{{ $ctrl.currentReport.auditTime | fDateTime }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.DigitalSigned">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::DigitalSigned"></td>\n                                <td>{{ $ctrl.currentReport.digitallySigned ? \'yes\' : \'no\' | lang}}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.guestOS">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::GuestOS"></td>\n                                <td>{{ $ctrl.currentReport.guestOS }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.filesize">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::GuestOS"></td>\n                                <td>{{ $ctrl.currentReport.guestOS }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.source">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::Source"></td>\n                                <td>{{ $ctrl.currentReport.source }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.static.filesize">\n                                <td f-lang="filesize"></td>\n                                <td>{{ $ctrl.currentReport.static.filesize | bytes }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.static.date">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::Static::Date"></td>\n                                <td>{{ $ctrl.currentReport.static.date | fDateTime }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.static.digitallySigned">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::Static::DigitalSigned"></td>\n                                <td>{{ $ctrl.currentReport.static.digitallySigned ? \'yes\' : \'no\' | lang}}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.currentReport.static.type">\n                                <td f-lang="Fortiview::Sandbox::FileDetail::Static::Type"></td>\n                                <td>{{ $ctrl.currentReport.static.type }}</td>\n                            </tr>\n                            <tr ng-if="$ctrl.fortigate">\n                                <td f-lang="FortiGate"></td>\n                                <td><f-object-formatted mkey="{{::$ctrl.fortigate}}" datasource="csfFortiGates"></f-object-formatted></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </section>\n\n                <label class="section-title" ng-show="!$ctrl.failure">\n                    <input type="checkbox" class="visual-toggle" id="show-details-summary" ng-model="showDetailsSummary">\n                    <label for="show-details-summary"></label>\n                    <h2 f-lang="Details"></h2>\n                </label>\n                <section ng-show="showDetailsSummary">\n                    <table class="table bordered striped key-value"\n                        ng-repeat="versionInfo in $ctrl.currentReport.static.versionInfo">\n                        <tr ng-repeat="(k, v) in versionInfo" ng-show="v != null">\n                            <td>{{ ::k }}</td><td>{{ ::v }}</td>\n                        </tr>\n                    </table>\n                </section>\n\n                \x3c!-- Display AV logs for other addresses that have downloaded the same file --\x3e\n                <label class="section-title" ng-show="!$ctrl.failure && $ctrl.otherTargets.length">\n                    <input type="checkbox" class="visual-toggle" id="show-other-targets" ng-model="showOtherTargets">\n                    <label for="show-other-targets"></label>\n                    <h2 f-lang="Other Targets"></h2>\n                </label>\n                <section ng-show="showOtherTargets">\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="ip"></th>\n                                <th f-lang="user"></th>\n                                <th f-lang="time"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="target in $ctrl.otherTargets">\n                                <td>{{ ::target.srcip }}</td>\n                                <td>{{ ::target.user }}</td>\n                                <td>{{ ::target._metadata.timestamp | fDateTime }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </section>\n\n                \x3c!-- Does not seem to be included in analysis anymore? --\x3e\n                <label class="section-title" ng-show="!$ctrl.failure && $ctrl.currentReport.static.url">\n                    <input type="checkbox" class="visual-toggle" id="show-urls" ng-model="showURLs">\n                    <label for="show-urls"></label>\n                    <h2 f-lang="Fortiview::Sandbox::Analysis::URLS"></h2>\n                </label>\n                <section ng-show="showURLs">\n                    <ul class="behavior-summary">\n                        <li ng-repeat="url in $ctrl.currentReport.static.url">{{ ::url }}</li>\n                    </ul>\n                </section>\n\n                <label class="section-title" ng-show="!$ctrl.failure">\n                    <input type="checkbox" class="visual-toggle" id="show-behaviours" ng-model="showBehaviors">\n                    <label for="show-behaviours"></label>\n                    <h2 f-lang="Fortiview::Sandbox::Analysis::Suspicious Actions"></h2>\n                </label>\n                <section ng-show="showBehaviors">\n                    <h4 f-lang="Fortiview::Sandbox::Analysis::Static Analysis"></h4>\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="Fortiview::Sandbox::Analysis::Indicator"></th>\n                                <th f-lang="Type"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="action in $ctrl.currentReport.static.suspiciousActions | orderBy:\'-rating\'">\n                                <td>{{ ::action.indicator }}</td>\n                                <td>{{ ::action.type }}</td>\n                            </tr>\n                            <tr ng-if="!($ctrl.currentReport.static.suspiciousActions && $ctrl.currentReport.static.suspiciousActions.length)">\n                                <td colspan="2" f-lang="No results"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <h4 f-lang="Fortiview::Sandbox::Analysis::FortiSandbox Analysis"></h4>\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="reason"></th>\n                                <th f-lang="rating"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="action in $ctrl.currentReport.suspiciousActions | orderBy:\'-rating\'">\n                                <td>{{ ::action.reason }}</td>\n                                <td>{{ ::action.rating }}</td>\n                            </tr>\n                            <tr ng-if="!($ctrl.currentReport.suspiciousActions && $ctrl.currentReport.suspiciousActions.length)">\n                                <td colspan="2" f-lang="No results"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <h4 f-lang="Fortiview::Sandbox::Analysis::Files Created"></h4>\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="Name"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="action in $ctrl.currentReport.filesCreated">\n                                <td>{{ ::action.Name }}</td>\n                            </tr>\n                            <tr ng-if="!($ctrl.currentReport.filesCreated && $ctrl.currentReport.filesCreated.length)">\n                                <td f-lang="No results"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <h4 f-lang="Fortiview::Sandbox::Analysis::Files Modified"></h4>\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="Name"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="action in $ctrl.currentReport.filesModified">\n                                <td>{{ ::action.Name }}</td>\n                            </tr>\n                            <tr ng-if="!($ctrl.currentReport.filesModified && $ctrl.currentReport.filesModified.length)">\n                                <td f-lang="No results"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <h4 f-lang="Fortiview::Sandbox::Analysis::Processes Created"></h4>\n                    <table class="table bordered striped">\n                        <thead>\n                            <tr>\n                                <th f-lang="ft_exe"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="action in $ctrl.currentReport.processesCreated">\n                                <td>{{ ::action.exe }}</td>\n                            </tr>\n                            <tr ng-if="!($ctrl.currentReport.processesCreated && $ctrl.currentReport.processesCreated.length)">\n                                <td f-lang="No results"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </section>\n            </div>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},,,,,,,,,,,,,,,,function(module,exports){var path="/migadmin/ng/extension_devices/f-upgradable-extension-device-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true" loading="$ctrl.loading">\n    <dialog-content>\n        <section>\n            <div class="info-message">\n                <f-icon class="fa-info-circle"></f-icon>\n                <div class="message-content"\n                    f-lang="Updating the firmware will cause the devices to reboot."></div>\n            </div>\n        </section>\n        <section>\n            <f-field>\n                <field-label>\n                    <span>\n                        {{:: \'upgrade_from\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <f-radio-group>\n                        <input type="radio" ng-model="$ctrl.firmwareSource"\n                            ng-repeat="source in $ctrl.firmwareSources"\n                            radio-label="{{::source.name | lang}}"\n                            value="{{ source.value }}"\n                            ng-disabled="(source.value === \'fortiguard\' && $ctrl.disableFortiGuardUpgrade) ||\n                                         $ctrl.upgradeStatus !== $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                    </f-radio-group>\n                </field-value>\n            </f-field>\n            <f-field ng-show="$ctrl.firmwareSource === \'upload\'">\n                <field-label>\n                    {{:: \'Select File\' | lang }}\n                </field-label>\n                <field-value>\n                    <input type="file" name="extension-device-firmware" id="extension-device-firmware"\n                        f-file-input files-changed="$ctrl.onFileSelect($files[0])"\n                        ng-disabled="$ctrl.upgradeStatus !== $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                    <label for="extension-device-firmware">\n                        <f-icon class="fa-plus-circle"></f-icon>\n                        <span ng-if="$ctrl.selectedFile">{{ $ctrl.selectedFile.name }}</span>\n                        <span ng-if="!$ctrl.selectedFile">{{:: \'Browse\' | lang }}</span>\n                    </label>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.firmwareSource === \'upload\' && $ctrl.selectedFile">\n                <field-label></field-label>\n                <field-value>\n                    <f-upgradable-extension-device-firmware-info\n                        selected-firmware="$ctrl.selectedFirmware"\n                        has-downgrade="$ctrl.hasDowngrade"\n                        ng-show="!$ctrl.fileError">\n                    </f-upgradable-extension-device-firmware-info>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.firmwareSource === \'upload\' && $ctrl.selectedFile">\n                <field-label></field-label>\n                <field-value>\n                    <div class="error-message" ng-show="$ctrl.fileError">\n                        <f-icon class="fa-error"></f-icon>\n                        <div class="message-content">\n                            {{ $ctrl.fileError | lang }}\n                        </div>\n                    </div>\n                    <div class="error-message" ng-show="!$ctrl.fileError && !$ctrl.matchedDeviceCount">\n                        <f-icon class="fa-error"></f-icon>\n                        <div class="message-content">\n                            {{:: \'Image file doesn\\\'t match platform.\' | lang }}\n                        </div>\n                    </div>\n                </field-value>\n            </f-field>\n        </section>\n        <div ng-if="!$ctrl.refreshing">\n            <div ng-repeat="(fgtSerial, fortigate) in ::$ctrl.deviceTopology"\n                 ng-show="($ctrl.firmwareSource === \'fortiguard\' ||\n                          ($ctrl.selectedFile && !$ctrl.fileError && $ctrl.matchedDeviceCount)) &&\n                          !$ctrl.noUpgradableModel(fortigate)">\n                <div class="section-title">\n                    <h2>\n                        <f-object-formatted mkey="{{::fgtSerial}}" datasource="csfFortiGates">\n                            {{::fortigate.label}}\n                        </f-object-formatted>\n                        <span ng-if="::fortigate.isCurrentFortiGate">&nbsp;({{:: \'This FortiGate\' | lang }})</span>\n                    </h2>\n                </div>\n                <section>\n                    <f-field ng-show="$ctrl.firmwareSource === \'upload\' &&\n                                      $ctrl.uploadStatus[fgtSerial].status === $ctrl.UPLOAD_STATUS.IN_PROGRESS ||\n                                      $ctrl.uploadStatus[fgtSerial].status === $ctrl.UPLOAD_STATUS.SUCCESS">\n                        <field-label f-lang="upload_progress">\n                        </field-label>\n                        <field-value>\n                            <div f-progress-bar="$ctrl.uploadStatus[fgtSerial].progress"\n                                 show-percentage="::true"\n                                 class="firmware-push-progress">\n                            </div>\n                        </field-value>\n                    </f-field>\n                    <div class="error-message"\n                         ng-show="$ctrl.firmwareSource === \'upload\' &&\n                                  $ctrl.uploadStatus[fgtSerial].status === $ctrl.UPLOAD_STATUS.ERROR">\n                        <f-icon class="fa-error"></f-icon>\n                        <div class="message-content"\n                            f-lang="upload_failed"></div>\n                    </div>\n                    <table class="table extension-device-table">\n                        <tbody>\n                            <tr ng-repeat-start="(model, devices) in ::fortigate.models"\n                                ng-show="$ctrl.showDevices(devices)">\n                                <td colspan="{{ $ctrl.numberOfColumns() }}">\n                                    <div class="flex-row-centered">\n                                        <div>\n                                            {{:: devices[0].device.getFormattedModel() }}\n                                        </div>\n                                        <div ng-show="$ctrl.firmwareSource === \'fortiguard\'"\n                                             class="flex-row-centered">\n                                            <span></span>\n                                            <f-icon class="fa-arrow-up recommended-firmware">\n                                            </f-icon>\n                                            <div>\n                                                {{:: devices[0].device.getRecommendedFirmware().getNoModelVersionString() }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr ng-repeat-end ng-repeat="dev in ::devices"\n                                f-with="dev.device as device"\n                                ng-show="$ctrl.showDevices(devices)">\n                                <td ng-class="{\'disabled\': !dev.canUpgrade}"\n                                    colspan="{{ $ctrl.numberOfColumns() }}">\n                                    <div class="flex-row-centered extension-device-entry">\n                                        <label ng-show="$ctrl.upgradeStatus === $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                                            <span class="toggle-label">\n                                                <input type="checkbox"\n                                                    class="toggle-switch"\n                                                    id="chk-policy-status-{{::device.getSerial()}}"\n                                                    ng-model="dev.willUpgrade"\n                                                    ng-disabled="!dev.canUpgrade">\n                                                <label for="chk-policy-status-{{::device.getSerial()}}"></label>\n                                            </span>\n                                        </label>\n                                        <f-icon\n                                            ng-class="{\'fa-loading\': $ctrl.upgradeStatus !== $ctrl.UPGRADE_STATUS.NOT_STARTED &&\n                                                                     (device.getUpgradeStatus() === device.UPGRADE_STATUS.NOT_STARTED ||\n                                                                      device.getUpgradeStatus() === device.UPGRADE_STATUS.IN_PROGRESS),\n                                                       \'fa-enabled\': device.getUpgradeStatus() === device.UPGRADE_STATUS.SUCCESS,\n                                                       \'fa-error\': device.getUpgradeStatus() === device.UPGRADE_STATUS.ERROR}"\n                                            ng-show="$ctrl.upgradeStatus !== $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                                        </f-icon>\n                                        <f-object-formatted mkey="{{::dev.device.getSerial()}}::{{::fgtSerial}}::{{::$ctrl.operatingVdom}}"\n                                            datasource="{{::$ctrl._deviceDatasource}}"\n                                            class="device-label">\n                                            {{::device.getLabel()}}\n                                        </f-object-formatted>\n                                        <span f-tip-target>\n                                            <f-icon class="fa-warning"\n                                                ng-show="$ctrl.firmwareSource === \'upload\' && dev.isDowngradeFirmware &&\n                                                         dev.willUpgrade && $ctrl.upgradeStatus === $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                                            </f-icon>\n                                            <div f-tip>\n                                                {{:: \'This device will be downgraded\' | lang }}\n                                            </div>\n                                        </span>\n                                    </div>\n                                </td>\n                                <td ng-class="{\'disabled\': !dev.canUpgrade}"\n                                    ng-if="$ctrl.upgradeStatus !== $ctrl.UPGRADE_STATUS.NOT_STARTED">\n                                    <div f-progress-bar="device.getUpgradeProgress()"\n                                         show-percentage="::true"\n                                         ng-show="!device.isRebooting() &&\n                                                  ($ctrl.firmwareSource === \'fortiguard\' &&\n                                                   $ctrl.downloadStatus[fgtSerial][device.getModel()] === $ctrl.DOWNLOAD_STATUS.SUCCESS\n                                                   ||\n                                                   $ctrl.firmwareSource === \'upload\' &&\n                                                   $ctrl.uploadStatus[fgtSerial].status === $ctrl.UPLOAD_STATUS.SUCCESS) &&\n                                                   device.getUpgradeStatus() !== device.UPGRADE_STATUS.ERROR"\n                                         class="firmware-push-progress text-height">\n                                    </div>\n                                    <div ng-show="!device.isRebooting() &&\n                                                  device.getUpgradeStatus() === device.UPGRADE_STATUS.ERROR">\n                                        {{ device.upgradeErrorMessage | lang }}\n                                    </div>\n                                    <div ng-show="device.isRebooting()">\n                                        {{:: \'Rebooting...\' | lang }}\n                                    </div>\n                                    <div ng-show="$ctrl.firmwareSource === \'fortiguard\' &&\n                                                  $ctrl.downloadStatus[fgtSerial][device.getModel()] === $ctrl.DOWNLOAD_STATUS.IN_PROGRESS">\n                                        {{:: \'Downloading firmware image...\' | lang }}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </section>\n            </div>\n        </div>\n    </dialog-content>\n    <dialog-footer>\n        <button type="button" class="primary"\n            ng-click="$ctrl.upgrade()"\n            ng-if="$ctrl.upgradeStatus === $ctrl.UPGRADE_STATUS.NOT_STARTED"\n            ng-disabled="$ctrl.disableUpgradeButton()">\n            <span>{{ ::\'upgrade\' | lang }}</span>\n            <span class="number-bubble severity-none">\n                {{ $ctrl.toUpgradeCount }}\n            </span>\n        </button>\n        <button type="button" ng-click="$ctrl.close()"\n            ng-disabled="$ctrl.upgradeStatus === $ctrl.UPGRADE_STATUS.IN_PROGRESS">\n            <f-icon class="fa-loading" ng-show="$ctrl.upgradeStatus === $ctrl.UPGRADE_STATUS.IN_PROGRESS"></f-icon>\n            <span>{{ ::\'Close\' | lang }}</span>\n        </button>\n    </dialog-footer>\n</f-dialog>\n\n<link rel="stylesheet" type="text/css" ng-href="{{ \'/ng/extension_devices/main.css\' | cache_path }}">\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return function(providers){providers.$compile.component("fUpgradableExtensionDeviceFirmwareInfo",{templateUrl:__webpack_require__(942),controller:function(){},bindings:{selectedFirmware:"<",hasDowngrade:"<"}})}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/extension_devices/f-upgradable-extension-device-firmware-info.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="flex-space-between">\n    <div class="flex-row-centered">\n        <f-icon class="icon-xl space-around fa-file-o" title="upload"></f-icon>\n        <div>\n            <div>\n                <span>\n                    {{ $ctrl.selectedFirmware.label }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n<div ng-show="$ctrl.hasDowngrade" class="warning-message">\n    <f-icon class="fa-warning"></f-icon>\n    <div class="message-content"\n        f-lang="Downgrading to an older firmware version may result in the loss of some configuration, and unpredictable system performance">\n    </div>\n</div>\n')}]),module.exports=path},,,,,function(module,exports){var path="/migadmin/ng/components/wizard/f-authorize-fsw-fap-wizard.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog form="$ctrl.form">\n    <dialog-content>\n        <ul class="progress-tracker" ng-if="$ctrl.shouldShowProgressTracker()">\n            <li ng-repeat="step in $ctrl.planning"\n            ng-class="{\'current-step\': $ctrl.currentIdx == $index,\n                        done: $ctrl.currentIdx > $index}">\n                <span class="step-number">{{ $ctrl.getStepNumber($index) }}</span>\n                {{ step | lang }}\n            </li>\n        </ul>\n        <section ng-if="$ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.SELECT_DEVICES">\n            <f-field>\n                <field-label f-lang="Devices"></field-label>\n                <field-value>\n                    <div f-omniselect="$ctrl.selectConfig"\n                        ng-model="$ctrl.selectedDevices"\n                        required></div>\n                </field-value>\n            </f-field>\n        </section>\n        <section ng-if="$ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.AUTHORIZATION_SUMMARY || $ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.REGISTER_SUMMARY || $ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.REGISTER_STATUS">\n            <div class="info-message" ng-if="!$ctrl.isAuthorizing() && !$ctrl.isStartedRegistering() && !$ctrl.registerOnly && $ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.AUTHORIZATION_SUMMARY">\n                <f-icon class="fa-help-info"></f-icon>\n                <div class="message-content">\n                    <div>{{:: \'Devices are authorized successfully.\' | lang}}</div>\n                </div>\n            </div>\n            <table class="table bordered">\n                <thead>\n                    <tr>\n                        <th>\n                            {{:: \'Name\' | lang}}\n                        </th>\n                        <th>\n                            {{:: \'Model\' | lang}}\n                        </th>\n                        <th>\n                            {{:: \'Type\' | lang}}\n                        </th>\n                        <th>\n                            {{:: \'Status\' | lang}}\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="device in $ctrl.selectedDevices">\n                        <td>\n                            {{:: device.getLabel()}}\n                        </td>\n                        <td>\n                            {{$ctrl.deviceStatusMap[device.serial].model}}\n                        </td>\n                        <td>\n                            {{$ctrl.deviceStatusMap[device.serial].type | lang}}\n                        </td>\n                        <td>\n                            <div>\n                                <f-icon ng-class="$ctrl.deviceStatusMap[device.serial].getAuthorizationStatusIconClass()"></f-icon>\n                                {{$ctrl.deviceStatusMap[device.serial].getAuthorizationStatusLabel() | lang}}\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </section>\n        <section ng-if="$ctrl.planning[$ctrl.currentIdx] === $ctrl.STEPS.REGISTER_FORM">\n            <f-field>\n                <field-label f-lang="email"></field-label>\n                <field-value>\n                    <input type="email" ng-model="$ctrl.email" required>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-label f-lang="password"></field-label>\n                <field-value>\n                    <input type="password" id="password" ng-model="$ctrl.password" required>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-value>\n                    <span>\n                        <a ng-href="{{:: $ctrl.PASSWORD_RESET_URL }}" target="_blank" rel="noopener noreferrer">\n                            {{::\'Forgot your password?\' | lang }}\n                        </a>\n                    </span>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-label>\n                    {{::\'country\' | lang}}\n                </field-label>\n                <field-value>\n                    <div f-omniselect="$ctrl.countrySelect"\n                        ng-model="$ctrl.country"\n                        required\n                        change-event="{{:: $ctrl.RESELLERS_RELOAD_EVENT}}"></div>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-label>\n                    {{::\'reseller\' | lang}}\n                </field-label>\n                <field-value>\n                    <div f-omniselect="$ctrl.resellerSelect"\n                        ng-model="$ctrl.reseller"\n                        reload-on="$ctrl.RESELLERS_RELOAD_EVENT"\n                        required></div>\n                </field-value>\n            </f-field>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <button type="button" class="button"\n            ng-click="$ctrl.primaryButtonAction()"\n            ng-if="!$ctrl.shouldHidePrimaryButton()"\n            ng-class="$ctrl.getPrimaryButtonClass()"\n            ng-disabled="$ctrl.disablePrimaryButton()">\n            <f-icon class="fa-loading busy-only"\n                ng-if="$ctrl.nextButtonBusy"></f-icon>\n            <span>{{ $ctrl.getNextButtonLabel() | lang }}</span>\n        </button>\n        <button type="button" class="button"\n            ng-if="$ctrl.getSecondaryNextButtonLabel() && !$ctrl.shouldHideSecondaryButton()"\n            ng-click="$ctrl.secondaryButtonAction()"\n            ng-class="$ctrl.getSecondaryButtonClass()"\n            ng-disabled="$ctrl.disableSecondaryButton()">\n            <span>{{ $ctrl.getSecondaryNextButtonLabel() | lang}}</span>\n        </button>\n    </dialog-footer>\n</f-dialog>')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/menu_items_stats.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="$ctrl.policyStats.update()">\n    <f-icon class="fa-refresh"></f-icon>\n    {{::\'Update Statistics\' | lang}}\n</div>\n<div f-menu-item-button\n     click="$ctrl.policyStats.clearCounters($ctrl.menu.entries)"\n     ng-show="$ctrl.showClearCounters()">\n    <f-icon class="ftnt-purge"></f-icon>\n    {{::\'clear_counters\' | lang}}\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/menu_items_seq.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="heading">\n    {{::\'Policy\' | lang}}\n</div>\n<div>\n    <f-mutable-edit-column column-id="::\'status\'"></f-mutable-edit-column>\n    <f-mutable-filter></f-mutable-filter>\n    <f-mutable-copy-insert ng-if="!$ctrl.implicitPolicySelected()">\n    </f-mutable-copy-insert>\n    <f-mutable-processed-insert ng-if="!$ctrl.implicitPolicySelected() && $ctrl.insertEnabled()"\n        label="::\'Insert Empty Policy\' | lang"\n        icon="::\'fa-plus\'"\n        process-entry="$ctrl.createEmptyPolicy(entry)">\n    </f-mutable-processed-insert>\n    <f-mutable-processed-insert ng-if="!$ctrl.implicitPolicySelected() && $ctrl.cloneReverseEnabled()"\n        label="::\'Clone Reverse\' | lang"\n        icon="::\'ftnt-clone\'"\n        process-entry="$ctrl.cloneReverse(entry)"\n        always-insert-after="::true"\n        locate-after-insert="::true">\n    </f-mutable-processed-insert>\n    <f-mutable-insert-sequence-grouping ng-if="$ctrl.insertSequenceGroupingEnabled()"></f-mutable-insert-sequence-grouping>\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/policy-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable source="$ctrl.source" settings="$ctrl.settings"\n    initial-locate="$ctrl.locateFunction"\n    context-menu="::true" instance="$ctrl.mutableInstance">\n    <f-policy-list-menu list-ctrl="$ctrl"\n        menu="menu"\n        class="menu-bar-component">\n    </f-policy-list-menu>\n</f-mutable>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/policy-list-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-if=":: $ctrl.menu.popUpMenu && !$root.ADMIN_RO && !$ctrl.listCtrl.slideController">\n    <div ng-show="$ctrl.policyStatsSupported &&\n                  $ctrl.policyStats.KEYS.includes($ctrl.menu.targetColumnID)"\n       ng-include=":: $ctrl.MENU_ITEMS_STATS">\n    </div>\n    <div ng-include=":: $ctrl.MENU_ITEMS_SEQ">\n    </div>\n    <div class="separator"></div>\n</div>\n\n<div ng-if=":: $ctrl.menu.popUpMenu">\n    <div f-menu-item-button click="$ctrl.showMatchingLogs()"\n        ng-if="!$ctrl.policyIncompatibleForLogs() && !($ctrl.IMPLICIT_MATCHING_LOGS_DISABLE_POLICY.includes($ctrl.policyType) && $ctrl.implicitPolicySelected()) && $ctrl.listCtrl.allowDrilldownFromSlide()"\n        enabled="$ctrl.menu.entries.length === 1"  class="mini-hide">\n        <f-icon class="ftnt-eventlog"></f-icon>\n        {{::\'view_log\' | lang}}\n    </div>\n    <div f-menu-item-button\n         click="$ctrl.showInFortiview()"\n         ng-if="$ctrl.policyType === \'policy\' && $ctrl.listCtrl.allowDrilldownFromSlide()"\n        enabled="$ctrl.menu.entries.length === 1 && !$ctrl.implicitPolicySelected()"\n        class="mini-hide">\n        <f-icon class="fa-area-chart"></f-icon>\n        {{::\'Show in FortiView\' | lang}}\n    </div>\n</div>\n\n<div class="left-menu-items">\n    <div f-menu-item-create action="$ctrl.create()" ng-if="$ctrl.canCreate()"></div>\n    <div f-menu-item-edit action="$ctrl.edit($entry)" ng-if="!$ctrl.listCtrl.slideController"></div>\n    <div f-menu-item-edit-cli enabled="$ctrl.editCliEnabled($entries)" action="$ctrl.editCli($entry)"></div>\n    <div f-menu-item-delete delete-entries="$ctrl.deleteEntries($rows)"\n        label-key="{{::$ctrl.menu.popUpMenu ? \'delete_policy\' : \'\'}}"\n        entries-label-key="policies">\n    </div>\n</div>\n\n<div class="center-menu-items" ng-if="::$ctrl.menu.menuBar">\n    <div f-menu-item-button click="$ctrl.policyLookup()" class="mini-hide" emphasized="::true"\n        ng-show="::$ctrl.menu.menuBar && $ctrl.policyLookupSupported">\n        <f-icon class="fa-search"></f-icon>\n        <span f-lang="Policy Lookup"></span>\n    </div>\n    <f-mutable-search></f-mutable-search>\n</div>\n\n<div class="right-menu-items mini-hide" ng-if="::$ctrl.menu.menuBar">\n    <div class="menu-item menu-item-padded"\n        ng-show="$ctrl.policyType === \'policy64\' && $ctrl.listCtrl.nat64Settings.status">\n        <label for="nat64-forwarding-toggle">\n            {{::\'nat64_status\' | lang}}\n        </label>\n        <input id="nat64-forwarding-toggle" type="checkbox" class="toggle-switch"\n            ng-true-value="::\'enable\'" ng-false-value="::\'disable\'"\n            ng-model="$ctrl.listCtrl.nat64Settings.status"\n            ng-change="$ctrl.saveCMDBEntry($ctrl.listCtrl.nat64Settings)">\n        <label for="nat64-forwarding-toggle"></label>\n    </div>\n    <div f-menu-item-submenu="$parent.virtualWireMenu"\n        ng-if="::$ctrl.listCtrl.isVirtualWirePolicy" title="{{::\'virtual_wire_pair\' | lang}}">\n        <f-icon class="ftnt-virtual-wire-pair"></f-icon>\n        <span>{{$ctrl.policyVWP.current}}</span>\n    </div>\n    <div f-pop-up-menu="$parent.virtualWireMenu" ng-if="::$ctrl.listCtrl.isVirtualWirePolicy">\n        <div ng-repeat="name in $ctrl.policyVWP.all" f-menu-item-button\n             click="$ctrl.policyVWP.setCurrent(name)" selected="name === $ctrl.policyVWP.current">\n            <f-icon class="ftnt-virtual-wire-pair"></f-icon>\n            <span>{{::name}}</span>\n        </div>\n    </div>\n    <div class="radio-buttons" ng-if="$ctrl.viewType.supported">\n        <div class="menu-item" ng-if="!$ctrl.viewType.supportInterfacePairView">\n            <button class="disabled" type="button" f-tip-target>\n                {{::\'Interface Pair View\' | lang}}\n                <div f-tip>\n                    {{::\'disable_interface_view\' | lang}}\n                    <ul>\n                        <li f-lang="disable_reason1"></li>\n                        <li f-lang="disable_reason2"></li>\n                    </ul>\n                </div>\n            </button>\n        </div>\n        <div f-menu-item-button ng-if="$ctrl.viewType.supportInterfacePairView"\n            selected="$ctrl.viewType.value === $ctrl.viewType.VIEW_TYPE.INTERFACE_PAIR"\n            click="$ctrl.viewType.set($ctrl.viewType.VIEW_TYPE.INTERFACE_PAIR)"\n            enabled="$ctrl.viewType.supportInterfacePairView">\n            {{::\'Interface Pair View\' | lang}}\n        </div>\n        <div f-menu-item-button selected="$ctrl.viewType.value === $ctrl.viewType.VIEW_TYPE.SEQUENTIAL"\n            click="$ctrl.viewType.set($ctrl.viewType.VIEW_TYPE.SEQUENTIAL)">\n            {{::\'By Sequence\' | lang}}\n        </div>\n    </div>\n    <div f-menu-item-submenu="$parent.ipVersionFilterMenu"\n        ng-if="::$ctrl.ipVersionFilterSupported()" title="{{::\'IP Version\' | lang}}">\n        <span>{{ $ctrl.ipVersionFilter.current.label | lang }}</span>\n    </div>\n    <div f-pop-up-menu="$parent.ipVersionFilterMenu"\n        ng-if="::$ctrl.ipVersionFilterSupported()">\n        <div ng-repeat="option in $ctrl.ipVersionFilter.options" f-menu-item-button\n             click="$ctrl.ipVersionFilterSetCurrent(option)"\n             selected="option.value === $ctrl.ipVersionFilter.current.value">\n            <span>{{::option.label | lang}}</span>\n        </div>\n    </div>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(()=>{const fPolicyListIdTooltip={controller:()=>{},bindings:{entry:"<",warnings:"<"},templateUrl:__webpack_require__(953)},fPolicyListStatsTooltip={controller:()=>{},bindings:{entry:"<",stats:"<",supportedKeys:"<"},templateUrl:__webpack_require__(954)};return function(providers){providers.$compile.component("fPolicyListIdTooltip",fPolicyListIdTooltip),providers.$compile.component("fPolicyListStatsTooltip",fPolicyListStatsTooltip)}}).apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/firewall_policy_warnings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div>\n    <table class="table key-value">\n        <tbody>\n            <tr ng-show=":: $ctrl.entry.policyId !== 0">\n                <td>{{:: \'Policy ID\' | lang}}</td>\n                <td>\n                    {{:: $ctrl.entry.policyId }}\n                    <span ng-show=":: $ctrl.entry.status === \'disable\'">\n                        ({{:: \'disabled\' | lang }})\n                    </span>\n                </td>\n            </tr>\n            <tr ng-show=":: $ctrl.entry.policyId === 0">\n                <td>{{:: \'implicit\' | lang}}</td>\n                <td>{{:: $ctrl.entry.action | lang }}</td>\n            </tr>\n            <tr ng-show=":: $ctrl.entry.policyId !== 0 && $ctrl.entry.name">\n                <td>{{:: \'Policy Name\' | lang}}</td>\n                <td>{{:: $ctrl.entry.name }}</td>\n            </tr>\n        </tbody>\n    </table>\n    <table class="table" ng-if=":: $ctrl.warnings.length > 0">\n        <tbody>\n            <tr>\n                <td>\n                    <span f-lang="policy_issues"></span>\n                    <ul>\n                        <li ng-repeat="warning in ::$ctrl.warnings">\n                            <span>{{:: warning | lang }}</span>\n                        </li>\n                    </ul>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/firewall/policy/partials/compare_qtip.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"<table class=\"table key-value\">\n    <tbody>\n        <tr ng-if=\"$ctrl.supportedKeys.bytes && $ctrl.stats.bytes != null\">\n            <td>{{::'Bytes' | lang}}/{{::'Packets' | lang}}</td>\n            <td>{{$ctrl.stats.bytes | bytes}}</td>\n            <td>{{$ctrl.stats.packets || 0 | number}}</td>\n        </tr>\n        <tr class=\"child\"\n            ng-if=\"$ctrl.supportedKeys.software_bytes && $ctrl.stats.software_bytes != null &&\n                   $ctrl.entry['auto-asic-offload'] === 'enable'\">\n            <td>{{::'Software' | lang}}</td>\n            <td>{{$ctrl.stats.software_bytes | bytes}}</td>\n            <td>{{$ctrl.stats.software_packets | number}}</td>\n            <td>{{$ctrl.stats.software_usage}}</td>\n        </tr>\n        <tr class=\"child\"\n            ng-if=\"$ctrl.supportedKeys.asic_bytes && $ctrl.stats.asic_bytes != null &&\n                   $ctrl.entry['auto-asic-offload'] === 'enable'\">\n            <td>{{::'SPU' | lang}}</td>\n            <td>{{$ctrl.stats.asic_bytes | bytes}}</td>\n            <td>{{$ctrl.stats.asic_packets | number}}</td>\n            <td>{{$ctrl.stats.asic_usage}}</td>\n        </tr>\n        <tr class=\"child\"\n            ng-if=\"$ctrl.supportedKeys.nturbo_bytes && $ctrl.stats.nturbo_bytes != null &&\n                   $ctrl.entry['auto-asic-offload'] === 'enable'\">\n            <td>{{::'nTurbo' | lang}}</td>\n            <td>{{$ctrl.stats.nturbo_bytes | bytes}}</td>\n            <td>{{$ctrl.stats.nturbo_packets | number}}</td>\n            <td>{{$ctrl.stats.nturbo_usage}}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.entry['auto-asic-offload'] === 'disable'\">\n            <td>{{::'SPU' | lang}}</td>\n            <td colspan=\"3\">{{::'disabled' | lang}}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.supportedKeys.hit_count\">\n            <td>{{::'hit_count' | lang}}</td>\n            <td colspan=\"3\">{{$ctrl.stats.hit_count || 0 | number}}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.supportedKeys.first_used && $ctrl.stats.first_used\">\n            <td>{{::'first_used' | lang}}</td>\n            <td colspan=\"3\">{{ $ctrl.stats.first_used * 1000 | fDateTime }}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.supportedKeys.active_sessions && $ctrl.entry.policyId\">\n            <td>{{::'active_sessions' | lang}}</td>\n            <td colspan=\"3\">{{$ctrl.stats.active_sessions || 0 | number}}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.supportedKeys.last_used && $ctrl.stats.last_used\">\n            <td>{{::'last_used' | lang}}</td>\n            <td colspan=\"3\">{{ $ctrl.stats.last_used * 1000 | fDateTime }}</td>\n        </tr>\n        <tr ng-if=\"$ctrl.supportedKeys.packets_dropped && $ctrl.stats.packets_dropped != null\">\n            <td>{{::'Packets Dropped' | lang}}</td>\n            <td colspan=\"3\">{{$ctrl.stats.packets_dropped || 0 | number}}</td>\n        </tr>\n    </tbody>\n</table>\n")}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(171)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(browser){var INTERFACE_PAIR_VIEW_SUPPORT={policy:!0,policy46:!0,policy64:!0,"multicast-policy":!0,"proxy-policy":!0,"security-policy":!0};function PolicyListViewType(PolicySource,persistentStorage,policyInit){this._PolicySource=PolicySource,this._persistentStorage=persistentStorage,this._policyInit=policyInit,this.value=null}return PolicyListViewType.prototype.VIEW_TYPE={SEQUENTIAL:"sequential",INTERFACE_PAIR:"interface-pair"},PolicyListViewType.prototype.SECTIONS_ENABLED={policy:!0,"explicit-proxy-policy":!0,"security-policy":!0,"shaping-policy":"ip-version","central-snat-map":"ip-version"},PolicyListViewType.prototype._validViewType=function(value){return Object.keys(this.VIEW_TYPE).map(function(key){return this.VIEW_TYPE[key]}.bind(this)).indexOf(value)>=0},PolicyListViewType.prototype.update=function(){if(browser.isMobile())return void(this.value=this.VIEW_TYPE.INTERFACE_PAIR);const policySource=this._PolicySource.getCachedInstance();this._key="policyViewType-"+this._policyInit.type+this._policyInit.subType,this.value=this._persistentStorage.get(this._key),this.supported=INTERFACE_PAIR_VIEW_SUPPORT[this._policyInit.type],this._validViewType(this.value)||(this.value=this.VIEW_TYPE.INTERFACE_PAIR),this.supported&&policySource.isInterfacesSectionable()?this.supportInterfacePairView=!0:(this.supportInterfacePairView=!1,this.value=this.VIEW_TYPE.SEQUENTIAL)},PolicyListViewType.prototype.set=function(value){if(!this._validViewType(value))throw new Error("Invalid view type value");this._persistentStorage.put(this._key,value),this.value=value},PolicyListViewType.prototype.clearCache=function(){this.value=null},function(providers){providers.$provide.service("policyListViewType",PolicyListViewType)}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_RESULT__;void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){const SUPPORTED={policy:!0,"security-policy":!0},BASE_KEY="policyListIpVersionFilter-";function PolicyListIpVersionFilterFactory(policyInit,persistentStorage,state){return new class{constructor(){this.OPTION_VALUE={BOTH:"both",IPV4:"ipv4",IPV6:"ipv6"},this.options=[{value:this.OPTION_VALUE.BOTH,label:"IPv4 + IPv6"},{value:this.OPTION_VALUE.IPV4,label:"IPv4"},{value:this.OPTION_VALUE.IPV6,label:"IPv6"}],this.current=null}update(policyType,subType,vdom){this.policyType=policyType||policyInit.type,this.subType=subType||policyInit.subType,this.vdom=vdom||state.current_vdom,this.current=persistentStorage.get(this.storageKey),this._isValid(this.current)||this.setCurrent(this.options[0],!0)}_isValid(filter){return filter&&this.options.some(option=>option.value===filter.value)}get storageKey(){return`${BASE_KEY}-${this.policyType}-${this.subType}-${this.vdom}`}supported(policyType){return SUPPORTED[policyType||this.policyType]&&state.featureEnabled("gui-ipv6")}setCurrent(filterOption,notPersistent){if(!this._isValid(filterOption))throw new Error("Invalid policy list IP version filter value");notPersistent||persistentStorage.put(this.storageKey,filterOption),this.current=filterOption}hasInternetServiceSrc(cmdbPolicy){return"enable"===cmdbPolicy["internet-service-src"]&&Array.isArray(cmdbPolicy["internet-service-src-name"])&&cmdbPolicy["internet-service-src-name"].length}isPolicyVisible(cmdbPolicy,policyType){return!this.current||!this.supported(policyType)||this.current.value===this.OPTION_VALUE.BOTH||(this.current.value===this.OPTION_VALUE.IPV4?Array.isArray(cmdbPolicy.srcaddr)&&cmdbPolicy.srcaddr.length||this.hasInternetServiceSrc(cmdbPolicy):Array.isArray(cmdbPolicy.srcaddr6)&&cmdbPolicy.srcaddr6.length)}clearCache(){this.current=null,this.policyType=null,this.subType=null,this.vdom=null}}}return function(providers){providers.$provide.factory("policyListIpVersionFilter",PolicyListIpVersionFilterFactory)}}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30),__webpack_require__(36),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((fLog,fSelect,ftnt_shared)=>{const MuTable=ftnt_shared.MuTable,Omniselect=ftnt_shared.Omniselect;function PolicySourceFactory(state,$http,PolicyEntry,$q,policyInit){class PolicySource extends MuTable.FixedStreamableSource{constructor(path,name,params){super(),this._path=path,this._name=name,params&&(this._skip=params.skip,this._filter=params.filter,Array.isArray(params.extraEntries)?this._extraEntries=params.extraEntries:this._extraEntries=params.extraEntries?[params.extraEntries]:[],this._onFetchComplete=params.onFetchComplete)}async manuallyFetchEntries(){try{const policyPromise=fSelect.getCMDBTable(this._path,this._name,{optimizeForLargeDataset:!0}),omniSelectPromise=this._loadOmniselectData();let policies=await policyPromise;return await omniSelectPromise,this._filter&&(policies=this._filterPolicies(policies,this._filter)),this._processEntries(policies.concat(this._extraEntries))}catch(e){return fLog.error(e),[]}}fetchEntries(){if(Array.isArray(this._policies)){const entries=this._policies;return this._policies=null,Promise.resolve(entries)}return this.manuallyFetchEntries()}_processEntries(rawEntries){this._interfacesSectionable=!0;let listenOnInterfaces={};if("proxy-policy"===policyInit.type){const interfaces=Omniselect.getSourceDataSync("firewallInterfaces");listenOnInterfaces={"explicit-web":[],ftp:[]};for(const intf of interfaces)intf.explicit_ftp_proxy_enabled&&listenOnInterfaces.ftp.push(intf),intf.explicit_web_proxy_enabled&&listenOnInterfaces["explicit-web"].push(intf)}return this._policies=rawEntries.reduce((filteredEntries,rawEntry)=>{if(PolicyEntry.isVisible(rawEntry)){const policy=new PolicyEntry(rawEntry,{listenOnInterfaces:listenOnInterfaces});if(this._interfacesSectionable&&!policy.isInterfacesSectionable()&&(this._interfacesSectionable=!1),!state.featureEnabled("gui-ipv6")&&"ipv6"===policy.cmdbModel.type)return filteredEntries;filteredEntries.push(policy)}return filteredEntries},[]),"function"==typeof this._onFetchComplete&&this._onFetchComplete(),this._policies}destroy(){this._policies=null,this._extraEntries=null,this._onFetchComplete=null}_loadOmniselectData(){let promises={};if(promises["firewall.address"]=Omniselect.getSourceData("firewall.address"),(["policy","policy64","proxy-policy"].includes(policyInit.type)||state.featureEnabled("gui-ipv6"))&&(promises["firewall.address6"]=Omniselect.getSourceData("firewall.address6")),!state.isNgfwPolicyMode()&&"policy"===policyInit.type){const proxyUtmProfileDatasources=["antivirus.profile","emailfilter.profile","firewall.profile-protocol-options","webfilter.profile","firewall.profile-group"];for(const datasource of proxyUtmProfileDatasources)promises[datasource]=Omniselect.getSourceData(datasource)}return promises["firewall.ippool"]=Omniselect.getSourceData("firewall.ippool"),promises.firewallInterfaces=Omniselect.getSourceData("firewallInterfaces"),promises.customApplications=Omniselect.getSourceData("application.custom"),promises.localFtgdCat=Omniselect.getSourceData("webfilter.ftgd-local-cat"),this._filter&&(this._filter.sdn&&(promises["firewall.addrgrp"]=Omniselect.getSourceData("firewall.addrgrp")),this._filter.fsso&&(promises["user.group"]=Omniselect.getSourceData("user.group"),promises["user.adgrp"]=Omniselect.getSourceData("user.adgrp"))),$q.all(promises)}_filterPolicies(policies,filters){let filtered=policies;if(filters.sdn){const sdnFilter=filters.sdn,addresses=Omniselect.getSourceDataSync("firewall.address"),addrGrps=Omniselect.getSourceDataSync("firewall.addrgrp"),sdnName=sdnFilter.name||sdnFilter;filtered=filtered.filter(policy=>["dstaddr","srcaddr"].some(attr=>policy[attr].some(entry=>{if("firewall.address"===entry.datasource){const addr=addresses.mapping[entry.q_origin_key];return addr.sdn&&addr.sdn.name===sdnName}if("firewall.addrgrp"===entry.datasource){return addrGrps.mapping[entry.q_origin_key].member.some(member=>{const addr=addresses.mapping[member.q_origin_key];return addr.sdn&&addr.sdn.name===sdnName})}return!1})))}if(filters.fsso){const fssoFilter=filters.fsso,adGroups=Omniselect.getSourceDataSync("user.adgrp"),userGroups=Omniselect.getSourceDataSync("user.group"),fssoName=fssoFilter.name||fssoFilter;filtered=filtered.filter(policy=>{const inUserGroup=(policy.groups||[]).some(entry=>{const group=userGroups.mapping[entry.q_origin_key];return"fsso-service"===group["group-type"]&&(group.member||[]).some(member=>{return adGroups.mapping[member.q_origin_key]["server-name"]===fssoName})});return inUserGroup||(policy["fsso-groups"]||[]).some(entry=>{const group=adGroups.mapping[entry.q_origin_key];return group&&group["server-name"]===fssoName})})}return filtered}copyEntry(entry){return(entry=super.copyEntry(entry)).prepareCopiedPolicy(),entry}processUpdatedEntry(entry){return entry.processUpdatedEntry()}setNewEntryValue(policyEntry,row,column,newValue){try{policyEntry.setNewEntryValue(row,column,newValue)}catch(e){fLog.error(`Failed to call setNewEntryValue in PolicySource for: ${e.message}`)}}externallyUpdateEntry(policyEntry,row,column,newValue){return policyEntry&&policyEntry.edit(row,column,newValue)}externallyReorderEntry(params){return params.entry=params.entry.cmdbModel,params.beforeEntry?params.beforeEntry=params.beforeEntry.cmdbModel:params.afterEntry=params.afterEntry.cmdbModel,super.externallyReorderEntry(params)}setNewSequenceGroupingValue(entry,value){return super.setNewSequenceGroupingValue(entry.cmdbModel,value)}isInterfacesSectionable(){return this._interfacesSectionable}static cacheInstance(policySourceInstance){policySourceInstance instanceof PolicySource&&(PolicySource._CACHED_INSTANCE=policySourceInstance)}static getCachedInstance(){return PolicySource._CACHED_INSTANCE}static invalidateCache(){PolicySource._CACHED_INSTANCE=null}}return PolicySource._CACHED_INSTANCE=null,PolicySource}return providers=>{providers.$provide.factory("PolicySource",PolicySourceFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(8),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((angular,ftnt_shared,fLog)=>{const Omniselect=ftnt_shared.Omniselect,POLICY_INTF_KEYS=["srcintf","dstintf","destination","interface"],AGGREGATED_ADDR_KEYS=["source","destination","proxy-source","proxy-destination","consolidated-srcaddr","consolidated-dstaddr","consolidated-source","consolidated-destination","security-source","security-srcaddr","security-dstaddr","security-destination"];function PolicyEntryFactory(policyStats,policyVWP,policyInit,$q,state,policyOmniselectConfig,ftntCopy,$http,utmProfileConfig,CMDB,policyListIpVersionFilter){const deepCopy=srcObj=>angular.copy(ftntCopy.strip$Properties(srcObj,{})),UTM_PROFILE_EDITABLE_COLUMN_IDS=new Set(["av-profile","emailfilter-profile","webfilter-profile","file-filter-profile","dnsfilter-profile","waf-profile","application-list","ips-sensor","icap-profile","voip-profile","profile-group","profile"]);class PolicyEntry extends ftnt_shared.Cloneable{static isVisible(cmdbPolicy){if(!cmdbPolicy||"wanopt"===cmdbPolicy.proxy)return!1;const policyType=policyInit.type,subType=policyInit.subType;if(!policyListIpVersionFilter.isPolicyVisible(cmdbPolicy,policyType))return!1;if(!state.featureEnabled("gui-ipv6")){if("shaping-policy"===policyType&&"6"===cmdbPolicy["ip-version"])return!1;if("central-snat-map"===policyType&&"ipv6"===cmdbPolicy.type)return!1;if(!("proxy-policy"!==policyType||Array.isArray(cmdbPolicy.srcaddr)&&cmdbPolicy.srcaddr.length||Array.isArray(cmdbPolicy.dstaddr)&&cmdbPolicy.dstaddr.length))return!1;if(!("policy"!==policyType&&"security-policy"!==policyType||Array.isArray(cmdbPolicy.srcaddr)&&cmdbPolicy.srcaddr.length||PolicyEntry.hasInternetServiceSrc(cmdbPolicy)))return!1}let visible=!0;return POLICY_INTF_KEYS.some(key=>{let interfaces=cmdbPolicy[key];return interfaces&&(interfaces=Array.isArray(interfaces)?interfaces:[interfaces]).some(intf=>{if("virtual-wire"===subType)visible=policyVWP.currentInterfacesMap[intf.name];else try{const mapping=Omniselect.getSourceDataSync("firewallInterfaces").mapping;visible=!mapping[intf.q_origin_key].is_virtual_wire_pair_member||!policyVWP.SUPPORTED[policyType]}catch(e){fLog.warn(`Firewall interfaces cannot be accessed for ${e.message}`)}return visible}),visible}),visible}static hasInternetServiceSrc(cmdbPolicy){return"enable"===cmdbPolicy["internet-service-src"]&&(Array.isArray(cmdbPolicy["internet-service-src-name"])&&cmdbPolicy["internet-service-src-name"].length)}static createNewFrom(policyEntry){let newCmdbModel=Object.assign({},policyInit.BASE_POLICY,policyInit.BASE_POLICY_ADDRESSES[policyEntry.policyType],{srcintf:policyEntry.cmdbModel.srcintf,dstintf:policyEntry.cmdbModel.dstintf});return"proxy-policy"===policyEntry.policyType&&(newCmdbModel.proxy=policyEntry.cmdbModel.proxy||"explicit-web",newCmdbModel.service=[{name:"webproxy",q_origin_key:"webproxy",datasource:"firewall.service.custom"}]),newCmdbModel.status="disable",newCmdbModel.action="accept",newCmdbModel.q_path=policyEntry.cmdbModel.q_path,newCmdbModel.q_name=policyEntry.cmdbModel.q_name,state.featureEnabled("gui-ipv6")||(newCmdbModel.srcaddr6=[],newCmdbModel.dstaddr6=[]),new PolicyEntry(newCmdbModel)}constructor(rawEntry,params={}){super(),this.cmdbModel=rawEntry;const original=Object.assign(rawEntry);this.cmdbModel.$original=original,this.cmdbModel.$$original=original,this.implicit=rawEntry.implicit||!1,this.policyType=policyInit.type,this._init(params)}clone(){let cloned=new PolicyEntry(deepCopy(this.cmdbModel));return cloned._originalLabel=this.policyLabel||this._originalLabel,cloned}_init(params={}){this.URI=`/api/v2/cmdb/${this.cmdbModel.q_path}/${this.cmdbModel.q_name}`,this._editMeta=null,this.updatePolicyStats(),this.implicit&&this._setupLogSetting(),this.isProxyPolicy()&&this._setupListenOnInterfaces(params.listenOnInterfaces),this.setupWarnings()}_setupListenOnInterfaces(listenOnInterfaces={}){let srcintf=this.cmdbModel.srcintf;(!srcintf||Array.isArray(srcintf)&&0===srcintf.length)&&Array.isArray(listenOnInterfaces[this.cmdbModel.proxy])&&(this.cmdbModel.srcintf=listenOnInterfaces[this.cmdbModel.proxy])}_setupLogSetting(){const logSettingCMDB=new CMDB("log","setting");this.logSetting=logSettingCMDB.fetch()}edit(row,column,newValue){try{if(this.isExternalDataUpdate(column))return this.updateExternalData(column,newValue);let $req=$http.post,uri=this.URI;const mkey=this.policyId;return mkey&&(uri=`${uri}/${mkey}`,$req=$http.put),$req(uri,ftntCopy.strip$Properties(this.cmdbModel,{})).then(result=>{this._editMeta=result.data})}catch(e){return fLog.error(`Editing policy entry failed for ${e.message}.`),Promise.reject()}}reverse(){this.prepareCopiedPolicy("Reverse of ");const dstAddr=this.cmdbModel.dstaddr;if(this.cmdbModel.dstaddr=this.cmdbModel.srcaddr,this.cmdbModel.srcaddr=dstAddr,this.cmdbModel.srcaddr6&&this.cmdbModel.dstaddr6){const dstAddr6=this.cmdbModel.dstaddr6;this.cmdbModel.dstaddr6=this.cmdbModel.srcaddr6,this.cmdbModel.srcaddr6=dstAddr6}const dstIntf=this.cmdbModel.dstintf;this.cmdbModel.dstintf=this.cmdbModel.srcintf,this.cmdbModel.srcintf=dstIntf;return["users","groups"].forEach(key=>{this.cmdbModel[key]=null}),this}async processUpdatedEntry(){let entry=this;if(this._editMeta&&["POST","PUT"].includes(this._editMeta.http_method)){const mkey=this._editMeta.mkey,uri=`${this.URI}/${mkey}`,updatedEntry=(await $http.get(uri,{params:{skip:"proxy-policy"===policyInit.type,datasource:1,with_meta:1}})).data.results[0];Object.assign(entry.cmdbModel,updatedEntry)}return this._editMeta=null,this.updatePolicyStats(),this.setupWarnings(),entry}isInterfacesSectionable(){function interfacesSectionable(interfaces){let sectionable=!0;return interfaces&&(Array.isArray(interfaces)||(interfaces=[interfaces]),sectionable=1===interfaces.length&&"any"!==interfaces[0].name),sectionable}const srcSectionable=interfacesSectionable(this.cmdbModel.srcintf),destSectionable=interfacesSectionable(this.cmdbModel.dstintf);return!!(this.implicit||srcSectionable&&destSectionable)}processExternalResource(addrs,originalKey){let parsed=addrs;const SUPPORTED_POLICY_TYPES=["policy","proxy-policy","security-policy"];return Array.isArray(addrs)&&(parsed=addrs.map(addr=>(PolicyEntry.isExternalResource(addr)&&(SUPPORTED_POLICY_TYPES.includes(this.policyType)?addr.datasource=originalKey.includes("addr6")?"system.external-resource.address6":"system.external-resource.address":fLog.warn(`Unsupported policy type "${this.policyType}" for `+"external-resource")),addr))),parsed}processApplications(apps,originalKey){let parsed=apps;const customAppMap=Omniselect.getSourceDataSync("application.custom").mapping;switch(originalKey){case"application":parsed=apps.map(app=>{const isCustomApp=customAppMap[app.q_origin_key];return app.datasource=isCustomApp?"application.custom":"application.name",app});break;case"app-category":parsed=apps.map(app=>(app.datasource="application.category",app));break;case"app-group":parsed=apps.map(app=>(app.datasource="application.group",app));break;default:throw new Error("Unsupported application property key")}return parsed}processSecurityProfiles(profile,originalKey){let parsed=profile;return utmProfileConfig.visible(this.cmdbModel,originalKey)||(parsed=[]),parsed}_getAggregateValues(aggregateKey,originalKey){const values=this.cmdbModel[originalKey];let parsed;if(AGGREGATED_ADDR_KEYS.includes(aggregateKey)&&(parsed=this.processExternalResource(values,originalKey)),"applications"===aggregateKey)try{parsed=this.processApplications(values,originalKey)}catch(e){fLog.warn(`Failed to process applications for ${e.message}`)}return"profile"===aggregateKey&&(parsed=this.processSecurityProfiles(values,originalKey)),parsed||values}_aggregateOmniselectModel(aggregateKey){let values=[];return policyOmniselectConfig.splitKeys(aggregateKey).forEach(key=>{if(this.cmdbModel.hasOwnProperty(key)){const _values=this._getAggregateValues(aggregateKey,key);values=values.concat(_values)}}),values}_splitAggregatedValues(aggregateKey,values,singleSelect){let parsed=policyOmniselectConfig.splitValues(aggregateKey,values,singleSelect);return"profile"===aggregateKey&&(parsed=Object.keys(parsed).reduce((_parsed,key)=>(utmProfileConfig.visible(this.cmdbModel,key)&&(_parsed[key]=parsed[key]),_parsed),{})),parsed}_overrideFallbackKey(key){return["poolname","consolidated-poolname"].includes(key)&&(key="nat"),"service"===key&&(key="enforce-default-app-port"),key}_updateCmdbProperty(key,newValue,isFallback){let policy=this.cmdbModel;newValue&&policy[key]&&newValue.hasOwnProperty("q_origin_key")&&newValue.q_origin_key===policy[key].q_origin_key?Object.assign(policy[key],newValue):(isFallback&&(key=this._overrideFallbackKey(key)),policy[key]=newValue)}_updateSplitCmdbProperties(updated){Object.keys(updated).forEach(key=>{this._updateCmdbProperty(key,updated[key])})}noSslInspection(){return this.isProxyPolicy()&&"ftp"===this.cmdbModel.proxy||this.isSecurityPolicy()}get source(){return this._source||(this._source=this._aggregateOmniselectModel("source")),this._source}get destination(){return this._destination||(this._destination=this._aggregateOmniselectModel("destination")),this._destination}get proxySource(){return this["_proxy-source"]||(this["_proxy-source"]=this._aggregateOmniselectModel("proxy-source")),this["_proxy-source"]}get proxyDestination(){return this["_proxy-destination"]||(this["_proxy-destination"]=this._aggregateOmniselectModel("proxy-destination")),this["_proxy-destination"]}get applications(){return this._applications||(this._applications=this._aggregateOmniselectModel("applications")),this._applications}get urlCategory(){if(!this._urlCategory)try{const localFtgdCatMap=Omniselect.getSourceDataSync("webfilter.ftgd-local-cat").alternativeMappings.id;this._urlCategory=(this.cmdbModel["url-category"]||[]).map(_urlCategory=>{const isLocalCategory=localFtgdCatMap[_urlCategory.id];return(_urlCategory=Object.assign({},_urlCategory)).datasource=isLocalCategory?"webfilter.ftgd-local-cat":"webfilter.ftgd-cat",_urlCategory})}catch(e){fLog.warn(`Failed to process URL categories for ${e.message}`)}return this._urlCategory}get profile(){return["accept","ipsec"].includes(this.cmdbModel.action)?this.noSslInspection()||"enable"===this.cmdbModel["utm-status"]?(this._profile||("single"===this.cmdbModel["profile-type"]?this._profile=this._aggregateOmniselectModel("profile"):this._profile=[this.cmdbModel["profile-group"]]),this._profile):[this.cmdbModel["ssl-ssh-profile"]]:[]}get action(){return this.cmdbModel.action}get policyId(){return this.cmdbModel.q_origin_key||this.cmdbModel.policyid||this.cmdbModel.id||0}get policyLabel(){return this.cmdbModel.name||this.policyId}get consolidatedSource(){return this._consolidatedSource||(this._consolidatedSource=this._aggregateOmniselectModel("consolidated-source")),this._consolidatedSource}get consolidatedSourceAddress(){return this._consolidatedSourceAddress||(this._consolidatedSourceAddress=this._aggregateOmniselectModel("consolidated-srcaddr")),this._consolidatedSourceAddress}get consolidatedDestination(){return this._consolidatedDestination||(this._consolidatedDestination=this._aggregateOmniselectModel("consolidated-destination")),this._consolidatedDestination}get consolidatedDestinationAddress(){return this._consolidatedDestinationAddress||(this._consolidatedDestinationAddress=this._aggregateOmniselectModel("consolidated-dstaddr")),this._consolidatedDestinationAddress}get consolidatedPoolname(){return this._consolidatedPoolname||(this._consolidatedPoolname=this._aggregateOmniselectModel("consolidated-poolname")),this._consolidatedPoolname}get securitySource(){return this._ngfwSource||(this._ngfwSource=this._aggregateOmniselectModel("security-source")),this._ngfwSource}get securitySourceAddress(){return this._ngfwSourceAddress||(this._ngfwSourceAddress=this._aggregateOmniselectModel("security-srcaddr")),this._ngfwSourceAddress}get securityDestination(){return this._ngfwDestination||(this._ngfwDestination=this._aggregateOmniselectModel("security-destination")),this._ngfwDestination}get securityDestinationAddress(){return this._ngfwDestinationAddress||(this._ngfwDestinationAddress=this._aggregateOmniselectModel("security-dstaddr")),this._ngfwDestinationAddress}get shapingSource(){return this["_shaping-source"]||(this["_shaping-source"]=this._aggregateOmniselectModel("shaping-source")),this["_shaping-source"]}get shapingDestination(){return this["_shaping-destination"]||(this["_shaping-destination"]=this._aggregateOmniselectModel("shaping-destination")),this["_shaping-destination"]}updateAggregatedProperty(row,column,newEntryValue){const selectSettings=row.getCellValueSync(column).getEditingSettings(),updated=this._splitAggregatedValues(column.id,newEntryValue,selectSettings.singleSelect||selectSettings.allSolitary);this._updateSplitCmdbProperties(updated),this[`_${column.id}`]=newEntryValue}_updateOmniselectValue(row,column,newEntryValue){const key=column.id,selectSettings=row.getCellValueSync(column).getEditingSettings();policyOmniselectConfig.VALUE_SPLIT_MAP[column.id]?this.updateAggregatedProperty(row,column,newEntryValue):selectSettings.singleSelect&&!Array.isArray(this.cmdbModel[key])?this._updateCmdbProperty(key,newEntryValue[0]||null):this._updateCmdbProperty(key,newEntryValue)}_getEntryDatasource(entry){return entry.datasource||`${entry.q_path}.${entry.q_name}`}_utmStatusHidden(){return this.isSecurityPolicy()}_updateUtmStatus(column,newEntryValue){if(!(Array.isArray(newEntryValue)&&1===newEntryValue.length&&"firewall.ssl-ssh-profile"===this._getEntryDatasource(newEntryValue[0]))){const profilesSelected=Array.isArray(newEntryValue)&&newEntryValue.length;this._utmStatusHidden()||(this.cmdbModel["utm-status"]=profilesSelected?"enable":"disable"),profilesSelected?"profile-group"===column.id&&(this.cmdbModel["profile-type"]="group"):this.cmdbModel["profile-type"]="single"}}_updateDependencyData(column,newEntryValue){UTM_PROFILE_EDITABLE_COLUMN_IDS.has(column.id)&&this._updateUtmStatus(column,newEntryValue),"poolname"!==column.id||Array.isArray(newEntryValue)&&newEntryValue.length||(this.cmdbModel.ippool="disable"),["ssh-ssh-profile","profile"].includes(column.id)&&["policy","proxy-policy"].includes(this.policyType)&&!policyOmniselectConfig.hasDeepInspectionProfile(this.cmdbModel)&&(this.cmdbModel["decrypted-traffic-mirror"]=""),"action"===column.id&&"deny"===newEntryValue&&(this.cmdbModel.logtraffic="disable"),"service"===column.id&&"disable"===newEntryValue&&(this.cmdbModel.service=[{datasource:"firewall.service.custom",q_origin_key:"ALL",name:"ALL"}])}async _setImplicitLogSetting(newValue){if(!this.logSetting){const errMsg="Cannot update without access to log setting.";return fLog.error(errMsg),Promise.reject(errMsg)}const mixedLogOption=["policy","security-policy"].includes(this.policyType);await this.logSetting.$promise;const logOption=policyInit.IMPLICIT_POLICY_LOG_PROPERTY[this.policyType],originalValue=this.cmdbModel.logtraffic;let result;try{mixedLogOption?(this.cmdbModel.logtraffic=this.logSetting[policyInit.IMPLICIT_POLICY_LOG_PROPERTY.policy]=newValue,state.featureEnabled("gui-ipv6")&&(this.logSetting[policyInit.IMPLICIT_POLICY_LOG_PROPERTY.policy6]=newValue)):this.cmdbModel.logtraffic=this.logSetting[logOption]=newValue,result=this.logSetting.$save()}catch(e){const errMsg=`Failed to save log setting for ${e.message}`;fLog.error(errMsg),this.cmdbModel.logtraffic=originalValue,this._setupLogSetting(),result=Promise.reject(errMsg)}return result}updateExternalData(column,newValue){let handler;return this.implicit&&"logtraffic"===column.id&&(handler=this._setImplicitLogSetting),handler?handler.call(this,newValue):Promise.resolve()}isExternalDataUpdate(column){return this.implicit&&"logtraffic"===column.id}setNewEntryValue(row,column,newEntryValue){this.isExternalDataUpdate(column)||(column.type===column.TYPE.OMNISELECT?row.isCollectionFallback(column)?this._updateCmdbProperty(column.id,newEntryValue,!0):this._updateOmniselectValue(row,column,newEntryValue):this._updateCmdbProperty(column.id,newEntryValue),this._updateDependencyData(column,newEntryValue))}meetValueDependencies(policyValueDependencies){return policyValueDependencies.every(dependency=>dependency.passed(this.cmdbModel))}isInternetServicePolicy(){return"enable"===this.cmdbModel["internet-service"]}isInternetServiceSourcePolicy(){return"enable"===this.cmdbModel["internet-service-src"]}isDenyPolicy(){return"deny"===this.cmdbModel.action}isFlowModePolicy(){return"flow"===this.cmdbModel["inspection-mode"]}enforceDefaultAppPort(){return"enable"===this.cmdbModel["enforce-default-app-port"]}updatePolicyStats(){this.stats=policyStats.getStats(this.policyId).then(stats=>(Object.assign(this.stats,stats),stats),()=>({}))}isAclPolicy(){return this.policyType.includes("acl")}isDosPolicy(){return this.policyType.includes("DoS")}isCentralSnatMap(){return"central-snat-map"===this.policyType}isProxyPolicy(){return"proxy-policy"===this.policyType}isSecurityPolicy(){return"security-policy"===this.policyType}isProfileTypeGroup(){return"group"===this.cmdbModel["profile-type"]}isNgfwFirewallPolicy(){return"policy"===this.policyType&&state.isNgfwPolicyMode()}prepareCopiedPolicy(prefix=""){prefix=prefix||"Copy of ",this.cmdbModel.comments+=` (${prefix}${this._originalLabel||this.policyLabel})`,["id","policyid","q_origin_key","name","label","global-label"].forEach(key=>{delete this.cmdbModel[key]}),this.cmdbModel.status="disable"}_hasExpiredSchedule(){return this.cmdbModel.schedule&&this.cmdbModel.schedule["css-class"]&&this.cmdbModel.schedule["css-class"].includes("expired")}_isInterfaceMandatory(key){return!("shaping-policy"===this.policyType&&"srcintf"===key)}_allInterfacesEmpty(interfaces){const mapping=Omniselect.getSourceDataSync("firewallInterfaces").mapping;return interfaces.every(intf=>(intf=mapping[intf.q_origin_key]||intf,Array.isArray(intf.members)&&!intf.members.length))}_allInterfacesDown(interfaces){const mapping=Omniselect.getSourceDataSync("firewallInterfaces").mapping;return interfaces.every(intf=>"down"===(intf=mapping[intf.q_origin_key]||intf).link)}_getAddressKeys(){return PolicyEntry.getAddressKeys(this.policyType)}_hasInvalidFqdnAddress(){const addressKeys=this._getAddressKeys();let hasInvalid=!1;return addressKeys.some(key=>{const addresses=this.cmdbModel[key];if(Array.isArray(addresses)&&addresses.some(addr=>PolicyEntry.isInvalidFqdn(addr)))return hasInvalid=!0,!0}),hasInvalid}_hasInvalidDynamicSdnAddress(){const addressKeys=this._getAddressKeys();let hasInvalid=!1;return addressKeys.some(key=>{const addresses=this.cmdbModel[key];if(Array.isArray(addresses)&&addresses.some(addr=>PolicyEntry.isInvalidDynamicSdn(addr)))return hasInvalid=!0,!0}),hasInvalid}_hasNoInspectionWithUtmProfiles(){const cmdbPolicy=this.cmdbModel;return Object.keys(policyInit.UTM_PROFILES).some(key=>"ssl-ssh-profile"!==key&&!!cmdbPolicy[key])&&cmdbPolicy["ssl-ssh-profile"]&&(cmdbPolicy["ssl-ssh-profile"].q_origin_key?"no-inspection"===cmdbPolicy["ssl-ssh-profile"].q_origin_key:"no-inspection"===cmdbPolicy["ssl-ssh-profile"])}_hasProxyUtmProfilesInFlowPolicy(){const cmdbPolicy=this.cmdbModel;return!utmProfileConfig.skipProfileFeatureSetCheck({isNgfwPolicyMode:state.isNgfwPolicyMode(),policyType:this.policyType,policyInspectionMode:cmdbPolicy["inspection-mode"]})&&(this.isProfileTypeGroup()?utmProfileConfig.profileGroupHasProxyProfiles(cmdbPolicy["profile-group"]):utmProfileConfig.policyHasProxyProfiles(cmdbPolicy))}setupWarnings(){this.warnings=[];this.stats.oversize&&this.warnings.push("policy_oversize"),this._hasExpiredSchedule()&&this.warnings.push("policy_expired_sch"),this._hasInvalidFqdnAddress()&&this.warnings.push("policy_invalid_fqdn"),this._hasInvalidDynamicSdnAddress()&&this.warnings.push("policy_invalid_dynamic"),this._hasNoInspectionWithUtmProfiles()&&this.warnings.push("The no-inspection profile doesn't perform SSL inspection, so it shouldn't be selected with other UTM profiles."),this._hasProxyUtmProfilesInFlowPolicy()&&this.warnings.push("policy_flow_policy_with_proxy_profiles");try{POLICY_INTF_KEYS.forEach(key=>{let intfs=this.cmdbModel[key];intfs&&(intfs=Array.isArray(intfs)?intfs:[intfs],this._allInterfacesEmpty(intfs)?this._isInterfaceMandatory(key)&&this.warnings.push(`policy_${key}_empty`):this._allInterfacesDown(intfs)&&this.warnings.push(`policy_${key}_down`))})}catch(e){fLog.warn(`Interface warnings cannot be setup for ${e.message}`)}try{const poolMeta=Omniselect.getSourceMetaDataSync("firewall.ippool"),poolnameKey="poolname";(this.cmdbModel["nat-ippool"]||"enable"===this.cmdbModel.ippool&&this.cmdbModel[poolnameKey])&&(this.cmdbModel[poolnameKey]||this.cmdbModel["nat-ippool"]).forEach(pool=>{const poolStats=poolMeta&&poolMeta.poolStats[pool.name];poolStats&&poolStats.available<10&&this.warnings.push(0===poolStats.available?"policy_ip_pool_exhausted":"policy_ip_pool_nearing_exhaustion")})}catch(e){fLog.warn(`IP pool warnings cannot be setup for ${e.message}`)}}}return PolicyEntry.PolicyValueDependency=class{constructor(key,candidateValues){this._key=key,this._candidateValues=candidateValues}passed(model){return model[this._key]&&this._candidateValues.includes(model[this._key])}},PolicyEntry.getAddressKeys=(policyType=>{let addressKeys=["srcaddr","dstaddr"];return"central-snat-map"===policyType?addressKeys=["orig-addr","dst-addr"]:"security-policy"!==policyType&&"policy"!==policyType||(addressKeys=["srcaddr","srcaddr6","dstaddr","dstaddr6"]),addressKeys}),PolicyEntry.isInvalidFqdn=(address=>{try{if(address["css-class"]&&address["css-class"].includes("address-fqdn")){const resolved=Omniselect.getSourceMetaDataSync(address.datasource)&&Omniselect.getSourceMetaDataSync(address.datasource).resolvedFqdn,resolvedFqdnInfo=resolved&&resolved[address.name],isWildcardFqdn=resolvedFqdnInfo&&resolvedFqdnInfo.wildcard,resolvedAddrs=resolvedFqdnInfo&&resolvedFqdnInfo.addrs;return!(isWildcardFqdn||Array.isArray(resolvedAddrs)&&resolvedAddrs.length)}return!1}catch(e){return fLog.warn(`Failed to check resolved FQDN for ${e.message}`),!1}}),PolicyEntry.isInvalidDynamicSdn=(address=>{try{if(address["css-class"]&&address["css-class"].includes("address-dynamic")){const resolved=Omniselect.getSourceMetaDataSync(address.datasource)&&Omniselect.getSourceMetaDataSync(address.datasource).resolvedDynamic,resolvedAddrs=resolved&&resolved[address.name],skipInvalid="ems-tag"===resolvedAddrs.subtype;if(resolvedAddrs&&!skipInvalid)return!Array.isArray(resolvedAddrs.addrs)||!resolvedAddrs.addrs.length}return!1}catch(e){return fLog.warn(`Failed to check dynamic address for ${e.message}`),!1}}),PolicyEntry.isExternalResource=(address=>"system.external-resource"===address.datasource),PolicyEntry}return providers=>{providers.$provide.factory("PolicyEntry",PolicyEntryFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(fLog=>{const DEFAULT_COLUMNS={policy:["name","srcintf","dstintf","consolidated-source","consolidated-destination","schedule","service","action","consolidated-poolname","profile","logtraffic","bytes"],"ngfw-firewall-policy":["name","srcintf","dstintf","consolidated-source","consolidated-destination","service","ssl-ssh-profile","ngfw-consolidated-nat","bytes"],policy46:["policyid","srcintf","dstintf","srcaddr","dstaddr","schedule","service","action","logtraffic"],"DoS-policy":["policyid","interface","srcaddr","dstaddr","service"],acl:["policyid","interface","srcaddr","dstaddr","service","acl_action","packets_dropped"],"multicast-policy":["policyid","srcintf","dstintf","srcaddr","dstaddr","protocol","action","logtraffic","snat"],"proxy-policy":["policyid","proxy","dstintf","proxy-source","proxy-destination","schedule","action","profile","logtraffic","bytes"],"central-snat-map":["policyid","srcintf","dstintf","orig-addr","dst-addr","nat-ippool","orig-port","nat-port","poolname"],"security-policy":["name","srcintf","dstintf","security-source","security-destination","schedule","service","applications","url-category","action","profile","logtraffic","hit_count"],"shaping-policy":["name","shaping-source","shaping-destination","dstintf","shaping-action","traffic-shaper","traffic-shaper-reverse","per-ip-shaper","service","schedule","status"]};function PolicyListTableColumnFactory(policyListTableColumnConfigs,state,policyInit){return new class{getColumns(params){try{return policyListTableColumnConfigs.generate(params)}catch(e){return fLog.error(`Failed to get columns for ${e.message||""}, `+"return empty list instead."),[]}}getDefaultColumns(defaultColumnsOverride){try{if(Array.isArray(defaultColumnsOverride)&&defaultColumnsOverride.length)return defaultColumnsOverride.map(id=>({"#":"policyid"})[id]||id);let type=policyInit.type;return"policy"===type&&state.isNgfwPolicyMode()&&(type="ngfw-firewall-policy"),DEFAULT_COLUMNS[type]}catch(e){return fLog.error(`Failed to get default columns for ${e.message||""}, `+"return empty list instead."),[]}}clearCache(){policyListTableColumnConfigs.clearCache()}}}return DEFAULT_COLUMNS.policy64=DEFAULT_COLUMNS.policy46,DEFAULT_COLUMNS["DoS-policy6"]=DEFAULT_COLUMNS["DoS-policy"],DEFAULT_COLUMNS.acl6=DEFAULT_COLUMNS.acl,providers=>{providers.$provide.factory("policyListTableColumn",PolicyListTableColumnFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(30),__webpack_require__(31),__webpack_require__(34),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((fLog,fDom,fDateTime,ftnt_shared)=>{const MuTable=ftnt_shared.MuTable,Tooltip=ftnt_shared.Tooltip,Omniselect=ftnt_shared.Omniselect,CMDB_API="/api/v2/cmdb",POLICY_ACTION_BASE_KEY="Firewall::policyAction.",logError=(error,customLog)=>{var errorMsg;errorMsg="string"==typeof error?error:error?error.message:"",fLog.error(`${customLog} ${errorMsg}`)},UTM_PROFILE_COLUMN_IDS=["av-profile","emailfilter-profile","webfilter-profile","file-filter-profile","dnsfilter-profile","waf-profile","application-list","ips-sensor","icap-profile","voip-profile","ssl-ssh-profile","profile-group"],SUPPORTED_COMPARE_TOOLTIP_KEYS=["bytes","packets","last_used","first_used","active_sessions","hit_count","packets_dropped","software_bytes","software_packets","asic_bytes","asic_packets","nturbo_bytes","nturbo_packets"],TOOLTIP_HINT_CLASS="tooltip-hint",LAZY_TEMPLATE_TIP_CLASS="lazy-tip",SIMPLE_TIP_CLASS="simple-tip",INFO_CENTRAL_SNAT="Central NAT is enabled so NAT settings from matching Central SNAT policies will be applied.";function PolicyListTableColumnConfigsFactory(state,$routeParams,lang,$http,$q,policyOmniselectConfig,PolicyEntry,$compile,policyStats,policyVWP,VisibilityCheck,utmProfileConfig,policyInit){const getColumnPolicyType=policyType=>"policy"===policyType&&state.isNgfwPolicyMode()?"ngfw-firewall-policy":policyType;let policyType,configParams;const CANDIDATE_COLUMNS={policy:["policyid","name","srcintf","dstintf","consolidated-srcaddr","consolidated-source","consolidated-dstaddr","consolidated-destination","consolidated-poolname","action","logtraffic","schedule","service","profile","av-profile","emailfilter-profile","webfilter-profile","dnsfilter-profile","waf-profile","application-list","ips-sensor","icap-profile","voip-profile","file-filter-profile","profile-protocol-options","ssl-ssh-profile","profile-group","bytes","packets","software_bytes","software_packets","asic_bytes","asic_packets","nturbo_bytes","nturbo_packets","last_used","first_used","active_sessions","hit_count","status","groups","users","vpntunnel","comments","inspection-mode","gtp-profile"],"ngfw-firewall-policy":["policyid","name","srcintf","dstintf","consolidated-srcaddr","consolidated-source","consolidated-dstaddr","consolidated-destination","ngfw-consolidated-nat","service","comments","status","groups","users","ssl-ssh-profile","bytes","packets","software_bytes","software_packets","asic_bytes","asic_packets","nturbo_bytes","nturbo_packets","last_used","first_used","active_sessions","hit_count"],"security-policy":["policyid","name","srcintf","dstintf","security-srcaddr","security-source","security-dstaddr","security-destination","schedule","service","applications","url-category","action","logtraffic","profile","av-profile","webfilter-profile","file-filter-profile","dnsfilter-profile","ips-sensor","emailfilter-profile","profile-protocol-options","profile-group","status","groups","users","comments","hit_count"],policy46:["policyid","srcintf","dstintf","schedule","service","action","poolname","logtraffic","srcaddr","dstaddr","status","comments"],policy64:["policyid","srcintf","dstintf","schedule","service","action","poolname","logtraffic","srcaddr","dstaddr","status","comments"],"DoS-policy":["policyid","service","interface","srcaddr","dstaddr","status","comments"],"DoS-policy6":["policyid","service","interface","srcaddr","dstaddr","status","comments"],"multicast-policy":["policyid","srcintf","dstintf","action","logtraffic","srcaddr","dstaddr","status","snat","dnat","protocol"],"proxy-policy":["policyid","dstintf","proxy-source","proxy-destination","schedule","action","profile","logtraffic","bytes","service","av-profile","webfilter-profile","file-filter-profile","waf-profile","application-list","ips-sensor","icap-profile","profile-protocol-options","ssl-ssh-profile","profile-group","last_used","first_used","active_sessions","hit_count","proxy","status","groups","users","comments"],"central-snat-map":["policyid","srcintf","dstintf","poolname","orig-addr","dst-addr","nat-ippool","status","ip-version","comments","orig-port","nat-port","protocol"],acl:["policyid","interface","service","packets_dropped","srcaddr","dstaddr","acl_action","status","comments"],acl6:["policyid","interface","service","packets_dropped","srcaddr","dstaddr","acl_action","status","comments"],"shaping-policy":["policyid","name","dstintf","shaping-source","shaping-destination","shaping-action","traffic-shaper","traffic-shaper-reverse","per-ip-shaper","service","schedule","users","groups","applications","url-category","status","ip-version","class-id","comment"]},VISIBILITY_CHECKS={applications:new VisibilityCheck({dependencyChecks:["ngfwPolicyMode"]}),"url-category":new VisibilityCheck({dependencyChecks:["ngfwPolicyMode"]}),poolname:new VisibilityCheck({dependencyChecks:["natMode"]}),"consolidated-poolname":new VisibilityCheck({dependencyChecks:["natMode"]}),"ngfw-consolidated-nat":new VisibilityCheck({dependencyChecks:["natMode"]}),software_bytes:new VisibilityCheck({dependencyChecks:["haveNetNpu"]}),software_packets:new VisibilityCheck({dependencyChecks:["haveNetNpu"]}),asic_bytes:new VisibilityCheck({dependencyChecks:["haveNetNpu"]}),asic_packets:new VisibilityCheck({dependencyChecks:["haveNetNpu"]}),nturbo_bytes:new VisibilityCheck({dependencyChecks:["haveNturbo"]}),nturbo_packets:new VisibilityCheck({dependencyChecks:["haveNturbo"]}),vpntunnel:new VisibilityCheck({featureChecks:["gui-vpn"]}),"gtp-profile":new VisibilityCheck({dependencyChecks:["carrier","ngfwProfileMode"]}),"inspection-mode":new VisibilityCheck({dependencyChecks:["ngfwProfileMode"]})},visibilityCheckPassed=(columnId,cmdbPolicy)=>VISIBILITY_CHECKS[columnId]?VISIBILITY_CHECKS[columnId].checkPassed(cmdbPolicy):!utmProfileConfig.isUtmProfile(columnId)||utmProfileConfig.visible(cmdbPolicy,columnId),cmdbGet=(path,name,mkey,params={with_meta:1,datasource:1})=>{mkey=mkey?`/${encodeURIComponent(mkey)}`:"";const uri=`${CMDB_API}/${path}/${name}${mkey}`;return $http.get(uri,{params:params}).then(result=>result.data.results,err=>{logError(err,`Failed to fetch ${path}.${name}.${mkey} for: `)})},translate=langKey=>lang(langKey).toString(),defaultEditableCheck=entry=>!entry.implicit&&!entry.isAclPolicy()&&!entry.isDosPolicy(),getOmniselectSettings=(entry,column,datasource)=>{const cmdbPolicy=entry.cmdbModel;return datasource||(datasource=column.id),policyOmniselectConfig.get(datasource,cmdbPolicy,config=>policyOmniselectConfig.postProcessSelect(config,datasource))},utmProfileEditable=(entry,column)=>utmProfileConfig.editable(entry,column.id),cmdbCellValue=(entry,column)=>{if("central-snat-map"===entry.policyType){if("orig-addr"===column.id)return entry.cmdbModel[column.id].concat(entry.cmdbModel["orig-addr6"]);if("dst-addr"===column.id)return entry.cmdbModel[column.id].concat(entry.cmdbModel["dst-addr6"]);if("nat-ippool"===column.id)return entry.cmdbModel[column.id].concat(entry.cmdbModel["nat-ippool6"])}return entry.cmdbModel[column.id]},statsCellValue=(entry,column)=>ftnt_shared.util.objectIsThenable(entry.stats)?entry.stats.then(stats=>stats[column.id]||0,()=>0):entry.stats[column.id]||0,utmProfileCellValue=(entry,column)=>utmProfileEditable(entry,column)?cmdbCellValue(entry,column):"",enableDisableCellValue=(entry,column)=>{let value=entry.cmdbModel[column.id];return value=value?translate(`${value}d`):""},createOmniselectCellValueFunction=(datasource,valueFn,processFn)=>(entry,column)=>("function"!=typeof valueFn&&(valueFn=cmdbCellValue),"function"!=typeof processFn&&(processFn=((_entry,_column,_valueFn)=>{let rawValue=_valueFn(_entry,_column);return Array.isArray(rawValue)?rawValue.map(value=>({q_origin_key:value.q_origin_key,datasource:datasource})):{q_origin_key:rawValue.q_origin_key,datasource:datasource}})),processFn(entry,column,valueFn)),defaultIntfOmniselectCellValueFunction=createOmniselectCellValueFunction("firewallInterfaces"),defaultAddrOmniselectCellValueFunction=createOmniselectCellValueFunction(null,null,(entry,column,valueFn)=>{let addrs=valueFn(entry,column);return addrs=entry.processExternalResource(addrs,column.id)}),ippoolNotUsed=(cmdbPolicy,column)=>{const isConsolidated="policy"===policyType;return"disable"===cmdbPolicy.ippool||isConsolidated&&!cmdbPolicy.poolname&&!cmdbPolicy.poolname6||!isConsolidated&&!cmdbPolicy[column.id]},natEnabledIsCollection=function(cmdbPolicy,column){const natOption="multicast-policy"===policyType?cmdbPolicy.snat:cmdbPolicy.nat;return"deny"!==cmdbPolicy.action&&("multicast-policy"!==policyType&&"disable"!==natOption&&!ippoolNotUsed(cmdbPolicy,column))},natEnabledFallback=(cmdbPolicy,column)=>{if("deny"===cmdbPolicy.action)return"";let elem;const natOption="multicast-policy"===policyType?cmdbPolicy.snat:cmdbPolicy.nat;return"multicast-policy"===policyType||"disable"===natOption?fDom.elem("span",null,{children:[fDom.elem("f-icon",{className:`fa-${natOption}d`}),fDom.elem("span",{textContent:translate(`${natOption}d`)})]}):ippoolNotUsed(cmdbPolicy,column)?elem=fDom.elem("span",{className:SIMPLE_TIP_CLASS},{children:[fDom.elem("f-icon",{className:"fa-enabled"}),fDom.elem("span",{textContent:translate("enabled")})]}):void 0};let actionOptions=[];"central-snat-map"!==policyType?actionOptions.push(new MuTable.EditableOption({label:translate(`${POLICY_ACTION_BASE_KEY}accept`),entryValue:"accept"})):actionOptions.push(new MuTable.EditableOption({label:translate(`${POLICY_ACTION_BASE_KEY}permit`),entryValue:"permit"})),actionOptions.push(new MuTable.EditableOption({label:translate(`${POLICY_ACTION_BASE_KEY}deny`),entryValue:"deny"}));const enableDisableOptions=[new MuTable.EditableOption({label:translate("enable"),cellValue:translate("enabled"),entryValue:"enable",iconClass:"fa-enabled"}),new MuTable.EditableOption({label:translate("disable"),cellValue:translate("disabled"),entryValue:"disable",iconClass:"fa-disabled"})],formatOneAction=(iconKey,actionText,title)=>{const icon={accept:"fa-accepted",deny:"fa-denied",authenticate:"ftnt-ipsec-vpn-custom",ipsec:"ftnt-ipsec-vpn-custom",permit:"fa-accepted"}[iconKey]||"",actionElems=[fDom.elem("f-icon",{className:icon}),fDom.elem("span",{textContent:actionText||""})];return title?fDom.elem("div",null,{children:[fDom.elem("span",{textContent:`${title}: `})].concat(actionElems)}):fDom.elem("span",null,{children:actionElems})},logTrafficCellValue=logtraffic=>{const isOverriddenByCsf=configParams.isDefaultSyncMode;return logtraffic=translate(isOverriddenByCsf?"all":{enable:"enabled",disable:"disabled",utm:"UTM"}[logtraffic]||logtraffic)},formatOneLogTraffic=(iconKey,iconOverride,logTrafficText,className,title)=>{const icon=iconOverride||iconKey&&{all:"fa-enabled",enable:"fa-enabled",utm:"fa-shield",disable:"fa-disabled",unknown:"fa-unknown"}[iconKey]||"",children=[fDom.elem("f-icon",{className:icon}),fDom.elem("span",{textContent:logTrafficText})];let cellElem;return cellElem=title?fDom.elem("div",null,{children:[fDom.elem("span",{textContent:`${title}: `})].concat(children)}):fDom.elem("span",null,{children:children}),className&&(cellElem.className=className),cellElem},DEFAULT_TOOLTIP_CONFIG={showDelay:!0},addTemplateTooltipToElement=(element,params)=>{if(!element||!params)return;(element=element.querySelector(`.${LAZY_TEMPLATE_TIP_CLASS}`)||element).classList.add(TOOLTIP_HINT_CLASS);const content=fDom.elem("div",null,{children:[fDom.elem("f-icon",{className:"fa-loading"})]}),tooltip=Tooltip.addToElement(element,content,DEFAULT_TOOLTIP_CONFIG);let rendered=!1;const tooltipScope=configParams.ctrlScope.$new();return tooltip.onShow(()=>{rendered||tooltipScope.$apply(()=>{if(!params.data||!params.template)throw new Error('Invalid "params" for generating template based tooltips');Object.assign(tooltipScope,params.data);const tooltipContent=$compile(params.template)(tooltipScope);content.innerHTML="",content.appendChild(tooltipContent[0]),rendered=!0})}),tooltip.onDestroy(()=>{tooltipScope.$destroy(),rendered=!1}),tooltip},addSimpleTooltipToElement=(element,tooltipContentElement)=>{if(element&&tooltipContentElement&&(element=element.querySelector(`.${SIMPLE_TIP_CLASS}`)))return element.classList.add(TOOLTIP_HINT_CLASS),Tooltip.addToElement(element,tooltipContentElement)},columnMeetsDependencies=(columnId,cmdbPolicy)=>CANDIDATE_COLUMNS[getColumnPolicyType(policyType)]&&CANDIDATE_COLUMNS[getColumnPolicyType(policyType)].includes(columnId)&&visibilityCheckPassed(columnId,cmdbPolicy);function policyStatsCellRendered(element,entry,column){const row=this;if(!entry.stats[column.id])return;policyStats.addListener(entry.policyId,()=>{entry.updatePolicyStats(),row.updateEntry({})}),element=element.querySelector(".compare-bar-caption-text")||element;const supportedKeys=SUPPORTED_COMPARE_TOOLTIP_KEYS.reduce((keys,columnId)=>(keys[columnId]=columnMeetsDependencies(columnId),keys),{});return addTemplateTooltipToElement(element,{data:{stats:entry.stats,entry:{"auto-asic-offload":entry.cmdbModel["auto-asic-offload"],policyId:entry.policyId},supportedKeys:supportedKeys},template:'<f-policy-list-stats-tooltip entry="::entry" stats="::stats" supported-keys="::supportedKeys"></f-policy-list-stats-tooltip>'})}const isNegated=(policy,collectionEntry,columnId)=>{let property;property="service"===columnId?"service":["srcaddr","proxy-source","consolidated-source","security-source"].includes(columnId)?"source":"destination";const negateKey=policyOmniselectConfig.getPolicyNegateKey(policy,property),datasource=collectionEntry.datasource||`${collectionEntry.q_path}.${collectionEntry.q_name}`;return"enable"===policy[negateKey]&&("service"===columnId||!datasource.includes("external-resource")&&!datasource.includes("user"))};function applyNegateStyle(element,collectionEntry,column){if(isNegated(this.entry.cmdbModel,collectionEntry,column.id)){let iconElement=element.querySelector("f-icon");const negateIcon="fa-negate";if(iconElement)iconElement.className=negateIcon;else if(iconElement=element.querySelector(".app-icon-container")){let container=iconElement.parentNode;iconElement.remove();const textElement=container.querySelector("span");iconElement=fDom.elem("f-icon",{className:negateIcon}),container.insertBefore(iconElement,textElement)}}}const isPoolExhausted=ippoolEntry=>{if((ippoolEntry.datasource||`${ippoolEntry.q_path}.${ippoolEntry.q_name}`).includes("6"))return!1;let poolMeta;try{poolMeta=Omniselect.getSourceMetaDataSync("firewall.ippool")}catch(e){}const poolStats=poolMeta&&poolMeta.poolStats[ippoolEntry.name];return!!(poolStats&&poolStats.available<10)};function applyPoolExhaustStyle(element,collectionEntry){if(isPoolExhausted(collectionEntry)){let iconElement=element.querySelector("f-icon");const negateIcon="ftnt-ip-pool-exhausted";iconElement&&(iconElement.className=negateIcon)}}const onIPPoolCellRendered=element=>addSimpleTooltipToElement(element,fDom.elem("table",{className:"table key-value"},{children:[fDom.elem("tbody",null,{children:[fDom.elem("tr",null,{children:[fDom.elem("td",{textContent:translate("IP Pool Configuration")}),fDom.elem("td",{textContent:translate("natdstintf")})]})]})]})),CONFIGS={policyid:{langKey:"field_policyid",type:"number",cellValueFunction:entry=>entry.policyId},name:{langKey:"field_name",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableValidateFunction:(newValue,entry)=>{let cmdbRequests=[];const isEmpty=null==newValue||"string"==typeof newValue&&!newValue;if(!state.featureEnabled("gui-allow-unnamed-policy")&&isEmpty)return"This field is required";const requestParams={format:"name"};return cmdbRequests="shaping-policy"===entry.policyType?[cmdbGet("firewall","shaping-policy",null,requestParams)]:[cmdbGet("firewall","policy",null,requestParams),cmdbGet("firewall","security-policy",null,requestParams)],newValue&&newValue!==entry.cmdbModel.name&&$q.all(cmdbRequests).then(policyLists=>{return policyLists.some(policyList=>policyList.some(policy=>(name=>name===newValue)(policy.name)))&&"-15"})},cellFormatter:(entry,column,value)=>{let children=[];return"disable"===entry.cmdbModel.status&&children.push(fDom.elem("f-icon",{className:"fa-disabled"})),entry.warnings&&entry.warnings.length>0&&children.push(fDom.elem("f-icon",{className:"fa-warning"})),fDom.elem("label",{className:`inline-flex-row-centered ${LAZY_TEMPLATE_TIP_CLASS}`,textContent:value},{children:children})},onCellRendered:(element,entry,column,cellValue)=>addTemplateTooltipToElement(element,{data:{entry:{policyId:entry.policyId,name:cellValue,status:entry.cmdbModel.status,action:entry.cmdbModel.action},warnings:entry.warnings},template:'<f-policy-list-id-tooltip entry="::entry" warnings="::warnings"></f-policy-list-id-tooltip>'})},proxy:{langKey:"field_proxy",cellValueFunction:entry=>{let value=entry.cmdbModel.proxy;return null!=value&&(value=translate(`proxy_type_${value}`)),value}},srcintf:{langKey:"field_srcintf",type:"omniselect",cellValueFunction:defaultIntfOmniselectCellValueFunction,editable:entry=>!policyVWP.isVirtualWirePolicy()&&!entry.implicit&&!entry.isCentralSnatMap(),editableOmniselectSettings:getOmniselectSettings},dstintf:{langKey:"field_dstintf",type:"omniselect",cellValueFunction:function(entry,column){return("shaping-policy"===entry.policyType?createOmniselectCellValueFunction("dummySdwanFirewallInterfaces"):defaultIntfOmniselectCellValueFunction).call(this,entry,column)},editable:entry=>!policyVWP.isVirtualWirePolicy()&&!entry.implicit&&!entry.isCentralSnatMap(),editableOmniselectSettings:getOmniselectSettings},interface:{langKey:"field_interface",type:"omniselect",cellValueFunction:defaultIntfOmniselectCellValueFunction,editable:defaultEditableCheck,editableOmniselectSettings:getOmniselectSettings},status:{langKey:"field_status",cellValueFunction:enableDisableCellValue,cellFormatter:(entry,column,translatedValue)=>{const icon={enable:"fa-enabled",disable:"fa-disabled"}[entry.cmdbModel.status]||"",actionElems=[fDom.elem("f-icon",{className:icon}),fDom.elem("span",{textContent:translatedValue})];return fDom.elem("span",null,{children:actionElems})},editable:entry=>!entry.implicit,editableType:"selection",editableOptions:enableDisableOptions},"proxy-source":{langKey:"field_source",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.proxySource,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"proxy-destination":{langKey:"field_destination",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.proxyDestination,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},srcaddr:{langKey:"src_addr",type:"omniselect",cellValueFunction:defaultAddrOmniselectCellValueFunction,collectionEntryOnRender:applyNegateStyle,editable:entry=>defaultEditableCheck(entry)&&!entry.isInternetServiceSourcePolicy(),editableOmniselectSettings:getOmniselectSettings},"consolidated-source":{langKey:"field_source",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.consolidatedSource,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"consolidated-srcaddr":{langKey:"src_addr",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.consolidatedSourceAddress,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"consolidated-dstaddr":{langKey:"field_dstaddr",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.consolidatedDestinationAddress,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"consolidated-destination":{langKey:"field_destination",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.consolidatedDestination,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"security-source":{langKey:"field_source",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.securitySource,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"security-srcaddr":{langKey:"src_addr",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.securitySourceAddress,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"security-destination":{langKey:"field_destination",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.securityDestination,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"security-dstaddr":{langKey:"field_dstaddr",type:"omniselect",collectionEntryOnRender:applyNegateStyle,cellValueFunction:entry=>entry.securityDestinationAddress,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"orig-addr":{langKey:"src_addr",type:"omniselect",cellValueFunction:cmdbCellValue},dstaddr:{langKey:"field_dstaddr",type:"omniselect",cellValueFunction:defaultAddrOmniselectCellValueFunction,collectionEntryOnRender:applyNegateStyle,editable:entry=>defaultEditableCheck(entry)&&!entry.isInternetServicePolicy(),editableOmniselectSettings:getOmniselectSettings},"dst-addr":{langKey:"field_dstaddr",type:"omniselect",cellValueFunction:cmdbCellValue},schedule:{langKey:"field_schedule",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},service:{langKey:"field_service",type:"omniselect",cellValueFunction:cmdbCellValue,cellIsValidCollectionFunction:entry=>!(entry.enforceDefaultAppPort()||entry.isInternetServicePolicy()||entry.isProxyPolicy()&&"ftp"===entry.cmdbModel.proxy),collectionEntryOnRender:applyNegateStyle,collectionFallbackFormatter:entry=>entry.enforceDefaultAppPort()?translate("App Default"):entry.isInternetServicePolicy()?translate("Internet Service"):entry.isProxyPolicy()&&"ftp"===entry.cmdbModel.proxy?translate("ftp-proxy"):"",editable:entry=>defaultEditableCheck(entry)&&(entry.enforceDefaultAppPort()||!entry.isInternetServicePolicy()&&(!entry.isProxyPolicy()||"ftp"!==entry.cmdbModel.proxy)),editableOmniselectSettings:getOmniselectSettings,editableType:"selection",editableOptions:[new MuTable.EditableOption({label:translate("App Default"),cellValue:translate("App Default"),entryValue:"enable"}),new MuTable.EditableOption({label:translate("Specify"),cellValue:translate("Specify"),entryValue:"disable"})]},applications:{langKey:"field_application",type:"omniselect",editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"url-category":{langKey:"URL Category",type:"omniselect",cellValueFunction:entry=>entry.urlCategory,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},groups:{langKey:"field_groups",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit&&"ipsec"!==entry.cmdbModel.action,editableOmniselectSettings:getOmniselectSettings},users:{langKey:"field_users",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit&&"ipsec"!==entry.cmdbModel.action,editableOmniselectSettings:getOmniselectSettings},vpntunnel:{langKey:"field_vpntunnel",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit&&"ipsec"===entry.cmdbModel.action,editableOmniselectSettings:getOmniselectSettings},action:{langKey:"field_action",type:"collection",cellIsValidCollectionFunction:entry=>Array.isArray(entry.action),collectionFallbackValueFunction:entry=>translate(POLICY_ACTION_BASE_KEY+entry.action),collectionFallbackFormatter:(entry,column,cellValue)=>formatOneAction(entry.action,cellValue),collectionEntryValueFunction:collectionEntry=>({value:translate(POLICY_ACTION_BASE_KEY+collectionEntry.value),rawValue:collectionEntry.value,title:collectionEntry.title}),collectionEntryFormatter:(entry,collectionEntryValueObject)=>formatOneAction(collectionEntryValueObject.rawValue,collectionEntryValueObject.value,collectionEntryValueObject.title),collectionEntryMatchesSearch:(collectionEntry,searchValue)=>translate(POLICY_ACTION_BASE_KEY+collectionEntry.value).toLowerCase().indexOf(searchValue)>=0,editable:entry=>!entry.implicit&&!Array.isArray(entry.action),editableType:"selection",editableOptions:actionOptions},acl_action:{langKey:"field_action",cellValueFunction:()=>translate("deny"),cellFormatter:(entry,column,translatedValue)=>{const actionElems=[fDom.elem("f-icon",{className:"fa-denied"}),fDom.elem("span",{textContent:translatedValue})];return fDom.elem("span",null,{children:actionElems})}},poolname:{langKey:"field_nat",type:"omniselect",cellValueFunction:cmdbCellValue,cellIsValidCollectionFunction:(entry,column)=>natEnabledIsCollection(entry.cmdbModel,column),collectionEntryOnRender:applyPoolExhaustStyle,collectionFallbackFormatter:(entry,column)=>{const cmdbPolicy=entry.cmdbModel;return natEnabledFallback(cmdbPolicy,column)},editable:entry=>{const centralNatEnabled=state.centralNatEnabled({skipNgfwCheck:!0});if(entry.implicit)return!1;if(["policy64","policy46"].includes(policyType))return"enable"===entry.cmdbModel.ippool;if(!centralNatEnabled&&"central-snat-map"!==policyType){const dependencies=[new PolicyEntry.PolicyValueDependency("action",["accept"])];if(!entry.meetValueDependencies(dependencies))return!1}return!0},editableType:"selection",editableOptions:enableDisableOptions,editableOmniselectSettings:getOmniselectSettings,onCellRendered:onIPPoolCellRendered},"consolidated-poolname":{langKey:"field_nat",type:"omniselect",cellValueFunction:entry=>entry.consolidatedPoolname,cellIsValidCollectionFunction:(entry,column)=>!state.centralNatEnabled({skipNgfwCheck:!0})&&natEnabledIsCollection(entry.cmdbModel,column),collectionEntryOnRender:applyPoolExhaustStyle,collectionFallbackFormatter:(entry,column)=>{const cmdbPolicy=entry.cmdbModel;return state.centralNatEnabled({skipNgfwCheck:!0})?"deny"===cmdbPolicy.action?"":fDom.elem("span",{title:translate(INFO_CENTRAL_SNAT),className:SIMPLE_TIP_CLASS},{children:[fDom.elem("f-icon",{className:"fa-help-info"}),fDom.elem("span",{textContent:translate("Custom")})]}):natEnabledFallback(cmdbPolicy,column)},editable:entry=>{const centralNatEnabled=state.centralNatEnabled({skipNgfwCheck:!0});if(entry.implicit||centralNatEnabled)return!1;if(!centralNatEnabled){const dependencies=[new PolicyEntry.PolicyValueDependency("action",["accept"])];if(!entry.meetValueDependencies(dependencies))return!1}return!0},editableOmniselectSettings:getOmniselectSettings,editableType:"selection",editableOptions:enableDisableOptions,onCellRendered:onIPPoolCellRendered},"ngfw-consolidated-nat":{langKey:"field_nat",cellValueFunction:()=>translate("Custom"),cellFormatter:(entry,column,translatedValue)=>entry.implicit?"":fDom.elem("span",{title:translate(INFO_CENTRAL_SNAT),className:SIMPLE_TIP_CLASS},{children:[fDom.elem("f-icon",{className:"fa-help-info"}),fDom.elem("span",{textContent:translatedValue})]}),onCellRendered:(element,entry)=>{if(!entry.implicit)return addSimpleTooltipToElement(element,translate(INFO_CENTRAL_SNAT))}},"nat-ippool":{langKey:"trnsaddr",type:"omniselect",hidden:entry=>"ipv6"===entry.cmdbModel.type,cellValueFunction:cmdbCellValue,cellIsValidCollectionFunction:(entry,column)=>natEnabledIsCollection(entry.cmdbModel,column),collectionEntryOnRender:applyPoolExhaustStyle,collectionFallbackFormatter:(entry,column)=>natEnabledFallback(entry.cmdbModel,column),editable:(entry,column)=>{const cmdbModel=entry.cmdbModel;return!(entry.implicit||!natEnabledIsCollection(cmdbModel,column))&&"0"===cmdbModel["orig-port"]===("0"===cmdbModel["nat-port"])},editableOmniselectSettings:entry=>"ipv6"===entry.cmdbModel.type?{sources:["firewall.ippool6"]}:{sources:["firewall.ippool"]},editableRequired:!0},snat:{langKey:"field_snat",cellValueFunction:enableDisableCellValue,cellFormatter:(entry,column)=>natEnabledFallback(entry.cmdbModel,column),editable:entry=>!entry.implicit&&!entry.isDenyPolicy(),editableType:"selection",editableOptions:enableDisableOptions},dnat:{langKey:"field_dnat",cellValueFunction:cmdbCellValue},"orig-port":{langKey:"srcport",cellValueFunction:cmdbCellValue,cellFormatter:(entry,column,value)=>(0===Number(value)&&(value=""),value)},"nat-port":{langKey:"trnsport",cellValueFunction:cmdbCellValue,cellFormatter:(entry,column,value)=>(0===Number(value)&&(value=""),value)},profile:{langKey:"field_profile",type:"omniselect",collectionEntryHeight:20,editable:entry=>!entry.implicit&&!entry.isDenyPolicy()&&!entry.isNgfwFirewallPolicy(),editableOmniselectSettings:entry=>{const filteredColumnIds=UTM_PROFILE_COLUMN_IDS.filter(columnId=>columnMeetsDependencies(columnId,entry.cmdbModel));return policyOmniselectConfig.getProfilesSettings(filteredColumnIds,entry.cmdbModel)}},"av-profile":{langKey:"field_av-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"emailfilter-profile":{langKey:"field_emailfilter-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"webfilter-profile":{langKey:"field_webfilter-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"file-filter-profile":{langKey:"File Filter",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"dnsfilter-profile":{langKey:"field_dnsfilter-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"waf-profile":{langKey:"field_waf-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"application-list":{langKey:"field_application-list",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"ips-sensor":{langKey:"field_ips-sensor",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"icap-profile":{langKey:"field_icap-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"voip-profile":{langKey:"field_voip-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"profile-protocol-options":{langKey:"field_profile-protocol-options",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"ssl-ssh-profile":{langKey:"field_ssl-ssh-profile",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"profile-group":{langKey:"field_profile-group",type:"omniselect",cellValueFunction:utmProfileCellValue,editable:utmProfileEditable,editableOmniselectSettings:getOmniselectSettings},"gtp-profile":{langKey:"field_gtp-profile",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},protocol:{langKey:"field_protocol",type:"number",cellValueFunction:cmdbCellValue},logtraffic:{langKey:"field_logtraffic",type:"collection",cellIsValidCollectionFunction:entry=>Array.isArray(entry.cmdbModel.logtraffic),cellValueFunction:cmdbCellValue,collectionFallbackValueFunction:entry=>logTrafficCellValue(entry.cmdbModel.logtraffic),collectionFallbackFormatter:(entry,column,translatedValue)=>{let cellElem;return cellElem=configParams.isDefaultSyncMode?formatOneLogTraffic(null,"fa-help-info",translatedValue,SIMPLE_TIP_CLASS):formatOneLogTraffic(entry.cmdbModel.logtraffic,null,translatedValue)},collectionEntryValueFunction:collectionEntry=>({value:logTrafficCellValue(collectionEntry.value),rawValue:collectionEntry.value,title:collectionEntry.title}),collectionEntryFormatter:(entry,collectionEntryValueObject)=>formatOneLogTraffic(collectionEntryValueObject.rawValue,null,collectionEntryValueObject.value,null,collectionEntryValueObject.title),collectionEntryMatchesSearch:(collectionEntry,searchValue)=>logTrafficCellValue(collectionEntry.value).toLowerCase().indexOf(searchValue)>=0,onCellRendered:element=>{return addSimpleTooltipToElement(element,translate("Security Fabric is enabled so logging will exempt traffic from downstream FortiGates."))},editable:()=>!configParams.isDefaultSyncMode,editableType:"selection",editableOptions:entry=>{if(entry.implicit)return enableDisableOptions;{let options=[];if(["policy","proxy-policy","security-policy"].includes(policyType)){options.push(new MuTable.EditableOption({label:translate("all"),entryValue:"all"}));const dependencies=[new PolicyEntry.PolicyValueDependency("action",["accept","ipsec"])];entry.meetValueDependencies(dependencies)&&options.push(new MuTable.EditableOption({label:translate("UTM"),entryValue:"utm"}))}else options.push(new MuTable.EditableOption({label:translate("enable"),entryValue:"enable"}));return options.push(new MuTable.EditableOption({label:translate("disable"),entryValue:"disable"})),options}}},bytes:{type:"number",numberType:"metricBytes",numberCompareBar:!0,langKey:"field_bytes",cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},packets:{type:"number",numberCompareBar:!0,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},software_bytes:{langKey:"Software Bytes",type:"number",numberType:"metricBytes",numberCompareBar:!0,getCompareBarMax:entry=>entry.stats.bytes,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},software_packets:{langKey:"Software Packets",type:"number",numberCompareBar:!0,getCompareBarMax:entry=>entry.stats.packets,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},asic_bytes:{langKey:"SPU Bytes",type:"number",numberType:"metricBytes",cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},asic_packets:{langKey:"SPU Packets",type:"number",cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},nturbo_bytes:{langKey:"nTurbo Bytes",type:"number",numberType:"metricBytes",cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},nturbo_packets:{langKey:"nTurbo Packets",type:"number",cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},last_used:{type:"date",dateType:"fromNow",cellValueFunction:entry=>{if(entry.stats.last_used)return fDateTime.fortiGateUTCToBrowserUTC(1e3*entry.stats.last_used)},onCellRendered:policyStatsCellRendered},first_used:{type:"date",dateType:"fromNow",cellValueFunction:entry=>{if(entry.stats.first_used)return fDateTime.fortiGateUTCToBrowserUTC(1e3*entry.stats.first_used)},onCellRendered:policyStatsCellRendered},active_sessions:{type:"number",numberCompareBar:!0,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},hit_count:{type:"number",numberCompareBar:!0,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},packets_dropped:{langKey:"Packets Dropped",type:"number",numberCompareBar:!0,cellValueFunction:statsCellValue,onCellRendered:policyStatsCellRendered},comments:Object.assign({},MuTable.STANDARD_COLUMNS.comments,{editable:entry=>!entry.implicit,cellValueFunction:cmdbCellValue}),comment:Object.assign({},MuTable.STANDARD_COLUMNS.comments,{editable:entry=>!entry.implicit,cellValueFunction:cmdbCellValue}),"inspection-mode":{langKey:"inspect_mode",cellValueFunction:entry=>{const inspectionMode=entry.cmdbModel["inspection-mode"];if(inspectionMode)return translate(`inspection_mode::${inspectionMode}`)}},"ip-version":{langKey:"IP Version",type:"standard",cellValueFunction:entry=>{if(entry.implicit)return translate("implicit");if("central-snat-map"===policyType){const ipVersion=entry.cmdbModel.type;return translate(ipVersion)}const ipVersion=entry.cmdbModel["ip-version"];return translate(`IPv${ipVersion}`)},cellFormatter:function(entry,column,value){return entry.implicit?fDom.elem("div",{className:"empty-sequence-grouping",textContent:value}):value},sortComparator:function(a,b,entryA,entryB){return entryA.implicit?1:entryB.implicit?-1:a.compareTo(b)}},"shaping-source":{langKey:"field_source",type:"omniselect",cellValueFunction:entry=>entry.shapingSource,editable:entry=>!entry.implicit,editableOmniselectSettings:(entry,column)=>{const datasource="4"===entry.cmdbModel["ip-version"]?"shaping-source":"shaping-source6";return getOmniselectSettings(entry,column,datasource)}},"shaping-destination":{langKey:"field_destination",type:"omniselect",cellValueFunction:entry=>entry.shapingDestination,editable:entry=>!entry.implicit,editableOmniselectSettings:(entry,column)=>{const datasource="4"===entry.cmdbModel["ip-version"]?"shaping-destination":"shaping-destination6";return getOmniselectSettings(entry,column,datasource)}},"shaping-action":{langKey:"Action",cellValueFunction:entry=>entry.cmdbModel["class-id"]?translate("Assign Shaping Class ID"):translate("Apply Shaper")},"traffic-shaper":{langKey:"traffic_fwd",type:"omniselect",cellValueFunction:cmdbCellValue,cellIsValidCollectionFunction:function(entry){return!entry.implicit},collectionFallbackFormatter:function(entry,column){return cmdbCellValue(entry,column)},editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"traffic-shaper-reverse":{langKey:"Reverse Shaper",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"per-ip-shaper":{langKey:"Per-IP Shaper",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings},"class-id":{langKey:"Traffic Shaping Class ID",type:"omniselect",cellValueFunction:cmdbCellValue,editable:entry=>!entry.implicit,editableOmniselectSettings:getOmniselectSettings}};return new class{generate(params){configParams=params,policyType=policyInit.type;const columnPolicyType=getColumnPolicyType(policyType);return CANDIDATE_COLUMNS[columnPolicyType]&&CANDIDATE_COLUMNS[columnPolicyType].reduce((columns,columnId)=>(visibilityCheckPassed(columnId)&&(CONFIGS[columnId]?columns.push(Object.assign({id:columnId,hidden:params.interfacePair&&params.interfacePairKeys.includes(columnId)},CONFIGS[columnId])):columns.push(columnId)),columns),[])}clearCache(){configParams=null}}}return providers=>{providers.$provide.factory("policyListTableColumnConfigs",PolicyListTableColumnConfigsFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(31),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((fDom,ftnt_shared)=>{function PolicyListTableSettingsFactory(policyListTableColumn,policyListViewType,lang,policyInit,$routeParams,state){const translate=langKey=>lang(langKey).toString();return new class{create(params){return this.ctrlScope=params.ctrlScope,this.type=policyInit.type,this.subType=policyInit.subType,this.viewType=policyListViewType.value,this.interfacePair=this.viewType===policyListViewType.VIEW_TYPE.INTERFACE_PAIR,this.interfacePairKeys="proxy-policy"===this.type?["proxy","dstintf"]:["srcintf","dstintf"],this.settings={id:`policyList-${this.type}-${this.subType}-${this.viewType}`,reordering:!state.readOnlyForPage,editable:!state.readOnlyForPage&&!params.slideController,editingNeedsExternalUpdate:!0,canReorderFunction:policyEntry=>!policyEntry.implicit,collectionLimit:30,sorting:!1,userDefinedSections:!1,expandSections:!1,onRowRendered:(rowElement,entry)=>{"disable"===entry.cmdbModel.status&&rowElement.classList.add("disabled"),entry.error&&rowElement.classList.add("error"),entry.implicit&&rowElement.classList.add("implicit")}},this.settings.columns=policyListTableColumn.getColumns(Object.assign({interfacePair:this.interfacePair,interfacePairKeys:this.interfacePairKeys},params)),this.settings.defaultColumns=policyListTableColumn.getDefaultColumns(params.defaultColumnsOverride),this._setupViewType(),this.settings}clearCache(){policyListTableColumn.clearCache(),this.ctrlScope=null,this.settings=null}_setupViewType(){const listSettings=this;if(listSettings.interfacePair){let intfPairColumnSetting={id:"intfpair",hidden:!0};const getInterfaceLabel=(intf,intfMap)=>intf&&((intf=intfMap[intf.q_origin_key]||intf).label||intf.name)||"";intfPairColumnSetting.cellValueFunction=(entry=>{if(entry.implicit)return translate("implicit");{let intfMap={};try{intfMap=ftnt_shared.Omniselect.getSourceDataSync("firewallInterfaces").mapping}catch(e){}return listSettings.interfacePairKeys.map(key=>{if("proxy"===key)return`${entry.cmdbModel.proxy} proxy`;{let objects=entry.cmdbModel[key];return Array.isArray(objects)||(objects=[objects]),getInterfaceLabel(objects[0],intfMap)}}).join(" →")}}),intfPairColumnSetting.cellFormatter=((entry,column,value)=>{if(entry.implicit)return value;{let interfaces={};try{interfaces=ftnt_shared.Omniselect.getSourceDataSync("firewallInterfaces").mapping}catch(e){}const children=listSettings.interfacePairKeys.reduce((elems,key,index)=>{let elem;if("proxy"===key)elem=fDom.elem("span",{textContent:`${entry.cmdbModel.proxy} proxy`});else{let objects=entry.cmdbModel[key];Array.isArray(objects)||(objects=[objects]);let intfChildrenElem=[];const mkey=objects[0].q_origin_key;interfaces[mkey]&&intfChildrenElem.push(fDom.elem("f-icon",{className:interfaces[mkey].icon||interfaces[mkey]["css-class"]})),intfChildrenElem.push(fDom.elem("span",{textContent:getInterfaceLabel(objects[0],interfaces)})),elem=fDom.elem("span",null,{children:intfChildrenElem})}return elems.push(elem),index<listSettings.interfacePairKeys.length-1&&elems.push(fDom.elem("span",{textContent:" →"})),elems},[]);return fDom.elem("span",null,{children:children})}}),intfPairColumnSetting.sortComparator=((valueA,valueB,entryA,entryB)=>entryA.implicit?1:entryB.implicit?-1:valueA.compareTo(valueB)),listSettings.settings.columns.push(intfPairColumnSetting),listSettings.settings.defaultSectionColumn="intfpair"}else if(policyListViewType.SECTIONS_ENABLED[listSettings.type]){let sectionsSetting=policyListViewType.SECTIONS_ENABLED[listSettings.type];"string"==typeof sectionsSetting?listSettings.settings.defaultSectionColumn=sectionsSetting:(listSettings.settings.customSequenceGrouping=!0,listSettings.settings.sequenceGroupingValueFunction=(entry=>entry.cmdbModel["global-label"]||""),listSettings.settings.implicitSequenceGroupingValueFunction=(entry=>{if(entry.implicit)return"Implicit"}))}}}}return providers=>{providers.$provide.factory("policyListTableSettings",PolicyListTableSettingsFactory)}}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";const inject=__webpack_require__(26),fPatterns=__webpack_require__(28),PROTOCOLS=["ip"].concat(["tcp","udp","sctp"]),ICMP_PRESETS={"ICMP ping request":{protocol:"icmp",icmptype:8,icmpcode:0},"ICMPv6 ping request":{protocol:"icmp6",icmptype:8,icmpcode:0},"ICMP ping reply":{protocol:"icmp",icmptype:0,icmpcode:0},"ICMPv6 ping reply":{protocol:"icmp6",icmptype:0,icmpcode:0}},getProtocols=function(ipVersion){switch(ipVersion){case"ipv4":return PROTOCOLS.concat(["icmp","ICMP ping request","ICMP ping reply"]);case"ipv6":return PROTOCOLS.concat(["icmp6","ICMPv6 ping request","ICMPv6 ping reply"])}};class PolicyLookup extends inject.Collectable{async $onInit(){this.show={},this.PORT_MIN=1,this.PORT_MAX=65535,this.model={protocol:"ip",ipVersion:this.ipVersion||"ipv4"},"both"===this.ipVersion&&(this.show.ipVersion=!0,this.model.ipVersion="ipv4"),this.showWarning=!1,this.patterns=fPatterns.commonRegExp,this.ipPatterns(),await this.setup(),this.selectChanged(),this.fReadOnlyManager&&this.fReadOnlyManager.setReadOnly(!1)}ipPatterns($INJECTABLE$,lang){return()=>{this.ipPattern={src:{ipv4:{ip_pattern:[this.patterns.IP_HOST]},ipv6:{ip_pattern:[this.patterns.IP6_HOST]}},dest:{ipv4:{ip_pattern:[this.patterns.IP_HOST,this.patterns.FQDN]},ipv6:{ip_pattern:[this.patterns.IP6_HOST,this.patterns.FQDN]}}},this.ipPatternError={src:{ipv4:{ip_pattern:lang("err_ip4")},ipv6:{ip_pattern:lang("err_ip6")}},dest:{ipv4:{ip_pattern:lang("Invalid hostname.")},ipv6:{ip_pattern:lang("Invalid hostname.")}}}}}setup($INJECTABLE$,CMDB){return async()=>{this.selectintf={sources:"firewallInterfaces",filterFunction:function(intf){return"any"!==intf.name&&intf.valid_in_policy&&!intf.is_zone&&!intf.is_sdwan_zone&&!intf.is_virtual_wire_pair_member},singleSelect:!0,insideSlide:!0},this.options={protocols:getProtocols(this.model.ipVersion),ipVersions:["ipv4","ipv6"]};const cmdb=new CMDB("firewall","address");this.address=await cmdb.defaults().$promise}}_getPolicyOmniselectConfig($INJECTABLE$,policyOmniselectConfig){return function(selector,processFn){return policyOmniselectConfig.get(selector,this.policy,settings=>("function"==typeof processFn&&(settings=processFn(settings)),settings.meta.isDialog=!0,settings))}}selectChanged(){this.options.protocols=getProtocols(this.model.ipVersion);const temp=this.show.ipVersion;switch(this.model.protocol){case"ip":this.show={protocolNumber:!0,sourceip:!0,dest:!0};break;case"tcp":case"udp":case"sctp":this.show={sourceip:!0,sourceport:!0,dest:!0,destport:!0};break;case"icmp":case"icmp6":this.show={icmptype:!0,icmpcode:!0,sourceip:!0,dest:!0};break;case"ICMP ping request":case"ICMP ping reply":case"ICMPv6 ping request":case"ICMPv6 ping reply":this.show={sourceip:!0,dest:!0}}this.show.ipVersion=temp}lookupPolicy($INJECTABLE$,$q,lang,$http,$httpParamSerializer){return async()=>{const ipProtocol="ip"===this.model.protocol,preset=ICMP_PRESETS[this.model.protocol],formData=this.model,ipv6="ipv6"===this.model.ipVersion,params={};let failureReason="";Object.assign(params,formData,{protocol:ipProtocol?formData.protocolNumber:formData.protocol,destport:ipProtocol?0:formData.destport,srcintf:formData.srcintf.name,ipv6:ipv6}),preset&&Object.assign(params,preset);const failure=function(){return lang("Failed to perform policy lookup")},checkForRoute=function(){return function(data){const url=`/api/v2/monitor/router/lookup?${$httpParamSerializer(data)}`;return $http.get(url)}({destination:formData.dest,ipv6:ipv6}).then(({data:data})=>data.results,failure)},url=`/api/v2/monitor/firewall/policy-lookup?${$httpParamSerializer(params)}`,results=(await $http.get(url)).data.results;if(results.success){if(results.policy_id)return results.policy_id;{const routeData=await checkForRoute();failureReason=routeData.success?lang("pol_lookup_implicit_match",[formData.srcintf.name,routeData.interface,results.destip]):lang("pol_lookup_no_route",[results.destip])}}else{const routeData=await checkForRoute();failureReason=routeData.success?lang("pol_lookup_no_match",[formData.srcintf.name,routeData.interface,results.destip]):results.destip?lang("pol_lookup_no_route",[results.destip]):lang("Failed to resolve FQDN")}throw new Error(failureReason||failure())}}async submit(){this.loading=!0;try{return this.showWarning=!1,this.warningMessage="",await this.lookupPolicy()}catch(error){return this.showWarning=!0,this.loading=!1,this.warningMessage=error.message,Promise.reject(error)}}close(){this.slideController.slide.close()}}module.exports=(providers=>{providers.$compile.component("fPolicyLookup",{controller:PolicyLookup,templateUrl:__webpack_require__(963),require:{slideController:"?^fSlideContainer"},bindings:{ipVersion:"<"}})})},function(module,exports){var path="/migadmin/ng/firewall/policy/lookup/f-policy-lookup.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n        form="$ctrl.form"\n        valid-submit="$ctrl.submit()">\n    <dialog-content>\n        <section>\n            <div class="warning-message"\n                ng-if="$ctrl.showWarning">\n                <f-icon class="fa-warning"></f-icon>\n                <label class="message-content">\n                    {{:: $ctrl.warningMessage }}\n                </label>\n            </div>\n        </section>\n        <section>\n            <f-field>\n                <field-label>\n                    <span>{{:: \'in-interface\' | lang }}</span>\n                </field-label>\n                <field-value>\n                    <div f-omniselect="$ctrl.selectintf"\n                        ng-model="$ctrl.model.srcintf"\n                        required>\n                    </div>\n                </field-value>\n            </f-field>\n            <f-field >\n                <field-label>\n                    <span>\n                        {{:: \'IP Version\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <select ng-model="$ctrl.model.ipVersion"\n                        ng-change="$ctrl.selectChanged()"\n                        ng-disabled="!$ctrl.show.ipVersion"\n                        required>\n                        <option ng-repeat="option in ::$ctrl.options.ipVersions"\n                            value="{{ option }}">\n                            {{ option | lang }}\n                        </option>\n                    </select>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-label>\n                    <span>\n                        {{:: \'Protocol\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <select ng-model="$ctrl.model.protocol" ng-change="$ctrl.selectChanged()" required>\n                        <option ng-repeat="option in $ctrl.options.protocols"\n                            value="{{ option }}">\n                            {{ option | lang }}\n                        </option>\n                    </select>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.protocolNumber">\n                <field-label>\n                    <span>\n                        {{:: \'Protocol Number\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <input type="number"\n                        ng-model="$ctrl.model.protocolNumber"\n                        min=0 max=255\n                        placeholder="1-255"\n                        required>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.icmptype">\n                <field-label>\n                    <span>\n                        {{:: \'icmptype\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <input type="number"\n                        ng-model="$ctrl.model.icmptype"\n                        min=0 max=255\n                        placeholder="0-255"\n                        required>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.icmpcode">\n                <field-label>\n                    <span>\n                        {{:: \'icmpcode\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <input type="number"\n                        ng-model="$ctrl.model.icmpcode"\n                        min=0 max=255\n                        placeholder="0-255"\n                        required>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.sourceip" error-messages="$ctrl.ipPatternError.src[$ctrl.model.ipVersion]">\n                <field-label>\n                    <span>\n                        {{:: \'Source\' | lang }}\n                    </span>\n                </field-label>\n                <field-value ng-if="$ctrl.model.ipVersion === \'ipv4\'">\n                    <input type="text"\n                        ng-model="$ctrl.model.sourceip"\n                        placeholder="{{::\'ipaddr\' | lang}}"\n                        f-patterns="$ctrl.ipPattern.src.ipv4"\n                        required>\n                </field-value>\n                <field-value ng-if="$ctrl.model.ipVersion === \'ipv6\'">\n                    <input type="text"\n                        ng-model="$ctrl.model.sourceip"\n                        placeholder="{{::\'ipaddr\' | lang}}"\n                        f-patterns="$ctrl.ipPattern.src.ipv6"\n                        required>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.sourceport">\n                <field-label>\n                    <span>\n                        {{:: \'Source Port\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <input type="number"\n                        ng-model="$ctrl.model.sourceport"\n                        min="{{:: $ctrl.PORT_MIN }}" max="{{:: $ctrl.PORT_MAX }}"\n                        placeholder="{{::\'Optional\' | lang}} (1-65535)">\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.dest" error-messages="$ctrl.ipPatternError.dest[$ctrl.model.ipVersion]">\n                <field-label>\n                    <span>\n                        {{:: \'Destination\' | lang }}\n                    </span>\n                </field-label>\n                <field-value ng-if="$ctrl.model.ipVersion === \'ipv4\'">\n                    <input type="text"\n                        f-max-length="$ctrl.address.$schema.children.fqdn.size"\n                        ng-model="$ctrl.model.dest"\n                        placeholder="{{::\'IP Address/FQDN\' | lang}}"\n                        f-patterns="$ctrl.ipPattern.dest.ipv4"\n                        required>\n                </field-value>\n                <field-value ng-if="$ctrl.model.ipVersion === \'ipv6\'">\n                    <input type="text"\n                        f-max-length="$ctrl.address.$schema.children.fqdn.size"\n                        ng-model="$ctrl.model.dest"\n                        placeholder="{{::\'IP Address/FQDN\' | lang}}"\n                        f-patterns="$ctrl.ipPattern.dest.ipv6"\n                        required>\n                </field-value>\n            </f-field>\n            <f-field ng-if="$ctrl.show.destport">\n                <field-label>\n                    <span>\n                        {{:: \'Destination Port\' | lang }}\n                    </span>\n                </field-label>\n                <field-value>\n                    <input type="number"\n                        ng-model="$ctrl.model.destport"\n                        min="{{:: $ctrl.PORT_MIN }}" max="{{:: $ctrl.PORT_MAX }}"\n                        placeholder="1-65535"\n                        required>\n                </field-value>\n            </f-field>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <button type="submit" class="primary" ng-disabled="$ctrl.loading">\n            <f-icon class="fa-loading" ng-show="$ctrl.loading"></f-icon>\n            <span f-lang="Search"></span>\n        </button>\n        <button type="button"\n            ng-click="$ctrl.close()" f-lang="close"></button>\n    </dialog-footer>\n</f-dialog>')}]),module.exports=path},,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(191),__webpack_require__(8),__webpack_require__(27),__webpack_require__(993),__webpack_require__(994),__webpack_require__(995)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ftntModule,inject,filesaver,ftnt_shared,notify,xtermjs,xattach,xfit)=>{__webpack_require__(996);const CMD={IAC:255,SB:250,SE:240},OPT={NAWS:31},clipboard=ftnt_shared.clipboard,JSCONN_URI="/ng/cli-console?viewOnly",MODE={embedded:"embedded",detached:"detached",slide:"slide"};ftntModule.component("fConsole",{controller:class extends inject.Collectable{$onInit($INJECTABLE$,$element,$timeout,lang){return()=>{this.MODE=MODE,this.console=this,this.terminal=$element[0],this.mode=this.mode||MODE.embedded,$timeout(()=>this.loadTerminal()),this.recordingIcon="fa-circle",this.recordingLabel=lang("Record").toString(),this.recordingTitle=lang("Record CLI script"),this.mode===MODE.detached&&window.opener.addEventListener("beforeunload",()=>window.close())}}loadTerminal($INJECTABLE$,$httpParamSerializer,state,lang){return()=>{this.records=[],this.recording=!1;const terminal=this.terminal.querySelector("f-terminal"),xterm=new xtermjs.Terminal({cursorBlink:!0,scrollback:99999}),fit=new xfit.FitAddon;xterm.loadAddon(fit),xterm.open(terminal),fit.fit();const location=window.location,host=`${location.hostname}:${location.port}`,proto="https:"===location.protocol?"wss":"ws",admin=state.admin;let{vdom:vdom}=this.options||{};(vdom&&!state.vdom_mode||!admin.global_admin&&admin.vdoms.length<=1)&&(vdom=null);const params=$httpParamSerializer({rows:xterm.rows,cols:xterm.cols,vdom:vdom}),ws=new WebSocket(`${proto}://${host}/ws/newcli/open?${params}`);ws.addEventListener("open",()=>{const attach=new xattach.AttachAddon(ws);xterm.loadAddon(attach),xterm.focus(),this.ready&&this.ready()}),ws.addEventListener("message",()=>{this.setupTerminal()}),ws.addEventListener("close",()=>{xterm.write(`\r\n${lang("cli_conn_lost")}`)}),xterm.onKey(({domEvent:{keyCode:keyCode}})=>{if(13===keyCode){let i,cmd;for(i=xterm.buffer.length-1;i>=0&&!cmd;i--)cmd=xterm.buffer.getLine(i).translateToString().replace(/^\s+|\s+$/g,"");(i=cmd.search(/ [#$] /))>0&&this.records.push(cmd.substring(i+3).replace(/^\s+|\s+$/g,""))}}),window.addEventListener("resize",()=>this.resize()),this.ws=ws,this.xterm=xterm,this.fit=fit}}setupTerminal(){let{commands:commands}=this.options||{};Array.isArray(commands)&&commands.length&&this.ws.send(`${commands.shift()}\n`)}resize(){const xterm=this.xterm;xterm.resize(xterm.cols,1),this.fit.fit(),setTimeout(()=>this.ws.send(Uint8Array.from([CMD.IAC,CMD.SB,OPT.NAWS,0,xterm.cols,0,xterm.rows,CMD.IAC,CMD.SE])))}focus(){this.xterm.focus()}clearHistory(){this.xterm.clear()}getHistory(){return Array.from(this.xterm.buffer,(v,i)=>this.xterm.buffer.getLine(i).translateToString()).join("\n").replace(/^\s+|\s+$/g,"").split("\n")}copyHistoryToClipboard($INJECTABLE$,lang){return()=>{const history=this.getHistory();notify.post(lang(ftnt_shared.clipboard.copyText(history.join("\n"))?"Copied to clipboard":"Unable to copy to clipboard"))}}downloadHistory(){const history=this.getHistory(),blob=new Blob([history.join("\n")],{type:"text/plain"});filesaver.saveAs(blob,"cliConsole")}recordStart(){this.records=[],this.recording=!0}recordEnd(){this.recording=!1}record($INJECTABLE$,$interval,lang){let recordingDotsInterval,count=0;return()=>{if(this.recording){const script=this.records;if(this.recordingIcon="fa-circle",this.recordingTitle=lang("Record CLI script").toString(),this.recordingLabel=lang("Record").toString(),script.length)notify.post(lang(clipboard.copyText((script=>script.length?`${script.join("\n")}\n`:"")(script).toString())?"Copied CLI script to clipboard":"Unable to copy to clipboard"));else{const msg=lang("No CLI script is recorded").toString();notify.post(msg,notify.LEVEL.WARNING,3e3)}this.recordEnd(),$interval.cancel(recordingDotsInterval)}else this.recordingIcon="fa-recording",this.recordingTitle=lang("Stop recording").toString(),this.recordingLabel=lang("Recording").toString(),this.recordStart(),recordingDotsInterval=$interval(()=>this.recordingIcon=["fa-recording","fa-offline"][count++%2],1e3);this.focus()}}clear(){this.clearHistory(),this.focus()}copy(){this.copyHistoryToClipboard(),this.focus()}detach($INJECTABLE$,$window,cliConsole){return()=>{$window.open(JSCONN_URI,"cliConsole"),cliConsole.close()}}download(){this.downloadHistory(),this.focus()}$onDestroy(){const ws=this.ws;ws.send(""),ws.close()}},bindings:{console:"=?",mode:"<?",options:"<?",ready:"&?"},templateUrl:__webpack_require__(998)})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,function(module,exports){var path="/migadmin/ng/components/console/f-console.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="container absolute-fill flex-column">\n    <div f-menu-bar ng-if="::$ctrl.mode === $ctrl.MODE.embedded">\n        <div class="left-menu-items">\n            <div f-menu-item-toggle="$ctrl.recordingToggle"\n                click="$ctrl.record()"\n                title="{{ $ctrl.recordingTitle }}">\n                <f-icon ng-class="$ctrl.recordingIcon">\n                </f-icon>\n                <span>{{ $ctrl.recordingLabel }}</span>\n            </div>\n            <div f-menu-item-button click="$ctrl.copy()">\n                <f-icon class="fa-clipboard">\n                </f-icon>\n                <span>{{:: \'Copy\' | lang }}</span>\n            </div>\n            <div f-menu-item-button click="$ctrl.clear()">\n                <f-icon class="fa-trash">\n                </f-icon>\n                <span>{{:: \'Clear\' | lang }}</span>\n            </div>\n        </div>\n        <div class="center-menu-items"></div>\n        <div class="right-menu-items">\n            <div f-menu-item-button click="$ctrl.download()">\n                <f-icon class="fa-download">\n                </f-icon>\n                <span>{{:: \'Download\' | lang }}</span>\n            </div>\n            <div f-menu-item-toggle="$ctrl.detached" click="$ctrl.detach()">\n                <f-icon class="fa-external-link-square">\n                </f-icon>\n                <span>{{ $ctrl.detached ? \'Attach\': \'Detach\' | lang }}</span>\n            </div>\n        </div>\n    </div>\n    <div class="compact-menu hidden" ng-if="::$ctrl.mode === $ctrl.MODE.slide">\n        <button class="bare" title="{{ $ctrl.recordingTitle }}" ng-click="$ctrl.record()">\n            <f-icon ng-class="$ctrl.recordingIcon"></f-icon>\n        </button>\n        <button class="bare" title="{{:: \'Clear console\' | lang }}" ng-click="$ctrl.clear()">\n            <f-icon class="fa-trash"></f-icon>\n        </button>\n        <button class="bare" title="{{:: \'Copy to clipboard\' | lang }}" ng-click="$ctrl.copy()">\n            <f-icon class="fa-clipboard"></f-icon>\n        </button>\n        <button class="bare" title="{{:: \'download\' | lang }}" ng-click="$ctrl.download()">\n            <f-icon class="fa-download"></f-icon>\n        </button>\n        <button class="bare" title="{{:: \'detach\' | lang }}" ng-click="$ctrl.detach()">\n            <f-icon class="fa-external-link-square"></f-icon>\n        </button>\n    </div>\n    <f-terminal class="flex-grow" ng-if="!$ctrl.detached"></f-terminal>\n    <div class="flex-column-centered flex-grow light-text" style="justify-content: center" ng-if="$ctrl.detached">\n        {{:: \'CLI Console Detached\' | lang}}\n    </div>\n</div>\n<link rel="stylesheet" type="text/css" ng-href="{{ \'/ng/components/console/f-console.css\' | cache_path }}">\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.component("fGutterFortigate",{controller:class{},bindings:{fortigate:"<"},templateUrl:__webpack_require__(1e3)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/f-gutter-fortigate.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<dl class="gutter-section">\n    <dt>\n        {{::\'FortiGate\' | lang}}\n    </dt>\n    <dd class="child-section">\n        <f-omniselect-entry id="::$ctrl.fortigate.serial" source="::\'csfFortiGates\'">\n        </f-omniselect-entry>\n    </dd>\n</dl>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.directive("fNotificationBubble",function(){return{controller:function($scope,$element,$attrs,notification){this.summary=null,$attrs.navbarEntry?$scope.$watch(()=>notification.getNavbarNotificationSummary(this.navbarEntry),summary=>{this.summary=summary,$element.attr("class",`number-bubble severity-${this.summary.severityLevel}`)},!0):$attrs.notificationIds&&$scope.$watch(()=>{const notificationIds=this.notificationIds;return notification.getNotificationSummary(notificationIds)},summary=>{this.summary=summary,$element.attr("class",`number-bubble severity-${this.summary.severityLevel}`)},!0)},controllerAs:"$ctrl",bindToController:!0,restrict:"A",scope:{notificationIds:"<",navbarEntry:"<"},templateUrl:__webpack_require__(1002)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/f-notification-bubble.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<span ng-if="$ctrl.summary.count > 0">\n    {{$ctrl.summary.count}}\n    <div f-tip>\n        <div class="title-bar flex-centered">\n            <f-icon class="fa-notification"></f-icon>\n            <span f-lang="Notifications"></span>\n        </div>\n        <table class="table condensed">\n            <tbody>\n                <tr ng-repeat="summary in $ctrl.summary.messagesSummary |\n                    orderBy:[\'SEVERITY_LEVEL_INDEX\', \'ID\']:true track by $index">\n                    <td>\n                        <f-icon class="fa-severity-{{summary.severityLevel}}"></f-icon>\n                    </td>\n                    <td>\n                        <span ng-repeat="message in summary.message">{{message}}</span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</span>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.component("fSchemaErrors",{bindings:{errors:"<"},controller:class{constructor($scope){$scope.$watch("$ctrl.errors",errors=>{this.flattenedErrors=errors?this.flatten(errors):null})}$onInit(){this.settings=this.createSettings()}createSettings(){return{id:"schema-errors",columns:[{id:"path",langKey:"path",cellValueFunction:entry=>entry.absolutePath,sortComparator:(a,b)=>{const valueA=a.getValue(),valueB=b.getValue();return valueA.localeCompare(valueB,void 0,{numeric:!0})}},{id:"error",langKey:"error"}]}}flatten(errors){const results=[];return errors.forEach(error=>{error.absolutePath=error.path,function traverse(error,callback){callback(error),error.context&&error.context.forEach(childError=>{childError.absolutePath=childError.path.replace(/^\[\d+\]/,error.absolutePath),traverse(childError,callback)})}(error,item=>results.push(item))}),results}},templateUrl:__webpack_require__(1004)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/f-schema-errors.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable settings="$ctrl.settings" source="$ctrl.flattenedErrors" context-menu="::false">\n    <div class="left-menu-items"></div>\n    <div class="center-menu-items no-separator">\n        <f-mutable-search></f-mutable-search>\n    </div>\n</f-mutable>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ftntModule,inject)=>{const fGutterHelp={controller:class extends inject.Collectable{constructor(){super(),this.loading=!0}$onInit($INJECTABLE$,help){return async()=>{this.help=help;try{await help.$promise,this.helpLinks=this.help.helpLinks,this.hasHelpTopics=this.helpLinks&&this.helpLinks.length}finally{this.loading=!1}}}},templateUrl:__webpack_require__(1006)};ftntModule.component("fGutterHelp",fGutterHelp)}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/gutter-help/f-gutter-help.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-if="$ctrl.loading">\n    <f-icon class="fa-loading"></f-icon>\n</div>\n<dl class="gutter-section"\n    ng-repeat="section in $ctrl.helpLinks"\n    ng-if="!$ctrl.loading && $ctrl.hasHelpTopics">\n    <dt class="gutter-section-title">\n        <f-icon class="{{:: section.sectionIcon }}"\n                ng-if="::section.sectionIcon"></f-icon>\n        <span>{{:: section.sectionTitle }}</span>\n    </dt>\n    <dl class="child-section"\n        ng-repeat="subsection in section.subsections">\n        <dt class="gutter-section-title">\n            <f-icon class="{{:: subsection.icon }}"\n                    ng-if="::subsection.icon"></f-icon>\n            <span>{{:: subsection.title }}</span>\n        </dt>\n        <dd ng-repeat="link in subsection.links">\n            <a href="{{:: link.url }}" target="_blank" ref="noopener noreferrer">\n                <f-icon class="{{:: link.icon }}"></f-icon>\n                <span>{{:: link.itemTitle }}</span>\n                <f-icon class="fa-external-link"\n                        ng-if="!link.internal"></f-icon>\n            </a>\n        </dd>\n    </dl>\n</dl>\n\n<dl class="gutter-section gutter-footer">\n    <dt class="gutter-section-title">\n        <f-icon class="ftnt-help-o"></f-icon>\n        <span f-lang="Documentation"></span>\n    </dt>\n    <dd class="child-section">\n        <ul class="flex-no-shrink unstyled" style="margin: 0">\n            <li>\n                <a href="{{ ::$ctrl.help.getHelpUrl(true) }}"\n                   target="_blank"\n                   rel="noopener noreferrer">\n                    <f-icon class="fa-book"></f-icon>\n                    <span f-lang="Online Help"></span>\n                    <f-icon class="fa-external-link"></f-icon>\n                </a>\n            </li>\n            <li>\n                <a href="{{ ::$ctrl.help.getUrlForVideo() }}"\n                   target="_blank"\n                   rel="noopener noreferrer">\n                    <f-icon class="fa-video-camera"></f-icon>\n                    <span f-lang="Video Tutorials"></span>\n                    <f-icon class="fa-external-link"></f-icon>\n                </a>\n            </li>\n            <li ng-repeat="video in $ctrl.help.videos">\n                <a href="{{ ::$ctrl.help.getUrlForVideo(video) }}"\n                    target="_blank"\n                    rel="noopener noreferrer">\n                    <f-icon class="fa-video-camera"></f-icon>\n                    <span>{{:: video.itemTitle }}</span>\n                    <f-icon class="fa-external-link"></f-icon>\n                </a>\n            </li>\n        </ul>\n    </dd>\n</dl>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(112)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,fwebIpInfo){const{IPInfoService:IPInfoService}=fwebIpInfo;ngModule.component("fIpInfo",{controller:class extends inject.Collectable{constructor(){super()}$onInit($INJECTABLE$,$element){return()=>{this.tooltip=IPInfoService.setupTooltip({element:$element[0],ip:this.ip})}}$onDestroy(){this.tooltip&&this.tooltip.destroy()}},bindings:{ip:"<"},templateUrl:__webpack_require__(1008)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/ip-info/f-ip-info.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"<span>{{ $ctrl.ip}}</span>\n")}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";const inject=__webpack_require__(26),ngModule=__webpack_require__(29),log=__webpack_require__(30),TYPES={MINIMAL:"minimal",EXPANDED:"expanded"};ngModule.component("fDashboardSetup",{bindings:{relative:"<",changeSuccess:"&?",changeCancel:"&?",changePrevious:"&?",hasPrevious:"<?"},require:{slideController:"?^fSlideContainer"},controller:class extends inject.Collectable{constructor(){super(),this.TYPES=TYPES,this.dashboardSelection=TYPES.MINIMAL}$onInit($INJECTABLE$,state,lang){return()=>{if(this.slideController){let scope=state.VDOM_SCOPE.GLOBAL;this.warning=lang("confirm_reset_dashboards"),state.vdom_mode&&(scope=state.getCurrentVDOMScope(),this.warning=lang(`confirm_reset_dashboards_${scope}`))}else this.msg=lang("Select one of the following options to decide what dashboards will be available by default. You can always change your selection or manually customize your own dashboards later.")}}submit($INJECTABLE$,dashboardConfig){return async()=>{this.submitButtonBusy=!0;let dashboards=dashboardConfig.DEFAULT_MINIMAL_DASHBOARDS;switch(this.dashboardSelection){case TYPES.MINIMAL:dashboards=dashboardConfig.DEFAULT_MINIMAL_DASHBOARDS;break;case TYPES.EXPANDED:dashboards=dashboardConfig.DEFAULT_EXPANDED_DASHBOARDS}try{await dashboardConfig.deleteAllDashboards(),await dashboardConfig.createAllDefaultDashboards(dashboards),this.changeSuccess&&this.changeSuccess()}catch(e){log.error(e)}finally{this.submitButtonBusy=!1}}}cancel(){this.slideController?this.slideController.slide.close():this.changeCancel&&this.changeCancel()}previous(){this.changePrevious&&this.changePrevious()}},templateUrl:__webpack_require__(1010)})},function(module,exports){var path="/migadmin/ng/components/dashboard-setup/f-dashboard-setup.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n          valid-submit="$ctrl.submit()"\n          form="$ctrl.form"\n          relative="::$ctrl.relative"\n          read-only="::false"\n          loading="$ctrl.loading">\n    <dialog-content>\n        <section>\n            <div ng-if="$ctrl.warning" class="warning-message">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    <p>{{::$ctrl.warning}}</p>\n                </div>\n            </div>\n            <f-radio-card-group\n                description="$ctrl.msg"\n                model="$ctrl.dashboardSelection">\n                <f-radio-card value="$ctrl.TYPES.MINIMAL">\n                    <radio-card-header>\n                        {{::\'Optimal\' | lang}}\n                    </radio-card-header>\n                    <radio-card-content>\n                        {{::\'A set of popular default dashboards and FortiView monitors.\' | lang}}\n                    </radio-card-content>\n                </f-radio-card>\n                <f-radio-card value="$ctrl.TYPES.EXPANDED">\n                    <radio-card-header>\n                        {{::\'Comprehensive\' | lang}}\n                    </radio-card-header>\n                    <radio-card-content>\n                        {{::\'A set of default dashboards as well as all monitors and FortiViews. This set will be familiar to users coming from previous FortiOS versions.\' | lang}}</radio-card-content>\n                </f-radio-card>\n            </f-radio-card-group>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <dialog-footer>\n            <button type="button" ng-click="$ctrl.previous()" ng-if="$ctrl.hasPrevious && !$ctrl.slideController">\n                {{:: \'Previous\' | lang }}\n            </button>\n            <button type="submit" class="primary"\n                ng-class="$ctrl.submitButtonBusy && \'busy\'"\n                ng-disabled="$ctrl.submitButtonBusy">\n                <f-icon class="fa-loading busy-only"></f-icon>\n                <span>{{:: \'ok\' | lang}}</span>\n            </button>\n            <button ng-if="$ctrl.slideController" type="button" ng-click="$ctrl.cancel()">\n                {{:: \'cancel\' | lang }}\n            </button>\n        </dialog-footer>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(8),__webpack_require__(1012)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule,ftnt_shared){var fColorSelector={bindings:{iconClass:"<"},require:{ngModel:"ngModel"},templateUrl:__webpack_require__(1013),controller:ColorSelector};function ColorSelector(injector,$scope,$element){injector.injectMarked(this,{$scope:$scope}),this.uniqueID=ftnt_shared.util.uniqueID(),this.colorSelectorIconID=`color_selector_icon${this.uniqueID}`,this.colorSelectorButtonID=`color_selector_color${this.uniqueID}`,this.colorSelector=null;var cancelElementReadyWatcher=$scope.$watch(()=>document.getElementById(this.colorSelectorButtonID),newValue=>{null!==newValue&&(cancelElementReadyWatcher(),this.$element=$element.find("button"),null===this.colorSelector&&(this.initSelector(),this.setIconClass(this.iconClass),this.setColorValue(this.ngModel.$modelValue)))})}ColorSelector.prototype.$onInit=function(){this.ngModel.$render=(()=>{var value=this.ngModel.$modelValue;void 0!==value&&(this.setIconClass(this.iconClass),this.setColorValue(value))})},ColorSelector.prototype.$onChanges=function(changes){this.setIconClass(changes.iconClass.currentValue),this.setColorValue(this.ngModel.$modelValue)},ColorSelector.prototype.setIconClass=function(iconClass){this.colorSelector&&void 0!==iconClass&&this.colorSelector.colorSelector("update_css_prefix",iconClass)},ColorSelector.prototype.setColorValue=function(value){this.colorSelector&&void 0!==value&&this.colorSelector.colorSelector("update_color_value",value)},ColorSelector.prototype.initSelector=function(){this.$element.attr("cscolorvalue",this.ngModel.$modelValue),this.colorSelector=this.$element.colorSelector({colorPreviewObject:`#${this.colorSelectorIconID}`,enabled:!0,formElementPrefix:"color",colorClassPrefix:this.iconClass+" ftnt-color-",onColorSet:value=>{this.ngModel.$setViewValue(value)}})},ColorSelector.prototype.$onDestroy=function(){this.colorSelector&&this.colorSelector.colorSelector("clean_up")},ftntModule.component("fColorSelector",fColorSelector)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,ftnt_shared){"use strict";const COLOR_VALUE_ATTR="csColorValue",COMMANDS_UPDATE_CSS_REFIX="update_css_prefix",COMMANDS_CLEAN_UP="clean_up",COMMANDS_UPDATE_COLOR_VALUE="update_color_value";function ColorSelector($element,index,settings){this._initialized=!1,this._$element=$element,this._index=index,this.config=$.extend({},$.fn.colorSelector.defaults,settings),this.currentColor=this._$element[0].getAttribute(COLOR_VALUE_ATTR)||0,this.previousColor=null,this._init()}ColorSelector.prototype._init=function(){this._initialized||this._generate()},ColorSelector.prototype._generate=function(){if(this._createInputElement(),!this.config.enabled)return this._$inputElement.val(this.currentColor),void this._$element.parents("tr:first").hide();this._createToolTip(),this._getColorPreviewElement(),this._setColor(this.currentColor),this._$colorArea=$(this._createColorArea()),this.config.resetButton&&(this._$resetButton=$(this.config.resetButton)),this._bindEvents(),this._initialized=!0},ColorSelector.prototype._bindEvents=function(){this._$colorArea.on("click.colorSelector","ul li",function(event){var colorValue=event.target.getAttribute(COLOR_VALUE_ATTR);return this._setColor(colorValue),!1}.bind(this)),this._$element.on("click.colorSelector",e=>(this._showColorArea(),this._$tooltip.show(this._$colorArea[0],e.pageX,e.pageY),!1)),this.config.resetButton&&this._$resetButton.on("click.colorSelector",()=>(this._setColor(0),!1))},ColorSelector.prototype._setColor=function(colorValue){this._$inputElement.val(colorValue),this.previousColor=this.currentColor,this.currentColor=colorValue,this._closeColorArea(),this._setIconPreview(colorValue),"function"==typeof this.config.onColorSet&&this.config.onColorSet(colorValue)},ColorSelector.prototype._createColorArea=function(){var html="<div>";return this.config.headerCaption&&(html+='<div class="heading">'+this.config.headerCaption+"</div>"),html+='<ul class="csColorList flex-row-centered">',html+=this.config.colorList.map((color,i)=>{return"<li "+`style="background-color: ${color};"`+` ${COLOR_VALUE_ATTR}="${i+1}"`+"> </li>"}).join(""),html+="</ul></div>"},ColorSelector.prototype._getColorPreviewElement=function(){this.config.colorPreviewObject&&(this._$previewObject=$(this.config.colorPreviewObject).attr("colorClassPrefix",this.config.colorClassPrefix))},ColorSelector.prototype._createInputElement=function(){this._$inputElement=$('<input name="'+this.config.formElementPrefix+(this._index+1)+'" type="hidden">').appendTo(this._$element)},ColorSelector.prototype._createToolTip=function(){this._$tooltip||(this._$tooltip=new ftnt_shared.PopUp)},ColorSelector.prototype._showColorArea=function(){$("li",this._$colorArea).removeClass("csColorSelected");var selectedIndex=this._$inputElement.val();0===selectedIndex&&"number"==typeof this.config.defaultValue&&(selectedIndex=this.config.defaultValue),$(`li:nth-child(${selectedIndex})`,this._$colorArea).addClass("csColorSelected")},ColorSelector.prototype._closeColorArea=function(){this._$tooltip.hide()},ColorSelector.prototype.updateColorClassPrefix=function(prefix){this.config.colorClassPrefix=prefix,this._$previewObject&&(this._$previewObject.attr("colorClassPrefix",prefix),this._setIconPreviewClass(this.currentColor))},ColorSelector.prototype._setIconPreview=function(colorValue){this._$previewObject&&(this.config.colorClassPrefix?this._setIconPreviewClass(colorValue):this._setIconPreviewColor(colorValue))},ColorSelector.prototype._setIconPreviewColor=function(colorValue){var bgColor=this.config.colorList[colorValue-1]||this.config.defaultValue;this._$previewObject.css("background-color",bgColor)},ColorSelector.prototype._setIconPreviewClass=function(colorValue){var prefix=this._$previewObject.attr("colorClassPrefix");prefix||(prefix=this.config.colorClassPrefix);var newClassName=prefix+" ftnt-color-"+(colorValue>0?colorValue:this.config.defaultValue);this._$previewObject.css("background-color",""),this._$previewObject.attr("class",newClassName)},ColorSelector.prototype._unbindEvents=function(){this._$element.off(".colorSelector"),this._$colorArea.off(".colorSelector","ul li"),this.config.resetButton&&this._$resetButton.off(".colorSelector")},ColorSelector.prototype.destroy=function(){this._$element.removeData(),this._unbindEvents(),this._$tooltip.destroy()},$.fn.colorSelector=function(params,value){return this.each(function(index){var command,colorSelector=$(this).data("colorSelectorInstance");if("string"==typeof params){if(command=params,!colorSelector)throw new Error('Cannot run command on a non-initialized "colorSelector".');switch(command){case COMMANDS_UPDATE_CSS_REFIX:colorSelector.updateColorClassPrefix(value);break;case COMMANDS_CLEAN_UP:colorSelector.destroy();break;case COMMANDS_UPDATE_COLOR_VALUE:colorSelector._setColor(value);break;default:throw new Error('Unsupported command: "'+command+'".')}}else{if("object"!=typeof params)throw new Error('Invalid call to "colorSelector".');if(colorSelector)throw new Error('Unsupported update for initialized "colorSelector".');colorSelector=new ColorSelector($(this),index,params),$(this).data("colorSelectorInstance",colorSelector)}})},$.fn.colorSelector.defaults={colorList:["#000000","#236093","#239330","#932323","#FF8B8B","#FF0000","#CC0000","#CC5F00","#FF8000","#FFCF32","#CCAE00","#AB822F","#66CC00","#74AD74","#009933","#006600","#0097CC","#00AAFF","#0041CC","#4200CC","#8200CC","#C500CC","#FF00FF","#CC0071","#660000","#999999","#666666","#FFB162","#AB9770","#7A94CC","#C982CC","#484B3A"],colorsPerRow:8,headerCaption:null,formElementPrefix:"csColor",colorClassPrefix:"colorSelector",colorPreviewObject:null,defaultValue:1,resetButton:null,onColorSet:null}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/f-color-selector.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-icon id="{{ $ctrl.colorSelectorIconID }}"></f-icon>\n<span>\n    <button id="{{ $ctrl.colorSelectorButtonID }}">\n        {{:: "change" |lang}}\n    </button\n    >\n</span>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){function EqualWidth(){this._items={},this.minWidth=0}function EqualWidthItem($scope,$element){var element=$element[0];$scope.$watch(function(){var width,currentMinWidth=element.style.minWidth;return element.style.minWidth=0,width=element.offsetWidth,element.style.minWidth=currentMinWidth,width},function(width){this.equalWidthController.updateItem($scope.$id,width)}.bind(this)),$scope.$watch(function(){return this.equalWidthController.minWidth}.bind(this),function(calculatedMinWidth){$element[0].style.minWidth=calculatedMinWidth+"px"}),$scope.$on("$destroy",function(){this.equalWidthController.removeItem($scope.$id)}.bind(this))}EqualWidth.prototype._calculate=function(){var minWidth=0;Object.keys(this._items).forEach(function(key){var width=this._items[key];width>minWidth&&(minWidth=width)}.bind(this)),this.minWidth=minWidth},EqualWidth.prototype.updateItem=function(itemID,width){this._items[itemID]=width,this._calculate()},EqualWidth.prototype.removeItem=function(itemID){var itemWidth=this._items[itemID];delete this._items[itemID],itemWidth===this.minWidth&&this._calculate()},ngModule.directive("fEqualWidth",function(){return{restrict:"A",controller:EqualWidth}}),ngModule.directive("fEqualWidthItem",function(){return{restrict:"A",controller:EqualWidthItem,bindToController:!0,require:{equalWidthController:"^fEqualWidth"}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(31),__webpack_require__(8)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,fDom,ftnt_shared){module.component("fObjectFormatted",{bindings:{mkey:"@",datasource:"@",csfPath:"@",hardLoad:"<"},controller:function($scope,$element){var tooltip,element=$element[0];element.style.display="inline-block",this.hardLoad&&ftnt_shared.Omniselect.invalidateCacheForSource(this.datasource),fDom.formatObject({element:element,mkey:this.mkey,datasource:this.datasource,csfPath:this.csfPath}),tooltip=fDom.setupObjectTooltip({element:element,mkey:this.mkey,datasource:this.datasource,csfPath:this.csfPath,manualCleanup:!0}),$scope.$on("$destroy",function(){tooltip&&tooltip.destroy()})}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(31)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,fDom){module.directive("fObjectTooltip",function(){return{restrict:"A",scope:{mkey:"@",datasource:"@",csfPath:"@",tooltipHint:"<"},bindToController:!0,controllerAs:"$ctrl",controller:function($scope,$element){var tooltip,element=$element[0];element.style.display="inline-block",tooltip=fDom.setupObjectTooltip({element:element,mkey:this.mkey,datasource:this.datasource,csfPath:this.csfPath,manualCleanup:!0,tooltipHint:this.tooltipHint});const dragListener=()=>{tooltip.hide(!0),tooltip.setDragging(!0)},dragEndListener=()=>{tooltip.setDragging(!1)};document.addEventListener("drag",dragListener),document.addEventListener("dragend",dragEndListener),$scope.$on("$destroy",function(){tooltip&&tooltip.destroy(),document.removeEventListener("drag",dragListener),document.removeEventListener("dragend",dragEndListener)})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(172)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,inject,utilTree){function CsfTruncatedTree(injector){injector.injectMarked(this),this.init()}CsfTruncatedTree.prototype={init:inject.mark(function(state,csfTopology){return function(){csfTopology.buildIfNecessary().then(function(){var truncatedNodes;this.treeNodes=[],(truncatedNodes=this.isFortiviewDevice?utilTree.genTruncatedTopologyAroundFortiviewDevice(csfTopology.spanningTreeMap,this.device):utilTree.genTruncatedTopologyAroundCsfDevice(csfTopology.spanningTreeMap,this.device))&&truncatedNodes.length&&(this.treeNodes=this.treeNodes.concat(truncatedNodes))}.bind(this))}})},ngModule.component("fCsfTruncatedTree",{controller:CsfTruncatedTree,templateUrl:__webpack_require__(1018),bindings:{device:"<",isFortiviewDevice:"@"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/f-csf-truncated-tree.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-tree-view source="$ctrl.treeNodes" key="serial" parent-key="parentSerial">\n    <list-bullet>\n        <f-icon\n          class="{{:: (treeNode.source.icon || \'ftnt-standard-fortigate security-fabric-node\') }}">\n        </f-icon>\n    </list-bullet>\n    <list-content class="{{:: treeNode.source.labelClass || \'\'}}">\n        <strong ng-if="::treeNode.source.isCurrentFortigate">\n            <em ng-if="treeNode.source.isFocused">{{:: treeNode.source.label || treeNode.source.serial }}</em>\n            <span ng-if="!treeNode.source.isFocused">{{:: treeNode.source.label || treeNode.source.serial }}</span>\n        </strong>\n        <span ng-if="::!treeNode.source.isCurrentFortigate">\n            <em ng-if="treeNode.source.isFocused">{{:: treeNode.source.label || treeNode.source.serial }}</em>\n            <span ng-if="!treeNode.source.isFocused">{{:: treeNode.source.label || treeNode.source.serial }}</span>\n        </span>\n    </list-content>\n</f-tree-view>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(34)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,datetime){function timeFormat(scope,$element,attr,ngModel){ngModel&&ngModel.$formatters.unshift(function(){var time=ngModel.$modelValue;return time&&datetime.formatTime(time)})}ngModule.directive("fTimeFormat",function(){return{restrict:"A",require:"?ngModel",link:timeFormat}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(82),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,f_fortiguard,notify){module.directive("fFortiguardLink",function(lang){return{scope:{fFortiguardLink:"@",linkPath:"&?",hasLink:"&?",fallbackLinkType:"@?"},restrict:"A",link:function(scope,elem,attrs){var linkPath,LINK_STATUS={LOADING:"loading",RESOLVED:"resolved",FAILED:"failed",NO_LINK:"no-link"};function setLinkStatus(status){scope.status=status,Object.keys(LINK_STATUS).forEach(function(key){var linkStatus=LINK_STATUS[key];linkStatus===status?elem.addClass("link-status-"+linkStatus):elem.removeClass("link-status-"+linkStatus)})}attrs.$set("target","_blank"),attrs.$set("rel","noopener noreferrer"),elem.hasClass("button-style")&&elem.addClass("no-hover-cursor-style"),setLinkStatus(LINK_STATUS.LOADING),elem.on("click",function(event){event.stopPropagation(),[LINK_STATUS.FAILED,LINK_STATUS.NO_LINK].includes(scope.status)&&notify.post(lang("No URL available for this link."),notify.LEVEL.ERROR)}),void 0===scope.hasLink||scope.hasLink()?(scope.linkPath&&(linkPath=scope.linkPath()),!linkPath&&scope.fallbackLinkType?f_fortiguard.links.resolve(f_fortiguard.LINK_TYPE[scope.fallbackLinkType]).then(function(link){link?(attrs.$set("href",link),setLinkStatus(LINK_STATUS.RESOLVED)):setLinkStatus(LINK_STATUS.NO_LINK)},function(){setLinkStatus(LINK_STATUS.FAILED)}):f_fortiguard.links.resolve(f_fortiguard.LINK_TYPE[scope.fFortiguardLink]).then(function(prefix){var uri=prefix;if(prefix){if(linkPath){var noSlash=prefix.endsWith("/")||prefix.endsWith("=")||linkPath.startsWith("?");uri+=(noSlash?"":"/")+linkPath}attrs.$set("href",uri),setLinkStatus(LINK_STATUS.RESOLVED)}else setLinkStatus(LINK_STATUS.NO_LINK)},function(){setLinkStatus(LINK_STATUS.FAILED)})):setLinkStatus(LINK_STATUS.NO_LINK)}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ftntModule){const DEFAULT_OUT_BOUND_ERROR_MESSAGE="The input value is out of bound.",DEFAULT_ASCENDANT_ERROR_MESSAGE="The start value should not be greater than the end value.",DEFAULT_LOWER_BOUND=0,DEFAULT_UPPER_BOUND=65535;ftntModule.component("fIntRange",{templateUrl:__webpack_require__(1022),require:{ngModel:"ngModel"},controller:function(){this.$onInit=function(){null==this.lowerBound&&(this.lowerBound=DEFAULT_LOWER_BOUND),null==this.upperBound&&(this.upperBound=DEFAULT_UPPER_BOUND),this._errorMessage={fValidateRange:this.errorMessage&&this.errorMessage.fValidateRange||DEFAULT_OUT_BOUND_ERROR_MESSAGE,fAscendantRange:this.errorMessage&&this.errorMessage.fAscendantRange||DEFAULT_ASCENDANT_ERROR_MESSAGE},null==this.skipValidation&&(this.skipValidation=!1)}},bindings:{lowerBound:"<",upperBound:"<",errorMessage:"<",lowerRequired:"<?",upperRequired:"<?",upperDisabled:"<?",skipValidation:"<?"}}),ftntModule.directive({fValidateRange:function(){return{require:["ngModel","?fValidationMessage"],link:function(scope,elem,attrs,controllers){const[ngModel,fValidationMessage]=controllers;ngModel.$validators.fValidateRange=(value=>{const skipValidation=scope.$eval(attrs.skipValidation);let minLimit=scope.$eval(attrs.minLimit),maxLimit=scope.$eval(attrs.maxLimit),isLower=scope.$eval(attrs.isLower),other=scope.$eval(attrs.other);return ngModel.$setValidity("fAscendantRange",!0),!!ngModel.$isEmpty(value)||(skipValidation?value>=DEFAULT_LOWER_BOUND&&value<=DEFAULT_UPPER_BOUND:void 0===other||isLower?minLimit<=value&&value<=maxLimit:value<other?(ngModel.$setValidity("fAscendantRange",!1),fValidationMessage&&fValidationMessage.forceMessageVisible(),!0):value<=maxLimit)}),attrs.$observe("other",value=>{value&&!isNaN(value)&&ngModel.$validate()})}}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/f-int-range.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="wrappable">\n    <span class="validation-container">\n        <input type="number" ng-model="$ctrl.ngModel.$modelValue.lower"\n            f-validation-message="$ctrl._errorMessage"\n            f-validate-range\n            other="{{$ctrl.ngModel.$modelValue.upper}}"\n            is-lower="::true"\n            min-limit="{{::$ctrl.lowerBound}}"\n            max-limit="{{::$ctrl.upperBound}}"\n            ng-model-options="{ allowInvalid: true }"\n            placeholder="{{::\'Low\' | lang}}"\n            ng-required="$ctrl.lowerRequired"\n            skip-validation="{{::$ctrl.skipValidation}}"\n            class="int-range">\n    </span>\n    <span> - </span>\n    <span class="validation-container">\n        <input type="number" ng-model="$ctrl.ngModel.$modelValue.upper"\n            f-validation-message="$ctrl._errorMessage"\n            f-validate-range\n            other="{{$ctrl.ngModel.$modelValue.lower}}"\n            min-limit="{{::$ctrl.lowerBound}}"\n            max-limit="{{::$ctrl.upperBound}}"\n            ng-model-options="{ allowInvalid: true }"\n            placeholder="{{::\'High\' | lang}}"\n            ng-disabled="::$ctrl.upperDisabled"\n            ng-required="$ctrl.upperRequired"\n            class="int-range">\n    </span>\n</div>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule){ngModule.directive("fDefaultHostnameCheck",function(state){return{restrict:"A",require:"^ngModel",scope:{fDefaultHostnameCheck:"<?"},link:function(scope,elem,attr,ctrl){let allowDefault=scope.fDefaultHostnameCheck&&scope.fDefaultHostnameCheck.allowOverride||state.featureEnabled("gui-allow-default-hostname");scope.fDefaultHostnameCheck&&scope.$watch(()=>scope.fDefaultHostnameCheck,hostnameCheck=>{allowDefault=hostnameCheck.allowDefault,ctrl.$validate()}),ctrl.$validators.defaultHostname=function(value){return!value||allowDefault||!state.isADefaultHostname(value)}}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($){"use strict";$.fn.textarea=function(userOptions){var options=$.extend({},$.fn.textarea.defaults,userOptions);return this.each(function(){if("textarea"!==this.type)return!1;var useTextCount,$textarea=$(this),addTextCount=!1;$.extend(options,{resize:resize});var dataOptions=$textarea.data("jquery.textarea");if(options.maxLength=options.maxLength||parseInt($textarea.attr("maxlength"))||-1,useTextCount=options.textCount.use&&options.maxLength>0,!dataOptions||dataOptions.maxLength!==options.maxLength){var $textCount=$textarea.next(".ui-textarea-elem-text-count");useTextCount?$textCount.length||(addTextCount=!0):$textCount.remove()}if(dataOptions)dataOptions.maxLength=options.maxLength,dataOptions.resize&&dataOptions.resize();else{$textarea.data("jquery.textarea",options);var minRows=options.expandable.minRows;if(minRows||(minRows=parseInt($textarea.attr("rows"))||1),!1!==options.wrap){var $wrapperDiv=$("<div></div>").addClass("textarea-wrapper").css({position:"relative"});$textarea.wrap($wrapperDiv)}options.expandable.use&&($textarea.css("overflow","hidden"),$textarea.keyup(function(){resize()}),$textarea.on("input paste cut",function(){setTimeout(resize,250)}),resize())}function resize(){if($textarea.is(":visible")){for(var textarea=$textarea[0];textarea.rows>minRows&&textarea.scrollHeight<textarea.offsetHeight;)textarea.rows--,adjustHeight();for(;textarea.value.length>textarea.rows&&textarea.scrollHeight>textarea.offsetHeight;)textarea.rows++,adjustHeight();options.expandable.extraLine&&textarea.rows++,adjustHeight()}function adjustHeight(){var lineHeight=parseFloat($textarea.css("line-height"));isNaN(lineHeight)&&(lineHeight=1.2*parseFloat($textarea.css("font-size")));var lines=$textarea.attr("rows")||$textarea.prop("rows");""!==$textarea.val()||$textarea.attr("placeholder")||(lines=1);var padding="border-box"===$textarea.css("box-sizing")?$textarea.outerHeight()-$textarea.height():0;$textarea.css("height",lines*lineHeight+padding)}}function checkLength(){var value,is_not_escaped_html,str,textarea=$textarea[0],length=(value=textarea.value,is_not_escaped_html=!0,str=value.replace(/\n/g,"xx"),is_not_escaped_html?str.length:str.replace(/%../g,"x").length);if(length>options.maxLength){for(var text=textarea.value.substr(0,options.maxLength);text.getBytesCRLF(!0)>options.maxLength&&text.length>0;)text=text.slice(0,-1);var sel={start:textarea.selectionStart,end:textarea.selectionEnd};textarea.value=text,textarea.selectionStart=sel.start,textarea.selectionEnd=sel.end,options.textCount.onlimit(this)}var args={$textarea:$textarea,byteLength:length,maxLength:options.maxLength};options.textCount.onedit(args),$textarea.scrollTop(textarea.scrollHeight)}useTextCount&&(addTextCount?($("<span></span>").addClass("ui-textarea-elem-text-count").insertAfter($textarea),$textarea.keyup(function(){checkLength()}),$textarea.on("input paste cut",function(){setTimeout(checkLength,250)}),checkLength(),resize()):checkLength())})},$.fn.textarea.defaults={textCount:{use:!0,onedit:function(args){args.$textarea.siblings(".ui-textarea-elem-text-count").text(args.byteLength+"/"+args.maxLength)},onlimit:function(){}},expandable:{use:!0,extraLine:!1}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/admin/password/policy_list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="change-password-policy-list" ng-show="policyRequirements && policyRequirements.length">\n    <p f-lang="Password must conform to the following rules:"></p>\n    <table class="table condensed">\n        <tr ng-repeat="policy in policyRequirements">\n            <td>\n                <span class="number-bubble">{{policy.requirement || \'-\'}}</span>\n            </td>\n            <td>\n                {{policy.text}}\n            </td>\n        </tr>\n    </table>\n    <p></p>\n</div>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(9),__webpack_require__(29),__webpack_require__(42),__webpack_require__(46),__webpack_require__(41),__webpack_require__(32),__webpack_require__(115),__webpack_require__(169),__webpack_require__(88)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(angular,module,fLocation,fStructure,fSlide,fFormatters,cmdbClone){var getEntryMkey=function(entry){return entry.q_origin_key||entry.mkey||entry.name||entry.id};module.directive("fMenuItemCreate",["$location","state",function($location,state){return{restrict:"A",templateUrl:__webpack_require__(1028),scope:{action:"&",createFn:"=",isAdd:"=",enabled:"&",fortigate:"<"},require:["?^fPopUpMenu","?^fMenuBar","?^fReadOnlyManager"],link:function(scope,element,attrs,controllers){element.addClass("menu-item");var menu=controllers[0]||controllers[1];const readOnlyManager=controllers[controllers.length-1];scope._readOnly=readOnlyManager?readOnlyManager.isReadOnly():state.readOnlyForPage,scope.menu=menu,scope.$watch("enabled()",function(value){void 0!==value&&(scope._enabled=value)}),scope.$watch("createFn",function(createFn){scope.createNew=createFn||function(){if(attrs.action)return void scope.action({$menu:menu,$menuItem:this});let path=$location.path();if(path){if(!scope._inTransition){const search={};path=fLocation.join_with_mkey([path,"edit"]),scope.fortigate&&!scope.fortigate.isCurrent&&(search.fortigate=scope.fortigate.serial),scope._inTransition=$location.path(path).search(search)}}else path=window.location.pathname,window.location.href=fLocation.join_with_mkey([path,"edit"],null,!0)+window.location.search}}),scope.$watch(function(){return scope.fortigate},function(){scope._readOnly=readOnlyManager?readOnlyManager.isReadOnly():state.readOnlyForPage})}}}]),module.directive("fMenuItemEdit",["$location","state",function($location,state){return{restrict:"A",scope:{action:"&",editFn:"=",enabled:"&",viewOnly:"&",fortigate:"<"},templateUrl:__webpack_require__(1029),require:["?^fPopUpMenu","?^fMenuBar","?^fReadOnlyManager"],link:function(scope,element,attrs,controllers){element.addClass("menu-item");var menu=controllers[0]||controllers[1];const readOnlyManager=controllers[controllers.length-1];scope.edit=function(){if(attrs.action)return void scope.action({$entry:menu.lastSelectedEntry,$row:menu.lastSelectedRow,$menu:menu,$menuItem:this});if(scope.editFn)return void scope.editFn.call(this,menu);let path=$location.path();const mkey=getEntryMkey(menu.lastSelectedEntry)+"";if(path){const search={};path=fLocation.join_with_mkey([path,"edit"],mkey),scope.fortigate&&!scope.fortigate.isCurrent&&(search.fortigate=scope.fortigate.serial),$location.path(path).search(search)}else path=window.location.pathname,window.location.href=fLocation.join_with_mkey([path,"edit"],mkey,!0)+"/"},scope.$watchGroup([function(){return menu.entries},function(){return scope.fortigate}],function([entries]){var enabled=scope.enabled({$entries:entries});scope._enabled=null!=enabled?enabled:entries&&1===entries.length||null!=attrs.editableSections&&menu.$sectionRow,scope._viewOnly=scope.viewOnly({$entries:entries})||function(entries){const readOnly=readOnlyManager?readOnlyManager.isReadOnly():state.readOnlyForPage;return!readOnly&&entries.length?entries.some(function(entry){return entry.q_global_entry&&(!state.isGlobalVDOM()||!state.admin.global_admin)||entry.q_no_edit}):readOnly}(entries)}),menu.menuBar&&(menu.qlistDoubleClickHandler=function(){scope._enabled&&scope.edit.apply(scope,arguments)})}}}]),module.directive("fMenuItemEditCli",function(cliConsole){return{restrict:"A",scope:{action:"&",editCliFn:"=",enabled:"&"},templateUrl:__webpack_require__(1030),require:["?^fPopUpMenu","?^fMenuBar"],link:function(scope,element,attrs,controllers){element.addClass("menu-item mini-hide");var menu=controllers[0]||controllers[1];scope.menu=menu,scope.editCli=function(){if(attrs.action)return void scope.action({$entry:menu.lastSelectedEntry,$menu:menu,$menuItem:this});if(scope.editCliFn)return void scope.editCliFn.call(this,menu);const entry=menu.lastSelectedEntry;cliConsole.openObjectInCLI({path:entry.q_path,name:entry.q_name,mkey:entry.q_origin_key,vdom:entry.vdom})},scope.$watch(function(){return menu.entries},function(entries){var enabled=scope.enabled({$entries:entries});if(null!=enabled)scope._enabled=enabled;else{var entry=menu.lastSelectedEntry;scope._enabled=entries&&1===entries.length&&entry&&void 0!==entry.q_type}})}}}),module.directive("fMenuItemDelete",function($q,$route,lang,CMDB,state){return{restrict:"A",scope:{action:"&",deleteFn:"=",deleteEntries:"&",deleteEntriesFn:"=",canDelete:"&",canDeleteFn:"=",enabled:"&",beforeDelete:"&",afterDelete:"&",transitionAfterDelete:"&",labelKey:"@",entriesLabelKey:"@",vdomScopeMatch:"@?",fortigate:"<"},require:["?^fPopUpMenu","?^fMenuBar","?^fReadOnlyManager"],templateUrl:__webpack_require__(1031),link:function(scope,element,attrs,controllers){element.addClass("menu-item");var menu=controllers[0]||controllers[1];const readOnlyManager=controllers[controllers.length-1];var canDelete=function(entry){var value=!1;return attrs.canDelete?value=scope.canDelete({$menu:menu,$entry:entry,$menuItem:this}):scope.canDeleteFn?value=scope.canDeleteFn.call(this,entry):entry&&(value=null==entry.can_delete?!entry.q_static&&!entry.implicit&&!entry.q_ref&&(!entry.q_global_entry||state.admin.global_admin):entry.can_delete,scope.hasOwnProperty("vdomScopeMatch")&&(value=value&&(entry=>{const globalScope=state.isGlobalVDOM();return!entry.q_global_entry&&!globalScope||entry.q_global_entry&&globalScope&&state.admin.global_admin})(entry))),value};scope.delete=function(){if(attrs.action)scope.action({$entries:menu.entries,$rows:menu.rowInstances,$menu:menu,$menuItem:this});else if(scope.deleteFn)scope.deleteFn.call(this,menu);else{var deleteMessage,canDeleteCount=0,toDeleteRows=[],toDeleteEntries=[],total=menu.entries.length,entriesLabel=lang(scope.entriesLabelKey||"elements");menu.rowInstances&&!menu.$qlist?menu.rowInstances.forEach(row=>{canDelete(row.entry)&&(canDeleteCount++,toDeleteRows.push(row),toDeleteEntries.push(row.entry))}):menu.entries.forEach(function(entry){canDelete(entry)&&(canDeleteCount++,toDeleteEntries.push(entry))}),deleteMessage=canDeleteCount===total?lang("selected_delete_confirm",[entriesLabel]):lang("selected_delete_confirm_subset",[entriesLabel,canDeleteCount,total]),fSlide.confirm(deleteMessage.toString()).then(function(){const fortigateState=scope.fortigate&&scope.fortigate.state||state;$q.when(scope.beforeDelete()).then(function(){if(attrs.deleteEntries)scope.deleteEntries({$entries:toDeleteEntries,$rows:toDeleteRows,$menu:menu,$menuItem:this});else if(scope.deleteEntriesFn)scope.deleteEntriesFn.call(this,toDeleteEntries,menu);else{var promises,typeMap={global:{},vdom:{}};toDeleteEntries.forEach(function(entry){var mkey=getEntryMkey(entry),type=entry.q_type;if(null==type)throw new Error("Entry doesn't have a q type");var vdomScope=entry.q_global_entry?"global":"vdom";typeMap[vdomScope][type]?typeMap[vdomScope][type].push(mkey):typeMap[vdomScope][type]=[mkey]}),promises=Object.keys(typeMap).map(function(vdomScope){return Object.keys(typeMap[vdomScope]).map(function(type){var pathName=fortigateState.getPathNameByType(type),path=fFormatters.path_name_format(pathName),cmdb=new CMDB(path.path,path.name,{csfProxy:scope.fortigate});return typeMap[vdomScope][type].map(function(mkey){var params;return"global"===vdomScope&&(params={url_params:{scope:vdomScope}}),cmdb.del(mkey,params).$promise.catch(CMDB.notifyFailure)})}).reduce(flatten,[])}).reduce(flatten,[]),$q.all(promises).finally(function(){$q.when(scope.afterDelete({$entries:toDeleteEntries})).then(function(){attrs.transitionAfterDelete?scope.transitionAfterDelete():window===top?$route.reload():window.location.reload()})})}function flatten(result,arr){return result.concat(arr)}}.bind(this),CMDB.notifyFailure)}.bind(this))}},scope.$watchGroup([function(){return menu.entries},function(){return scope.fortigate}],function([entries]){var enabled=scope.enabled({$entries:entries});if(null!=enabled)scope._enabled=enabled;else{var numRows=entries?entries.length:0;scope._enabled=numRows&&entries.some(canDelete)}scope._readOnly=readOnlyManager?readOnlyManager.isReadOnly():state.readOnlyForPage})}}}),module.directive("fMenuItemClone",function($route,state){return{restrict:"A",scope:{action:"&",cloneFn:"=",enabled:"&",vdomScopeMatch:"@?",transitionAfterClone:"&",fortigate:"<?"},require:["?^fPopUpMenu","?^fMenuBar","?^fReadOnlyManager"],templateUrl:__webpack_require__(1032),link:function(scope,element,attrs,controllers){element.addClass("menu-item");var menu=controllers[0]||controllers[1];const readOnlyManager=controllers[controllers.length-1];scope.$watchGroup([function(){return menu.entries},function(){return scope.fortigate}],function([entries]){var enabled=scope.enabled({$entries:entries});scope._enabled=null!=enabled?enabled:entries&&1===entries.length&&(!scope.hasOwnProperty("vdomScopeMatch")||(entry=>{const globalScope=state.isGlobalVDOM();return!entry.q_global_entry&&!globalScope||entry.q_global_entry&&globalScope&&state.admin.global_admin})(entries[0])),scope._readOnly=readOnlyManager?readOnlyManager.isReadOnly():state.readOnlyForPage}),scope.clone=function(){const fortigateState=scope.fortigate&&scope.fortigate.state||state;if(attrs.action)return void scope.action({$menu:menu,$menuItem:this});if(scope.cloneFn)return void scope.cloneFn.call(this,menu);var entry=menu.lastSelectedEntry;const pathName=fortigateState.getPathNameByType(entry.q_type),path=fFormatters.path_name_format(pathName);var conf={mkey:getEntryMkey(entry),mkey_type:entry.q_mkey_type,qType:entry.q_type,global:entry.q_global_entry,path:path.path,name:path.name};scope.fortigate&&!scope.fortigate.isCurrent&&(conf.csfProxy=scope.fortigate),cmdbClone(conf).then(function(){attrs.transitionAfterClone?scope.transitionAfterClone():window===top?$route.reload():window.location.reload()})}}}}),module.directive("fMenuItemExpandAll",function(){return{restrict:"A",templateUrl:__webpack_require__(1033),scope:{collapse:"=",action:"&",expandCollapseFn:"="},require:["?^fPopUpMenu","?^fMenuBar"],link:function(scope,element,attrs,controllers){element.addClass("menu-item"),scope.menu=controllers[0]||controllers[1],scope.expandCollapse=function(){if(attrs.action)scope.action({$menu:scope.menu,$menuItem:this});else if(scope.expandCollapseFn)scope.expandCollapseFn.call(this,scope.menu);else{var rowSelector;if(scope.menu.$categoryRow)rowSelector=".qlist_category";else{if(!scope.menu.$sectionRow)return;rowSelector=".qlist_section"}var selector=rowSelector+" label button.compact-visual-toggle";selector+=scope.collapse?".active":":not(.active)",scope.menu.$qlist.find(selector).click()}}}}}),module.directive("fMenuItemDefaults",function(){return{restrict:"A",templateUrl:__webpack_require__(477),link:function(scope,element){element.addClass("menu-item-group")}}}),module.directive("fMenuItemQlistSearch",function($q){return{restrict:"A",templateUrl:__webpack_require__(1034),scope:{beforeSearch:"="},require:["?^fPopUpMenu","?^fMenuBar"],link:function(scope,element,attrs,controllers){var beforeSearchPromise,lastSearch,menu=controllers[0]||controllers[1];element.addClass("menu-item").addClass("menu-item-search"),scope.miniHideInput=!0,scope.searchValue=lastSearch="",scope.search=function(){var promise;if(!menu.$qlist)throw new Error("Menu doesn't contain a jQuery qlist object");scope.miniHideInput=!1,scope.searchValue!==lastSearch&&(promise=beforeSearchPromise?beforeSearchPromise.then(function(){return $q.when(menu.$qlist.qlist("search",scope.searchValue))}):$q.when(menu.$qlist.qlist("search",scope.searchValue)),scope.searching=!0,lastSearch=scope.searchValue,promise.finally(function(){scope.searching=!1}))},scope.clearSearch=function(){scope.searchValue="",scope.search()},scope.searchFocussed=function(){scope.beforeSearch&&"function"==typeof scope.beforeSearch&&(beforeSearchPromise=$q.when(scope.beforeSearch()))},angular.element(element).find("input.search-input").on("keydown",function(event){27===event.keyCode&&(event.preventDefault(),scope.$apply(function(){scope.clearSearch()})),13===event.keyCode&&(event.preventDefault(),scope.search())}).on("blur",function(){scope.$apply(function(){scope.search()})})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;
/*!
 * jQuery Validation Plugin v1.13.1
 *
 * http://jqueryvalidation.org/
 *
 * Copyright (c) 2014 Jörn Zaefferer
 * Released under the MIT license
 */__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(10)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof(__WEBPACK_AMD_DEFINE_FACTORY__=function($){$.extend($.fn,{validate:function(options){if(this.length){var validator=$.data(this[0],"validator");return validator||(this.attr("novalidate","novalidate"),validator=new $.validator(options,this[0]),$.data(this[0],"validator",validator),validator.settings.onsubmit&&(this.validateDelegate(":submit","click",function(event){validator.settings.submitHandler&&(validator.submitButton=event.target),$(event.target).hasClass("cancel")&&(validator.cancelSubmit=!0),void 0!==$(event.target).attr("formnovalidate")&&(validator.cancelSubmit=!0)}),this.submit(function(event){function handle(){var hidden,result;return!validator.settings.submitHandler||(validator.submitButton&&(hidden=$("<input type='hidden'/>").attr("name",validator.submitButton.name).val($(validator.submitButton).val()).appendTo(validator.currentForm)),result=validator.settings.submitHandler.call(validator,validator.currentForm,event),validator.submitButton&&hidden.remove(),void 0!==result&&result)}return validator.settings.debug&&event.preventDefault(),validator.cancelSubmit?(validator.cancelSubmit=!1,handle()):validator.form()?validator.pendingRequest?(validator.formSubmitted=!0,!1):handle():(validator.focusInvalid(),!1)})),validator)}options&&options.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing.")},valid:function(){var valid,validator;return $(this[0]).is("form")?valid=this.validate().form():(valid=!0,validator=$(this[0].form).validate(),this.each(function(){valid=validator.element(this)&&valid})),valid},removeAttrs:function(attributes){var result={},$element=this;return $.each(attributes.split(/\s/),function(index,value){result[value]=$element.attr(value),$element.removeAttr(value)}),result},rules:function(command,argument){var settings,staticRules,existingRules,data,param,filtered,element=this[0];if(command)switch(settings=$.data(element.form,"validator").settings,staticRules=settings.rules,existingRules=$.validator.staticRules(element),command){case"add":$.extend(existingRules,$.validator.normalizeRule(argument)),delete existingRules.messages,staticRules[element.name]=existingRules,argument.messages&&(settings.messages[element.name]=$.extend(settings.messages[element.name],argument.messages));break;case"remove":return argument?(filtered={},$.each(argument.split(/\s/),function(index,method){filtered[method]=existingRules[method],delete existingRules[method],"required"===method&&$(element).removeAttr("aria-required")}),filtered):(delete staticRules[element.name],existingRules)}return(data=$.validator.normalizeRules($.extend({},$.validator.classRules(element),$.validator.attributeRules(element),$.validator.dataRules(element),$.validator.staticRules(element)),element)).required&&(param=data.required,delete data.required,data=$.extend({required:param},data),$(element).attr("aria-required","true")),data.remote&&(param=data.remote,delete data.remote,data=$.extend(data,{remote:param})),data}}),$.extend($.expr[":"],{blank:function(a){return!$.trim(""+$(a).val())},filled:function(a){return!!$.trim(""+$(a).val())},unchecked:function(a){return!$(a).prop("checked")}}),$.validator=function(options,form){this.settings=$.extend(!0,{},$.validator.defaults,options),this.currentForm=form,this.init()},$.validator.format=function(source,params){return 1===arguments.length?function(){var args=$.makeArray(arguments);return args.unshift(source),$.validator.format.apply(this,args)}:(arguments.length>2&&params.constructor!==Array&&(params=$.makeArray(arguments).slice(1)),params.constructor!==Array&&(params=[params]),$.each(params,function(i,n){source=source.replace(new RegExp("\\{"+i+"\\}","g"),function(){return n})}),source)},$.extend($.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:$([]),errorLabelContainer:$([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(element){this.lastActive=element,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,element,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(element)))},onfocusout:function(element){this.checkable(element)||!(element.name in this.submitted)&&this.optional(element)||this.element(element)},onkeyup:function(element,event){9===event.which&&""===this.elementValue(element)||(element.name in this.submitted||element===this.lastElement)&&this.element(element)},onclick:function(element){element.name in this.submitted?this.element(element):element.parentNode.name in this.submitted&&this.element(element.parentNode)},highlight:function(element,errorClass,validClass){"radio"===element.type?this.findByName(element.name).addClass(errorClass).removeClass(validClass):$(element).addClass(errorClass).removeClass(validClass)},unhighlight:function(element,errorClass,validClass){"radio"===element.type?this.findByName(element.name).removeClass(errorClass).addClass(validClass):$(element).removeClass(errorClass).addClass(validClass)}},setDefaults:function(settings){$.extend($.validator.defaults,settings)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date ( ISO ).",number:"Please enter a valid number.",digits:"Please enter only digits.",creditcard:"Please enter a valid credit card number.",equalTo:"Please enter the same value again.",maxlength:$.validator.format("Please enter no more than {0} characters."),minlength:$.validator.format("Please enter at least {0} characters."),rangelength:$.validator.format("Please enter a value between {0} and {1} characters long."),range:$.validator.format("Please enter a value between {0} and {1}."),max:$.validator.format("Please enter a value less than or equal to {0}."),min:$.validator.format("Please enter a value greater than or equal to {0}.")},autoCreateRanges:!1,prototype:{init:function(){this.labelContainer=$(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||$(this.currentForm),this.containers=$(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var rules,groups=this.groups={};function delegate(event){var validator=$.data(this[0].form,"validator"),eventType="on"+event.type.replace(/^validate/,""),settings=validator.settings;settings[eventType]&&!this.is(settings.ignore)&&settings[eventType].call(validator,this[0],event)}$.each(this.settings.groups,function(key,value){"string"==typeof value&&(value=value.split(/\s/)),$.each(value,function(index,name){groups[name]=key})}),rules=this.settings.rules,$.each(rules,function(key,value){rules[key]=$.validator.normalizeRule(value)}),$(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']","focusin focusout keyup",delegate).validateDelegate("select, option, [type='radio'], [type='checkbox']","click",delegate),this.settings.invalidHandler&&$(this.currentForm).bind("invalid-form.validate",this.settings.invalidHandler),$(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required","true")},form:function(){return this.checkForm(),$.extend(this.submitted,this.errorMap),this.invalid=$.extend({},this.errorMap),this.valid()||$(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var i=0,elements=this.currentElements=this.elements();elements[i];i++)this.check(elements[i]);return this.valid()},element:function(element){var cleanElement=this.clean(element),checkElement=this.validationTargetFor(cleanElement),result=!0;return this.lastElement=checkElement,void 0===checkElement?delete this.invalid[cleanElement.name]:(this.prepareElement(checkElement),this.currentElements=$(checkElement),(result=!1!==this.check(checkElement))?delete this.invalid[checkElement.name]:this.invalid[checkElement.name]=!0),$(element).attr("aria-invalid",!result),this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),result},showErrors:function(errors){if(errors){for(var name in $.extend(this.errorMap,errors),this.errorList=[],errors)this.errorList.push({message:errors[name],element:this.findByName(name)[0]});this.successList=$.grep(this.successList,function(element){return!(element.name in errors)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){$.fn.resetForm&&$(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors(),this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid")},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(obj){var i,count=0;for(i in obj)count++;return count},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(errors){errors.not(this.containers).text(""),this.addWrapper(errors).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{$(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(e){}},findLastActive:function(){var lastActive=this.lastActive;return lastActive&&1===$.grep(this.errorList,function(n){return n.element.name===lastActive.name}).length&&lastActive},elements:function(){var validator=this,rulesCache={};return $(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled], [readonly]").not(this.settings.ignore).filter(function(){return!this.name&&validator.settings.debug&&window.console&&console.error("%o has no name assigned",this),!(this.name in rulesCache||!validator.objectLength($(this).rules())||(rulesCache[this.name]=!0,0))})},clean:function(selector){return $(selector)[0]},errors:function(){var errorClass=this.settings.errorClass.split(" ").join(".");return $(this.settings.errorElement+"."+errorClass,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=$([]),this.toHide=$([]),this.currentElements=$([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(element){this.reset(),this.toHide=this.errorsFor(element)},elementValue:function(element){var val,$element=$(element),type=element.type;return"radio"===type||"checkbox"===type?$("input[name='"+element.name+"']:checked").val():"number"===type&&void 0!==element.validity?!element.validity.badInput&&$element.val():"string"==typeof(val=$element.val())?val.replace(/\r/g,""):val},check:function(element){element=this.validationTargetFor(this.clean(element));var result,method,rule,rules=$(element).rules(),rulesCount=$.map(rules,function(n,i){return i}).length,dependencyMismatch=!1,val=this.elementValue(element);for(method in rules){rule={method:method,parameters:rules[method]};try{if("dependency-mismatch"===(result=$.validator.methods[method].call(this,val,element,rule.parameters))&&1===rulesCount){dependencyMismatch=!0;continue}if(dependencyMismatch=!1,"pending"===result)return void(this.toHide=this.toHide.not(this.errorsFor(element)));if(!result)return this.formatAndAdd(element,rule),!1}catch(e){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+element.id+", check the '"+rule.method+"' method.",e),e}}if(!dependencyMismatch)return this.objectLength(rules)&&this.successList.push(element),!0},customDataMessage:function(element,method){return $(element).data("msg"+method.charAt(0).toUpperCase()+method.substring(1).toLowerCase())||$(element).data("msg")},customMessage:function(name,method){var m=this.settings.messages[name];return m&&(m.constructor===String?m:m[method])},findDefined:function(){for(var i=0;i<arguments.length;i++)if(void 0!==arguments[i])return arguments[i]},defaultMessage:function(element,method){return this.findDefined(this.customMessage(element.name,method),this.customDataMessage(element,method),!this.settings.ignoreTitle&&element.title||void 0,$.validator.messages[method],"<strong>Warning: No message defined for "+element.name+"</strong>")},formatAndAdd:function(element,rule){var message=this.defaultMessage(element,rule.method),theregex=/\$?\{(\d+)\}/g;"function"==typeof message?message=message.call(this,rule.parameters,element):theregex.test(message)&&(message=$.validator.format(message.replace(theregex,"{$1}"),rule.parameters)),this.errorList.push({message:message,element:element,method:rule.method}),this.errorMap[element.name]=message,this.submitted[element.name]=message},addWrapper:function(toToggle){return this.settings.wrapper&&(toToggle=toToggle.add(toToggle.parent(this.settings.wrapper))),toToggle},defaultShowErrors:function(){var i,elements,error;for(i=0;this.errorList[i];i++)error=this.errorList[i],this.settings.highlight&&this.settings.highlight.call(this,error.element,this.settings.errorClass,this.settings.validClass),this.showLabel(error.element,error.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(i=0;this.successList[i];i++)this.showLabel(this.successList[i]);if(this.settings.unhighlight)for(i=0,elements=this.validElements();elements[i];i++)this.settings.unhighlight.call(this,elements[i],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return $(this.errorList).map(function(){return this.element})},showLabel:function(element,message){var place,group,errorID,error=this.errorsFor(element),elementID=this.idOrName(element),describedBy=$(element).attr("aria-describedby");error.length?(error.removeClass(this.settings.validClass).addClass(this.settings.errorClass),error.html(message)):(error=$("<"+this.settings.errorElement+">").attr("id",elementID+"-error").addClass(this.settings.errorClass).html(message||""),place=error,this.settings.wrapper&&(place=error.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(place):this.settings.errorPlacement?this.settings.errorPlacement(place,$(element)):place.insertAfter(element),error.is("label")?error.attr("for",elementID):0===error.parents("label[for='"+elementID+"']").length&&(errorID=error.attr("id").replace(/(:|\.|\[|\])/g,"\\$1"),describedBy?describedBy.match(new RegExp("\\b"+errorID+"\\b"))||(describedBy+=" "+errorID):describedBy=errorID,$(element).attr("aria-describedby",describedBy),(group=this.groups[element.name])&&$.each(this.groups,function(name,testgroup){testgroup===group&&$("[name='"+name+"']",this.currentForm).attr("aria-describedby",error.attr("id"))}))),!message&&this.settings.success&&(error.text(""),"string"==typeof this.settings.success?error.addClass(this.settings.success):this.settings.success(error,element)),this.toShow=this.toShow.add(error)},errorsFor:function(element){var name=this.idOrName(element),describer=$(element).attr("aria-describedby"),selector="label[for='"+name+"'], label[for='"+name+"'] *";return describer&&(selector=selector+", #"+describer.replace(/\s+/g,", #")),this.errors().filter(selector)},idOrName:function(element){return this.groups[element.name]||(this.checkable(element)?element.name:element.id||element.name)},validationTargetFor:function(element){return this.checkable(element)&&(element=this.findByName(element.name)),$(element).not(this.settings.ignore)[0]},checkable:function(element){return/radio|checkbox/i.test(element.type)},findByName:function(name){return $(this.currentForm).find("[name='"+name+"']")},getLength:function(value,element){switch(element.nodeName.toLowerCase()){case"select":return $("option:selected",element).length;case"input":if(this.checkable(element))return this.findByName(element.name).filter(":checked").length}return value.length},depend:function(param,element){return!this.dependTypes[typeof param]||this.dependTypes[typeof param](param,element)},dependTypes:{boolean:function(param){return param},string:function(param,element){return!!$(param,element.form).length},function:function(param,element){return param(element)}},optional:function(element){var val=this.elementValue(element);return!$.validator.methods.required.call(this,val,element)&&"dependency-mismatch"},startRequest:function(element){this.pending[element.name]||(this.pendingRequest++,this.pending[element.name]=!0)},stopRequest:function(element,valid){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[element.name],valid&&0===this.pendingRequest&&this.formSubmitted&&this.form()?($(this.currentForm).submit(),this.formSubmitted=!1):!valid&&0===this.pendingRequest&&this.formSubmitted&&($(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(element){return $.data(element,"previousValue")||$.data(element,"previousValue",{old:null,valid:!0,message:this.defaultMessage(element,"remote")})}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(className,rules){className.constructor===String?this.classRuleSettings[className]=rules:$.extend(this.classRuleSettings,className)},classRules:function(element){var rules={},classes=$(element).attr("class");return classes&&$.each(classes.split(" "),function(){this in $.validator.classRuleSettings&&$.extend(rules,$.validator.classRuleSettings[this])}),rules},attributeRules:function(element){var method,value,rules={},$element=$(element),type=element.getAttribute("type");for(method in $.validator.methods)"required"===method?(""===(value=element.getAttribute(method))&&(value=!0),value=!!value):value=$element.attr(method),/min|max/.test(method)&&(null===type||/number|range|text/.test(type))&&(value=Number(value)),value||0===value?rules[method]=value:type===method&&"range"!==type&&(rules[method]=!0);return rules.maxlength&&/-1|2147483647|524288/.test(rules.maxlength)&&delete rules.maxlength,rules},dataRules:function(element){var method,value,rules={},$element=$(element);for(method in $.validator.methods)void 0!==(value=$element.data("rule"+method.charAt(0).toUpperCase()+method.substring(1).toLowerCase()))&&(rules[method]=value);return rules},staticRules:function(element){var rules={},validator=$.data(element.form,"validator");return validator.settings.rules&&(rules=$.validator.normalizeRule(validator.settings.rules[element.name])||{}),rules},normalizeRules:function(rules,element){return $.each(rules,function(prop,val){if(!1!==val){if(val.param||val.depends){var keepRule=!0;switch(typeof val.depends){case"string":keepRule=!!$(val.depends,element.form).length;break;case"function":keepRule=val.depends.call(element,element)}keepRule?rules[prop]=void 0===val.param||val.param:delete rules[prop]}}else delete rules[prop]}),$.each(rules,function(rule,parameter){rules[rule]=$.isFunction(parameter)?parameter(element):parameter}),$.each(["minlength","maxlength"],function(){rules[this]&&(rules[this]=Number(rules[this]))}),$.each(["rangelength","range"],function(){var parts;rules[this]&&($.isArray(rules[this])?rules[this]=[Number(rules[this][0]),Number(rules[this][1])]:"string"==typeof rules[this]&&(parts=rules[this].replace(/[\[\]]/g,"").split(/[\s,]+/),rules[this]=[Number(parts[0]),Number(parts[1])]))}),$.validator.autoCreateRanges&&(null!=rules.min&&null!=rules.max&&(rules.range=[rules.min,rules.max],delete rules.min,delete rules.max),null!=rules.minlength&&null!=rules.maxlength&&(rules.rangelength=[rules.minlength,rules.maxlength],delete rules.minlength,delete rules.maxlength)),rules},normalizeRule:function(data){if("string"==typeof data){var transformed={};$.each(data.split(/\s/),function(){transformed[this]=!0}),data=transformed}return data},addMethod:function(name,method,message){$.validator.methods[name]=method,$.validator.messages[name]=void 0!==message?message:$.validator.messages[name],method.length<3&&$.validator.addClassRules(name,$.validator.normalizeRule(name))},methods:{required:function(value,element,param){if(!this.depend(param,element))return"dependency-mismatch";if("select"===element.nodeName.toLowerCase()){var val=$(element).val();return val&&val.length>0}return this.checkable(element)?this.getLength(value,element)>0:$.trim(value).length>0},email:function(value,element){return this.optional(element)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value)},url:function(value,element){return this.optional(element)||/^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value)},date:function(value,element){return this.optional(element)||!/Invalid|NaN/.test(new Date(value).toString())},dateISO:function(value,element){return this.optional(element)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value)},number:function(value,element){return this.optional(element)||/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value)},digits:function(value,element){return this.optional(element)||/^\d+$/.test(value)},creditcard:function(value,element){if(this.optional(element))return"dependency-mismatch";if(/[^0-9 \-]+/.test(value))return!1;var n,cDigit,nCheck=0,nDigit=0,bEven=!1;if((value=value.replace(/\D/g,"")).length<13||value.length>19)return!1;for(n=value.length-1;n>=0;n--)cDigit=value.charAt(n),nDigit=parseInt(cDigit,10),bEven&&(nDigit*=2)>9&&(nDigit-=9),nCheck+=nDigit,bEven=!bEven;return nCheck%10==0},minlength:function(value,element,param){var length=$.isArray(value)?value.length:this.getLength(value,element);return this.optional(element)||length>=param},maxlength:function(value,element,param){var length=$.isArray(value)?value.length:this.getLength(value,element);return this.optional(element)||length<=param},rangelength:function(value,element,param){var length=$.isArray(value)?value.length:this.getLength(value,element);return this.optional(element)||length>=param[0]&&length<=param[1]},min:function(value,element,param){return this.optional(element)||value>=param},max:function(value,element,param){return this.optional(element)||value<=param},range:function(value,element,param){return this.optional(element)||value>=param[0]&&value<=param[1]},equalTo:function(value,element,param){var target=$(param);return this.settings.onfocusout&&target.unbind(".validate-equalTo").bind("blur.validate-equalTo",function(){$(element).valid()}),value===target.val()},remote:function(value,element,param){if(this.optional(element))return"dependency-mismatch";var validator,data,previous=this.previousValue(element);return this.settings.messages[element.name]||(this.settings.messages[element.name]={}),previous.originalMessage=this.settings.messages[element.name].remote,this.settings.messages[element.name].remote=previous.message,param="string"==typeof param&&{url:param}||param,previous.old===value?previous.valid:(previous.old=value,validator=this,this.startRequest(element),(data={})[element.name]=value,$.ajax($.extend(!0,{url:param,mode:"abort",port:"validate"+element.name,dataType:"json",data:data,context:validator.currentForm,success:function(response){var errors,message,submitted,valid=!0===response||"true"===response;validator.settings.messages[element.name].remote=previous.originalMessage,valid?(submitted=validator.formSubmitted,validator.prepareElement(element),validator.formSubmitted=submitted,validator.successList.push(element),delete validator.invalid[element.name],validator.showErrors()):(errors={},message=response||validator.defaultMessage(element,"remote"),errors[element.name]=previous.message=$.isFunction(message)?message(value):message,validator.invalid[element.name]=!0,validator.showErrors(errors)),previous.valid=valid,validator.stopRequest(element,valid)}},param)),"pending")}}}),$.format=function(){throw"$.format has been deprecated. Please use $.validator.format instead."};var ajax,pendingRequests={};$.ajaxPrefilter?$.ajaxPrefilter(function(settings,_,xhr){var port=settings.port;"abort"===settings.mode&&(pendingRequests[port]&&pendingRequests[port].abort(),pendingRequests[port]=xhr)}):(ajax=$.ajax,$.ajax=function(settings){var mode=("mode"in settings?settings:$.ajaxSettings).mode,port=("port"in settings?settings:$.ajaxSettings).port;return"abort"===mode?(pendingRequests[port]&&pendingRequests[port].abort(),pendingRequests[port]=ajax.apply(this,arguments),pendingRequests[port]):ajax.apply(this,arguments)}),$.extend($.fn,{validateDelegate:function(delegate,type,handler){return this.bind(type,function(event){var target=$(event.target);if(target.is(delegate))return handler.apply(target,arguments)})}})})?__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__):__WEBPACK_AMD_DEFINE_FACTORY__)||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/menu/partials/create_new.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="createNew()"\n        emphasized="::true"\n        enabled="_enabled !== false"\n        ng-if="!_readOnly && menu.menuBar">\n    <f-icon class="fa-plus"></f-icon>\n    {{ (isAdd ? \'add\' : \'Create New\') | lang}}\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/edit.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="edit()" enabled="_enabled">\n    <f-icon ng-class="{\'fa-pencil\': !$root.ADMIN_RO && !_viewOnly, \'ftnt-view\': $root.ADMIN_RO || _viewOnly}"></f-icon>\n    <span ng-if="$root.ADMIN_RO || _viewOnly">\n        {{::\'view\' | lang}}\n    </span>\n    <span ng-if="!$root.ADMIN_RO && !_viewOnly">\n        {{::\'edit\' | lang}}\n    </span>\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/editcli.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="editCli()" enabled="_enabled" class="mini-hide" ng-if="!$root.ADMIN_RO && menu.popUpMenu">\n    <f-icon class="fa-terminal"></f-icon>\n    <span>\n        {{::\'Edit in CLI\' | lang}}\n    </span>\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/delete.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="delete()" enabled="_enabled" ng-if="!_readOnly">\n    <f-icon class="fa-trash-o"></f-icon>\n    {{::(labelKey || \'del\') | lang}}\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/clone.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div f-menu-item-button click="clone()" enabled="_enabled" ng-if="!_readOnly">\n    <f-icon class="ftnt-copy"></f-icon>\n    {{\'clone\' | lang}}\n</div>\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/expand_all.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"<div f-menu-item-button click=\"expandCollapse()\">\n    <f-icon ng-class=\"{'fa-plus': !collapse, 'fa-minus': collapse}\"></f-icon>\n    {{collapse ? 'collapse_all' : 'expand_all' | lang}}\n</div>\n")}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/menu/partials/search.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="search-container" ng-class="{\'mini-hide\': miniHideInput}">\n    <input type="text" class="search-input" placeholder="{{\'search\' | lang}}" ng-model="searchValue" ng-focus="searchFocussed()" />\n    <f-icon class="fa-times clear-search" title="{{\'clear_search\' | lang}}" ng-show="searchValue"\n        ng-click="clearSearch()">\n    </f-icon>\n</div>\n<button type="button" class="do-search" ng-disabled="searching" ng-click="search()">\n    <div class="flex-menu-content">\n        <f-icon ng-class="{\n            \'fa-search\': !searching,\n            \'fa-loading\': searching\n        }"></f-icon>\n    </div>\n</button>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module){module.directive("fRightClick",function($parse){return{restrict:"A",controller:function($scope,$element,$attrs){var rightClickFn=$parse($attrs.fRightClick);$element.bind("contextmenu",function($event){$scope.$apply(function(){$event.preventDefault(),rightClickFn($scope,{$event:$event})})})}}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject,notify,fStructure)=>{function RegistrationForticareLicense(injector){injector.injectMarked(this),this.setup()}RegistrationForticareLicense.prototype.setup=function(){this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent},RegistrationForticareLicense.prototype.close=function(){this.slideController&&this.slideController.slide.done()},RegistrationForticareLicense.prototype.createURL=function(url){return this.fortigate?this.fortigate.createCSFURI(url):url},RegistrationForticareLicense.prototype.submit=inject.mark(($http,lang,$q,state)=>(function(){return $http.post(this.createURL("/api/v2/monitor/registration/forticare/add-license"),{registration_code:this.license}).then(response=>{const fgtSerial=this.fortigate&&this.fortigate.serial||state.serial;if(!response.data.results.forticare_success){if(response.data.results.forticare_error)return notify.post(response.data.results.forticare_error,notify.LEVEL.ERROR),$q.reject();{let msg=lang("FortiCare contract failed to register");return notify.post(msg,notify.LEVEL.ERROR),$q.reject()}}{let msg=lang("FortiCare contract has been added successfully");notify.post(msg,notify.LEVEL.SUCCESS),fStructure.updateLicense(fgtSerial),this.close()}},response=>{let errMsg=`HTTP ${response.status}`;return response.data.error&&(errMsg=lang(response.data.error)),notify.post(errMsg,notify.LEVEL.ERROR),$q.reject()})})),module.component("fRegistrationForticareLicense",{controller:RegistrationForticareLicense,templateUrl:__webpack_require__(1037),require:{slideController:"?^fSlideContainer"},bindings:{relative:"<",fortigate:"<"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-forticare-license.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog dialog-title="$ctrl.title"\n          hide-title="::true"\n          relative="::$ctrl.relative"\n          valid-submit="$ctrl.submit()"\n          form="$ctrl.form">\n    <section>\n        <div class="info-message">\n            <f-icon class="fa-info-circle"></f-icon>\n            <div class="message-content">\n                {{::\'Enter the contract registration code from your service registration document\' | lang}}\n            </div>\n        </div>\n    </section>\n\n    <section>\n        <f-field ng-if="$ctrl.fortigate">\n            <field-label>\n                {{::\'FortiGate\' | lang}}\n            </field-label>\n            <field-value>\n                <span>\n                    <f-object-formatted mkey="{{::$ctrl.fortigate.serial}}" datasource="csfFortiGates">\n                    </f-object-formatted>\n                </span>\n            </field-value>\n        </f-field>\n\n        <f-field>\n            <field-label>\n                {{::\'Registration Code\' | lang}}\n            </field-label>\n            <field-value>\n                <input id="license" type="text" ng-model="$ctrl.license" required>\n            </field-value>.\n        </f-field>\n    </section>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(9),__webpack_require__(0),__webpack_require__(8),__webpack_require__(27),__webpack_require__(42),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((ngModule,inject,angular,BUILD,ftnt_shared,notify,fLocation,fStructure)=>{const FORTICARE_URL={CREATE:"/api/v2/monitor/registration/forticare/create",LOGIN:"/api/v2/monitor/registration/forticare/login"};function RegistrationForticare($scope,injector){injector.injectMarked(this,{$scope:$scope})}RegistrationForticare.prototype.$onInit=inject.mark(licenseRegions=>(function(){this.licenseRegions=licenseRegions,this.setup(),this.setupOmniselect(),this.getFortiCloudStatus()})),RegistrationForticare.prototype.done=inject.mark($route=>(function(){this.inPrompt?(this.registrationFinished=!0,this.changeSuccess()):this.slideController&&(this.forticloudRequest&&!this.submitFortiCloud||(this.slideController.slide.done(),$route.reload()))})),RegistrationForticare.prototype.getFortiCloudStatus=inject.mark(($http,notificationRequests,$scope)=>(function(){const parseStatus=()=>{switch(this.forticloudStatus){case this.SYMBOLS.LICENSE_STATUS_NO_SUPPORT:this.errorStatusMsg="FortiGate Cloud unsupported";break;case this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGIN_IN_PROGRESS:this.errorStatusMsg="FortiGate Cloud login in progress";break;case this.SYMBOLS.LICENSE_STATUS_CLOUD_ERROR:this.errorStatusMsg="Error getting FortiGate Cloud status"}};notificationRequests.watch({scope:$scope,requestType:"license",callback:licenses=>{this.forticloudStatus=licenses.forticloud.status,parseStatus()},fortigate:this.fortigate,immediate:!0})})),RegistrationForticare.prototype.setup=inject.mark(($scope,licenseRegions,state)=>(function(){this.loading=!0,licenseRegions.getIndustryOrgInfo().finally(()=>{this.loading=!1}),this.SYMBOLS=BUILD.SYMBOLS,this.ACTIONS={CREATE:"CREATE",LOGIN:"LOGIN",SHOW_AGREEMENT:"SHOW_AGREEMENT"},this.ACTION=this.ACTIONS.LOGIN,this.serial=state.serial,this.agreement="",this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent,this.PASSWORD_RESET_URL="https://support.fortinet.com/Credentials/Account/UserPassword.aspx",this.RESELLERS_RELOAD_EVENT="countryCodeChangedEvent",$scope.$watch("$ctrl.country",country=>{this.updateResellerList(country)})})),RegistrationForticare.prototype.setupOmniselect=inject.mark(licenseRegions=>(function(){let countries=licenseRegions.getCountryList();this.countrySelect={sources:["forticareRegistrationLicenseCountries"],singleSelect:!0,tooltips:!1,meta:{countries:countries}},this.resellerSelect={sources:["forticareRegistrationLicenseResellers"],singleSelect:!0,tooltips:!1,meta:{resellers:[]}}})),RegistrationForticare.prototype.updateResellerList=inject.mark((licenseRegions,$scope)=>(async function(country){if(country&&country.code){this.reseller=null,this.resellersLoadingFailed=!1,this.loadingResellers=!0,$scope.$broadcast("countryCodeChangedEvent");for(let count=0;count<5;count++)try{const resellers=await licenseRegions.getResellersList(country.code);this.resellerSelect.meta.resellers=resellers;break}catch(e){this.resellersLoadingFailed=!0,this.resellerSelect.meta.resellers=[]}this.loadingResellers=!1}else this.resellerSelect.meta.resellers=[]})),RegistrationForticare.prototype.getAccountInfo=inject.mark(licenseRegions=>(function(){const getIndustryName=id=>{let industryName=id;return(licenseRegions.industries||[]).some(industry=>industry.id===id&&(industryName=industry.name,!0)),industryName};let accountData={email:this.email,password:this.password,country_code:this.country.code,reseller_id:this.reseller.value,agreement_accepted:this.agreementAccepted,reseller_name:(id=>{let resellerName=id;return(licenseRegions.resellers||[]).some(reseller=>reseller.value===id&&(resellerName=reseller.text,!0)),resellerName})(this.reseller.value)};return(this.ACTION===this.ACTIONS.CREATE||this.ACTION===this.ACTIONS.SHOW_AGREEMENT&&this.PREV_ACTION===this.ACTIONS.CREATE)&&(Object.assign(accountData,{first_name:this.firstName,last_name:this.lastName,title:this.title,company:this.company,address:this.address,city:this.city,state:this.customState||this.stateObj.name,postal_code:this.postalCode,phone:this.phone,industry_id:this.industryID,industry:getIndustryName(this.industryID),orgsize_id:this.organizationSizeID}),this.country.code!==licenseRegions.canadaCode&&this.country.code!==licenseRegions.usaCode||(accountData.state_code=this.stateObj.code)),accountData})),RegistrationForticare.prototype.parseFortiCareResponse=inject.mark((lang,$q)=>(function(response){if(response.data.results.forticare_success)return this.inPrompt||notify.post(lang("FortiCare registered"),notify.LEVEL.SUCCESS),$q.resolve();if(response.data.results.forticare_agreement)return $q.resolve({agreement:response.data.results.forticare_agreement});{let errMsg=lang("FortiCare registration failed").toString();if(response.data.results.forticare_error){errMsg=`${lang("FortiCare").toString()}: ${response.data.results.forticare_error}`}return this.inPrompt?this.errorMessage=errMsg:notify.post(errMsg,notify.LEVEL.ERROR),$q.reject()}})),RegistrationForticare.prototype.parseFortiCloudResponse=inject.mark(lang=>(function(response){if(response.data.results.forticloud_success){let msg=lang("FortiGate Cloud successfully activated").toString();if(this.ACTION===this.ACTIONS.CREATE){let emailMsg=lang("License::status.cloud_confirm_email").toString();notify.post(`${msg}: ${emailMsg}`,notify.LEVEL.SUCCESS),this.forticloudStatus=this.SYMBOLS.LICENSE_STATUS_CLOUD_CONFIRM_EMAIL}else notify.post(`${msg}`,notify.LEVEL.SUCCESS),this.forticloudStatus=this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_IN;this.submitFortiCloud=!1}else if(response.data.results.forticloud_error){let errorMessage=lang(`Registration::error.${response.data.results.forticloud_error}`);this.inPrompt||notify.post(errorMessage,notify.LEVEL.ERROR)}})),RegistrationForticare.prototype.submit=inject.mark($http=>(async function(){const uri=this.ACTION===this.ACTIONS.SHOW_AGREEMENT&&FORTICARE_URL[this.PREV_ACTION]?FORTICARE_URL[this.PREV_ACTION]:FORTICARE_URL[this.ACTION]||FORTICARE_URL.LOGIN,csfURI=this.createCSFURI(uri),accountInfo=this.getAccountInfo();this.errorMessage=null,this.submitButtonBusy=!0;let error=null,fortiCareSuccess=!1,fortiCloudSuccess=!1;try{const fortiCareResponse=await $http.post(csfURI,accountInfo),response=await this.parseFortiCareResponse(fortiCareResponse);response&&response.agreement?(this.agreement=(agreement=>agreement.split("\n\n").map(paragraph=>`<p>${paragraph}</p>`).join("").replace(/(?:\r\n|\r|\n)/g,"<br>"))(response.agreement),this.PREV_ACTION=this.ACTION,this.ACTION=this.ACTIONS.SHOW_AGREEMENT):(fortiCareSuccess=!0,this.submitFortiCloud&&(await this.loginFortiCloud(accountInfo),fortiCloudSuccess=!0))}catch(err){error=err}finally{this.submitButtonBusy=!1}return fortiCareSuccess?(this.updateLicenses(),this.done(),{submitFortiCloud:fortiCloudSuccess}):this.error(error)})),RegistrationForticare.prototype.cancel=function(){this.inPrompt?this.changeCancel():fLocation.go_back(null,!0)},RegistrationForticare.prototype.previous=function(){this.ACTION===this.ACTIONS.SHOW_AGREEMENT?this.ACTION=this.PREV_ACTION:this.inPrompt&&this.changePrevious()},RegistrationForticare.prototype.updateLicenses=inject.mark(function(state){return function(){const fgtSerial=this.fortigate&&this.fortigate.serial||state;fStructure.updateLicense(fgtSerial)}}),RegistrationForticare.prototype.createCSFURI=function(url){return this.fortigate?this.fortigate.createCSFURI(url):url},RegistrationForticare.prototype.error=inject.mark(($q,lang)=>(function(response){let errorMessage=response&&response.status?`HTTP ${response.status}`:"";return response&&response.data&&response.data.error&&(errorMessage=lang(response.data.error)),errorMessage&&(this.inPrompt?this.errorMessage=errorMessage:notify.post(errorMessage,notify.LEVEL.ERROR)),this.ACTION===this.ACTIONS.SHOW_AGREEMENT&&this.agreementAccepted&&(this.ACTION=this.PREV_ACTION||this.ACTIONS.LOGIN),$q.reject()})),RegistrationForticare.prototype.loginFortiCloud=inject.mark($http=>(function(accountInfo){let csfURI=this.createCSFURI("/api/v2/monitor/registration/forticloud/login");return $http.post(csfURI,accountInfo).then(res=>this.parseFortiCloudResponse(res))})),ngModule.component("fRegistrationForticare",{controller:RegistrationForticare,templateUrl:__webpack_require__(1039),require:{slideController:"?^fSlideContainer"},bindings:{relative:"<",fortigate:"<",forticloudRequest:"<",inPrompt:"<",changeSuccess:"&?",changeCancel:"&?",changePrevious:"&?",hasPrevious:"<?"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-forticare.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog dialog-title="$ctrl.title"\n          hide-title="::true"\n          relative="::$ctrl.relative"\n          form="$ctrl.form"\n          loading="$ctrl.loading"\n          valid-submit="$ctrl.submit()">\n    <dialog-content>\n        <section ng-if="$ctrl.inPrompt && $ctrl.registrationFinished">\n            <div class="success-message">\n                {{::\'FortiCare registered\' | lang}}\n            </div>\n        </section>\n\n        <section ng-if="$ctrl.forticloudRequest && $ctrl.ACTION !== $ctrl.ACTIONS.SHOW_AGREEMENT">\n            <div class="warning-message">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    <span f-lang="Please register with FortiCare before activating FortiGate Cloud."></span> \x3c!-- Please register with FortiCare message --\x3e\n                </div>\n            </div>\n        </section>\n\n        <div class="warning-message" ng-if="$ctrl.ACTION !== $ctrl.ACTIONS.SHOW_AGREEMENT && $ctrl.inPrompt">\n            <f-icon class="fa-warning"></f-icon>\n            <div class="message-content">\n                {{:: \'This step is required to activate threat protection services and receive firmware & package updates.\' | lang }}\n            </div>\n        </div>\n\n        <div ng-if="!$ctrl.registrationFinished">\n            <section ng-if="$ctrl.inPrompt && $ctrl.errorMessage">\n                <div class="error-message">\n                    {{ $ctrl.errorMessage }}\n                </div>\n            </section>\n\n            <section ng-if="$ctrl.ACTION !== $ctrl.ACTIONS.SHOW_AGREEMENT && !$ctrl.inPrompt">\n                <f-field>\n                    <field-label>\n                        {{::\'FortiGate\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <span ng-if="!$ctrl.inPrompt && ($ctrl.fortigate || $ctrl.serial)">\n                            <f-object-formatted mkey="{{::($ctrl.fortigate.serial || $ctrl.serial)}}" datasource="csfFortiGates">\n                            </f-object-formatted>\n                        </span>\n                        <span ng-if="$ctrl.inPrompt">\n                            {{::$ctrl.serial}}\n                        </span>\n                    </field-value>\n                </f-field>\n            </section>\n\n            <section ng-show="$ctrl.ACTION !== $ctrl.ACTIONS.SHOW_AGREEMENT">\n                <f-field>\n                    <field-label>\n                        {{::\'FortiCloud\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <f-radio-group>\n                            <input id="action-login" type="radio" ng-model="$ctrl.ACTION"\n                                radio-label="{{::\'Login\' | lang}}"\n                                ng-value="$ctrl.ACTIONS.LOGIN"\n                                ng-click="$ctrl.errorMessage = null">\n                            <input id="action-create-account" type="radio" ng-model="$ctrl.ACTION"\n                                radio-label="{{::\'Create Account\' | lang}}"\n                                ng-value="$ctrl.ACTIONS.CREATE"\n                                ng-click="$ctrl.errorMessage = null">\n                        </f-radio-group>\n                    </field-value>\n                </f-field>\n            </section>\n\n            <section ng-if="$ctrl.ACTION === $ctrl.ACTIONS.LOGIN">\n                <f-field>\n                    <field-label>\n                        {{::\'email\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <input type="email" id="login" ng-model="$ctrl.email" required>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>\n                        {{::\'password\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <input type="password" id="password" ng-model="$ctrl.password" required>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-value>\n                        <span>\n                            <a ng-href="{{:: $ctrl.PASSWORD_RESET_URL }}" target="_blank" rel="noopener noreferrer">\n                                {{::\'Forgot your password?\' | lang }}\n                            </a>\n                        </span>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>\n                        {{::\'country\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <div f-omniselect="$ctrl.countrySelect" ng-model="$ctrl.country" required></div>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>\n                        {{::\'reseller\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <div f-omniselect="$ctrl.resellerSelect" disabled="$ctrl.loadingResellers" ng-model="$ctrl.reseller" reload-on="$ctrl.RESELLERS_RELOAD_EVENT" required></div>\n                    </field-value>\n                </f-field>\n\n                <div ng-show="$ctrl.resellersLoadingFailed" class="warning-message">\n                    <f-icon class="fa-warning"></f-icon>\n                    <div class="message-content">\n                        {{:: \'Unable to reach FortiCare servers. Please ensure connection before registration.\' | lang}}\n                    </div>\n                </div>\n            </section>\n\n            <div ng-if="$ctrl.ACTION === $ctrl.ACTIONS.CREATE">\n                <div class="section-title">\n                    <h2>{{:: \'About You\' | lang}}</h2>\n                </div>\n                <section>\n                    <f-field>\n                        <field-label>\n                            {{::\'first_name\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="first-name" type="text" ng-model="$ctrl.firstName" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'last_name\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="last-name" type="text" ng-model="$ctrl.lastName" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'title\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="title" type="text"  ng-model="$ctrl.title">\n                        </field-value>\n                    </f-field>\n                </section>\n                <div class="section-title">\n                    <h2>{{:: \'Sign-In\' | lang}}</h2>\n                </div>\n                <section>\n                    <f-field>\n                        <field-label>\n                            {{::\'email\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="email" type="email"  ng-model="$ctrl.email" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'password\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="password" type="password"  ng-model="$ctrl.password" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'Confirm Password\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="confirm-password" type="password" ng-model="$ctrl.confirmPassword" f-value-confirm="$ctrl.password" required>\n                        </field-value>\n                    </f-field>\n                </section>\n                <div class="section-title">\n                    <h2>{{:: \'Contact\' | lang}}</h2>\n                </div>\n                <section>\n                    <f-field>\n                        <field-label>\n                            {{::\'company\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="company" type="text"  ng-model="$ctrl.company" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'Phone Number\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="phone" type="text"  ng-model="$ctrl.phone" required>\n                        </field-value>\n                    </f-field>\n                </section>\n                <div class="section-title">\n                    <h2>{{:: \'Address\' | lang}}</h2>\n                </div>\n                <section>\n                    <f-field>\n                        <field-label>\n                            {{::\'address\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="address" type="text"  ng-model="$ctrl.address" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'city\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="city" type="text"  ng-model="$ctrl.city" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'postal_code\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <input id="postal-code" type="text" ng-model="$ctrl.postalCode" required>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'country\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <div f-omniselect="$ctrl.countrySelect" ng-model="$ctrl.country" required></div>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'State/Province\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <select id="state" ng-if="$ctrl.country.code === $ctrl.licenseRegions.canadaCode"\n                                    ng-model="$ctrl.stateObj"\n                                    ng-options="opt as opt.name for opt in $ctrl.licenseRegions.canada"\n                                    required>\n                            </select>\n                            <select id="state" ng-if="$ctrl.country.code === $ctrl.licenseRegions.usaCode"\n                                    ng-model="$ctrl.stateObj"\n                                    ng-options="opt as opt.name for opt in $ctrl.licenseRegions.usa"\n                                    required>\n                            </select>\n                            <input id="state" type="text" ng-model="$ctrl.customState"\n                                    ng-if="$ctrl.country.code !== $ctrl.licenseRegions.canadaCode && $ctrl.country.code !== $ctrl.licenseRegions.usaCode"\n                                    required>\n                        </field-value>\n                    </f-field>\n                </section>\n                <div class="section-title">\n                    <h2>{{:: \'Organization\' | lang}}</h2>\n                </div>\n                <section>\n                    <f-field>\n                        <field-label>\n                            {{::\'Organization Size\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <select id="orgsize" ng-model="$ctrl.organizationSizeID" required\n                                    ng-options="opt.id as opt.name for opt in $ctrl.licenseRegions.orgSizes">\n                            </select>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'Industry\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <select id="industry" ng-model="$ctrl.industryID"\n                                    ng-options="opt.id as opt.translated for opt in $ctrl.licenseRegions.industries"\n                                    required>\n                            </select>\n                        </field-value>\n                    </f-field>\n\n                    <f-field>\n                        <field-label>\n                            {{::\'reseller\' | lang}}\n                        </field-label>\n                        <field-value>\n                            <div f-omniselect="$ctrl.resellerSelect" disabled="$ctrl.loadingResellers" ng-model="$ctrl.reseller" reload-on="$ctrl.RESELLERS_RELOAD_EVENT" required></div>\n                        </field-value>\n                    </f-field>\n                    <div ng-show="$ctrl.resellersLoadingFailed" class="warning-message">\n                        <f-icon class="fa-warning"></f-icon>\n                        <div class="message-content">\n                            {{:: \'Unable to reach FortiCare servers. Please ensure connection before registration.\' | lang}}\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n            <section ng-if="$ctrl.ACTION === $ctrl.ACTIONS.SHOW_AGREEMENT"\n                ng-bind-html="$ctrl.agreement | toTrustedHtml">\n            </section>\n        </div>\n\n        <section ng-if="$ctrl.forticloudStatus === $ctrl.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_OUT &&\n                        $ctrl.ACTION !== $ctrl.ACTIONS.SHOW_AGREEMENT">\n            <f-field>\n                <field-label>\n                    <span>{{:: \'Sign in to FortiGate Cloud using the same account\' | lang }}</span>\n                </field-label>\n                <field-value>\n                    <span>\n                        <input type="checkbox"\n                            id="submit_forticloud"\n                            class="toggle-switch"\n                            ng-model="$ctrl.submitFortiCloud">\n                        <label for="submit_forticloud"></label>\n                    </span>\n                </field-value>\n            </f-field>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <div ng-if="$ctrl.ACTION === $ctrl.ACTIONS.SHOW_AGREEMENT">\n            <f-checkbox type="checkbox" ng-model="$ctrl.agreementAccepted">\n                <span>{{:: \'I agree to the FortiCare terms & conditions\' | lang }}</span>\n            </f-checkbox>\n        </div>\n        <button type="button" ng-click="$ctrl.previous()"\n            ng-if="$ctrl.hasPrevious || $ctrl.ACTION === $ctrl.ACTIONS.SHOW_AGREEMENT">\n            {{:: \'Previous\' | lang }}\n        </button>\n        <button type="submit" class="primary"\n            ng-class="$ctrl.submitButtonBusy && \'busy\'"\n            ng-disabled="$ctrl.submitButtonBusy ||\n                $ctrl.ACTION === $ctrl.ACTIONS.SHOW_AGREEMENT && !$ctrl.agreementAccepted">\n            <f-icon class="fa-loading busy-only"></f-icon>\n            <span>{{:: \'ok\' | lang}}</span>\n        </button>\n        <button type="button" ng-click="$ctrl.cancel()">\n            {{:: $ctrl.inPrompt ? \'later\' : \'cancel\' | lang }}\n        </button>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(0),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject,notify,BUILD,fStructure)=>{const ERR_LANG="Registration::error.",FORTICLOUD_URL="/api/v2/monitor/registration/forticloud",FORTICLOUD_LOGIN=`${FORTICLOUD_URL}/login`,FORTICLOUD_LOGOUT=`${FORTICLOUD_URL}/logout`;function RegistrationForticloud($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.setup(),this.getFortiCloudStatus(),this.getFortiCloudDomains()}RegistrationForticloud.prototype.getFortiCloudStatus=inject.mark((notificationRequests,$scope)=>(function(){const parseStatus=()=>{switch(this.forticloudStatus){case this.SYMBOLS.LICENSE_STATUS_NO_SUPPORT:this.errorStatusMsg="FortiGate Cloud unsupported";break;case this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGIN_IN_PROGRESS:this.errorStatusMsg="FortiGate Cloud login in progress";break;case this.SYMBOLS.LICENSE_STATUS_CLOUD_ERROR:this.errorStatusMsg="Error getting FortiGate Cloud status"}};notificationRequests.watch({scope:$scope,requestType:"license",callback:({forticloud:forticloud,forticare:forticare})=>{this.fortiCareSupported=forticare.status!==this.SYMBOLS.LICENSE_STATUS_NO_SUPPORT,this.email=this.fortiCareSupported?forticare.account:"",this.forticloudStatus=forticloud.status,parseStatus()},immediate:!0,fortigate:this.fortigate})})),RegistrationForticloud.prototype.getFortiCloudDomains=inject.mark($http=>(function(){this.loading=!0,$http.get(`${FORTICLOUD_URL}/domains`).then(res=>{this.domains=res.data.results.map(domain=>{let value=domain;return domain.includes(".")||(value=`${domain.charAt(0).toUpperCase()}${domain.slice(1).toLowerCase()}`),{value:value,key:domain}}),this.domain=this.domains[this.domains.length-1].key}).finally(()=>{this.loading=!1})})),RegistrationForticloud.prototype.setup=function(){this.SYMBOLS=BUILD.SYMBOLS,this.SHOW_ACTIVATE_LOG_OPTION=BUILD.PLATFORM.GUI_SHOW_FORTICLOUD_ACTIVATE_LOG_OPTION,this.sendLogs=!BUILD.PLATFORM.GUI_FORTICLOUD_ACTIVATE_LOG_OPTION_DISABLED,this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent},RegistrationForticloud.prototype.isLoggedIn=function(){return this.forticloudStatus===this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_IN&&!this.isPendingConfirmation()},RegistrationForticloud.prototype.isLoggedOut=function(){return this.forticloudStatus===this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_OUT&&!this.isPendingConfirmation()},RegistrationForticloud.prototype.isPendingConfirmation=function(){return this.forticloudState===this.SYMBOLS.LICENSE_STATUS_CLOUD_CONFIRM_EMAIL||this.pendingEmailConfirmation},RegistrationForticloud.prototype.isInErrorState=function(){return!this.isLoggedIn()&&!this.isLoggedOut()&&!this.isPendingConfirmation()},RegistrationForticloud.prototype.cancel=function(){this.slideController&&this.slideController.slide.close()},RegistrationForticloud.prototype.done=function(){this.slideController&&this.slideController.slide.done()},RegistrationForticloud.prototype.submit=inject.mark(state=>(function(){this.submitButtonBusy=!0;let promise=null;return this.isLoggedIn()?promise=this.logout():this.isLoggedOut()&&(promise=this.login()),promise.finally(()=>{this.submitButtonBusy=!1,state.refresh()})})),RegistrationForticloud.prototype.pollUntil=inject.mark(($http,$timeout,$q,lang)=>(function(accountState){const notifySuccess=()=>{if(accountState===this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_IN){let msg=lang("FortiGate Cloud successfully activated");notify.post(msg,notify.LEVEL.SUCCESS),this.done()}if(accountState===this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_OUT){let msg=lang("Successfully logged out of FortiGate Cloud account");notify.post(msg,notify.LEVEL.SUCCESS),this.done()}},notifyPollFailure=()=>{let msg=lang("Timed out while getting FortiGate Cloud account status");notify.post(msg,notify.LEVEL.WARNING),this.done()};return $q(resolve=>{let pollCount=0;const licenseUrl=this.createURL("/api/v2/monitor/license/status"),poll=()=>{$http.get(licenseUrl).then(response=>{let forticloudState=response.data.results.forticloud.status;pollCount>=10?notifyPollFailure():forticloudState===accountState?(notifySuccess(),(fortigateSerial=>{fStructure.updateLicense(fortigateSerial)})(this.fortigate.serial),resolve()):(pollCount++,$timeout(poll,1e3))})};poll()})})),RegistrationForticloud.prototype.parseCreateResponse=inject.mark((lang,$q)=>(function(response){if(response.data.results.forticloud_success)this.pendingEmailConfirmation=!0;else if(response.data.results.forticloud_error){let errorMessage=lang(`${ERR_LANG}${response.data.results.forticloud_error}`);notify.post(errorMessage,notify.LEVEL.ERROR)}return $q.reject()})),RegistrationForticloud.prototype.parseLoginResponse=inject.mark((lang,$q)=>(function(response){if(response.data.results.forticloud_success)return this.pollUntil(this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_IN);if(response.data.results.forticloud_error){let errorMessage=lang(`${ERR_LANG}${response.data.results.forticloud_error}`);return notify.post(errorMessage,notify.LEVEL.ERROR),$q.reject()}})),RegistrationForticloud.prototype.parseLogoutResponse=inject.mark((lang,$q)=>(function(response){if(response.data.results.forticloud_success)return this.pollUntil(this.SYMBOLS.LICENSE_STATUS_CLOUD_LOGGED_OUT);if(response.data.results.forticloud_error){let errorMessage=lang(`${ERR_LANG}${response.data.results.forticloud_error}`);return notify.post(errorMessage,notify.LEVEL.ERROR),$q.reject()}})),RegistrationForticloud.prototype.error=inject.mark(($q,lang)=>(function(response){let errorMessage=`HTTP ${response.status}`;return response.data.error&&(errorMessage=lang(response.data.error)),notify.post(errorMessage,notify.LEVEL.ERROR),$q.reject()})),RegistrationForticloud.prototype.createURL=function(url){return this.fortigate?this.fortigate.createCSFURI(url):url},RegistrationForticloud.prototype.login=inject.mark($http=>(function(){const url=this.createURL(FORTICLOUD_LOGIN),params={email:this.email,password:this.password,send_logs:this.sendLogs,domain:this.domain};return $http.post(url,params).then(res=>this.parseLoginResponse(res),err=>this.error(err))})),RegistrationForticloud.prototype.logout=inject.mark($http=>(function(){let csfURI=this.createURL(FORTICLOUD_LOGOUT);return $http.post(csfURI).then(res=>this.parseLogoutResponse(res),err=>this.error(err))})),module.component("fRegistrationForticloud",{controller:RegistrationForticloud,templateUrl:__webpack_require__(1041),require:{slideController:"?^fSlideContainer"},bindings:{relative:"<",fortigate:"<"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-forticloud.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n          relative="::$ctrl.relative"\n          form="$ctrl.form"\n          valid-submit="$ctrl.submit()"\n          loading="$ctrl.loading">\n    <dialog-content>\n        <section ng-if="$ctrl.isLoggedIn()">\n            <div class="warning-message">\n                {{::\'Are you sure you want to log out of the FortiGate Cloud service?\' | lang}}\n                {{::\'This will detach this device from your account and stop uploading logs\' | lang}}\n            </div>\n        </section>\n\n        <section ng-if="$ctrl.fortigate && ($ctrl.isLoggedOut || $ctrl.isLoggedIn())">\n            <f-field>\n                <field-label>\n                    {{::\'FortiGate\' | lang}}\n                </field-label>\n                <field-value>\n                    <span>\n                        <f-object-formatted mkey="{{::$ctrl.fortigate.serial}}" datasource="csfFortiGates">\n                        </f-object-formatted>\n                    </span>\n                </field-value>\n            </f-field>\n        </section>\n\n        <div ng-if="$ctrl.isLoggedOut()">\n            <section>\n                <f-field>\n                    <field-label>\n                        {{::\'email\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <span ng-if="$ctrl.fortiCareSupported">{{:: $ctrl.email }}</span>\n                        <input ng-if="!$ctrl.fortiCareSupported"\n                            id="email"\n                            type="email"\n                            ng-model="$ctrl.email"\n                            required>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>\n                        {{::\'password\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <input id="password" type="password"  ng-model="$ctrl.password"\n                            required>\n                    </field-value>\n                </f-field>\n\n                <f-field ng-if="$ctrl.domains.length">\n                    <field-label>\n                        {{::\'domain\' | lang}}\n                    </field-label>\n                    <field-value>\n                        <select ng-options="domain.key as domain.value for domain in $ctrl.domains"\n                                ng-model="$ctrl.domain"\n                                id="login-domain"></select>\n                    </field-value>\n                </f-field>\n\n            </section>\n            <div class="message" ng-show="$ctrl.SHOW_ACTIVATE_LOG_OPTION">\n                <input id="send-logs" type="checkbox" class="toggle-switch"ng-model="$ctrl.sendLogs">\n                <label for="send-logs"></label>\n                <label for="send-logs" f-lang="Send logs to FortiGate Cloud"></label>\n            </div>\n        </div>\n\n        <section ng-if="$ctrl.isPendingConfirmation()">\n            <div class="success-message">\n                {{::\'License::status.cloud_confirm_email\' | lang}}\n            </div>\n        </section>\n\n        <section ng-if="$ctrl.isInErrorState()">\n            <div class="warning-message">\n                {{ $ctrl.errorStatusMsg | lang}}\n            </div>\n        </section>\n    </dialog-content>\n\n    <dialog-footer>\n        <span ng-if="!$ctrl.isPendingConfirmation()">\n            <button type="submit" class="primary" ng-disabled="$ctrl.submitButtonBusy"\n                ng-class="{busy: $ctrl.submitButtonBusy}">\n                <f-icon ng-show="$ctrl.submitButtonBusy" class="fa-loading busy-only"></f-icon>\n                <span>{{:: \'ok\' | lang}}</span>\n            </button>\n            <button type="button" ng-click="$ctrl.cancel()">\n                {{:: \'cancel\' | lang}}\n            </button>\n        </span>\n        <span ng-if="$ctrl.isPendingConfirmation()">\n            <button type="button" ng-click="$ctrl.done()">\n                {{:: \'close\' | lang}}\n            </button>\n        </span>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,inject,notify,fStructure)=>{function RegistrationVdomLicense(injector){injector.injectMarked(this),this.setup()}RegistrationVdomLicense.prototype.setup=function(){this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent},RegistrationVdomLicense.prototype.close=function(){this.slideController&&this.slideController.slide.done()},RegistrationVdomLicense.prototype.createURL=function(url){return this.fortigate?this.fortigate.createCSFURI(url):url},RegistrationVdomLicense.prototype.submit=inject.mark(($http,lang,$q,state)=>(function(){return $http.post(this.createURL("/api/v2/monitor/registration/vdom/add-license/"),{license:this.license}).then(response=>{const fgtSerial=this.fortigate&&this.fortigate.serial||state.serial;if(notify.post(lang("Virtual domain license has been updated successfully"),notify.LEVEL.SUCCESS),fStructure.updateLicense(fgtSerial),response.data.register_warning)return this.warning=response.data.register_warning,$q.reject();this.close()},response=>{let errMsg=`HTTP ${response.status}`;return response.data.error&&(errMsg=lang(response.data.error)),notify.post(errMsg,notify.LEVEL.ERROR),$q.reject()})})),module.component("fRegistrationVdomLicense",{controller:RegistrationVdomLicense,templateUrl:__webpack_require__(1043),require:{slideController:"?^fSlideContainer"},bindings:{relative:"<",fortigate:"<"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-vdom-license.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog dialog-title="$ctrl.title"\n          hide-title="::true"\n          relative="::$ctrl.relative"\n          form="$ctrl.form"\n          valid-submit="$ctrl.submit()">\n    <section>\n        <div class="warning-message" ng-show="$ctrl.warning">\n            {{$ctrl.warning | lang}}\n        </div>\n        <div class="info-message">\n            <f-icon class="fa-info-circle"></f-icon>\n            <div class="message-content">\n                {{::\'Enter the VDOM license key listed on your FortiCare support account\' | lang}}\n            </div>\n        </div>\n    </section>\n\n    <section>\n        <f-field ng-if="$ctrl.fortigate">\n            <field-label>\n                {{::\'FortiGate\' | lang}}\n            </field-label>\n            <field-value>\n                <span>\n                    <f-object-formatted mkey="{{::$ctrl.fortigate.serial}}" datasource="csfFortiGates">\n                    </f-object-formatted>\n                </span>\n            </field-value>\n        </f-field>\n\n        <f-field>\n            <field-label>\n                {{::\'License Key\' | lang}}\n            </field-label>\n            <field-value>\n                <input id="license" type="text" ng-model="$ctrl.license" required maxlength="19">\n            </field-value>\n        </f-field>\n    </section>\n</f-dialog>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(26),__webpack_require__(27),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(module,inject,notify,fStructure){function RegistrationFortiCloudMigrate(injector){injector.injectMarked(this),this.setup()}RegistrationFortiCloudMigrate.prototype.setup=inject.mark((notificationRequests,$rootScope)=>(function(){notificationRequests.watch({scope:$rootScope,requestType:"license",callback:licenses=>{this.forticare=licenses.forticare},immediate:!0}),this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent})),RegistrationFortiCloudMigrate.prototype.createURL=function(url){return this.fortigate?this.fortigate.createCSFURI(url):url},RegistrationFortiCloudMigrate.prototype.done=function(){this.slideController&&this.slideController.slide.done()},RegistrationFortiCloudMigrate.prototype.submit=inject.mark(($http,$q,lang,state)=>(function(){const params={email:this.forticare&&this.forticare.account,password:this.password},url=this.createURL("/api/v2/monitor/registration/forticloud/migrate");return $http.post(url,params).then(res=>{const result=res.data.results,fgtSerial=this.fortigate&&this.fortigate.serial||state.serial;if(result.forticloud_success)notify.post(lang("Migration successful"),notify.LEVEL.SUCCESS),this.isRootFortiGate&&fStructure.updateLicense(fgtSerial),this.done();else if(result.forticloud_error){const msg=lang(`Registration::error.${result.forticloud_error}`);return notify.post(msg,notify.LEVEL.ERROR),$q.reject()}},err=>notify.post(err,notify.LEVEL.ERROR))})),module.component("fRegistrationForticloudMigrate",{controller:RegistrationFortiCloudMigrate,templateUrl:__webpack_require__(1045),require:{slideController:"?^fSlideContainer"},bindings:{fortigate:"<"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-forticloud-migrate.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n    valid-submit="$ctrl.submit()">\n    <dialog-content>\n        <section>\n            <f-field>\n                <field-label f-lang="FortiGate"></field-label>\n                <field-value>\n                    <f-object-formatted mkey="{{::$ctrl.fortigate.serial}}" datasource="csfFortiGates">\n                    </f-object-formatted>\n                </field-value>\n            </f-field>\n            <f-field>\n                <field-label f-lang="FortiCloud Account"></field-label>\n                <field-value><span>{{ $ctrl.forticare.account }}</span></field-value>\n            </f-field>\n            <f-field>\n                <field-label f-lang="password"></field-label>\n                <field-value>\n                    <input type="password" ng-model="$ctrl.password" required>\n                </field-value>\n            </f-field>\n        </section>\n    </dialog-content>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(27),__webpack_require__(26),__webpack_require__(46)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=((module,notify,inject,fStructure)=>{const STEP_LIST=["forticloud_verification","forticloud_review_and_transfer"];function RegistrationForticloudAccountTitleTransfer($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.setup(),this.getFortiCloudStatus()}RegistrationForticloudAccountTitleTransfer.prototype.setup=inject.mark(()=>(function(){this.forticare={},this.currentStep=0,this.isRootFortiGate=!this.fortigate||this.fortigate.isCurrent,this.STEP_LIST=STEP_LIST,this.STATUS_BASE_LANG_KEY="License::status."})),RegistrationForticloudAccountTitleTransfer.prototype.close=function(){this.slideController&&this.slideController.slide.done()},RegistrationForticloudAccountTitleTransfer.prototype.getFortiCloudStatus=inject.mark(license=>(async function(){this.loading=!0;try{const licenses=await license.getLicenses(this.fortigate);this.forticare=licenses.forticare||{}}catch(e){this.error(e)}finally{this.loading=!1}})),RegistrationForticloudAccountTitleTransfer.prototype.parseTransferResponse=inject.mark(($q,lang)=>(function(response){if(response.data.results.forticare_success){const message=lang("forticloud_transfer_accounts_successfully");return notify.post(message,notify.LEVEL.SUCCESS),$q.resolve()}if(response.data.results.forticare_error){const errMsg=response.data.results.forticare_error.split(">")[1];return $q.reject(errMsg||response.data.results.forticare_error)}})),RegistrationForticloudAccountTitleTransfer.prototype.next=inject.mark($scope=>(function(){this.form.$valid?this.currentStep=1:$scope.$broadcast("validation-msg_show")})),RegistrationForticloudAccountTitleTransfer.prototype.transfer=inject.mark(($http,$scope)=>(async function(){if(this.form.$valid){this.submitButtonBusy=!0;const url=this.fortigate.createCSFURI("/api/v2/monitor/registration/forticare/transfer"),params={email:this.email,password:this.password,old_email:this.forticare.account,old_password:this.oldPassword};try{const response=await $http.post(url,params);await this.parseTransferResponse(response),this.close(),this.updateLicensesAndReload()}catch(e){this.error(e)}finally{this.submitButtonBusy=!1}}else $scope.$broadcast("validation-msg_show")})),RegistrationForticloudAccountTitleTransfer.prototype.updateLicensesAndReload=inject.mark($route=>(function(){this.isRootFortiGate&&fStructure.updateLicense(),$route.reload()})),RegistrationForticloudAccountTitleTransfer.prototype.getSupportLangKey=inject.mark(license=>(function(key){return license.getFortiCareSupportLangKey(key)})),RegistrationForticloudAccountTitleTransfer.prototype.getStatusIcon=inject.mark(license=>(function(status){return status?license.getStatusIcon(status):""})),RegistrationForticloudAccountTitleTransfer.prototype.formatExpiresLabel=inject.mark(license=>(function(status,expiry,skipDateModification=!1){return status&&expiry?license.getInlineExpiresLabelForStatus(status,expiry,{skipDateModification:skipDateModification}):""})),RegistrationForticloudAccountTitleTransfer.prototype.error=inject.mark(($q,lang)=>(function(error){let errorMessage=error&&error.status?`HTTP ${error.status}`:"";return"string"==typeof error&&(errorMessage=lang(`${error}`)),notify.post(errorMessage,notify.LEVEL.ERROR),$q.reject()})),module.component("fRegistrationForticloudAccountTitleTransfer",{controller:RegistrationForticloudAccountTitleTransfer,templateUrl:__webpack_require__(1047),require:{slideController:"?^fSlideContainer"},bindings:{fortigate:"<"}})}).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/registration/f-registration-forticloud-account-title-transfer.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n          form="$ctrl.form"\n          loading="$ctrl.loading">\n    <dialog-content>\n        <ul class="progress-tracker">\n            <li ng-repeat="step in ::$ctrl.STEP_LIST"\n                ng-class="{\'current-step\': $ctrl.currentStep == $index,\n                            \'done\': $ctrl.currentStep > $index}">\n                <span class="step-number">\n                    <span ng-show="$index < $ctrl.currentStep">\n                    ✔\n                    </span>\n                    <span ng-show="$index >= $ctrl.currentStep">\n                        {{ ::$index + 1 }}\n                    </span>\n                </span>\n                {{step | lang}}\n            </li>\n        </ul>\n        <div ng-if="$ctrl.currentStep === 0">\n            <section>\n                <h1>{{::\'forticloud_current_account\' | lang}}</h1>\n                <f-field>\n                    <field-label>{{::\'FortiCloud Account\' | lang}}</field-label>\n                    <field-value>\n                        <span f-tip-target>\n                            <span class="tooltip-hint">{{::$ctrl.forticare.account}}</span>\n                            <div f-tip>\n                                <table class="table key-value">\n                                    <tbody>\n                                        <tr>\n                                            <td>{{::\'status\' | lang}}</td>\n                                            <td>\n                                                <f-icon class="{{$ctrl.getStatusIcon($ctrl.forticare.status)}}"></f-icon>\n                                                <span>{{$ctrl.STATUS_BASE_LANG_KEY + $ctrl.forticare.status | lang}}</span>\n                                            </td>\n                                        </tr>\n                                        <tr ng-if="$ctrl.forticare.company">\n                                            <td>{{::\'company\' | lang}}</td>\n                                            <td>{{::$ctrl.forticare.company}}</td>\n                                        </tr>\n                                        <tr ng-if="$ctrl.forticare.industry">\n                                            <td>{{::\'Industry\' | lang}}</td>\n                                            <td>{{::$ctrl.forticare.industry}}</td>\n                                        </tr>\n                                        <tr ng-repeat="(key, support) in $ctrl.forticare.support">\n                                            <td>{{::$ctrl.getSupportLangKey(key) | lang}}</td>\n                                            <td>\n                                                <f-icon class="{{$ctrl.getStatusIcon(support.status)}}"></f-icon>\n                                                <span>{{:: support.support_level | langPrefixed:\'forticare_support_level::\' }}</span>\n                                                <span ng-if="support.expires">\n                                                    - {{$ctrl.formatExpiresLabel(support.status, support.expires)}}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>{{::\'password\' | lang}}</field-label>\n                    <field-value>\n                        <input type="password"  ng-model="$ctrl.oldPassword" required>\n                    </field-value>\n                </f-field>\n            </section>\n\n            <section>\n                <h1>{{::\'forticloud_target_account\' | lang}}</h1>\n                <f-field>\n                    <field-label>{{::\'FortiCloud Account\' | lang}}</field-label>\n                    <field-value>\n                        <input type="email"  ng-model="$ctrl.email" required\n                            placeholder="email@example.com"\n                            f-is-unique="[\'$ctrl.forticare.account !== $value\']">\n                    </field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>{{::\'password\' | lang}}</field-label>\n                    <field-value>\n                        <input type="password"  ng-model="$ctrl.password" required>\n                    </field-value>\n                </f-field>\n            </section>\n        </div>\n\n        <div ng-if="$ctrl.currentStep === 1">\n            <section>\n                <h1>\n                    {{::\'forticloud_transfer_summary\' | lang}}\n                    <f-icon f-tip class="fa-help-info"\n                        title="{{::\'forticloud_transfer_summary_info\' | lang }}">\n                    </f-icon>\n                </h1>\n\n                <f-field>\n                    <field-label>{{::\'From\' | lang}}</field-label>\n                    <field-value><span>{{::$ctrl.forticare.account}}</span></field-value>\n                </f-field>\n\n                <f-field>\n                    <field-label>{{::\'To\' | lang}}</field-label>\n                    <field-value><span>{{::$ctrl.email}}</span></field-value>\n                </f-field>\n            </section>\n        </div>\n    </dialog-content>\n    <dialog-footer>\n        <button ng-if="$ctrl.currentStep === 0"\n                type="button" class="primary"\n                ng-click="$ctrl.next()">\n            <span>{{::\'forticloud_next_step\' | lang}}</span>\n        </button>\n        <button ng-if="$ctrl.currentStep === 1"\n                type="button"\n                ng-click="$ctrl.currentStep = 0">\n            <span>< {{::\'back\' | lang}}</span>\n        </button>\n        <button ng-if="$ctrl.currentStep === 1"\n                type="submit" class="primary"\n                ng-click="$ctrl.transfer()"\n                ng-disabled="$ctrl.submitButtonBusy"\n                ng-class="$ctrl.submitButtonBusy && \'busy\'">\n            <f-icon class="fa-loading busy-only"></f-icon>\n            <span>{{::\'forticloud_transfer_accounts\' | lang}}</span>\n        </button>\n        <button type="button" ng-click="$ctrl.close()">\n            {{::\'cancel\' | lang}}\n        </button>\n    </dialog-footer>\n</f-dialog>')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(29),__webpack_require__(28),__webpack_require__(26)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(ngModule,fPatterns,inject){const component={controller:class extends inject.Collectable{constructor(state){super(),this.hostname="",this.fortiGateSerial=state.serial,this.hostnamePattern=fPatterns.commonRegExp.FGT_HOSTNAME,this.hasError=!1,""===state.hostname?this.warningMessage="Hostname is not set. It is highly recommended to set a descriptive hostname to make this FortiGate more identifiable.":this.warningMessage="By default, this FortiGate will use the serial number/model as its hostname. It is strongly recommended to set a descriptive hostname to make this FortiGate more identifiable.",this.preferredHostname=state.hostname||`${state.model_name}-${state.model_number}`}$onInit($INJECTABLE$,CMDB){return async()=>{this.loading=!0,this.settingsCMDB=new CMDB("system","global",{format:"hostname|gui-allow-default-hostname"}),this.settings=await this.settingsCMDB.fetch().$promise,"enable"===this.settings["gui-allow-default-hostname"]&&(this.hostname=this.preferredHostname),this.loading=!1}}get allowDefault(){return this.settings&&this.settings["gui-allow-default-hostname"]||!1}set allowDefault(value){this.hostname="enable"===value?this.preferredHostname:"",this.settings["gui-allow-default-hostname"]=value}isValidHostname($INJECTABLE$,state){return hostname=>this.allowDefault||!state.isADefaultHostname(hostname)}submit($INJECTABLE$,state){return()=>(this.submitButtonBusy=!0,this.hasError=!1,this.settings.hostname=this.hostname,this.settings.$save().$promise.then(response=>{"success"===response.status?state.refresh().then(()=>{this.changeSuccess(),this.submitButtonBusy=!1}):this.showError("Failed to save hostname.")},err=>{this.showError(err.err_no)}))}cancel(){this.changeCancel()}previous(){this.changePrevious()}},templateUrl:__webpack_require__(1049),bindings:{relative:"<",changeSuccess:"&?",changeCancel:"&?",changePrevious:"&?",hasPrevious:"<?"}};ngModule.component("fHostnameChange",component)}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/f-hostname-change.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog hide-title="::true"\n          valid-submit="$ctrl.submit()"\n          form="$ctrl.form"\n          relative="::$ctrl.relative"\n          loading="$ctrl.loading">\n    <dialog-content>\n        <section>\n            <div class="warning-message">\n                <f-icon class="fa-warning"></f-icon>\n                <div class="message-content">\n                    {{:: $ctrl.warningMessage | lang }}\n                </div>\n            </div>\n            <div class="error-message" ng-if="$ctrl.hasError">\n                <f-icon class="fa-error"></f-icon>\n                <div class="message-content">\n                    {{ $ctrl.errorMessage | lang }}\n                </div>\n            </div>\n            <f-field>\n                <field-label>\n                    <span>{{:: \'Use default hostname\' | lang}}</span>\n                    <f-icon class="fa-help-info" f-tip>\n                        {{:: \'Using serial number/model as hostname is not recommended.\' | lang}}\n                        {{:: \'Enabling this option will skip this check in the future.\' | lang }}\n                    </f-icon>\n                </field-label>\n                <field-value>\n                    <input type="checkbox"\n                        id="allow-default"\n                        class="toggle-switch"\n                        ng-model="$ctrl.allowDefault"\n                        ng-true-value=":: \'enable\'"\n                        ng-false-value=":: \'disable\'">\n                    <label for="allow-default"></label>\n                </field-value>\n            </f-field>\n            <f-field error-messages="{pattern: \'err_char2\', defaultHostname: \'Invalid hostname.\'}">\n                <field-label f-lang="hostname"></field-label>\n                <field-value>\n                    <input type="text"\n                        ng-model="$ctrl.hostname"\n                        f-max-length=":: $ctrl.settings.$schema.children.hostname.size"\n                        f-default-hostname-check="{allowDefault: $ctrl.allowDefault === \'enable\'}"\n                        ng-pattern=":: $ctrl.hostnamePattern"\n                        ng-disabled="$ctrl.settings[\'gui-allow-default-hostname\'] === \'enable\'"\n                        required>\n                </field-value>\n            </f-field>\n        </section>\n    </dialog-content>\n    <dialog-footer>\n        <dialog-footer>\n            <button type="button" ng-click="$ctrl.previous()" ng-if="$ctrl.hasPrevious">\n                {{:: \'Previous\' | lang }}\n            </button>\n            <button type="submit" class="primary"\n                ng-class="$ctrl.submitButtonBusy && \'busy\'"\n                ng-disabled="$ctrl.submitButtonBusy">\n                <f-icon class="fa-loading busy-only"></f-icon>\n                <span>{{:: \'ok\' | lang}}</span>\n            </button>\n            <button type="button" ng-click="$ctrl.cancel()">\n                {{:: \'later\' | lang }}\n            </button>\n        </dialog-footer>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},,,,,,,,,,,,,,,,function(module,exports){var path="/migadmin/ng/components/csf/sync/f-sync-fabric-wizard.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog\n    full-height="::true"\n    loading="$ctrl.loading"\n    form="$ctrl.form">\n    <dialog-content>\n        <div ng-if="$ctrl.syncStep !== $ctrl.SYNC_STEPS.MANUAL"\n            class="flex-space-between flex-wrap">\n            <ul class="progress-tracker">\n                <li ng-repeat="(key, step) in $ctrl.SYNC_STEPS"\n                    ng-class="{\n                        \'current-step\': $ctrl.syncStep === step,\n                        \'done\': $ctrl.syncStep === $ctrl.SYNC_STEPS.DONE\n                    }">\n                    <span class="step-number">\n                        <span ng-show="$index + 1 === $ctrl.SYNC_STEPS.DONE">\n                            ✔\n                        </span>\n                        <span ng-if="$index + 1 < $ctrl.SYNC_STEPS.DONE">\n                            {{ ::$index + 1 }}\n                        </span>\n                    </span>\n                    {{ (\'SyncFabric::Step::\' + step) | lang}}\n                </li>\n            </ul>\n        </div>\n        <section ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.FORTIGATE_PREVIEW ||\n                        $ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW ||\n                        $ctrl.syncStep === $ctrl.SYNC_STEPS.DONE">\n            <f-field ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW">\n                <field-label f-lang="FortiGate"></field-label>\n                <field-value>\n                    <f-omniselect-entry\n                        id="$ctrl.selectedFtgt.serial"\n                        source="::\'csfFortiGates\'">\n                    </f-omniselect-entry>\n                </field-value>\n            </f-field>\n            <div ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.DONE"\n                class="success-message">\n                <f-icon class="fa-enabled"></f-icon>\n                <span>{{:: \'All FortiGates have been synced.\' | lang }}</span>\n            </div>\n            <div ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.FORTIGATE_PREVIEW"\n                class="warning-message">\n                <f-icon class="fa-warning"></f-icon>\n                <span>{{:: \'Automatic firewall object synchronization is unable to resume for the following FortiGates.\' | lang }}</span>\n            </div>\n            <div ng-show="$ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW"\n                ng-class="{\'warning-message\': !$ctrl.isAllTablesSyncDone(),\n                           \'success-message\': $ctrl.isAllTablesSyncDone()}">\n                <f-icon ng-if="$ctrl.isAllTablesSyncDone()" class="fa-enabled"></f-icon>\n                <f-icon ng-if="!$ctrl.doingAutoSync() && !$ctrl.isAllTablesSyncDone()" class="fa-warning"></f-icon>\n                <f-icon ng-if="$ctrl.doingAutoSync()" class="fa-loading"></f-icon>\n                <span>{{ $ctrl.description }}</span>\n            </div>\n            <div ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.FORTIGATE_PREVIEW ||\n                        $ctrl.syncStep === $ctrl.SYNC_STEPS.DONE">\n                <table class="table bordered selectable with-margin">\n                    <thead>\n                        <tr>\n                            <th>{{:: \'FortiGate\' | lang}}</th>\n                            <th>{{:: \'Status\' | lang}}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-repeat="ftgt in ::$ctrl.fortigates"\n                            ng-click="$ctrl.selectFortigate(ftgt.serial)"\n                            ng-class="{selected: ftgt.serial === $ctrl.selectedFtgt.serial}">\n                            <td>\n                                <f-omniselect-entry\n                                    id="::ftgt.serial"\n                                    source="::\'csfFortiGates\'">\n                                </f-omniselect-entry>\n                            </td>\n                            <td>\n                                <div ng-if="$ctrl.ftgtSyncStatus[ftgt.serial] === $ctrl.SYNC_STATUS.UNSYNCED">\n                                    <f-icon class="fa-disabled"></f-icon>\n                                    {{:: \'Out of sync\' | lang}}\n                                </div>\n                                <div ng-if="$ctrl.ftgtSyncStatus[ftgt.serial] === $ctrl.SYNC_STATUS.SYNCED">\n                                    <f-icon class="fa-enabled"></f-icon>\n                                    {{:: \'Synchronized\' | lang}}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW ||\n                        $ctrl.syncStep === $ctrl.SYNC_STEPS.AUTO">\n                <table class="table striped bordered with-margin">\n                    <thead>\n                        <tr>\n                            <th>{{:: \'Table Name\' | lang}}</th>\n                            <th>{{:: \'Status\' | lang}}</th>\n                            <th>{{:: \'Count\' | lang}}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-repeat="table in ::$ctrl.tables[$ctrl.selectedFtgt.serial]">\n                            <td>\n                                {{:: table | lang}}\n                            </td>\n                            <td>\n                                <div ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.UNSYNCED">\n                                    <f-icon class="fa-disabled"></f-icon>\n                                    {{:: \'Out of sync\' | lang}}\n                                </div>\n                                <div ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.ANALYZING">\n                                    <f-icon class="fa-loading"></f-icon>\n                                    {{:: \'Analyzing objects\' | lang}}\n                                </div>\n                                <div ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.UPDATING">\n                                    <f-icon class="fa-loading"></f-icon>\n                                    {{:: \'Updating objects\' | lang}}\n                                </div>\n                                <div ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.SYNCED">\n                                    <f-icon class="fa-enabled"></f-icon>\n                                    {{:: \'Synchronized\' | lang}}\n                                </div>\n                                <div ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.NEEDS_MANUAL_SYNC">\n                                    <f-icon class="fa-warning"></f-icon>\n                                    {{:: \'Needs manual intervention\' | lang}}\n                                </div>\n                            </td>\n                            <td>\n                                <span ng-if="$ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.UPDATING ||\n                                             $ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.SYNCED ||\n                                             $ctrl.tableSyncStatus[table] === $ctrl.SYNC_STATUS.NEEDS_MANUAL_SYNC">\n                                   {{::$ctrl.tableProgress[table].needsSync}} {{\'Total objects analyzed\' | lang}}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class="message" ng-if="!$ctrl.doingAutoSync() && $ctrl.syncStep !== $ctrl.SYNC_STEPS.DONE && !$ctrl.isAllTablesSyncDone()">\n                <f-icon class="fa-help-info"></f-icon>\n                <span>{{$ctrl.nextStepDescription}}</span>\n            </div>\n        </section>\n        <div ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.MANUAL"\n            class="flex-column absolute-fill">\n            <div style="margin-top:1em">\n                <ul class="progress-tracker">\n                    <li ng-repeat="(key, step) in $ctrl.SYNC_STEPS"\n                        ng-class="{\n                            \'current-step\': $ctrl.syncStep === step,\n                            \'done\': $ctrl.syncStep === $ctrl.SYNC_STEPS.DONE\n                        }">\n                        <span class="step-number">\n                            <span ng-show="$index + 1 === $ctrl.SYNC_STEPS.DONE">\n                                ✔\n                            </span>\n                            <span ng-if="$index + 1 < $ctrl.SYNC_STEPS.DONE">\n                                {{ ::$index + 1 }}\n                            </span>\n                        </span>\n                        {{:: (\'SyncFabric::Step::\' + step) | lang}}\n                    </li>\n                </ul>\n            </div>\n            <section>\n                <f-field>\n                    <field-label f-lang="Table"></field-label>\n                    <field-value>\n                        <input ng-model="$ctrl.selectedTable" disabled="true">\n                    </field-value>\n                </f-field>\n                <f-field>\n                    <field-label f-lang="Strategy"></field-label>\n                    <field-value>\n                        <f-radio-group>\n                            <input type="radio"\n                                ng-value="::$ctrl.RESOLUTION_TYPE.AUTOMATIC"\n                                radio-label="{{::\'Automatic\' | lang}}"\n                                ng-model="$ctrl.conflictResolutionStrategy">\n                            <input type="radio"\n                                ng-value="::$ctrl.RESOLUTION_TYPE.MANUAL"\n                                radio-label="{{::\'Manual\' | lang}}"\n                                ng-model="$ctrl.conflictResolutionStrategy">\n                        </f-radio-group>\n                    </field-value>\n                </f-field>\n                <f-field ng-if="$ctrl.conflictResolutionStrategy === $ctrl.RESOLUTION_TYPE.AUTOMATIC">\n                    <field-label f-lang="Rename On"></field-label>\n                    <field-value claa="with-message">\n                        <div f-omniselect="$ctrl.fortigateChooserSettings"\n                            ng-model="$ctrl.autoRenameFtgt">\n                        </div>\n                    </field-value>\n                </f-field>\n            </section>\n            <div class="flex-grow" style="position: relative">\n                <f-sync-fabric-objects\n                    downstream="$ctrl.selectedFtgt"\n                    this-fortigate="$ctrl.thisFortigate"\n                    objects="$ctrl.manualSyncObjects[$ctrl.selectedTable]"\n                    table="$ctrl.selectedTable"\n                    conflict-resolution-strategy="$ctrl.conflictResolutionStrategy"\n                    auto-rename-ftgt="$ctrl.autoRenameFtgt"\n                    sync-status="$ctrl.tableSyncStatus[$ctrl.selectedTable]">\n                </f-sync-fabric-objects>`\n            </div>\n        </div>\n    </dialog-content>\n    <dialog-footer>\n        <button type="button" ng-click="$ctrl.close()">\n            {{:: \'close\' | lang}}\n        </button>\n        <button ng-if="$ctrl.syncStep !== $ctrl.SYNC_STEPS.DONE"\n            ng-disabled=\'!$ctrl.canGoBack()\'\n            ng-click="$ctrl.goBack()" type="button">\n            <span>{{:: \'back\' | lang}}</span>\n        </button>\n        <button ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW &&\n                       $ctrl.needsAutomaticSync()"\n            type="button" class="primary" type="button"\n            ng-disabled="!$ctrl.isSuperAdmin"\n            ng-click="$ctrl.beginAutomaticSync()">\n            {{:: \'Synchronize Tables\' | lang}}\n        </button>\n        <button ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.TABLE_PREVIEW &&\n                      $ctrl.needsManualSync()"\n            ng-click="$ctrl.doNextStep()"\n            ng-disabled="!$ctrl.canGoNext() || $ctrl.doingAutoSync()"\n            type="button" class="primary">\n            <span>{{:: \'Resolve Conflicts\' | lang}}</span>\n        </button>\n        <button ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.FORTIGATE_PREVIEW &&\n                       !$ctrl.isAllFortigatesSyncDone()"\n            ng-click="$ctrl.doNextStep()"\n            ng-disabled="!$ctrl.canGoNext()"\n            type="button" class="primary">\n            <span>{{:: \'Next\' | lang}}</span>\n        </button>\n        <button ng-if="$ctrl.syncStep === $ctrl.SYNC_STEPS.MANUAL"\n            ng-click="$ctrl.doNextManualTable()"\n            ng-disabled="!$ctrl.canDoNextManualTable()"\n            type="button" class="primary">\n            <span>{{:: \'Next\' | lang}}</span>\n        </button>\n    </dialog-footer>\n</f-dialog>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(31),__webpack_require__(8),__webpack_require__(30),__webpack_require__(27)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,dom,ftnt_shared,fwebLog,notify){const Tooltip=ftnt_shared.Tooltip,API_URL="/api/v2/cmdb",MAX_ATTEMPS=5;class SyncFabricObjects extends inject.Collectable{$onInit($INJECTABLE$,$scope,csfObjectSync,lang,$http){return()=>{this.baseSettings=this.getMuTableSettings(),this.initialMaskMessage=dom.elem("div",{className:"message"},{children:[dom.elem("f-icon",{className:"fa-help-info icon-lg"}),dom.elem("span",{textContent:lang('Click "Rename All Objects" to rename objects on {0} using the FortiGate name as a suffix.',[this.autoRenameFtgt.hostname])})]}),this.succesMaskMessage=dom.elem("div",{className:"message"},{children:[dom.elem("f-icon",{className:"fa-enabled icon-lg"}),dom.elem("span",{textContent:lang("All objects renamed.")})]}),$scope.$watch("$ctrl.table",async table=>{if(table){const cmdbParts=table.split(".");3===cmdbParts.length?this.cmdburi=`${API_URL}/${cmdbParts[0]}.${cmdbParts[1]}/${cmdbParts[2]}`:this.cmdburi=`${API_URL}/${cmdbParts[0]}/${cmdbParts[1]}`,this.usedNames=new Set(await $http.get(`${this.cmdburi}?filter=name=@_${this.thisFortigate.hostname}&format=name`).then(resp=>resp.data.results.map(e=>e.name)))}}),$scope.$watch("$ctrl.conflictResolutionStrategy",value=>{value===csfObjectSync.RESOLUTION_TYPE.MANUAL?this.settings=Object.assign({rowSelection:!0},this.baseSettings):this.settings=Object.assign({rowSelection:!1,informationMask:this.isInConflict()?this.initialMaskMessage:this.succesMaskMessage},this.baseSettings)}),$scope.$watch("$ctrl.objects",()=>{this.conflictResolutionStrategy===csfObjectSync.RESOLUTION_TYPE.AUTOMATIC&&(this.settings=Object.assign({rowSelection:!1,informationMask:this.isInConflict()?this.initialMaskMessage:this.succesMaskMessage},this.baseSettings))}),$scope.$watch("$ctrl.autoRenameFtgt",ftgt=>{ftgt&&(this.initialMaskMessage=dom.elem("div",{className:"message"},{children:[dom.elem("f-icon",{className:"fa-help-info icon-lg"}),dom.elem("span",{textContent:lang('Click "Rename All Objects" to rename objects on {0} using the FortiGate name as a suffix.',[ftgt.hostname])})]}),this.settings=Object.assign({rowSelection:!1,informationMask:this.isInConflict()?this.initialMaskMessage:this.succesMaskMessage},this.baseSettings))})}}isInConflict($INJECTABLE$,csfObjectSync){return menu=>menu?menu.entries.some(e=>e.status===csfObjectSync.CONFLICT_STATUS.NAME_CONFLICT):this.objects.some(e=>e.status===csfObjectSync.CONFLICT_STATUS.NAME_CONFLICT)}renameAllEnabled($INJECTABLE$,csfObjectSync){return menu=>{return menu.muTableInstance.getCurrentRows().some(r=>r.entry.status===csfObjectSync.CONFLICT_STATUS.NAME_CONFLICT)&&!this.autoRename}}getProgress(){return this.renameObjects?Math.ceil(this.resolved/this.renameObjects.length*100):0}doAutoRename($INJECTABLE$,$q,csfObjectSync,lang,$http){return async menu=>{try{const rows=menu.muTableInstance.getCurrentRows();this.resolved=0,this.autoRename=!0,this.renameObjects=this.objects.filter(object=>object.status!==csfObjectSync.CONFLICT_STATUS.RESOLVED);for(const object of this.renameObjects)if(object.status!==csfObjectSync.CONFLICT_STATUS.RESOLVED){const renameCommands=[],setGlobalCommands=[];let i=1,newName=`${object.name}_${this.autoRenameFtgt.hostname}`;const originalObj=(await $http.get(`${this.cmdburi}/${object.name}`)).data.results[0];if(setGlobalCommands.push({key:object.name,new_key:object.name}),this.autoRenameFtgt.serial===this.thisFortigate.serial){for(;this.usedNames.has(newName);)newName=`${object.name}_${this.autoRenameFtgt.hostname}${i}`,i++;renameCommands.push({key:object.name,new_key:newName});const promise=$q.all([csfObjectSync.sendSyncCommand(this.thisFortigate.serial,this.table,renameCommands),csfObjectSync.sendSyncCommand(this.downstream.path,this.table,setGlobalCommands)]),row=rows.find(r=>r.entry.name===object.name);row&&row.updateEntry(promise.then(()=>(this.resolved++,{name:newName,status:csfObjectSync.CONFLICT_STATUS.RESOLVED,resolution:lang("Renamed on {0}",[this.thisFortigate.hostname])}))),await promise;let attempts=0;const doQuery=()=>(originalObj["global-object"]=1,$http.post(this.cmdburi,originalObj).error(err=>{for(fwebLog.info(err);attempts<MAX_ATTEMPS;)return attempts++,doQuery();if(attempts===MAX_ATTEMPS)throw err}));await doQuery()}else{newName=`${object.name}_${this.autoRenameFtgt.hostname}`,renameCommands.push({key:object.name,new_key:newName});const promise=$q.all([csfObjectSync.sendSyncCommand(this.downstream.path,this.table,renameCommands),csfObjectSync.sendSyncCommand(this.thisFortigate.serial,this.table,setGlobalCommands)]),row=rows.find(r=>r.entry.name===object.name);row&&row.updateEntry(promise.then(()=>(this.resolved++,{conflictObject:{name:newName},status:csfObjectSync.CONFLICT_STATUS.RESOLVED,resolution:lang("Renamed on {0}",[this.downstream.hostname])}))),await promise,originalObj.name=newName,originalObj["global-object"]=1,await $http.post(this.cmdburi,originalObj)}}this.syncStatus=csfObjectSync.SYNC_STATUS.SYNCED,this.settings=Object.assign({rowSelection:!1,informationMask:this.succesMaskMessage},this.baseSettings),this.autoRename=!1}catch(err){notify.post(lang("Error occurred attempting to rename.").toString(),notify.LEVEL.ERROR),this.resolved=0,this.autoRename=!1,fwebLog.error(err)}}}resolveConflict(menu){this.openConflictResolveSlide(menu.rowInstances[0],menu.lastSelectedEntry)}openConflictResolveSlide($INJECTABLE$,slide,$rootScope,$q,lang,csfObjectSync,$http){return async(rowInstance,selectedEntry)=>{const scope=$rootScope.$new();scope.title=lang("Rename Object"),scope.fortigates=[this.downstream.serial,this.thisFortigate.serial],scope.originalName=selectedEntry.name,scope.newName=`${selectedEntry.name}`,scope.table=this.table,scope.selectedFortigate=this.thisFortigate;const slideParams={template:'<f-sync-fabric-conflict-dialog\n                            original-name="originalName"\n                            new-name="newName"\n                            table="table"\n                            fortigates="fortigates"\n                            selected-fortigate="selectedFortigate">\n                        </f-sync-fabric-conflict-dialog>',parentScope:scope,options:{title:lang(scope.title),closeOnEscape:!0,fullHeight:!0}};try{const res=await slide.open("resolve-conflict",slideParams),renameCommand=[{key:res.originalName,new_key:res.newName}],setGlobalCommand=[{key:res.originalName,new_key:res.originalName}],originalObj=(await $http.get(`${this.cmdburi}/${res.originalName}`)).data.results[0];if(res.selectedFortigate.serial===this.thisFortigate.serial){await $q.all([csfObjectSync.sendSyncCommand(this.downstream.path,this.table,setGlobalCommand),csfObjectSync.sendSyncCommand(this.thisFortigate.serial,this.table,renameCommand)]);let attempts=0;const doQuery=()=>(originalObj["global-object"]=1,$http.post(this.cmdburi,originalObj).error(err=>{for(fwebLog.info(err);attempts<MAX_ATTEMPS;)return attempts++,doQuery();if(attempts===MAX_ATTEMPS)throw err}));await doQuery();const entry={name:res.newName,status:csfObjectSync.CONFLICT_STATUS.RESOLVED,resolution:lang("Renamed on {0}",[res.selectedFortigate.hostname])};await rowInstance.updateEntry(entry)}else{await $q.all([csfObjectSync.sendSyncCommand(this.downstream.path,this.table,renameCommand),csfObjectSync.sendSyncCommand(this.thisFortigate.serial,this.table,setGlobalCommand)]),originalObj.name=res.newName,originalObj["global-object"]=1,await $http.post(this.cmdburi,originalObj);const entry={conflictObject:{name:res.newName},status:csfObjectSync.CONFLICT_STATUS.RESOLVED,resolution:lang("Renamed on {0}",[res.selectedFortigate.hostname])};await rowInstance.updateEntry(entry)}this.objects.every(e=>e.status===csfObjectSync.CONFLICT_STATUS.RESOLVED)&&(this.syncStatus=csfObjectSync.SYNC_STATUS.SYNCED)}catch(err){fwebLog.error(err),notify.post(lang("Error occurred attempting to rename.").toString(),notify.LEVEL.ERROR)}finally{scope.$destroy()}}}getMuTableSettings($INJECTABLE$,lang,csfObjectSync){return()=>({id:"sync-fabric-objects",userDefinedSections:!1,defaultColumns:["Root FortiGate","Downstream FortiGate","status","resolution"],columns:[{id:"Root FortiGate",cellValueFunction:entry=>entry.name},{id:"Downstream FortiGate",cellValueFunction:entry=>entry.conflictObject.name},{id:"status",langKey:"Status",cellValueFunction:entry=>lang(entry.status),cellFormatter:(entry,column,value)=>{let className;return className=entry.status===csfObjectSync.CONFLICT_STATUS.NAME_CONFLICT?"fa-disabled":"fa-enabled",dom.elem("div",null,{children:[dom.elem("f-icon",{className:className}),dom.elem("span",{textContent:value})]})},onCellRendered:(elem,entry)=>{if(entry.status===csfObjectSync.CONFLICT_STATUS.RESOLVED){const tooltip=new Tooltip;return tooltip.setContent(dom.elem("div",null,{children:[dom.elem("span",{textContent:entry.resolution})]})),tooltip.showOnElementHover(elem),elem.classList.add("tooltip-hint"),tooltip}}}]})}}return function(providers,loader){return providers.$compile.component("fSyncFabricObjects",{templateUrl:__webpack_require__(1067),controller:SyncFabricObjects,bindings:{downstream:"<",thisFortigate:"<",objects:"<",table:"<",conflictResolutionStrategy:"<",autoRenameFtgt:"<",syncStatus:"="}}),loader.initModules([__webpack_require__(1068)])}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/csf/sync/f-sync-fabric-objects.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable inline="::false"\n    source="$ctrl.objects"\n    settings="$ctrl.settings"\n    context-menu="::true"\n    instance="$ctrl.muTable"\n    on-double-click="$ctrl.openConflictResolveSlide($row, $entry)">\n    <div class="left-menu-items">\n        <div ng-if="$ctrl.conflictResolutionStrategy === \'manual\'"\n            f-menu-item-button click="$ctrl.resolveConflict(menu)"\n            enabled="menu.entries.length === 1 && $ctrl.isInConflict(menu)">\n            {{:: \'Rename Object\' | lang}}\n        </div>\n        <div ng-if="$ctrl.conflictResolutionStrategy === \'automatic\'"\n            emphasized="::true"\n            f-menu-item-button click="$ctrl.doAutoRename(menu)"\n            enabled="$ctrl.renameAllEnabled(menu)">\n            <span>\n                {{:: \'Rename All Objects\' | lang}}\n            </span>\n            <f-icon class="fa-loading" ng-if="$ctrl.autoRename"></f-icon>\n        </div>\n        <div ng-if="$ctrl.autoRename" style="width:10em">\n            <div f-progress-bar="$ctrl.getProgress()"\n                show-percentage="::true"></div>\n        </div>\n    </div>\n    <div class="center-menu-items"></div>\n    <div class="right-menu-items">\n        <f-mutable-search></f-mutable-search>\n    </div>\n</f-mutable>\n')}]),module.exports=path},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(28)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,fPatterns){class SyncFabricConflictDialog extends inject.Collectable{constructor(){super(),this.patterns=fPatterns.commonRegExp}$onInit($INJECTABLE$,CMDB,$scope){return async()=>{const cmdbParts=this.table.split(".");3===cmdbParts.length?(this.cmdbPath=`${cmdbParts[0]}.${cmdbParts[1]}`,this.cmdbTable=cmdbParts[2]):(this.cmdbPath=cmdbParts[0],this.cmdbTable=cmdbParts[1]);const cmdb=new CMDB(this.cmdbPath,this.cmdbTable);this.schema=await cmdb.schema().$promise,this.fortigateChooserSettings={sources:"csfFortiGates",singleSelect:!0,preProcessSelected:!0,filterFunction:entry=>this.fortigates.includes(entry.serial)},$scope.$watch("$ctrl.selectedFortigate",ftgt=>{ftgt&&(this.newName=`${this.originalName}_${ftgt.hostname}`)})}}submit(){return Promise.resolve({selectedFortigate:this.selectedFortigate,newName:this.newName,originalName:this.originalName})}}return function(providers){providers.$compile.component("fSyncFabricConflictDialog",{templateUrl:__webpack_require__(1069),controller:SyncFabricConflictDialog,bindings:{fortigates:"<",table:"<",originalName:"<",newName:"=",selectedFortigate:"="}})}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/components/csf/sync/f-sync-fabric-conflict-dialog.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-dialog\n    dialog-title="::\'Sync Fabric Objects\' | lang"\n    footer-type="::\'okCancel\'"\n    valid-submit="$ctrl.submit()">\n    <dialog-content>\n       <section>\n         <f-field>\n           <field-label f-lang="Rename on FortiGate"></field-label>\n           <field-value>\n              <div f-omniselect="$ctrl.fortigateChooserSettings"\n                ng-model="$ctrl.selectedFortigate"></div>\n           </field-value>\n         </f-field>\n         <f-field error-messages="{pattern: \'err_xss\'}">\n           <field-label f-lang="New Name"></field-label>\n           <field-value>\n              <input\n                ng-model="$ctrl.newName"\n                f-is-unique="[{\'path\': $ctrl.cmdbPath, \'name\': $ctrl.cmdbTable}, \'$value === $ctrl.originalName\']"\n                fortigate="$ctrl.selectedFortigate"\n                ng-pattern="::$ctrl.patterns.XSS"\n                ng-max-length="::$ctrl.schema.children.name.size"\n                size="{{::$ctrl.newName.length}}"\n                required>\n           </field-value>\n         </f-field>\n       </section>\n    </dialog-content>\n</f-dialog>\n')}]),module.exports=path},,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(27),__webpack_require__(29),__webpack_require__(8),__webpack_require__(1072)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,notify,ngModule,ftnt_shared){const Omniselect=ftnt_shared.Omniselect;var FMG_BACKUP_SUMMARY_URI="/api/v2/monitor/system/fortimanager/backup-summary",FMG_CONFIG_MAX_POLLS=Math.round(20),RETRY_TIME=3e3,MAX_RETRY=5;function FortiManagerBackupObjects(injector){injector.injectMarked(this),this.RETRY_TIME=RETRY_TIME,this.MAX_RETRY=MAX_RETRY}FortiManagerBackupObjects.prototype.MUTABLE_SETTINGS=inject.mark(function(){var BASIC_MUTABLE_SETTINGS={columns:[{id:"mkey",type:"standard",langKey:"Name"},{id:"objectType",type:"standard",langKey:"type"}]},settings={};return settings[this.OBJECTS.MISSING_OBJECT]=BASIC_MUTABLE_SETTINGS,settings[this.OBJECTS.CONFLICT_OBJECT]=BASIC_MUTABLE_SETTINGS,settings[this.OBJECTS.LOCAL_OBJECT]={columns:[{id:"mkey",type:"omniselect",langKey:"Name",cellValueFunction:function(entry){return{q_origin_key:entry.mkey,datasource:entry.datasource}}},{id:"objectType",type:"standard",langKey:"type"},"cmdbReferences"]},settings}),FortiManagerBackupObjects.prototype.FMG_RESPONSE_KEYS={CONFLICT_OBJECT:"conflict object",MISSING_OBJECT:"missing object",LOCAL_OBJECT:"local object",LOCAL_MKEY:"local mkey",REMOTE_MKEY:"remote mkey"},FortiManagerBackupObjects.prototype.ACTIONS={UPDATE:"update",IMPORT:"import",DELETE:"delete",VIEW_NEW:"viewNew",VIEW_CONFLICTING:"viewConflicting",VIEW_OUT_OF_SYNC:"viewOutOfSync"},FortiManagerBackupObjects.prototype.OBJECTS={MISSING_OBJECT:0,CONFLICT_OBJECT:1,LOCAL_OBJECT:2},FortiManagerBackupObjects.prototype.OBJECT_TYPE_CONFIGS=inject.mark(function($q,lang){return[{label:"new",count:0,value:{fmgResponseKey:this.FMG_RESPONSE_KEYS.MISSING_OBJECT,action:this.ACTIONS.IMPORT,viewAction:this.ACTIONS.VIEW_NEW,confirmMessage:lang("selected_import_confirm",["elements"]).toString(),buttonSelected:{lang:"import",icon:"ftnt-import"},buttonAll:{lang:"Import All",icon:"ftnt-import"},muTableSource:null,muTableSettings:this.MUTABLE_SETTINGS[this.OBJECTS.MISSING_OBJECT]}},{label:"Conflicting",count:0,value:{fmgResponseKey:this.FMG_RESPONSE_KEYS.CONFLICT_OBJECT,action:this.ACTIONS.UPDATE,viewAction:this.ACTIONS.VIEW_CONFLICTING,confirmMessage:lang("selected_update_confirm",["elements"]).toString(),buttonSelected:{lang:"Update",icon:"fa-download"},buttonAll:{lang:"Update All",icon:"fa-download"},muTableSource:null,muTableSettings:this.MUTABLE_SETTINGS[this.OBJECTS.CONFLICT_OBJECT]}},{label:"Local Only",count:0,value:{fmgResponseKey:this.FMG_RESPONSE_KEYS.LOCAL_OBJECT,action:this.ACTIONS.DELETE,viewAction:this.ACTIONS.VIEW_OUT_OF_SYNC,confirmMessage:lang("selected_delete_confirm",["elements"]).toString(),buttonSelected:{lang:"del",icon:"fa-trash-o"},buttonAll:{lang:"Delete All",icon:"fa-trash-o"},extendObjects:function(objects){var promises=[];return objects.forEach(function(object){var promise=Omniselect.getSourceData(object.datasource).then(function(data){object=Object.assign(object,data.mapping[object.mkey])});promises.push(promise)}),$q.all(promises).then(function(){return objects})},muTableSource:null,muTableSettings:this.MUTABLE_SETTINGS[this.OBJECTS.LOCAL_OBJECT]}}]}),FortiManagerBackupObjects.prototype.rowDoubleClick=function(row,entry){this.doubleClickEntry=entry},FortiManagerBackupObjects.prototype.$onInit=function(){this.selectedConfig=this.OBJECT_TYPE_CONFIGS[this.OBJECTS.MISSING_OBJECT].value,this.generateSources()},FortiManagerBackupObjects.prototype.refresh=function(){this.generateSources()},FortiManagerBackupObjects.prototype.initSources=inject.mark(function($q){return function(){this.OBJECT_TYPE_CONFIGS.forEach(function(config){config.count=0,config.value.defered=$q.defer(),config.value.muTableSource=config.value.defered.promise})}}),FortiManagerBackupObjects.prototype.emptySources=function(){this.OBJECT_TYPE_CONFIGS.forEach(function(config){config.value.defered.resolve([])})},FortiManagerBackupObjects.prototype.pollUntilNewChecksum=inject.mark(function($timeout,$http,lang){var pollAttempts=0,waitThenCheck=function(oldChecksum){return pollAttempts++,$timeout(3e3).then(function(){return $http.get(FMG_BACKUP_SUMMARY_URI).then(function(response){if(response.data.checksum===oldChecksum&&pollAttempts<=FMG_CONFIG_MAX_POLLS)return waitThenCheck(oldChecksum);if(pollAttempts>FMG_CONFIG_MAX_POLLS){notify.post(lang("FortiManager timed out when synchronizing"),notify.LEVEL.ERROR)}this.processResponse(response),pollAttempts=0}.bind(this))}.bind(this))}.bind(this);return function(){return this.initSources(),notify.post(lang("Waiting for FortiManager to synchronize")),waitThenCheck(this.checksum)}}),FortiManagerBackupObjects.prototype.processResponse=inject.mark(function($http,lang,$q,$timeout){var pendingCount=0;return function(response){var data=response.data;if(data.results&&"pending"===data.results.status&&pendingCount<MAX_RETRY)return pendingCount++,$timeout(RETRY_TIME).then(function(){$http.get(FMG_BACKUP_SUMMARY_URI).then(this.processResponse)}.bind(this));if(pendingCount>=MAX_RETRY)pendingCount=0,notify.post(lang("Failed to retrieve info"),notify.LEVEL.ERROR),this.emptySources();else{var summary=data.summary||[];this.checksum=data.checksum,this.OBJECT_TYPE_CONFIGS.forEach(function(config){config.count=data[config.value.fmgResponseKey];var formattedSummary=function(summary,key){var processedResults=[];return summary.forEach(function(entry){var objects=entry[key]||[],datasource=entry.category.split(" ").join("."),objectType=lang("datasource_"+datasource).toString();objects.forEach(function(object){processedResults.push({mkey:object.mkey,objectType:objectType,datasource:datasource})})}),processedResults}(summary,config.value.fmgResponseKey),extendPromise=$q.resolve(formattedSummary);"function"==typeof config.value.extendObjects&&(extendPromise=config.value.extendObjects(formattedSummary)),extendPromise.then(function(extendedData){config.value.defered.resolve(extendedData)})})}}.bind(this)}),FortiManagerBackupObjects.prototype.generateSources=inject.mark(function($http){return function(){this.initSources(),$http.get(FMG_BACKUP_SUMMARY_URI).then(this.processResponse)}}),ngModule.component("fFortimanagerBackupObjects",{templateUrl:__webpack_require__(1074),controller:FortiManagerBackupObjects})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(26),__webpack_require__(29),__webpack_require__(27),__webpack_require__(9),__webpack_require__(41)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(inject,ngModule,notify,angular,fSlide){function FortiManagerBackupObjectsMenu($scope,injector,state){injector.injectMarked(this),this.selectedEntries=[],this.rowCount=0,this.hasFirewallWrite=state.adminHasWritePermission(state.ACCESS_GROUP.FIREWALL),$scope.$watch("$ctrl.doubleClickEntry",function(newVal,oldVal){newVal!==oldVal&&this.viewProperties(newVal)}.bind(this))}FortiManagerBackupObjectsMenu.prototype.getObjectsGroupedByType=function(entries){var categorizedEntries=new Map;return entries.forEach(function(entry){categorizedEntries.has(entry.datasource)?categorizedEntries.get(entry.datasource).push(entry):categorizedEntries.set(entry.datasource,[entry])}),categorizedEntries},FortiManagerBackupObjectsMenu.prototype.isEnabled=function(){return this.selectedEntries.some(function(entry){return!entry.q_ref})},FortiManagerBackupObjectsMenu.prototype.viewProperties=inject.mark(function(objectAttributes,state){return function(selectedEntry){var config=this[this.selectedConfig.viewAction](selectedEntry);state.current_vdom&&(config.vdom=state.current_vdom),objectAttributes.open(config)}}),FortiManagerBackupObjectsMenu.prototype.applySelected=function(){this.applyAction(this.selectedEntries,this.selectedConfig)},FortiManagerBackupObjectsMenu.prototype.applyAll=function(){var entries=this.mutable.getCurrentRows().map(function(row){return row.entry});this.applyAction(entries,this.selectedConfig)},FortiManagerBackupObjectsMenu.prototype.applyAction=inject.mark(function($q,lang){return function(entries,selectedConfig){return fSlide.confirm(selectedConfig.confirmMessage).then(function(){var promises=[];return this.getObjectsGroupedByType(entries).forEach(function(objects){promises.push(this[selectedConfig.action](objects))}.bind(this)),$q.all(promises).then(function(){notify.post(lang("Successfully applied objects."),notify.LEVEL.SUCCESS)},function(){notify.post(lang("Failed to apply some objects."),notify.LEVEL.ERROR)}).finally(function(){this.pollUntilNewChecksum()}.bind(this))}.bind(this))}}),FortiManagerBackupObjectsMenu.prototype.getObjectDetails=inject.mark(function($http,$timeout,$q,state){return function(object){var pendingCount=0,processResponse=function(response){return response.data&&response.data.results&&"pending"===response.data.results.status&&pendingCount<this.maxRetry?(pendingCount++,$timeout(this.retryTime).then(function(){return $http.get("/api/v2/monitor/system/fortimanager/backup-details",{params:{mkey:object.mkey,datasource:object.datasource}})}).then(processResponse)):pendingCount>=this.maxRetry?(pendingCount=0,$q.reject()):response.data.results.json}.bind(this);return $http.get("/api/v2/monitor/system/fortimanager/backup-details",{params:{mkey:object.mkey,datasource:object.datasource,vdom:state.current_vdom}}).then(processResponse)}}),FortiManagerBackupObjectsMenu.prototype.viewNew=function(selectedEntry){var datasource=selectedEntry.datasource;return{path:datasource.substring(0,datasource.lastIndexOf(".")),name:datasource.substring(datasource.lastIndexOf(".")+1,datasource.length),objects:[{label:"FortiManager Object",data:this.getObjectDetails(selectedEntry)}]}},FortiManagerBackupObjectsMenu.prototype.getAndConvertLocalObject=inject.mark(function($q,$http){var convert=function(object,schema){return Object.keys(object).forEach(function(key){if(schema[key]){var isArray=angular.isObject(object[key]),isObject=angular.isArray(object[key]),isSchemaDatasource=schema[key].datasource,isObjectString="string"==typeof object[key];if(isArray||isObject){var nextSchemaLevel=schema[key].children,nextObject=object[key];convert(nextObject,nextSchemaLevel)}else isSchemaDatasource&&isObjectString&&(object[key]=[object[key]])}}),object};return function(entry,path,name){var objectUri="/api/v2/cmdb/"+path+"/"+name+"/"+encodeURIComponent(entry.mkey);return $q.all([$http.get(objectUri,{params:{action:"schema"}}),$http.get(objectUri,{params:{skip:"1"}})]).then(function(responses){var schema=responses[0].data.results,object=responses[1].data.results[0];try{return convert(object,schema.children)}catch(e){return object}})}}),FortiManagerBackupObjectsMenu.prototype.viewConflicting=function(selectedEntry){var datasource=selectedEntry.datasource,path=datasource.substring(0,datasource.lastIndexOf(".")),name=datasource.substring(datasource.lastIndexOf(".")+1,datasource.length);return{path:path,name:name,objects:[{label:"Local Object",data:this.getAndConvertLocalObject(selectedEntry,path,name)},{label:"FortiManager Object",data:this.getObjectDetails(selectedEntry)}]}},FortiManagerBackupObjectsMenu.prototype.viewOutOfSync=function(selectedEntry){var datasource=selectedEntry.datasource,path=datasource.substring(0,datasource.lastIndexOf(".")),name=datasource.substring(datasource.lastIndexOf(".")+1,datasource.length);return{path:path,name:name,objects:[{label:"Local Object",data:this.getAndConvertLocalObject(selectedEntry,path,name)}]}},FortiManagerBackupObjectsMenu.prototype.import=inject.mark(function($http,$timeout,$q){var pendingCount=0;return function(objects){return $http.post("/api/v2/monitor/system/fortimanager/backup-action",{operation:this.actions.IMPORT,objects:objects}).then(function(response){return response.data&&response.data.results&&"pending"===response.data.results.status&&pendingCount<this.maxRetry?(pendingCount++,$timeout(this.retryTime).then(function(){return this.import(objects)}.bind(this))):pendingCount>=this.maxRetry?(pendingCount=0,$q.reject()):void 0}.bind(this))}}),FortiManagerBackupObjectsMenu.prototype.update=inject.mark(function($http,$timeout,$q){var pendingCount=0;return function(objects){return $http.post("/api/v2/monitor/system/fortimanager/backup-action",{operation:this.actions.UPDATE,objects:objects}).then(function(response){return response.data&&response.data.results&&"pending"===response.data.results.status&&pendingCount<this.maxRetry?(pendingCount++,$timeout(this.retryTime).then(function(){return this.update(objects)}.bind(this))):pendingCount>=this.maxRetry?(pendingCount=0,$q.reject()):void 0}.bind(this))}}),FortiManagerBackupObjectsMenu.prototype.delete=inject.mark(function($http,$q){return function(objects){var promises=[];return objects.forEach(function(object){var mkey=object.mkey,datasource=object.datasource,path=datasource.substring(0,datasource.lastIndexOf(".")),name=datasource.substring(datasource.lastIndexOf(".")+1,datasource.length);0===object.q_ref&&promises.push($http.delete("/api/v2/cmdb/"+path+"/"+name+"/"+mkey))}),$q.all(promises)}}),ngModule.component("fFortimanagerBackupObjectsMenu",{templateUrl:__webpack_require__(1073),controller:FortiManagerBackupObjectsMenu,bindings:{actions:"<",refresh:"&",pollUntilNewChecksum:"&",objectConfigs:"=",mutable:"<",selectedConfig:"=",selectedEntries:"<",doubleClickEntry:"<",rowCount:"<",maxRetry:"<",retryTime:"<"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},function(module,exports){var path="/migadmin/ng/directives/f-fortimanager-backup-objects-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items">\n    <div f-menu-item-button\n         click="$ctrl.refresh()">\n        <f-icon class="fa-refresh"></f-icon>\n        {{\'refresh\' | lang}}\n    </div>\n    <div f-menu-item-button\n         click="$ctrl.applySelected()"\n         enabled="$ctrl.isEnabled() && $ctrl.hasFirewallWrite">\n        <f-icon class="{{$ctrl.selectedConfig.buttonSelected.icon}}"></f-icon>\n        {{$ctrl.selectedConfig.buttonSelected.lang | lang}}\n    </div>\n    <div f-menu-item-button\n         click="$ctrl.applyAll()"\n         enabled="$ctrl.rowCount > 0 && $ctrl.hasFirewallWrite">\n        <f-icon class="{{$ctrl.selectedConfig.buttonAll.icon}}"></f-icon>\n        {{$ctrl.selectedConfig.buttonAll.lang | lang}}\n    </div>\n    <div f-menu-item-button\n         click="$ctrl.viewProperties($ctrl.selectedEntries[0])"\n         enabled="$ctrl.selectedEntries.length === 1">\n        <f-icon class="fa-eye"></f-icon>\n        {{::\'View Properties\' | lang}}\n    </div>\n</div>\n<div class="center-menu-items">\n    <f-mutable-search></f-mutable-search>\n</div>\n<div class="right-menu-items">\n    <div f-menu-item-radio="$ctrl.objectConfigs" selected="$ctrl.selectedConfig">\n    </div>\n</div>')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/directives/f-fortimanager-backup-objects.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable\n    source="$ctrl.selectedConfig.muTableSource"\n    settings="$ctrl.selectedConfig.muTableSettings"\n    selected-entries="$ctrl.selectedEntries"\n    on-double-click="$ctrl.rowDoubleClick($row, $entry)"\n    row-count="$ctrl.rowCount"\n    instance="$ctrl.muTable"\n    context-menu="::true">\n    <f-fortimanager-backup-objects-menu\n        class="menu-bar-component"\n        actions="$ctrl.ACTIONS"\n        refresh="$ctrl.refresh()"\n        poll-until-new-checksum="$ctrl.pollUntilNewChecksum()"\n        object-configs="$ctrl.OBJECT_TYPE_CONFIGS"\n        mutable="$ctrl.muTable"\n        selected-config="$ctrl.selectedConfig"\n        selected-entries="$ctrl.selectedEntries"\n        double-click-entry="$ctrl.doubleClickEntry"\n        row-count="$ctrl.rowCount"\n        max-retry="$ctrl.MAX_RETRY"\n        retry-time="$ctrl.RETRY_TIME">\n    </f-fortimanager-backup-objects-menu>\n</f-mutable>\n')}]),module.exports=path},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";__webpack_require__(1103);const ngModule=__webpack_require__(29),fSlide=__webpack_require__(41),fLog=__webpack_require__(30),fSelect=__webpack_require__(36),notify=__webpack_require__(27),ftntShared=__webpack_require__(8),inject=__webpack_require__(26),{Omniselect:Omniselect}=ftntShared,INTERFACE_SOURCE_ID="system.interface",VDOM_LINK="vdom-link";ngModule.component("fObjectUsage",{bindings:{qtypes:"<",mkey:"<",path:"<",name:"<",vdom:"<",serial:"<"},templateUrl:__webpack_require__(1106),controller:class extends inject.Collectable{$onInit($INJECTABLE$,$scope,slide,csfTopology){return()=>{this.isInterface=!1,this.isDeleteSlideOpen=!1,this.slideObject=slide.get(`object_usage_slide:${this.path}.`+`${this.name}:${this.mkey}`),this.fortigate=csfTopology.fortigateMapping[this.serial]||csfTopology.thisFortigate,this.isCurrentFortigate=this.fortigate.isCurrent,this.view={options:[{value:"currently_using",label:"Current Usage"},{value:"can_use",label:"Possible Uses"}],selected:"currently_using"},$scope.$watch("$ctrl.view.selected",(newVal,oldVal)=>{newVal&&newVal!==oldVal&&this.loadTable("currently_using"===newVal)}),$scope.$watch("$ctrl.isInterface",(newVal,oldVal)=>{newVal&&newVal!==oldVal&&this.loadInterface()}),this.loadData()}}createURL(url){return this.fortigate.createCSFURI(url)}loadData($INJECTABLE$,state,$http,lang,$q,CMDB){return()=>{this.data={currentlyUsing:[],canUse:[]};const sortingKeys={currentlyUsing:{},canUse:{}},vdomMode=this.fortigate.state.vdom_mode,isGlobalVDOM=this.fortigate.state.isGlobalVDOM(),referenceParams={csfProxy:this.fortigate},params={mkey:this.mkey,qtypes:JSON.stringify(this.qtypes),scope:vdomMode&&!isGlobalVDOM?"vdom":"global"};this.vdom&&(referenceParams.vdom=this.vdom,params.vdom=this.vdom),$q.all({referencedEntry:new CMDB(this.path,this.name,referenceParams).get(this.mkey).$promise,objectUsage:$http.get(this.createURL("/api/v2/monitor/system/object/usage"),{params:params})}).then(result=>{this.referencedEntry=result.referencedEntry,["currently_using","can_use"].forEach(type=>{result.objectUsage.data.results[type].forEach(entry=>{entry.type=lang(`${entry.path}.${entry.name}`),entry.category=type;const table=`${entry.path}.${entry.name}`;if("currently_using"===type){table===INTERFACE_SOURCE_ID&&(this.isInterface=!0);const key=`${table}:${entry.mkey}`;entry.canDelete=0===entry.reference_count&&!1===entry.static&&"complex"!==entry.table_type,entry.q_ref=entry.reference_count,entry.q_origin_key=entry.mkey,entry.q_type=state.getTypeByPath(table),sortingKeys.currentlyUsing[key]||(sortingKeys.currentlyUsing[key]=!0,this.data.currentlyUsing.push(entry))}else"can_use"===type&&(sortingKeys.canUse[entry.name]||(sortingKeys.canUse[entry.name]=!0,this.data.canUse.push(entry)))})})}).finally(()=>{this.loadTable(!0)})}}loadTable(currentlyUsing){this.muTableSettings={},currentlyUsing?(this.muTableSource=this.data.currentlyUsing,this.muTableSettings={id:"current-object-usage",defaultColumns:["mkey","csfAwareCmdbReferences"],sections:!0,defaultSectionColumn:"type",columns:[{id:"mkey",type:"omniselect",langKey:"Object Name",omniselectAllowFallback:!0,cellValueFunction:(entry,column)=>entry[column.id]?this.createOmniselectEntry(entry):entry,collectionEntryValueFunction:entry=>{const{q_origin_key:q_origin_key,type:type}=entry;return q_origin_key||type}},{id:"type"},"csfAwareCmdbReferences"]}):(this.muTableSource=this.data.canUse,this.muTableSettings={id:"current-object-usage",columns:[{id:"type",langKey:"Object Type"}]})}createOmniselectEntry(entry){const datasource=this.fortigate.getOmniselectProxySourceID(`${entry.q_path}.${entry.q_name}`),sourceIdKey=fSelect.getSourceEntryIdKey(datasource),name=entry.q_origin_key||entry.name||entry;return{name:name,[sourceIdKey]:entry[sourceIdKey]||name,datasource:datasource}}async loadInterface(){const source=await Omniselect.getSourceData(this.fortigate.getOmniselectProxySourceID(INTERFACE_SOURCE_ID));this.interfacesMap=source.mapping}navigateToObjectOrList($INJECTABLE$,structure,$location){return url=>{this.slideObject.slide.done().then(()=>{$location.url(structure.ngURI(url))})}}canNavigateToList(entries){return entries.length>=1&&entries.every(entry=>`${entry.path}.${entry.name}`===`${entries[0].path}.${entries[0].name}`)}navigateTo(entry,url){entry&&url&&this.navigateToObjectOrList(url,entry)}canObjectBeDeleted($INJECTABLE$,state){return entry=>{const override={"system.admin":()=>entry.mkey!==state.admin.name,"system.interface":()=>this.interfacesMap[entry.mkey].type!==VDOM_LINK}[`${entry.path}.${entry.name}`];return!override||override()}}hasVdomAccess($INJECTABLE$,state){return entry=>{if(`${entry.path}.${entry.name}`===INTERFACE_SOURCE_ID&&"currently_using"===entry.category){const vdom=this.interfacesMap[entry.mkey].vdom.name;return vdom&&state.getVDOMs().includes(vdom)}return"can_use"===entry.category||entry.vdom&&state.getVDOMs().includes(entry.vdom)}}canDelete(entries){return entries.some(entry=>entry.canDelete&&this.canObjectBeDeleted(entry))}objectHaveStateDependencies(pathName){return new Set(["system.virtual-wire-pair"]).has(pathName)}deleteObjects($INJECTABLE$,$http,$q,lang){return async entries=>{if(entries.length<=0||!this.canDelete(entries))return;this.isDeleteSlideOpen=!0;let deleteMessage,objectHasDependencies=!1;const entriesToDelete=[];entries.forEach(entry=>{entry.canDelete&&entriesToDelete.push(entry)}),deleteMessage=entriesToDelete.length===entries.length?lang("selected_delete_confirm",["elements"]):lang("selected_delete_confirm_subset",["elements",entriesToDelete.length,entries.length]);try{await fSlide.confirm(deleteMessage),await $q.all(entriesToDelete.map(entry=>{const vdom=entry.vdom,url=`/api/v2/cmdb/${entry.path}/${entry.name}/`+`${encodeURIComponent(entry.mkey)}?vdom=${vdom||""}`;return this.objectHaveStateDependencies(`${entry.path}.${entry.name}`)&&(objectHasDependencies=!0),$http.delete(this.createURL(url))}))}catch(err){fLog.error(err),notify.post(lang("Unable to delete all or some objects."),notify.LEVEL.ERROR)}finally{this.loadData(),this.isDeleteSlideOpen=!1,this.slideObject.data.shouldReloadRoute=!0,this.slideObject.data.shouldRefreshState=objectHasDependencies}}}}})},function(module,exports,__webpack_require__){"use strict";__webpack_require__(1104);const ngModule=__webpack_require__(29),BUILD=__webpack_require__(0),inject=__webpack_require__(26),INTERFACE_SOURCE_ID="system.interface",IGNORE_VDOM_EXCEPTION_LIST={"system.admin":!0,"system.api-user":!0};ngModule.component("fObjectUsageMenu",{bindings:{refctrl:"<",menu:"<"},controller:class extends inject.Collectable{$onInit($INJECTABLE$,$scope,objectAttributes){return()=>{this.buttonURLs={},$scope.$watch("$ctrl.refctrl.view.selected",(newVal,oldVal)=>{newVal!==oldVal&&(this.listURL=void 0)}),$scope.$watch("$ctrl.menu.lastSelectedEntry",(newVal,oldVal)=>{newVal!==oldVal&&newVal&&(this.dialogURL=void 0,this.listURL=void 0,this.buttonLoading=!0,this.determineButtonURLs(newVal,"complex"===newVal.table_type).then(URLs=>{this.buttonLoading=!1,void 0!==URLs.listURL&&URLs.listURL.length>0&&(this.listURL=URLs.listURL),void 0!==URLs.dialogURL&&URLs.dialogURL.length>0&&(this.dialogURL=URLs.dialogURL)},()=>{this.buttonLoading=!1}),objectAttributes.update({path:newVal.path,name:newVal.name,vdom:newVal.vdom,fortigate:this.refctrl.fortigate,objects:[{label:newVal.name,mkey:newVal.mkey,highlight:[newVal.mkey]}]}))})}}determineVDOM($INJECTABLE$,state,$q,CMDB){return async entry=>{let vdom="";const pathName=`${entry.path}.${entry.name}`,fallbackVDOM=this.refctrl.vdom||state.current_vdom||state.management_vdom,tableRange=entry.range;if("both"===tableRange)if(!IGNORE_VDOM_EXCEPTION_LIST[pathName]&&entry.mkey)if(pathName===INTERFACE_SOURCE_ID)vdom=this.refctrl.interfacesMap[entry.mkey].vdom.name;else{const usageCMDB=new CMDB(entry.path,entry.name,{csfProxy:this.refctrl.fortigate}),usage=await usageCMDB.get(entry.mkey).$promise;vdom=usage.vdom?usage.vdom.q_origin_key||usage.vdom:""}else vdom=fallbackVDOM;else"global"!==tableRange&&(vdom=entry.vdom||fallbackVDOM);return vdom===BUILD.SYMBOLS.DMGMT_VF_NAME&&(vdom=state.management_vdom),$q.resolve(vdom)}}determineButtonURLs($INJECTABLE$,state,$q,objectUsageUtil){return(entry,complex)=>$q(async resolve=>{const key=`${`${entry.path}.${entry.name}`}.${entry.mkey}`;if(this.buttonURLs[key])return void resolve(this.buttonURLs[key]);let URLs=await objectUsageUtil.getSpecialObjectURL(entry,this.refctrl.referencedEntry);const objectUrl=state.getObjectUrls(entry.path,entry.name);objectUrl&&(URLs.listURL=URLs.listURL||objectUrl.list);let vdom="";state.vdom_mode&&(vdom=await this.determineVDOM(entry),URLs.listURL+=URLs.listURL?`?vdom=${vdom}`:null),!entry.mkey&&!complex||URLs.dialogURL?(URLs.dialogURL+=URLs.dialogURL?`?vdom=${vdom}`:null,this.buttonURLs[key]=URLs,resolve(URLs)):resolve(state.getExactEditUrl(entry.path,entry.name,entry.mkey,vdom).then(dialogURL=>(URLs.dialogURL=dialogURL,this.buttonURLs[key]=URLs,URLs)))})}canEdit(){return 1===this.menu.entries.length&&this.dialogURL&&this.hasWritePermission([this.menu.lastSelectedEntry])&&this.refctrl.hasVdomAccess(this.menu.lastSelectedEntry)}canDelete(){return this.menu.entries.length>0&&this.refctrl.canDelete(this.menu.entries)&&this.hasWritePermission(this.menu.entries)&&!this.refctrl.isDeleteSlideOpen&&this.refctrl.hasVdomAccess(this.menu.lastSelectedEntry)}canViewList(){return this.refctrl.canNavigateToList(this.menu.entries)&&this.listURL&&this.hasReadPermission([this.menu.lastSelectedEntry])&&this.refctrl.hasVdomAccess(this.menu.lastSelectedEntry)}canViewProperties(){return 1===this.menu.entries.length&&this.menu.lastSelectedEntry&&this.hasReadPermission([this.menu.lastSelectedEntry])&&this.refctrl.hasVdomAccess(this.menu.lastSelectedEntry)}viewProperties($INJECTABLE$,objectAttributes){return entry=>{entry&&this.hasReadPermission([entry])&&objectAttributes.open({path:entry.path,name:entry.name,vdom:entry.vdom,fortigate:this.refctrl.fortigate,objects:[{label:entry.name,mkey:entry.mkey,highlight:[entry.mkey]}]})}}hasReadPermission($INJECTABLE$,state){return entries=>entries.every(entry=>(!entry.vdom||state.getVDOMs().includes(entry.vdom))&&state.adminHasReadPermissionForTable(entry.path,entry.name))}hasWritePermission($INJECTABLE$,state){return entries=>entries.every(entry=>(!entry.vdom||state.getVDOMs().includes(entry.vdom))&&state.adminHasWritePermissionForTable(entry.path,entry.name))}},templateUrl:__webpack_require__(1105)})},function(module,exports,__webpack_require__){"use strict";const ngModule=__webpack_require__(29),inject=__webpack_require__(26);ngModule.service({objectUsageUtil:class extends inject.Collectable{constructor(){super(),this.specialObjectMap={"firewall.policy":this.firewallPolicyHandler}}getSpecialObjectURL($INJECTABLE$,$q){return(entry,reference)=>{let specialObjectURL={};return this.specialObjectMap[`${entry.path}.${entry.name}`]&&(specialObjectURL=this.specialObjectMap[`${entry.path}.${entry.name}`](entry,reference)),$q.resolve(specialObjectURL||{})}}firewallPolicyHandler(entry,reference){if(reference.is_virtual_wire_pair_member)return{listURL:"/ng/firewall/policy/policy/virtual-wire",dialogURL:`/ng/firewall/policy/${entry.name}/virtual-wire/edit/${entry.mkey}`}}}})},function(module,exports){var path="/migadmin/ng/components/object-usage/f-object-usage-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="left-menu-items">\n    <div f-menu-item-button click="$ctrl.refctrl.navigateTo($ctrl.menu.lastSelectedEntry, $ctrl.dialogURL)"\n     ng-if="$ctrl.refctrl.isCurrentFortigate && $ctrl.refctrl.view.selected === \'currently_using\'"\n     enabled="$ctrl.canEdit()">\n        <f-icon class="fa-pencil"></f-icon>\n        <span>{{::\'edit\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.refctrl.deleteObjects($ctrl.menu.entries)"\n     ng-if="$ctrl.refctrl.view.selected === \'currently_using\'"\n     enabled="$ctrl.canDelete()">\n        <f-icon class="fa-trash-o"></f-icon>\n        <span>{{::\'delete\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.refctrl.navigateTo($ctrl.menu.lastSelectedEntry, $ctrl.listURL)"\n      ng-if="$ctrl.refctrl.isCurrentFortigate || $ctrl.refctrl.view.selected === \'can_use\'"\n      enabled="$ctrl.canViewList()">\n        <f-icon class="fa-list"></f-icon>\n        <span>{{::\'view_list\' | lang}}</span>\n    </div>\n    <div f-menu-item-button click="$ctrl.viewProperties($ctrl.menu.lastSelectedEntry)"\n     ng-if="$ctrl.refctrl.view.selected === \'currently_using\'"\n     enabled=$ctrl.canViewProperties()>\n        <f-icon class="fa-eye"></f-icon>\n        <span>{{::\'View Properties\' | lang}}</span>\n    </div>\n    <f-icon class="fa-loading" ng-show="$ctrl.buttonLoading"></f-icon>\n</div>\n<div class="center-menu-items no-separator" ng-hide="$ctrl.menu.popUpMenu">\n</div>\n<div class="right-menu-items" ng-hide="$ctrl.menu.popUpMenu">\n    <div f-menu-item-radio="$ctrl.refctrl.view.options" selected="$ctrl.refctrl.view.selected"></div>\n</div>\n\n')}]),module.exports=path},function(module,exports){var path="/migadmin/ng/components/object-usage/f-object-usage.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<f-mutable\n    source="$ctrl.muTableSource"\n    settings="$ctrl.muTableSettings"\n    context-menu="::true">\n    <f-object-usage-menu\n        class="menu-bar-component"\n        refctrl="$ctrl"\n        menu="menu">\n    </f-object-usage-menu>\n</f-mutable>\n')}]),module.exports=path},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(1135),__webpack_require__(26),__webpack_require__(10),__webpack_require__(29)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(diff,inject,$,ngModule){var MIN_DISPLAY_THRESHOLD=6;function FDiff($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.selectedTab="condensed",this.displayThreshold=MIN_DISPLAY_THRESHOLD,$scope.$watchGroup(["fDiffCtrl.newFile","fDiffCtrl.oldFile"],function(ready){ready[0]&&ready[1]&&this.diffFiles().then(this.formatDiff).then(function(diffs){this.diffs=diffs}.bind(this))}.bind(this))}FDiff.prototype={diffFiles:inject.mark(function($q){return function(){return $q.resolve(diff.diffLines(this.oldFile,this.newFile))}}),formatDiff:inject.mark(function($q){function trimStart(str){return str.replace(/^\s/,"")}return function(diffs){return diffs.forEach(function(diffItem){diffItem.value=diffItem.value.replace(/\s$/,""),diffItem.value=diffItem.value.split("\n");var joinStr="\n ";diffItem.added?joinStr="\n+":diffItem.removed?joinStr="\n-":diffItem.count>MIN_DISPLAY_THRESHOLD&&(diffItem.prequel=joinStr+diffItem.value.splice(0,3).join(joinStr),diffItem.prequel=trimStart(diffItem.prequel),diffItem.sequel=joinStr+diffItem.value.splice(diffItem.value.length-3,3).join(joinStr),diffItem.sequel=trimStart(diffItem.sequel),diffItem.count=diffItem.count-MIN_DISPLAY_THRESHOLD),diffItem.lines=joinStr+diffItem.value.join(joinStr),diffItem.lines=trimStart(diffItem.lines)}),$q.resolve(diffs)}}),toggleDiffLines:function(index){$("#toggle-diff-lines-"+index).addClass("ng-hide"),$("#diff-lines-"+index).removeClass("ng-hide")}},ngModule.directive("fDiff",function(){return{restrict:"E",controller:FDiff,controllerAs:"fDiffCtrl",scope:!0,bindToController:{newFile:"=",oldFile:"="},templateUrl:__webpack_require__(1146)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},,,,,,,,,,,,function(module,exports){var path="/migadmin/ng/directives/f_diff.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="diff" ng-if="fDiffCtrl.diffs">\n    <span ng-repeat="diff in fDiffCtrl.diffs">\n        <span ng-if="!diff.added && !diff.removed && diff.count > fDiffCtrl.displayThreshold">\n            <pre>{{:: diff.prequel }}</pre>\n            <p id="toggle-diff-lines-{{$index}}" class="toggle-skipped-diff"\n               ng-click="fDiffCtrl.toggleDiffLines($index)">\n               <i><a>... skipped {{:: diff.count }} lines ...</a></i>\n            </p>\n            <pre id="diff-lines-{{$index}}" class="ng-hide">{{:: diff.lines }}</pre>\n            <pre>{{:: diff.sequel }}</pre>\n        </span>\n        <span ng-if="!diff.added && !diff.removed && diff.count <= fDiffCtrl.displayThreshold">\n           <pre>{{:: diff.lines }}</pre>\n        </span>\n        <span ng-if="diff.added || diff.removed">\n            <pre ng-class="{\'line-added\': diff.added,\n                            \'line-removed\': diff.removed}">{{:: diff.lines }}</pre>\n        </span>\n    </span>\n</div>\n\n')}]),module.exports=path},,,,,,,,function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(0),__webpack_require__(30)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(BUILD,fLog){"use strict";if(window!==top)return;const LIVE_RELOAD=BUILD.LIVE_RELOAD;if(LIVE_RELOAD){const address=LIVE_RELOAD.SERVER_IP+":"+LIVE_RELOAD.SERVER_PORT;if("http:"===window.location.protocol){const ws=new WebSocket("ws://"+address);let connected=!1;ws.onopen=function(){connected=!0,fLog.info('Connected to live reload server at "'+address+'"')},ws.onerror=function(){fLog.warn('Failed to connect to live reload server at "'+address+'"')},ws.onmessage=function(event){"reload"===event.data&&(fLog.info('Received "reload" message from live reload server'),connected=!1,ws.close(),location.reload(!0))},ws.onclose=function(){connected&&fLog.warn("Lost connection to live reload server")}}else fLog.warn("Live reload is only supported when connected over HTTP.")}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}]]);